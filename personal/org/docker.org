* Docker Enterprise Edition setup
** Get the Docker Repository URL for Enterprise
In order to install the Docker EE version, it's recommended to setup a Docker repository from which the Docker EE can be updated and installed.
- Go to https://store.docker.com/my-content.
- Each subscription or trial you have access to is listed. Click the Setup button for Docker Enterprise Edition for Linux.
- Copy the URL from the field labeled Copy and paste this URL to download your Edition.
- Export the Repository URL as a variable
  #+begin_src sh
  $ export DOCKERURL='<DOCKER-EE-URL>'
  #+end_src
- Store your Docker EE repository URL in a yum variable in =/etc/yum/vars/=. This command relies on the variable you stored in the previous step.
  #+begin_src sh
  $ sudo -E sh -c 'echo "$DOCKERURL/rhel" > /etc/yum/vars/dockerurl'
  #+end_src
- Store your OS version string in =/etc/yum/vars/dockerosversion=.
  #+BEGIN_SRC sh
  $ sudo sh -c 'echo "7" > /etc/yum/vars/dockerosversion'
  #+END_SRC
- Install the required packages with yum as below
  #+BEGIN_SRC sh
  $ sudo yum install -y yum-utils \
  device-mapper-persistent-data \
  lvm2
  #+END_SRC
- Enable the /extras/ RHEL repository. This ensures access to the =container-selinux= package which is required by docker-ee
  #+BEGIN_SRC sh
  $ sudo yum-config-manager --enable rhel-7-server-extras-rpms
  $ sudo yum -y install docker-ee
  #+END_SRC
** Docker Images and Containers from a Dockerfile
*** Create a Dockerfile

- Create a Dockerfile as below
#+begin_src sh
FROM node
MAINTAINER sampath.singamsetty@united.com
RUN git clone -q https://github.com/docker-in-practice/todo.git
WORKDIR todo
RUN npm install > /dev/null
EXPOSE 8000
CMD ["npm","start"]
#+end_src

- Create a build using the below command
#+begin_src sh
docker build .
...
...
Step 7/7 : CMD npm start
 ---> Running in c8bfd8c4d502
 ---> 6ea248b775f5
Removing intermediate container c8bfd8c4d502
Successfully built 6ea248b775f5
#+end_src

- tag the docker image based on the final output of the id
#+begin_src sh
docker tag 6ea248b775f5 todoapp

# the images can be checked with
docker ps -a
#+end_src

- now spin a container with the required settings
  #+begin_src sh
docker run -p 8000:8000 --name example1 todoapp

# press Ctrl+C to exit

# do a diff
docker diff example1
  #+end_src

- starting and stopping the docker container *example1*
  #+begin_src sh
docker start example1

docker stop example1
  #+end_src

- Cleaning up of the images
  #+begin_src sh
# List all containers (only IDs)
docker ps -aq

# Stop all running containers
docker stop $(docker ps -aq)

# Remove all containers
docker rm $(docker ps -aq)

# Remove all images
docker rmi $(docker images -q)
  #+end_src
  