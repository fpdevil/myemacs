;; -*- mode: emacs-lisp; coding: emacs-mule; -*-
;; --------------------------------------------------------------------------
;; Desktop File for Emacs
;; --------------------------------------------------------------------------
;; Created Sun Jun 18 13:19:28 2017
;; Desktop file format version 208
;; Emacs version 25.1.1
(setq revive:frame-configuration-to-restore
  '(progn 
     (revive:restore-frame '((tool-bar-position . top) (explicit-name) (icon-name) (bottom-divider-width . 0) (right-divider-width . 0) (top . 23) (left . 0) (unsplittable) (modeline . t) (width . 112) (height . 33) (fringe) (border-color . "#eee8d5") (powerline-cache . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8 data ((G2 mode-line powerline-active1) (image :type xpm :data "/* XPM */ static char * arrow_left[] = { \"7 16 3 1\", \"0 c #d9d9d9\", \"1 c #073642\", \"2 c #70878d\",\"1111111\",\"0111111\",\"0011111\",\"0001111\",\"0000111\",\"0000011\",\"0000001\",\"0000000\",\"0000000\",\"0000001\",\"0000011\",\"0000111\",\"0001111\",\"0011111\",\"0111111\",\"1111111\",};" :ascent center :face powerline-active1) (G2 powerline-active1 powerline-active2) (image :type xpm :data "/* XPM */ static char * arrow_left[] = { \"7 16 3 1\", \"0 c #073642\", \"1 c #eee8d5\", \"2 c #7a8f8b\",\"1111111\",\"0111111\",\"0011111\",\"0001111\",\"0000111\",\"0000011\",\"0000001\",\"0000000\",\"0000000\",\"0000001\",\"0000011\",\"0000111\",\"0001111\",\"0011111\",\"0111111\",\"1111111\",};" :ascent center :face powerline-active2) (G3 powerline-active2 powerline-active1) (image :type xpm :data "/* XPM */ static char * arrow_right[] = { \"7 16 3 1\", \"0 c #073642\", \"1 c #eee8d5\", \"2 c #7a8f8b\",\"1111111\",\"1111110\",\"1111100\",\"1111000\",\"1110000\",\"1100000\",\"1000000\",\"0000000\",\"0000000\",\"1000000\",\"1100000\",\"1110000\",\"1111000\",\"1111100\",\"1111110\",\"1111111\",};" :ascent center :face powerline-active2) (G3 powerline-active1 mode-line) (image :type xpm :data "/* XPM */ static char * arrow_right[] = { \"7 16 3 1\", \"0 c #d9d9d9\", \"1 c #073642\", \"2 c #70878d\",\"1111111\",\"1111110\",\"1111100\",\"1111000\",\"1110000\",\"1100000\",\"1000000\",\"0000000\",\"0000000\",\"1000000\",\"1100000\",\"1110000\",\"1111000\",\"1111100\",\"1111110\",\"1111111\",};" :ascent center :face powerline-active1) (G32 16 54 1 54 1 14 "#eee8d5" "#073642") (image :type xpm :data "/* XPM */
static char * percent[] = {
\"14 16 2 1\",
\". c #eee8d5\",
\"  c #073642\",
\"..............\",
\"..............\",
\"..............\",
\"..............\",
\"..............\",
\"..............\",
\"..............\",
\"..............\",
\"..............\",
\"..............\",
\"..............\",
\"..............\",
\"..............\",
\"..............\",
\"..............\",
\"..............\"};" :ascent center) (G2 mode-line-inactive powerline-inactive1) (image :type xpm :data "/* XPM */ static char * arrow_left[] = { \"7 16 3 1\", \"0 c #fdf6e3\", \"1 c #1c1c1c\", \"2 c #8c897f\",\"1111111\",\"0111111\",\"0011111\",\"0001111\",\"0000111\",\"0000011\",\"0000001\",\"0000000\",\"0000000\",\"0000001\",\"0000011\",\"0000111\",\"0001111\",\"0011111\",\"0111111\",\"1111111\",};" :ascent center :face powerline-inactive1) (G2 powerline-inactive1 powerline-inactive2) (image :type xpm :data "/* XPM */ static char * arrow_left[] = { \"7 16 3 1\", \"0 c #1c1c1c\", \"1 c #333333\", \"2 c #272727\",\"1111111\",\"0111111\",\"0011111\",\"0001111\",\"0000111\",\"0000011\",\"0000001\",\"0000000\",\"0000000\",\"0000001\",\"0000011\",\"0000111\",\"0001111\",\"0011111\",\"0111111\",\"1111111\",};" :ascent center :face powerline-inactive2) (G3 powerline-inactive2 powerline-inactive1) (image :type xpm :data "/* XPM */ static char * arrow_right[] = { \"7 16 3 1\", \"0 c #1c1c1c\", \"1 c #333333\", \"2 c #272727\",\"1111111\",\"1111110\",\"1111100\",\"1111000\",\"1110000\",\"1100000\",\"1000000\",\"0000000\",\"0000000\",\"1000000\",\"1100000\",\"1110000\",\"1111000\",\"1111100\",\"1111110\",\"1111111\",};" :ascent center :face powerline-inactive2) (G3 powerline-inactive1 mode-line-inactive) (image :type xpm :data "/* XPM */ static char * arrow_right[] = { \"7 16 3 1\", \"0 c #fdf6e3\", \"1 c #1c1c1c\", \"2 c #8c897f\",\"1111111\",\"1111110\",\"1111100\",\"1111000\",\"1110000\",\"1100000\",\"1000000\",\"0000000\",\"0000000\",\"1000000\",\"1100000\",\"1110000\",\"1111000\",\"1111100\",\"1111110\",\"1111111\",};" :ascent center :face powerline-inactive1) (G32 16 2007 1 2007 1351 14 "grey20" "grey11") (image :type xpm :data "/* XPM */
static char * percent[] = {
\"14 16 2 1\",
\". c #333333\",
\"  c #1c1c1c\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"..............\",
\"..............\",
\"..............\",
\"..............\",
\"..............\",
\"..............\"};" :ascent center) (G32 16 54 1 54 1 14 "grey20" "grey11") (image :type xpm :data "/* XPM */
static char * percent[] = {
\"14 16 2 1\",
\". c #333333\",
\"  c #1c1c1c\",
\"..............\",
\"..............\",
\"..............\",
\"..............\",
\"..............\",
\"..............\",
\"..............\",
\"..............\",
\"..............\",
\"..............\",
\"..............\",
\"..............\",
\"..............\",
\"..............\",
\"..............\",
\"..............\"};" :ascent center) (G32 16 2007 1 2007 1351 14 "#eee8d5" "#073642") (image :type xpm :data "/* XPM */
static char * percent[] = {
\"14 16 2 1\",
\". c #eee8d5\",
\"  c #073642\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"..............\",
\"..............\",
\"..............\",
\"..............\",
\"..............\",
\"..............\"};" :ascent center) (G32 16 9340 1 1008 1 14 "#eee8d5" "#073642") (image :type xpm :data "/* XPM */
static char * percent[] = {
\"14 16 2 1\",
\". c #eee8d5\",
\"  c #073642\",
\"..............\",
\"..............\",
\"..............\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \"};" :ascent center) (G32 16 9340 1 1007 1 14 "#eee8d5" "#073642") (image :type xpm :data "/* XPM */
static char * percent[] = {
\"14 16 2 1\",
\". c #eee8d5\",
\"  c #073642\",
\"..............\",
\"..............\",
\"..............\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \"};" :ascent center) (G32 16 9340 1 1008 73 14 "#eee8d5" "#073642") (image :type xpm :data "/* XPM */
static char * percent[] = {
\"14 16 2 1\",
\". c #eee8d5\",
\"  c #073642\",
\"..............\",
\"..............\",
\"..............\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \"};" :ascent center) (G32 16 9340 1 1104 105 14 "#eee8d5" "#073642") (image :type xpm :data "/* XPM */
static char * percent[] = {
\"14 16 2 1\",
\". c #eee8d5\",
\"  c #073642\",
\"..............\",
\"..............\",
\"..............\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \"};" :ascent center) (G32 16 9340 1 1209 159 14 "#eee8d5" "#073642") (image :type xpm :data "/* XPM */
static char * percent[] = {
\"14 16 2 1\",
\". c #eee8d5\",
\"  c #073642\",
\"..............\",
\"..............\",
\"..............\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \"};" :ascent center) (G32 16 9340 1 1273 348 14 "#eee8d5" "#073642") (image :type xpm :data "/* XPM */
static char * percent[] = {
\"14 16 2 1\",
\". c #eee8d5\",
\"  c #073642\",
\"              \",
\"..............\",
\"..............\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \"};" :ascent center) (G32 16 9340 1 1410 498 14 "#eee8d5" "#073642") (image :type xpm :data "/* XPM */
static char * percent[] = {
\"14 16 2 1\",
\". c #eee8d5\",
\"  c #073642\",
\"              \",
\"..............\",
\"..............\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \"};" :ascent center) (G32 16 9340 1 1667 711 14 "#eee8d5" "#073642") (image :type xpm :data "/* XPM */
static char * percent[] = {
\"14 16 2 1\",
\". c #eee8d5\",
\"  c #073642\",
\"              \",
\"..............\",
\"..............\",
\"..............\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \"};" :ascent center) (G32 16 9340 1 1699 754 14 "#eee8d5" "#073642") (image :type xpm :data "/* XPM */
static char * percent[] = {
\"14 16 2 1\",
\". c #eee8d5\",
\"  c #073642\",
\"              \",
\"..............\",
\"..............\",
\"..............\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \"};" :ascent center) (G32 16 9340 1 1757 870 14 "#eee8d5" "#073642") (image :type xpm :data "/* XPM */
static char * percent[] = {
\"14 16 2 1\",
\". c #eee8d5\",
\"  c #073642\",
\"              \",
\"..............\",
\"..............\",
\"..............\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \"};" :ascent center) (G32 16 9340 1 1883 929 14 "#eee8d5" "#073642") (image :type xpm :data "/* XPM */
static char * percent[] = {
\"14 16 2 1\",
\". c #eee8d5\",
\"  c #073642\",
\"              \",
\"..............\",
\"..............\",
\"..............\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \"};" :ascent center) (G32 16 9340 1 1785 929 14 "#eee8d5" "#073642") (image :type xpm :data "/* XPM */
static char * percent[] = {
\"14 16 2 1\",
\". c #eee8d5\",
\"  c #073642\",
\"              \",
\"..............\",
\"..............\",
\"..............\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \"};" :ascent center) (G32 16 9340 1 1936 959 14 "#eee8d5" "#073642") (image :type xpm :data "/* XPM */
static char * percent[] = {
\"14 16 2 1\",
\". c #eee8d5\",
\"  c #073642\",
\"              \",
\"              \",
\"..............\",
\"..............\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \"};" :ascent center) (G32 16 9340 1 2042 1007 14 "#eee8d5" "#073642") (image :type xpm :data "/* XPM */
static char * percent[] = {
\"14 16 2 1\",
\". c #eee8d5\",
\"  c #073642\",
\"              \",
\"              \",
\"..............\",
\"..............\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \"};" :ascent center) (G32 16 9340 1 2201 1104 14 "#eee8d5" "#073642") (image :type xpm :data "/* XPM */
static char * percent[] = {
\"14 16 2 1\",
\". c #eee8d5\",
\"  c #073642\",
\"              \",
\"              \",
\"..............\",
\"..............\",
\"..............\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \"};" :ascent center) (G32 16 9340 1 2334 1210 14 "#eee8d5" "#073642") (image :type xpm :data "/* XPM */
static char * percent[] = {
\"14 16 2 1\",
\". c #eee8d5\",
\"  c #073642\",
\"              \",
\"              \",
\"..............\",
\"..............\",
\"..............\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \"};" :ascent center) (G32 16 9340 1 2471 1322 14 "#eee8d5" "#073642") (image :type xpm :data "/* XPM */
static char * percent[] = {
\"14 16 2 1\",
\". c #eee8d5\",
\"  c #073642\",
\"              \",
\"              \",
\"..............\",
\"..............\",
\"..............\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \"};" :ascent center) (G32 16 9340 1 2708 1444 14 "#eee8d5" "#073642") (image :type xpm :data "/* XPM */
static char * percent[] = {
\"14 16 2 1\",
\". c #eee8d5\",
\"  c #073642\",
\"              \",
\"              \",
\"..............\",
\"..............\",
\"..............\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \"};" :ascent center) (G32 16 9340 1 2902 1785 14 "#eee8d5" "#073642") (image :type xpm :data "/* XPM */
static char * percent[] = {
\"14 16 2 1\",
\". c #eee8d5\",
\"  c #073642\",
\"              \",
\"              \",
\"              \",
\"..............\",
\"..............\",
\"..............\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \"};" :ascent center) (G32 16 9340 1 3215 2201 14 "#eee8d5" "#073642") (image :type xpm :data "/* XPM */
static char * percent[] = {
\"14 16 2 1\",
\". c #eee8d5\",
\"  c #073642\",
\"              \",
\"              \",
\"              \",
\"              \",
\"..............\",
\"..............\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \"};" :ascent center) (G32 16 9340 1 3571 2471 14 "#eee8d5" "#073642") (image :type xpm :data "/* XPM */
static char * percent[] = {
\"14 16 2 1\",
\". c #eee8d5\",
\"  c #073642\",
\"              \",
\"              \",
\"              \",
\"              \",
\"..............\",
\"..............\",
\"..............\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \"};" :ascent center) (G32 16 9340 1 3901 2810 14 "#eee8d5" "#073642") (image :type xpm :data "/* XPM */
static char * percent[] = {
\"14 16 2 1\",
\". c #eee8d5\",
\"  c #073642\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"..............\",
\"..............\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \"};" :ascent center) (G32 16 9340 1 3972 2856 14 "#eee8d5" "#073642") (image :type xpm :data "/* XPM */
static char * percent[] = {
\"14 16 2 1\",
\". c #eee8d5\",
\"  c #073642\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"..............\",
\"..............\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \"};" :ascent center) (G32 16 9340 1 4093 2902 14 "#eee8d5" "#073642") (image :type xpm :data "/* XPM */
static char * percent[] = {
\"14 16 2 1\",
\". c #eee8d5\",
\"  c #073642\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"..............\",
\"..............\",
\"..............\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \"};" :ascent center) (G32 16 9340 1 4273 3012 14 "#eee8d5" "#073642") (image :type xpm :data "/* XPM */
static char * percent[] = {
\"14 16 2 1\",
\". c #eee8d5\",
\"  c #073642\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"..............\",
\"..............\",
\"..............\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \"};" :ascent center) (G32 16 9340 1 4446 3187 14 "#eee8d5" "#073642") (image :type xpm :data "/* XPM */
static char * percent[] = {
\"14 16 2 1\",
\". c #eee8d5\",
\"  c #073642\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"..............\",
\"..............\",
\"..............\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \"};" :ascent center) (G32 16 9340 1 4626 3374 14 "#eee8d5" "#073642") (image :type xpm :data "/* XPM */
static char * percent[] = {
\"14 16 2 1\",
\". c #eee8d5\",
\"  c #073642\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"..............\",
\"..............\",
\"..............\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \"};" :ascent center) (G32 16 9340 1 4844 3619 14 "#eee8d5" "#073642") (image :type xpm :data "/* XPM */
static char * percent[] = {
\"14 16 2 1\",
\". c #eee8d5\",
\"  c #073642\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"..............\",
\"..............\",
\"..............\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \"};" :ascent center) (G32 16 9340 1 5153 3818 14 "#eee8d5" "#073642") (image :type xpm :data "/* XPM */
static char * percent[] = {
\"14 16 2 1\",
\". c #eee8d5\",
\"  c #073642\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"..............\",
\"..............\",
\"..............\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \"};" :ascent center) (G32 16 9340 1 5206 3819 14 "#eee8d5" "#073642") (image :type xpm :data "/* XPM */
static char * percent[] = {
\"14 16 2 1\",
\". c #eee8d5\",
\"  c #073642\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"..............\",
\"..............\",
\"..............\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \"};" :ascent center) (G32 16 9340 1 5289 3972 14 "#eee8d5" "#073642") (image :type xpm :data "/* XPM */
static char * percent[] = {
\"14 16 2 1\",
\". c #eee8d5\",
\"  c #073642\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"..............\",
\"..............\",
\"..............\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \"};" :ascent center) (G32 16 9340 1 5460 4157 14 "#eee8d5" "#073642") (image :type xpm :data "/* XPM */
static char * percent[] = {
\"14 16 2 1\",
\". c #eee8d5\",
\"  c #073642\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"..............\",
\"..............\",
\"..............\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \"};" :ascent center) (G32 16 9340 1 5657 4369 14 "#eee8d5" "#073642") (image :type xpm :data "/* XPM */
static char * percent[] = {
\"14 16 2 1\",
\". c #eee8d5\",
\"  c #073642\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"..............\",
\"..............\",
\"..............\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \"};" :ascent center) (G32 16 9340 1 5905 4551 14 "#eee8d5" "#073642") (image :type xpm :data "/* XPM */
static char * percent[] = {
\"14 16 2 1\",
\". c #eee8d5\",
\"  c #073642\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"..............\",
\"..............\",
\"..............\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \"};" :ascent center) (G32 16 9340 1 6163 4783 14 "#eee8d5" "#073642") (image :type xpm :data "/* XPM */
static char * percent[] = {
\"14 16 2 1\",
\". c #eee8d5\",
\"  c #073642\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"..............\",
\"..............\",
\"..............\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \"};" :ascent center) (G32 16 9340 1 5697 5033 14 "grey20" "grey11") (image :type xpm :data "/* XPM */
static char * percent[] = {
\"14 16 2 1\",
\". c #333333\",
\"  c #1c1c1c\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"..............\",
\"..............\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \"};" :ascent center) (G32 16 9340 1 5697 5033 14 "#eee8d5" "#073642") (image :type xpm :data "/* XPM */
static char * percent[] = {
\"14 16 2 1\",
\". c #eee8d5\",
\"  c #073642\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"..............\",
\"..............\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \"};" :ascent center) (G32 16 157 1 157 1 14 "grey20" "grey11") (image :type xpm :data "/* XPM */
static char * percent[] = {
\"14 16 2 1\",
\". c #333333\",
\"  c #1c1c1c\",
\"..............\",
\"..............\",
\"..............\",
\"..............\",
\"..............\",
\"..............\",
\"..............\",
\"..............\",
\"..............\",
\"..............\",
\"..............\",
\"..............\",
\"..............\",
\"..............\",
\"..............\",
\"..............\"};" :ascent center) (G32 16 157 1 157 1 14 "#eee8d5" "#073642") (image :type xpm :data "/* XPM */
static char * percent[] = {
\"14 16 2 1\",
\". c #eee8d5\",
\"  c #073642\",
\"..............\",
\"..............\",
\"..............\",
\"..............\",
\"..............\",
\"..............\",
\"..............\",
\"..............\",
\"..............\",
\"..............\",
\"..............\",
\"..............\",
\"..............\",
\"..............\",
\"..............\",
\"..............\"};" :ascent center) (G32 16 9340 1 6343 5033 14 "#eee8d5" "#073642") (image :type xpm :data "/* XPM */
static char * percent[] = {
\"14 16 2 1\",
\". c #eee8d5\",
\"  c #073642\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \",
\"..............\",
\"..............\",
\"..............\",
\"              \",
\"              \",
\"              \",
\"              \",
\"              \"};" :ascent center)))) (mouse-color . "black") (environment) (visibility . t) (cursor-color . "green") (background-mode . light) (fullscreen) (alpha) (scroll-bar-height . 0) (scroll-bar-width . 15) (cursor-type . box) (auto-lower) (auto-raise) (icon-type) (title) (buffer-predicate) (tool-bar-lines . 1) (menu-bar-lines . 1) (right-fringe . 0) (left-fringe . 4) (line-spacing) (background-color . "#fdf6e3") (foreground-color . "#657b83") (horizontal-scroll-bars) (vertical-scroll-bars . right) (internal-border-width . 0) (border-width . 0) (font . "-*-Monaco-normal-normal-normal-*-12-*-*-*-m-0-iso10646-1") (fontsize . 0)) '(112 33 ((0 0 114 32)) (("~/Library/Application Support/Aquamacs Emacs/scratch buffer" "*scratch*" 54 1 ((tab "*scratch*" "/Users/sampathsingamsetty/Library/Application Support/Aquamacs Emacs/scratch buffer"))))))))

;; Global section:
(setq desktop-saved-frameset [frameset 1 (22854 12424 325630 0) (desktop . "208") "sampathsingamsetty@apple" nil nil ((((font-backend mac-ct) (fontsize . 0) (font . "-*-Monaco-normal-normal-normal-*-12-*-*-*-m-0-iso10646-1") (border-width . 0) (internal-border-width . 0) (vertical-scroll-bars . right) (horizontal-scroll-bars) (foreground-color . "#657b83") (background-color . "#fdf6e3") (line-spacing) (left-fringe . 4) (right-fringe . 0) (menu-bar-lines . 1) (tool-bar-lines . 1) (title) (icon-type) (auto-raise) (auto-lower) (cursor-type . box) (scroll-bar-width . 15) (scroll-bar-height . 0) (alpha) (fullscreen) (display-type . color) (background-mode . light) (cursor-color . "green") (visibility . t) (environment) (mouse-color . "black") (powerline-cache) (border-color . "#eee8d5") (fringe) (frameset--id . "B11C-3522-0AD2-2D87") (frameset--mini t . t) (height . 33) (width . 112) (modeline . t) (minibuffer . t) (unsplittable) (left . 0) (top . 23) (right-divider-width . 0) (bottom-divider-width . 0) (icon-name) (display . "apple") (explicit-name) (tool-bar-position . top)) ((min-height . 4) (min-width . 10) (min-height-ignore . 3) (min-width-ignore . 7) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 64) (min-pixel-width . 70) (min-pixel-height-ignore . 34) (min-pixel-width-ignore . 47) (min-pixel-height-safe . 16) (min-pixel-width-safe . 14)) leaf (pixel-width . 803) (pixel-height . 516) (total-width . 114) (total-height . 32) (normal-height . 1.0) (normal-width . 1.0) (buffer "*scratch*" (selected . t) (hscroll . 0) (fringes 4 0 nil) (margins 2) (scroll-bars nil 3 t nil 0 nil) (vscroll . 0) (dedicated) (point . 54) (start . 1))))])
(setq desktop-missing-file-warning nil)
(setq tags-file-name nil)
(setq tags-table-list nil)
(setq search-ring nil)
(setq regexp-search-ring nil)
(setq register-alist nil)
(setq file-name-history '("~/aquamacs.d/custom-settings.el" "~/aquamacs.d/modules/themes-config.el" "~/aquamacs.d/custom-settings.el" "~/aquamacs.d/custom-settings.el" "~/sw/programming/js/OpenId/testing/strutils.js" "~/aquamacs.d/core/aqua-customizations.el" "~/aquamacs.d/init.el" "~/aquamacs.d/core/aqua-internals.el" "~/aquamacs.d/custom-settings.el" "~/aquamacs.d/custom-settings.el" "~/aquamacs.d/core/aqua-internals.el" "~/aquamacs.d/init.el" "~/sw/programming/js/OpenId/testing/strutils.js" "~/aquamacs.d/custom-settings.el" "/Applications/Aquamacs.app/Contents/Resources/lisp/aquamacs/macosx/osx_defaults.el" "~/aquamacs.d/custom-settings.el" "~/aquamacs.d/init.el" "~/aquamacs.d/custom-settings.el" "~/aquamacs.d/modules/misc-config.el" "~/aquamacs.d/modules/delighted-config.el" "/Applications/Aquamacs.app/Contents/Resources/etc/PROBLEMS" "~/aquamacs.d/modules/evil-config.el" "~/aquamacs.d/core/aqua-methods.el" "~/aquamacs.d/modules/whichkey-config.el" "/usr/local/Cellar/emacs-plus/25.2/share/emacs/25.2/etc/HELLO" "~/aquamacs.d/aqua-package-repos.el" "~/aquamacs.d/modules/elisp-config.el" "/Applications/Aquamacs.app/Contents/Resources/etc/NEWS" "~/aquamacs.d/modules/guidekey-config.el" "~/aquamacs.d/modules/semantic-config.el" "~/aquamacs.d/modules/projectile-config.el" "~/.emacs.d/packages/elpa/ac-slime-20150729.2035/ac-slime-autoloads.el" "~/.emacs.d/packages/elpa/slime-20170511.1221/slime-autoloads.el" "~/.emacs.d/packages/elpa/macrostep-20161120.1306/macrostep-autoloads.el" "~/aquamacs.d/modules/helm-settings-config.el" "~/aquamacs.d/modules/hippie-config.el" "~/aquamacs.d/modules/smart-config.el" "~/sw/programming/dp/DynamicRouting/host-config.xml" "~/aquamacs.d/core/aqua-ui.el" "~/sw/programming/js/OpenId/AddOnOAuthProcessing-v1.6.xsl" "~/sw/programming/js/OpenId/TokenGenerator.js" "~/sw/programming/clj/myapp/src/myapp/core.clj" "~/aquamacs.d/modules/clojure-config.el" "~/prelude.d/core/prelude-core.el" "~/aquamacs.d/modules/multiple-cursors-config.el" "~/aquamacs.d/modules/flymake-config.el" "~/aquamacs.d/modules/flycheck-config.el" "~/prelude.d/init.el" "~/prelude.d/core/prelude-editor.el" "~/prelude.d/core/prelude-custom.el" "~/.emacs.d/aqua-package-repos.el" "~/aquamacs.d/.dir-locals.el" "~/.bash_profile" "~/.dir-locals.el" "~/aquamacs.d/modules/popwin-config.el" "~/.emacs.d/.dir-locals.el" "~/.emacs.d/modules/shell-config.el" "~/.emacs.d/modules/fringe-config.el" "~/.emacs.d/modules/erlang-config.el" "~/.emacs.d/packages/elpa/async-20170610.2241/async-autoloads.el" "~/.emacs.d/packages/elpa/clojure-mode-20170608.2315/clojure-mode-autoloads.el" "~/.emacs.d/packages/elpa/company-20170611.1356/company-autoloads.el" "~/.emacs.d/packages/elpa/company-irony-20170612.1308/company-irony-autoloads.el" "~/.emacs.d/packages/elpa/company-ycmd-20170606.49/company-ycmd-autoloads.el" "~/.emacs.d/packages/elpa/counsel-20170612.917/counsel-autoloads.el" "~/.emacs.d/packages/elpa/dash-20170613.151/dash-autoloads.el" "~/.emacs.d/packages/elpa/ensime-20170611.1428/ensime-autoloads.el" "~/.emacs.d/packages/elpa/evil-20170612.100/evil-autoloads.el" "~/.emacs.d/packages/elpa/git-commit-20170609.2310/git-commit-autoloads.el" "~/.emacs.d/packages/elpa/helm-20170612.2141/helm-autoloads.el" "~/.emacs.d/packages/elpa/helm-company-20170608.1029/helm-company-autoloads.el" "~/.emacs.d/packages/elpa/helm-core-20170613.144/helm-core-autoloads.el" "~/.emacs.d/packages/elpa/helm-projectile-20170613.14/helm-projectile-autoloads.el" "~/.emacs.d/packages/elpa/hierarchy-20170605.842/hierarchy-autoloads.el" "~/.emacs.d/packages/elpa/hindent-20170609.126/hindent-autoloads.el" "~/.emacs.d/packages/elpa/indium-20170609.923/indium-autoloads.el" "~/.emacs.d/packages/elpa/ivy-20170612.924/ivy-autoloads.el" "~/.emacs.d/packages/elpa/ivy-erlang-complete-20170605.2046/ivy-erlang-complete-autoloads.el" "~/.emacs.d/packages/elpa/json-navigator-20170606.34/json-navigator-autoloads.el" "~/.emacs.d/packages/elpa/magit-20170609.2322/magit-autoloads.el" "~/.emacs.d/packages/elpa/magit-popup-20170609.2310/magit-popup-autoloads.el" "~/.emacs.d/packages/elpa/markdown-mode-20170612.2250/markdown-mode-autoloads.el" "~/.emacs.d/packages/elpa/org-20170606/org-loaddefs.el" "~/.emacs.d/packages/elpa/org-20170606/org-autoloads.el" "~/.emacs.d/packages/elpa/org-download-20170605.23/org-download-autoloads.el" "~/.emacs.d/packages/elpa/org-plus-contrib-20170606/org-loaddefs.el" "~/.emacs.d/packages/elpa/org-plus-contrib-20170606/org-plus-contrib-autoloads.el" "~/.emacs.d/packages/elpa/scala-mode-20170611.806/scala-mode-autoloads.el" "~/.emacs.d/packages/elpa/smartparens-20170606.725/smartparens-autoloads.el" "~/.emacs.d/packages/elpa/sublime-themes-20170606.1144/sublime-themes-autoloads.el" "~/.emacs.d/packages/elpa/swiper-20170609.938/swiper-autoloads.el" "~/.emacs.d/packages/elpa/websocket-20170610.2117/websocket-autoloads.el" "~/.emacs.d/packages/elpa/yasnippet-20170605.1940/yasnippet-autoloads.el" "~/.emacs.d/packages/elpa/zerodark-theme-20170607.1301/zerodark-theme-autoloads.el" "~/Documents/orgdocs/OpenId.org" "~/sw/programming/js/OpenId/tokenProcessing-v1.6.js" "~/sw/programming/fp/haskell/Haskercises/src/Haskercise10.hs" "~/Documents/orgdocs/OpenId.tex" "~/Documents/orgdocs/OpenId.org_archive" "~/sw/programming/fp/haskell/Haskercises/src/Haskercise1.hs" "~/aquamacs.d/modules/company-config.el"))

;; Buffer section -- buffers listed in same order as in buffer list:
(desktop-create-buffer 208
  "/Users/sampathsingamsetty/Library/Application Support/Aquamacs Emacs/scratch buffer"
  "*scratch*"
  'text-mode
  '(abbrev-mode smart-spacing-mode flycheck-mode evil-mc-mode helm-mode smartparens-mode evil-smartparens-mode guide-key-mode beacon-mode flyspell-mode company-mode visual-line-mode yas-minor-mode which-key-mode undo-tree-mode projectile-mode)
  54
  '(54 nil)
  nil
  nil
  '((overwrite-mode) (truncate-lines))
  '((mark-ring (54 1 1 1 1))))

