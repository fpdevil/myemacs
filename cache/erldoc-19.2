#s(hash-table size 11503 test equal rehash-size 1.5 rehash-threshold 0.8 data
              ("alarm_handler:set_alarm/1"
               ("http://www.erlang.org/doc/man/alarm_handler.html#set_alarm-1" "set_alarm(alarm())")
               "alarm_handler:get_alarms/0"
               ("http://www.erlang.org/doc/man/alarm_handler.html#get_alarms-0" "get_alarms() -> [alarm()]")
               "alarm_handler:clear_alarm/1"
               ("http://www.erlang.org/doc/man/alarm_handler.html#clear_alarm-1" "clear_alarm(AlarmId) -> void()")
               "any:get_value/1"
               ("http://www.erlang.org/doc/man/any.html#get_value-1" "get_value(A) -> Result")
               "any:set_value/2"
               ("http://www.erlang.org/doc/man/any.html#set_value-2" "set_value(A, Value) -> Result")
               "any:get_typecode/1"
               ("http://www.erlang.org/doc/man/any.html#get_typecode-1" "get_typecode(A) -> Result")
               "any:set_typecode/2"
               ("http://www.erlang.org/doc/man/any.html#set_typecode-2" "set_typecode(A, Typecode) -> Result")
               "any:create/2"
               ("http://www.erlang.org/doc/man/any.html#create-2" "create(Typecode, Value) -> Result")
               "any:create/0"
               ("http://www.erlang.org/doc/man/any.html#create-0" "create() -> Result")
               "application:Module:config_change/3"
               ("http://www.erlang.org/doc/apps/kernel/application.html#Module:config_change-3" "Module:config_change(Changed, New, Removed) -> ok")
               "application:Module:stop/1"
               ("http://www.erlang.org/doc/apps/kernel/application.html#Module:stop-1" "Module:stop(State)")
               "application:Module:prep_stop/1"
               ("http://www.erlang.org/doc/apps/kernel/application.html#Module:prep_stop-1" "Module:prep_stop(State) -> NewState")
               "application:Module:start_phase/3"
               ("http://www.erlang.org/doc/apps/kernel/application.html#Module:start_phase-3" "Module:start_phase(Phase, StartType, PhaseArgs) -> ok | {error, Reason}")
               "application:Module:start/2"
               ("http://www.erlang.org/doc/apps/kernel/application.html#Module:start-2" "Module:start(StartType, StartArgs) -> {ok, Pid} | {ok, Pid, State} | {error, Reason}")
               "application:which_applications/1"
               ("http://www.erlang.org/doc/apps/kernel/application.html#which_applications-1" "which_applications(Timeout) -> [{Application, Description, Vsn}]")
               "application:which_applications/0"
               ("http://www.erlang.org/doc/apps/kernel/application.html#which_applications-0" "which_applications() -> [{Application, Description, Vsn}]")
               "application:unset_env/3"
               ("http://www.erlang.org/doc/apps/kernel/application.html#unset_env-3" "unset_env(Application, Par, Opts) -> ok")
               "application:unset_env/2"
               ("http://www.erlang.org/doc/apps/kernel/application.html#unset_env-2" "unset_env(Application, Par) -> ok")
               "application:unload/1"
               ("http://www.erlang.org/doc/apps/kernel/application.html#unload-1" "unload(Application) -> ok | {error, Reason}")
               "application:takeover/2"
               ("http://www.erlang.org/doc/apps/kernel/application.html#takeover-2" "takeover(Application, Type) -> ok | {error, Reason}")
               "application:stop/1"
               ("http://www.erlang.org/doc/apps/kernel/application.html#stop-1" "stop(Application) -> ok | {error, Reason}")
               "application:start_type/0"
               ("http://www.erlang.org/doc/apps/kernel/application.html#start_type-0" "start_type() -> StartType | undefined | local")
               "application:start/2"
               ("http://www.erlang.org/doc/apps/kernel/application.html#start-2" "start(Application, Type) -> ok | {error, Reason}")
               "application:start/1"
               ("http://www.erlang.org/doc/apps/kernel/application.html#start-1" "start(Application) -> ok | {error, Reason}")
               "application:set_env/4"
               ("http://www.erlang.org/doc/apps/kernel/application.html#set_env-4" "set_env(Application, Par, Val, Opts) -> ok")
               "application:set_env/3"
               ("http://www.erlang.org/doc/apps/kernel/application.html#set_env-3" "set_env(Application, Par, Val) -> ok")
               "application:permit/2"
               ("http://www.erlang.org/doc/apps/kernel/application.html#permit-2" "permit(Application, Permission) -> ok | {error, Reason}")
               "application:loaded_applications/0"
               ("http://www.erlang.org/doc/apps/kernel/application.html#loaded_applications-0" "loaded_applications() -> [{Application, Description, Vsn}]")
               "application:load/2"
               ("http://www.erlang.org/doc/apps/kernel/application.html#load-2" "load(AppDescr, Distributed) -> ok | {error, Reason}")
               "application:load/1"
               ("http://www.erlang.org/doc/apps/kernel/application.html#load-1" "load(AppDescr) -> ok | {error, Reason}")
               "application:get_key/2"
               ("http://www.erlang.org/doc/apps/kernel/application.html#get_key-2" "get_key(Application, Key) -> undefined | {ok, Val}")
               "application:get_key/1"
               ("http://www.erlang.org/doc/apps/kernel/application.html#get_key-1" "get_key(Key) -> undefined | {ok, Val}")
               "application:get_env/3"
               ("http://www.erlang.org/doc/apps/kernel/application.html#get_env-3" "get_env(Application, Par, Def) -> Val")
               "application:get_env/2"
               ("http://www.erlang.org/doc/apps/kernel/application.html#get_env-2" "get_env(Application, Par) -> undefined | {ok, Val}")
               "application:get_env/1"
               ("http://www.erlang.org/doc/apps/kernel/application.html#get_env-1" "get_env(Par) -> undefined | {ok, Val}")
               "application:get_application/1"
               ("http://www.erlang.org/doc/apps/kernel/application.html#get_application-1" "get_application(PidOrModule) -> undefined | {ok, Application}")
               "application:get_application/0"
               ("http://www.erlang.org/doc/apps/kernel/application.html#get_application-0" "get_application() -> undefined | {ok, Application}")
               "application:get_all_key/1"
               ("http://www.erlang.org/doc/apps/kernel/application.html#get_all_key-1" "get_all_key(Application) -> undefined | Keys")
               "application:get_all_key/0"
               ("http://www.erlang.org/doc/apps/kernel/application.html#get_all_key-0" "get_all_key() -> [] | {ok, Keys}")
               "application:get_all_env/1"
               ("http://www.erlang.org/doc/apps/kernel/application.html#get_all_env-1" "get_all_env(Application) -> Env")
               "application:get_all_env/0"
               ("http://www.erlang.org/doc/apps/kernel/application.html#get_all_env-0" "get_all_env() -> Env")
               "application:ensure_started/2"
               ("http://www.erlang.org/doc/apps/kernel/application.html#ensure_started-2" "ensure_started(Application, Type) -> ok | {error, Reason}")
               "application:ensure_started/1"
               ("http://www.erlang.org/doc/apps/kernel/application.html#ensure_started-1" "ensure_started(Application) -> ok | {error, Reason}")
               "application:ensure_all_started/2"
               ("http://www.erlang.org/doc/apps/kernel/application.html#ensure_all_started-2" "ensure_all_started(Application, Type) -> {ok, Started} | {error, Reason}")
               "application:ensure_all_started/1"
               ("http://www.erlang.org/doc/apps/kernel/application.html#ensure_all_started-1" "ensure_all_started(Application) -> {ok, Started} | {error, Reason}")
               "application:"
               ("http://www.erlang.org/doc/man/application.html#type-tuple_of" "tuple_of(T)")
               "application:restart_type()"
               ("http://www.erlang.org/doc/man/application.html#type-restart_type" "restart_type() = permanent | transient | temporary")
               "application:start_type()"
               ("http://www.erlang.org/doc/man/application.html#type-start_type" "start_type() = normal | {takeover, Node :: node()} | {failover, Node :: node()}")
               "array:to_orddict/1"
               ("http://www.erlang.org/doc/man/array.html#to_orddict-1" "to_orddict(Array :: array (Type)) -> indx_pairs (Value :: Type)")
               "array:to_list/1"
               ("http://www.erlang.org/doc/man/array.html#to_list-1" "to_list(Array :: array (Type)) -> [Value :: Type]")
               "array:sparse_to_orddict/1"
               ("http://www.erlang.org/doc/man/array.html#sparse_to_orddict-1" "sparse_to_orddict(Array :: array (Type)) ->  indx_pairs (Value :: Type)")
               "array:sparse_to_list/1"
               ("http://www.erlang.org/doc/man/array.html#sparse_to_list-1" "sparse_to_list(Array :: array (Type)) -> [Value :: Type]")
               "array:sparse_size/1"
               ("http://www.erlang.org/doc/man/array.html#sparse_size-1" "sparse_size(Array :: array() ) -> integer() >= 0")
               "array:sparse_map/2"
               ("http://www.erlang.org/doc/man/array.html#sparse_map-2" "sparse_map(Function, Array :: array (Type1)) -> array (Type2)")
               "array:sparse_foldr/3"
               ("http://www.erlang.org/doc/man/array.html#sparse_foldr-3" "sparse_foldr(Function, InitialAcc :: A, Array :: array (Type)) -> B")
               "array:sparse_foldl/3"
               ("http://www.erlang.org/doc/man/array.html#sparse_foldl-3" "sparse_foldl(Function, InitialAcc :: A, Array :: array (Type)) -> B")
               "array:size/1"
               ("http://www.erlang.org/doc/man/array.html#size-1" "size(Array :: array() ) -> integer() >= 0")
               "array:set/3"
               ("http://www.erlang.org/doc/man/array.html#set-3" "set(I :: array_indx() , Value :: Type, Array :: array (Type)) ->  array (Type)")
               "array:resize/2"
               ("http://www.erlang.org/doc/man/array.html#resize-2" "resize(Size :: integer() >= 0, Array :: array (Type)) ->  array (Type)")
               "array:resize/1"
               ("http://www.erlang.org/doc/man/array.html#resize-1" "resize(Array :: array (Type)) -> array (Type)")
               "array:reset/2"
               ("http://www.erlang.org/doc/man/array.html#reset-2" "reset(I :: array_indx() , Array :: array (Type)) -> array (Type)")
               "array:relax/1"
               ("http://www.erlang.org/doc/man/array.html#relax-1" "relax(Array :: array (Type)) -> array (Type)")
               "array:new/2"
               ("http://www.erlang.org/doc/man/array.html#new-2" "new(Size :: integer() >= 0, Options :: array_opts() ) -> array()")
               "array:new/1"
               ("http://www.erlang.org/doc/man/array.html#new-1" "new(Options :: array_opts() ) -> array()")
               "array:new/0"
               ("http://www.erlang.org/doc/man/array.html#new-0" "new() -> array()")
               "array:map/2"
               ("http://www.erlang.org/doc/man/array.html#map-2" "map(Function, Array :: array (Type1)) -> array (Type2)")
               "array:is_fix/1"
               ("http://www.erlang.org/doc/man/array.html#is_fix-1" "is_fix(Array :: array() ) -> boolean()")
               "array:is_array/1"
               ("http://www.erlang.org/doc/man/array.html#is_array-1" "is_array(X :: term()) -> boolean()")
               "array:get/2"
               ("http://www.erlang.org/doc/man/array.html#get-2" "get(I :: array_indx() , Array :: array (Type)) -> Value :: Type")
               "array:from_orddict/2"
               ("http://www.erlang.org/doc/man/array.html#from_orddict-2" "from_orddict(Orddict :: indx_pairs (Value :: Type), Default :: Type) ->  array (Type)")
               "array:from_orddict/1"
               ("http://www.erlang.org/doc/man/array.html#from_orddict-1" "from_orddict(Orddict :: indx_pairs (Value :: Type)) -> array (Type)")
               "array:from_list/2"
               ("http://www.erlang.org/doc/man/array.html#from_list-2" "from_list(List :: [Value :: Type], Default :: term()) ->  array (Type)")
               "array:from_list/1"
               ("http://www.erlang.org/doc/man/array.html#from_list-1" "from_list(List :: [Value :: Type]) -> array (Type)")
               "array:foldr/3"
               ("http://www.erlang.org/doc/man/array.html#foldr-3" "foldr(Function, InitialAcc :: A, Array :: array (Type)) -> B")
               "array:foldl/3"
               ("http://www.erlang.org/doc/man/array.html#foldl-3" "foldl(Function, InitialAcc :: A, Array :: array (Type)) -> B")
               "array:fix/1"
               ("http://www.erlang.org/doc/man/array.html#fix-1" "fix(Array :: array (Type)) -> array (Type)")
               "array:default/1"
               ("http://www.erlang.org/doc/man/array.html#default-1" "default(Array :: array (Type)) -> Value :: Type")
               "array:indx_pair(Type)"
               ("http://www.erlang.org/doc/man/array.html#type-indx_pair" "indx_pair(Type) = {Index :: array_indx() , Type}")
               "array:indx_pairs(Type)"
               ("http://www.erlang.org/doc/man/array.html#type-indx_pairs" "indx_pairs(Type) = [ indx_pair (Type)]")
               "array:array_opt()"
               ("http://www.erlang.org/doc/man/array.html#type-array_opt" "array_opt() = {fixed, boolean()} | fixed | {default, Type :: term()} | {size, N :: integer() >= 0} | (N :: integer() >= 0)")
               "array:array_opts()"
               ("http://www.erlang.org/doc/man/array.html#type-array_opts" "array_opts() = array_opt() | [ array_opt() ]")
               "array:array_indx()"
               ("http://www.erlang.org/doc/man/array.html#type-array_indx" "array_indx() = integer() >= 0")
               "array:array()"
               ("http://www.erlang.org/doc/man/array.html#type-array" "array() = array (term())")
               "array:array(Type)"
               ("http://www.erlang.org/doc/man/array.html#type-array" "array(Type)")
               "asn1ct:test/3"
               ("http://www.erlang.org/doc/man/asn1ct.html#test-3" "test(Module, Type, Value | Options) -> ok | {error, Reason}")
               "asn1ct:test/2"
               ("http://www.erlang.org/doc/man/asn1ct.html#test-2" "test(Module, Type | Options) -> ok | {error, Reason}")
               "asn1ct:test/1"
               ("http://www.erlang.org/doc/man/asn1ct.html#test-1" "test(Module) -> ok | {error, Reason}")
               "asn1ct:value/2"
               ("http://www.erlang.org/doc/man/asn1ct.html#value-2" "value(Module, Type) -> {ok, Value} | {error, Reason}")
               "asn1ct:decode/3"
               ("http://www.erlang.org/doc/man/asn1ct.html#decode-3" "decode(Module, Type, Bytes) -> {ok, Value} | {error, Reason}")
               "asn1ct:encode/3"
               ("http://www.erlang.org/doc/man/asn1ct.html#encode-3" "encode(Module, Type, Value)-> {ok, Bytes} | {error, Reason}")
               "asn1ct:compile/2"
               ("http://www.erlang.org/doc/man/asn1ct.html#compile-2" "compile(Asn1module, Options) -> ok | {error, Reason}")
               "asn1ct:compile/1"
               ("http://www.erlang.org/doc/man/asn1ct.html#compile-1" "compile(Asn1module) -> ok | {error, Reason}")
               "asn1rt:utf8_list_to_binary/1"
               ("http://www.erlang.org/doc/man/asn1rt.html#utf8_list_to_binary-1" "utf8_list_to_binary(UnicodeList) ->  {ok,UTF8Binary} | {error,Reason}")
               "asn1rt:utf8_binary_to_list/1"
               ("http://www.erlang.org/doc/man/asn1rt.html#utf8_binary_to_list-1" "utf8_binary_to_list(UTF8Binary) ->  {ok,UnicodeList} | {error,Reason}")
               "asn1rt:info/1"
               ("http://www.erlang.org/doc/man/asn1rt.html#info-1" "info(Module) ->  {ok,Info} | {error,Reason}")
               "asn1rt:encode/3"
               ("http://www.erlang.org/doc/man/asn1rt.html#encode-3" "encode(Module,Type,Value)-> {ok,Bytes} | {error,Reason}")
               "asn1rt:decode/3"
               ("http://www.erlang.org/doc/man/asn1rt.html#decode-3" "decode(Module,Type,Bytes) -> {ok,Value}|{error,Reason}")
               "auth:node_cookie/2"
               ("http://www.erlang.org/doc/man/auth.html#node_cookie-2" "node_cookie(Node, Cookie) -> yes | no")
               "auth:node_cookie/1"
               ("http://www.erlang.org/doc/man/auth.html#node_cookie-1" "node_cookie([Node, Cookie]) -> yes | no")
               "auth:is_auth/1"
               ("http://www.erlang.org/doc/man/auth.html#is_auth-1" "is_auth(Node) -> yes | no")
               "auth:cookie/1"
               ("http://www.erlang.org/doc/man/auth.html#cookie-1" "cookie(TheCookie) -> true")
               "auth:cookie/0"
               ("http://www.erlang.org/doc/man/auth.html#cookie-0" "cookie() -> Cookie")
               "auth:cookie()"
               ("http://www.erlang.org/doc/man/auth.html#type-cookie" "cookie() = atom()")
               "base64:encode_to_string/1"
               ("http://www.erlang.org/doc/man/base64.html#encode_to_string-1" "encode_to_string(Data) -> Base64String")
               "base64:encode/1"
               ("http://www.erlang.org/doc/man/base64.html#encode-1" "encode(Data) -> Base64")
               "base64:mime_decode_to_string/1"
               ("http://www.erlang.org/doc/man/base64.html#mime_decode_to_string-1" "mime_decode_to_string(Base64) -> DataString")
               "base64:mime_decode/1"
               ("http://www.erlang.org/doc/man/base64.html#mime_decode-1" "mime_decode(Base64) -> Data")
               "base64:decode_to_string/1"
               ("http://www.erlang.org/doc/man/base64.html#decode_to_string-1" "decode_to_string(Base64) -> DataString")
               "base64:decode/1"
               ("http://www.erlang.org/doc/man/base64.html#decode-1" "decode(Base64) -> Data")
               "base64:ascii_binary()"
               ("http://www.erlang.org/doc/man/base64.html#type-ascii_binary" "ascii_binary() = binary()")
               "base64:ascii_string()"
               ("http://www.erlang.org/doc/man/base64.html#type-ascii_string" "ascii_string() = [1..255]")
               "beam_lib:version/1"
               ("http://www.erlang.org/doc/man/beam_lib.html#version-1" "version(Beam) -> {ok, {module(), [Version :: term()]}} | {error, beam_lib, chnk_rsn() }")
               "beam_lib:strip_release/1"
               ("http://www.erlang.org/doc/man/beam_lib.html#strip_release-1" "strip_release(Dir) -> {ok, [{module(), file:filename() }]} | {error, beam_lib, Reason}")
               "beam_lib:strip_files/1"
               ("http://www.erlang.org/doc/man/beam_lib.html#strip_files-1" "strip_files(Files) -> {ok, [{module(), Beam}]} | {error, beam_lib, info_rsn() }")
               "beam_lib:strip/1"
               ("http://www.erlang.org/doc/man/beam_lib.html#strip-1" "strip(Beam1) -> {ok, {module(), Beam2}} | {error, beam_lib, info_rsn() }")
               "beam_lib:md5/1"
               ("http://www.erlang.org/doc/man/beam_lib.html#md5-1" "md5(Beam) -> {ok, {module(), MD5}} | {error, beam_lib, chnk_rsn() }")
               "beam_lib:info/1"
               ("http://www.erlang.org/doc/man/beam_lib.html#info-1" "info(Beam) -> [InfoPair] | {error, beam_lib, info_rsn() }")
               "beam_lib:format_error/1"
               ("http://www.erlang.org/doc/man/beam_lib.html#format_error-1" "format_error(Reason) -> io_lib:chars()")
               "beam_lib:diff_dirs/2"
               ("http://www.erlang.org/doc/man/beam_lib.html#diff_dirs-2" "diff_dirs(Dir1, Dir2) -> ok | {error, beam_lib, Reason}")
               "beam_lib:crypto_key_fun/1"
               ("http://www.erlang.org/doc/man/beam_lib.html#crypto_key_fun-1" "crypto_key_fun(CryptoKeyFun) -> ok | {error, Reason}")
               "beam_lib:cmp_dirs/2"
               ("http://www.erlang.org/doc/man/beam_lib.html#cmp_dirs-2" "cmp_dirs(Dir1, Dir2) -> {Only1, Only2, Different} | {error, beam_lib, Reason}")
               "beam_lib:cmp/2"
               ("http://www.erlang.org/doc/man/beam_lib.html#cmp-2" "cmp(Beam1, Beam2) -> ok | {error, beam_lib, cmp_rsn()}")
               "beam_lib:clear_crypto_key_fun/0"
               ("http://www.erlang.org/doc/man/beam_lib.html#clear_crypto_key_fun-0" "clear_crypto_key_fun() -> undefined | {ok, Result}")
               "beam_lib:chunks/3"
               ("http://www.erlang.org/doc/man/beam_lib.html#chunks-3" "chunks(Beam, ChunkRefs, Options) -> {ok, {module(), [ChunkResult]}} | {error, beam_lib, chnk_rsn() }")
               "beam_lib:chunks/2"
               ("http://www.erlang.org/doc/man/beam_lib.html#chunks-2" "chunks(Beam, ChunkRefs) -> {ok, {module(), [ chunkdata() ]}} | {error, beam_lib, chnk_rsn() }")
               "beam_lib:build_module/1"
               ("http://www.erlang.org/doc/man/beam_lib.html#build_module-1" "build_module(Chunks) -> {ok, Binary}")
               "beam_lib:all_chunks/1"
               ("http://www.erlang.org/doc/man/beam_lib.html#all_chunks-1" "all_chunks(File :: beam() ) -> {ok, beam_lib, [{ chunkid() , dataB() }]}")
               "beam_lib:info_rsn()"
               ("http://www.erlang.org/doc/man/beam_lib.html#type-info_rsn" "info_rsn() = {chunk_too_big,  file:filename() ,  chunkid() , ChunkSize :: integer() >= 0, FileSize :: integer() >= 0} | {invalid_beam_file,  file:filename() , Position :: integer() >= 0} | {invalid_chunk, file:filename() , chunkid() } | {missing_chunk, file:filename() , chunkid() } | {not_a_beam_file, file:filename() } | {file_error, file:filename() , file:posix() }")
               "beam_lib:chnk_rsn()"
               ("http://www.erlang.org/doc/man/beam_lib.html#type-chnk_rsn" "chnk_rsn() = {unknown_chunk, file:filename() , atom()} | {key_missing_or_invalid, file:filename() , abstract_code} |  info_rsn()")
               "beam_lib:chunkname()"
               ("http://www.erlang.org/doc/man/beam_lib.html#type-chunkname" "chunkname() = abstract_code | attributes | compile_info | exports | labeled_exports | imports | indexed_imports | locals | labeled_locals | atoms")
               "beam_lib:chunkref()"
               ("http://www.erlang.org/doc/man/beam_lib.html#type-chunkref" "chunkref() = chunkname() | chunkid()")
               "beam_lib:label()"
               ("http://www.erlang.org/doc/man/beam_lib.html#type-label" "label() = integer()")
               "beam_lib:index()"
               ("http://www.erlang.org/doc/man/beam_lib.html#type-index" "index() = integer() >= 0")
               "beam_lib:labeled_entry()"
               ("http://www.erlang.org/doc/man/beam_lib.html#type-labeled_entry" "labeled_entry() = {Function :: atom(), arity(), label() }")
               "beam_lib:attrib_entry()"
               ("http://www.erlang.org/doc/man/beam_lib.html#type-attrib_entry" "attrib_entry() = {Attribute :: atom(), [AttributeValue :: term()]}")
               "beam_lib:compinfo_entry()"
               ("http://www.erlang.org/doc/man/beam_lib.html#type-compinfo_entry" "compinfo_entry() = {InfoKey :: atom(), term()}")
               "beam_lib:forms()"
               ("http://www.erlang.org/doc/man/beam_lib.html#type-forms" "forms() = [ erl_parse:abstract_form() | erl_parse:form_info() ]")
               "beam_lib:abst_code()"
               ("http://www.erlang.org/doc/man/beam_lib.html#type-abst_code" "abst_code() = {AbstVersion :: atom(), forms() } | no_abstract_code")
               "beam_lib:dataB()"
               ("http://www.erlang.org/doc/man/beam_lib.html#type-dataB" "dataB() = binary()")
               "beam_lib:chunkid()"
               ("http://www.erlang.org/doc/man/beam_lib.html#type-chunkid" "chunkid() = nonempty_string()")
               "beam_lib:chunkdata()"
               ("http://www.erlang.org/doc/man/beam_lib.html#type-chunkdata" "chunkdata() = { chunkid() , dataB() } | {abstract_code, abst_code() } | {attributes, [ attrib_entry() ]} | {compile_info, [ compinfo_entry() ]} | {exports, [{atom(), arity()}]} | {labeled_exports, [ labeled_entry() ]} | {imports, [mfa()]} | {indexed_imports, [{ index() , module(), Function :: atom(), arity()}]} | {locals, [{atom(), arity()}]} | {labeled_locals, [ labeled_entry() ]} | {atoms, [{integer(), atom()}]}")
               "beam_lib:beam()"
               ("http://www.erlang.org/doc/man/beam_lib.html#type-beam" "beam() = module() | file:filename() | binary()")
               "binary:split/3"
               ("http://www.erlang.org/doc/man/binary.html#split-3" "split(Subject, Pattern, Options) -> Parts")
               "binary:split/2"
               ("http://www.erlang.org/doc/man/binary.html#split-2" "split(Subject, Pattern) -> Parts")
               "binary:replace/4"
               ("http://www.erlang.org/doc/man/binary.html#replace-4" "replace(Subject, Pattern, Replacement, Options) -> Result")
               "binary:replace/3"
               ("http://www.erlang.org/doc/man/binary.html#replace-3" "replace(Subject, Pattern, Replacement) -> Result")
               "binary:referenced_byte_size/1"
               ("http://www.erlang.org/doc/man/binary.html#referenced_byte_size-1" "referenced_byte_size(Binary) -> integer() >= 0")
               "binary:part/3"
               ("http://www.erlang.org/doc/man/binary.html#part-3" "part(Subject, Pos, Len) -> binary()")
               "binary:part/2"
               ("http://www.erlang.org/doc/man/binary.html#part-2" "part(Subject, PosLen) -> binary()")
               "binary:matches/3"
               ("http://www.erlang.org/doc/man/binary.html#matches-3" "matches(Subject, Pattern, Options) -> Found")
               "binary:matches/2"
               ("http://www.erlang.org/doc/man/binary.html#matches-2" "matches(Subject, Pattern) -> Found")
               "binary:match/3"
               ("http://www.erlang.org/doc/man/binary.html#match-3" "match(Subject, Pattern, Options) -> Found | nomatch")
               "binary:match/2"
               ("http://www.erlang.org/doc/man/binary.html#match-2" "match(Subject, Pattern) -> Found | nomatch")
               "binary:longest_common_suffix/1"
               ("http://www.erlang.org/doc/man/binary.html#longest_common_suffix-1" "longest_common_suffix(Binaries) -> integer() >= 0")
               "binary:longest_common_prefix/1"
               ("http://www.erlang.org/doc/man/binary.html#longest_common_prefix-1" "longest_common_prefix(Binaries) -> integer() >= 0")
               "binary:list_to_bin/1"
               ("http://www.erlang.org/doc/man/binary.html#list_to_bin-1" "list_to_bin(ByteList) -> binary()")
               "binary:last/1"
               ("http://www.erlang.org/doc/man/binary.html#last-1" "last(Subject) -> byte()")
               "binary:first/1"
               ("http://www.erlang.org/doc/man/binary.html#first-1" "first(Subject) -> byte()")
               "binary:encode_unsigned/2"
               ("http://www.erlang.org/doc/man/binary.html#encode_unsigned-2" "encode_unsigned(Unsigned, Endianness) -> binary()")
               "binary:encode_unsigned/1"
               ("http://www.erlang.org/doc/man/binary.html#encode_unsigned-1" "encode_unsigned(Unsigned) -> binary()")
               "binary:decode_unsigned/2"
               ("http://www.erlang.org/doc/man/binary.html#decode_unsigned-2" "decode_unsigned(Subject, Endianness) -> Unsigned")
               "binary:decode_unsigned/1"
               ("http://www.erlang.org/doc/man/binary.html#decode_unsigned-1" "decode_unsigned(Subject) -> Unsigned")
               "binary:copy/2"
               ("http://www.erlang.org/doc/man/binary.html#copy-2" "copy(Subject, N) -> binary()")
               "binary:copy/1"
               ("http://www.erlang.org/doc/man/binary.html#copy-1" "copy(Subject) -> binary()")
               "binary:compile_pattern/1"
               ("http://www.erlang.org/doc/man/binary.html#compile_pattern-1" "compile_pattern(Pattern) -> cp()")
               "binary:bin_to_list/3"
               ("http://www.erlang.org/doc/man/binary.html#bin_to_list-3" "bin_to_list(Subject, Pos, Len) -> [byte()]")
               "binary:bin_to_list/2"
               ("http://www.erlang.org/doc/man/binary.html#bin_to_list-2" "bin_to_list(Subject, PosLen) -> [byte()]")
               "binary:bin_to_list/1"
               ("http://www.erlang.org/doc/man/binary.html#bin_to_list-1" "bin_to_list(Subject) -> [byte()]")
               "binary:at/2"
               ("http://www.erlang.org/doc/man/binary.html#at-2" "at(Subject, Pos) -> byte()")
               "binary:part()"
               ("http://www.erlang.org/doc/man/binary.html#type-part" "part() = {Start :: integer() >= 0, Length :: integer()}")
               "binary:cp()"
               ("http://www.erlang.org/doc/man/binary.html#type-cp" "cp()")
               "c:y/2"
               ("http://www.erlang.org/doc/man/c.html#y-2" "y(File, Options) -> YeccRet")
               "c:y/1"
               ("http://www.erlang.org/doc/man/c.html#y-1" "y(File) -> YeccRet")
               "c:xm/1"
               ("http://www.erlang.org/doc/man/c.html#xm-1" "xm(ModSpec) -> void()")
               "c:uptime/0"
               ("http://www.erlang.org/doc/man/c.html#uptime-0" "uptime() -> ok")
               "c:nregs/0"
               ("http://www.erlang.org/doc/man/c.html#nregs-0" "nregs() -> ok")
               "c:regs/0"
               ("http://www.erlang.org/doc/man/c.html#regs-0" "regs() -> ok")
               "c:q/0"
               ("http://www.erlang.org/doc/man/c.html#q-0" "q() -> no_return()")
               "c:pwd/0"
               ("http://www.erlang.org/doc/man/c.html#pwd-0" "pwd() -> ok")
               "c:pid/3"
               ("http://www.erlang.org/doc/man/c.html#pid-3" "pid(X, Y, Z) -> pid()")
               "c:nl/1"
               ("http://www.erlang.org/doc/man/c.html#nl-1" "nl(Module) -> abcast | error")
               "c:nc/2"
               ("http://www.erlang.org/doc/man/c.html#nc-2" "nc(File, Options) -> {ok, Module} | error")
               "c:nc/1"
               ("http://www.erlang.org/doc/man/c.html#nc-1" "nc(File) -> {ok, Module} | error")
               "c:memory/1"
               ("http://www.erlang.org/doc/man/c.html#memory-1" "memory(Type) -> Size")
               "c:memory/0"
               ("http://www.erlang.org/doc/man/c.html#memory-0" "memory() -> [{Type, Size}]")
               "c:m/1"
               ("http://www.erlang.org/doc/man/c.html#m-1" "m(Module) -> ok")
               "c:m/0"
               ("http://www.erlang.org/doc/man/c.html#m-0" "m() -> ok")
               "c:ls/1"
               ("http://www.erlang.org/doc/man/c.html#ls-1" "ls(Dir) -> ok")
               "c:ls/0"
               ("http://www.erlang.org/doc/man/c.html#ls-0" "ls() -> ok")
               "c:lc/1"
               ("http://www.erlang.org/doc/man/c.html#lc-1" "lc(Files) -> ok")
               "c:l/1"
               ("http://www.erlang.org/doc/man/c.html#l-1" "l(Module) -> code:load_ret()")
               "c:i/3"
               ("http://www.erlang.org/doc/man/c.html#i-3" "i(X, Y, Z) -> [{atom(), term()}]")
               "c:ni/0"
               ("http://www.erlang.org/doc/man/c.html#ni-0" "ni() -> ok")
               "c:i/0"
               ("http://www.erlang.org/doc/man/c.html#i-0" "i() -> ok")
               "c:help/0"
               ("http://www.erlang.org/doc/man/c.html#help-0" "help() -> ok")
               "c:flush/0"
               ("http://www.erlang.org/doc/man/c.html#flush-0" "flush() -> ok")
               "c:cd/1"
               ("http://www.erlang.org/doc/man/c.html#cd-1" "cd(Dir) -> ok")
               "c:c/2"
               ("http://www.erlang.org/doc/man/c.html#c-2" "c(File, Options) -> {ok, Module} | error")
               "c:c/1"
               ("http://www.erlang.org/doc/man/c.html#c-1" "c(File) -> {ok, Module} | error")
               "c:bt/1"
               ("http://www.erlang.org/doc/man/c.html#bt-1" "bt(Pid) -> ok | undefined")
               "calendar:valid_date/3"
               ("http://www.erlang.org/doc/man/calendar.html#valid_date-3" "valid_date(Year, Month, Day) -> boolean()")
               "calendar:valid_date/1"
               ("http://www.erlang.org/doc/man/calendar.html#valid_date-1" "valid_date(Date) -> boolean()")
               "calendar:universal_time_to_local_time/1"
               ("http://www.erlang.org/doc/man/calendar.html#universal_time_to_local_time-1" "universal_time_to_local_time(DateTime) -> datetime()")
               "calendar:universal_time/0"
               ("http://www.erlang.org/doc/man/calendar.html#universal_time-0" "universal_time() -> datetime()")
               "calendar:time_to_seconds/1"
               ("http://www.erlang.org/doc/man/calendar.html#time_to_seconds-1" "time_to_seconds(Time) -> secs_per_day()")
               "calendar:time_difference/2"
               ("http://www.erlang.org/doc/man/calendar.html#time_difference-2" "time_difference(T1, T2) -> {Days, Time}")
               "calendar:seconds_to_time/1"
               ("http://www.erlang.org/doc/man/calendar.html#seconds_to_time-1" "seconds_to_time(Seconds) -> time()")
               "calendar:seconds_to_daystime/1"
               ("http://www.erlang.org/doc/man/calendar.html#seconds_to_daystime-1" "seconds_to_daystime(Seconds) -> {Days, Time}")
               "calendar:now_to_universal_time/1"
               ("http://www.erlang.org/doc/man/calendar.html#now_to_universal_time-1" "now_to_universal_time(Now) -> datetime1970()")
               "calendar:now_to_local_time/1"
               ("http://www.erlang.org/doc/man/calendar.html#now_to_local_time-1" "now_to_local_time(Now) -> datetime1970()")
               "calendar:now_to_datetime/1"
               ("http://www.erlang.org/doc/man/calendar.html#now_to_datetime-1" "now_to_datetime(Now) -> datetime1970()")
               "calendar:local_time_to_universal_time_dst/1"
               ("http://www.erlang.org/doc/man/calendar.html#local_time_to_universal_time_dst-1" "local_time_to_universal_time_dst(DateTime1) -> [DateTime]")
               "calendar:local_time_to_universal_time/1"
               ("http://www.erlang.org/doc/man/calendar.html#local_time_to_universal_time-1" "local_time_to_universal_time(DateTime1) -> DateTime2")
               "calendar:local_time/0"
               ("http://www.erlang.org/doc/man/calendar.html#local_time-0" "local_time() -> datetime()")
               "calendar:last_day_of_the_month/2"
               ("http://www.erlang.org/doc/man/calendar.html#last_day_of_the_month-2" "last_day_of_the_month(Year, Month) -> LastDay")
               "calendar:iso_week_number/1"
               ("http://www.erlang.org/doc/man/calendar.html#iso_week_number-1" "iso_week_number(Date) -> yearweeknum()")
               "calendar:iso_week_number/0"
               ("http://www.erlang.org/doc/man/calendar.html#iso_week_number-0" "iso_week_number() -> yearweeknum()")
               "calendar:is_leap_year/1"
               ("http://www.erlang.org/doc/man/calendar.html#is_leap_year-1" "is_leap_year(Year) -> boolean()")
               "calendar:gregorian_seconds_to_datetime/1"
               ("http://www.erlang.org/doc/man/calendar.html#gregorian_seconds_to_datetime-1" "gregorian_seconds_to_datetime(Seconds) -> datetime()")
               "calendar:gregorian_days_to_date/1"
               ("http://www.erlang.org/doc/man/calendar.html#gregorian_days_to_date-1" "gregorian_days_to_date(Days) -> date()")
               "calendar:day_of_the_week/3"
               ("http://www.erlang.org/doc/man/calendar.html#day_of_the_week-3" "day_of_the_week(Year, Month, Day) -> daynum()")
               "calendar:day_of_the_week/1"
               ("http://www.erlang.org/doc/man/calendar.html#day_of_the_week-1" "day_of_the_week(Date) -> daynum()")
               "calendar:datetime_to_gregorian_seconds/1"
               ("http://www.erlang.org/doc/man/calendar.html#datetime_to_gregorian_seconds-1" "datetime_to_gregorian_seconds(DateTime) -> Seconds")
               "calendar:date_to_gregorian_days/3"
               ("http://www.erlang.org/doc/man/calendar.html#date_to_gregorian_days-3" "date_to_gregorian_days(Year, Month, Day) -> Days")
               "calendar:date_to_gregorian_days/1"
               ("http://www.erlang.org/doc/man/calendar.html#date_to_gregorian_days-1" "date_to_gregorian_days(Date) -> Days")
               "calendar:weeknum()"
               ("http://www.erlang.org/doc/man/calendar.html#type-weeknum" "weeknum() = 1..53")
               "calendar:yearweeknum()"
               ("http://www.erlang.org/doc/man/calendar.html#type-yearweeknum" "yearweeknum() = { year() , weeknum() }")
               "calendar:ldom()"
               ("http://www.erlang.org/doc/man/calendar.html#type-ldom" "ldom() = 28 | 29 | 30 | 31")
               "calendar:daynum()"
               ("http://www.erlang.org/doc/man/calendar.html#type-daynum" "daynum() = 1..7")
               "calendar:second()"
               ("http://www.erlang.org/doc/man/calendar.html#type-second" "second() = 0..59")
               "calendar:minute()"
               ("http://www.erlang.org/doc/man/calendar.html#type-minute" "minute() = 0..59")
               "calendar:hour()"
               ("http://www.erlang.org/doc/man/calendar.html#type-hour" "hour() = 0..23")
               "calendar:time()"
               ("http://www.erlang.org/doc/man/calendar.html#type-time" "time() = { hour() , minute() , second() }")
               "calendar:day()"
               ("http://www.erlang.org/doc/man/calendar.html#type-day" "day() = 1..31")
               "calendar:month()"
               ("http://www.erlang.org/doc/man/calendar.html#type-month" "month() = 1..12")
               "calendar:year1970()"
               ("http://www.erlang.org/doc/man/calendar.html#type-year1970" "year1970() = 1970..10000")
               "calendar:year()"
               ("http://www.erlang.org/doc/man/calendar.html#type-year" "year() = integer() >= 0")
               "calendar:date()"
               ("http://www.erlang.org/doc/man/calendar.html#type-date" "date() = { year() , month() , day() }")
               "calendar:datetime1970()"
               ("http://www.erlang.org/doc/man/calendar.html#type-datetime1970" "datetime1970() = {{ year1970() , month() , day() }, time() }")
               "calendar:datetime()"
               ("http://www.erlang.org/doc/man/calendar.html#type-datetime" "datetime() = { date() , time() }")
               "code:get_mode/0"
               ("http://www.erlang.org/doc/man/code.html#get_mode-0" "get_mode() -> embedded | interactive")
               "code:is_module_native/1"
               ("http://www.erlang.org/doc/man/code.html#is_module_native-1" "is_module_native(Module) -> true | false | undefined")
               "code:clash/0"
               ("http://www.erlang.org/doc/man/code.html#clash-0" "clash() -> ok")
               "code:where_is_file/1"
               ("http://www.erlang.org/doc/man/code.html#where_is_file-1" "where_is_file(Filename) -> non_existing | Absname")
               "code:is_sticky/1"
               ("http://www.erlang.org/doc/man/code.html#is_sticky-1" "is_sticky(Module) -> boolean()")
               "code:unstick_dir/1"
               ("http://www.erlang.org/doc/man/code.html#unstick_dir-1" "unstick_dir(Dir) -> ok | error")
               "code:stick_dir/1"
               ("http://www.erlang.org/doc/man/code.html#stick_dir-1" "stick_dir(Dir) -> ok | error")
               "code:objfile_extension/0"
               ("http://www.erlang.org/doc/man/code.html#objfile_extension-0" "objfile_extension() -> nonempty_string()")
               "code:priv_dir/1"
               ("http://www.erlang.org/doc/man/code.html#priv_dir-1" "priv_dir(Name) -> file:filename() | {error, bad_name}")
               "code:compiler_dir/0"
               ("http://www.erlang.org/doc/man/code.html#compiler_dir-0" "compiler_dir() -> file:filename()")
               "code:lib_dir/2"
               ("http://www.erlang.org/doc/man/code.html#lib_dir-2" "lib_dir(Name, SubDir) -> file:filename() | {error, bad_name}")
               "code:lib_dir/1"
               ("http://www.erlang.org/doc/man/code.html#lib_dir-1" "lib_dir(Name) -> file:filename() | {error, bad_name}")
               "code:lib_dir/0"
               ("http://www.erlang.org/doc/man/code.html#lib_dir-0" "lib_dir() -> file:filename()")
               "code:root_dir/0"
               ("http://www.erlang.org/doc/man/code.html#root_dir-0" "root_dir() -> file:filename()")
               "code:get_object_code/1"
               ("http://www.erlang.org/doc/man/code.html#get_object_code-1" "get_object_code(Module) -> {Module, Binary, Filename} | error")
               "code:which/1"
               ("http://www.erlang.org/doc/man/code.html#which-1" "which(Module) -> Which")
               "code:all_loaded/0"
               ("http://www.erlang.org/doc/man/code.html#all_loaded-0" "all_loaded() -> [{Module, Loaded}]")
               "code:is_loaded/1"
               ("http://www.erlang.org/doc/man/code.html#is_loaded-1" "is_loaded(Module) -> {file, Loaded} | false")
               "code:soft_purge/1"
               ("http://www.erlang.org/doc/man/code.html#soft_purge-1" "soft_purge(Module) -> boolean()")
               "code:purge/1"
               ("http://www.erlang.org/doc/man/code.html#purge-1" "purge(Module) -> boolean()")
               "code:delete/1"
               ("http://www.erlang.org/doc/man/code.html#delete-1" "delete(Module) -> boolean()")
               "code:ensure_modules_loaded/1"
               ("http://www.erlang.org/doc/man/code.html#ensure_modules_loaded-1" "ensure_modules_loaded(Modules :: [Module]) -> ok | {error, [{Module, What}]}")
               "code:finish_loading/1"
               ("http://www.erlang.org/doc/man/code.html#finish_loading-1" "finish_loading(Prepared) -> ok | {error, [{Module, What}]}")
               "code:prepare_loading/1"
               ("http://www.erlang.org/doc/man/code.html#prepare_loading-1" "prepare_loading(Modules) -> {ok, Prepared} | {error, [{Module, What}]}")
               "code:atomic_load/1"
               ("http://www.erlang.org/doc/man/code.html#atomic_load-1" "atomic_load(Modules) -> ok | {error, [{Module, What}]}")
               "code:load_binary/3"
               ("http://www.erlang.org/doc/man/code.html#load_binary-3" "load_binary(Module, Filename, Binary) -> {module, Module} | {error, What}")
               "code:ensure_loaded/1"
               ("http://www.erlang.org/doc/man/code.html#ensure_loaded-1" "ensure_loaded(Module) -> {module, Module} | {error, What}")
               "code:load_abs/1"
               ("http://www.erlang.org/doc/man/code.html#load_abs-1" "load_abs(Filename) -> load_ret()")
               "code:load_file/1"
               ("http://www.erlang.org/doc/man/code.html#load_file-1" "load_file(Module) -> load_ret()")
               "code:replace_path/2"
               ("http://www.erlang.org/doc/man/code.html#replace_path-2" "replace_path(Name, Dir) -> true | {error, What}")
               "code:del_path/1"
               ("http://www.erlang.org/doc/man/code.html#del_path-1" "del_path(NameOrDir) -> boolean() | {error, What}")
               "code:add_pathsa/1"
               ("http://www.erlang.org/doc/man/code.html#add_pathsa-1" "add_pathsa(Dirs) -> ok")
               "code:add_pathsz/1"
               ("http://www.erlang.org/doc/man/code.html#add_pathsz-1" "add_pathsz(Dirs) -> ok")
               "code:add_paths/1"
               ("http://www.erlang.org/doc/man/code.html#add_paths-1" "add_paths(Dirs) -> ok")
               "code:add_patha/1"
               ("http://www.erlang.org/doc/man/code.html#add_patha-1" "add_patha(Dir) -> add_path_ret()")
               "code:add_pathz/1"
               ("http://www.erlang.org/doc/man/code.html#add_pathz-1" "add_pathz(Dir) -> add_path_ret()")
               "code:add_path/1"
               ("http://www.erlang.org/doc/man/code.html#add_path-1" "add_path(Dir) -> add_path_ret()")
               "code:get_path/0"
               ("http://www.erlang.org/doc/man/code.html#get_path-0" "get_path() -> Path")
               "code:set_path/1"
               ("http://www.erlang.org/doc/man/code.html#set_path-1" "set_path(Path) -> true | {error, What}")
               "code:prepared_code()"
               ("http://www.erlang.org/doc/man/code.html#type-prepared_code" "prepared_code()")
               "code:load_error_rsn()"
               ("http://www.erlang.org/doc/man/code.html#type-load_error_rsn" "load_error_rsn() = badfile | nofile | not_purged | on_load_failure | sticky_directory")
               "code:load_ret()"
               ("http://www.erlang.org/doc/man/code.html#type-load_ret" "load_ret() = {error, What :: load_error_rsn() } | {module, Module :: module()}")
               "common_test:Module:Testcase/1"
               ("http://www.erlang.org/doc/man/common_test.html#Module:Testcase-1" "Module:Testcase(Config) ->  term() | {skip,Reason} | {comment,Comment} | {save_config,SaveConfig} | {skip_and_save,Reason,SaveConfig} | exit()")
               "common_test:Module:Testcase/0"
               ("http://www.erlang.org/doc/man/common_test.html#Module:Testcase-0" "Module:Testcase() -> [Info]")
               "common_test:Module:end_per_testcase/2"
               ("http://www.erlang.org/doc/man/common_test.html#Module:end_per_testcase-2" "Module:end_per_testcase(TestCase, Config) -> term() | {fail,Reason} | {save_config,SaveConfig}")
               "common_test:Module:init_per_testcase/2"
               ("http://www.erlang.org/doc/man/common_test.html#Module:init_per_testcase-2" "Module:init_per_testcase(TestCase, Config) -> NewConfig | {fail,Reason} | {skip,Reason}")
               "common_test:Module:end_per_group/2"
               ("http://www.erlang.org/doc/man/common_test.html#Module:end_per_group-2" "Module:end_per_group(GroupName, Config) -> term() |\n	  {return_group_result,Status}")
               "common_test:Module:init_per_group/2"
               ("http://www.erlang.org/doc/man/common_test.html#Module:init_per_group-2" "Module:init_per_group(GroupName, Config) -> NewConfig |\n	  {skip,Reason}")
               "common_test:Module:group/1"
               ("http://www.erlang.org/doc/man/common_test.html#Module:group-1" "Module:group(GroupName) -> [Info]")
               "common_test:Module:end_per_suite/1"
               ("http://www.erlang.org/doc/man/common_test.html#Module:end_per_suite-1" "Module:end_per_suite(Config) -> term() | \n	{save_config,SaveConfig}")
               "common_test:Module:init_per_suite/1"
               ("http://www.erlang.org/doc/man/common_test.html#Module:init_per_suite-1" "Module:init_per_suite(Config) -> NewConfig | {skip,Reason} |\n	  {skip_and_save,Reason,SaveConfig}")
               "common_test:Module:suite/0"
               ("http://www.erlang.org/doc/man/common_test.html#Module:suite-0" "Module:suite() -> [Info]")
               "common_test:Module:groups/0"
               ("http://www.erlang.org/doc/man/common_test.html#Module:groups-0" "Module:groups() -> GroupDefs")
               "common_test:Module:all/0"
               ("http://www.erlang.org/doc/man/common_test.html#Module:all-0" "Module:all() -> Tests | {skip,Reason}")
               "compile:noenv_output_generated/1"
               ("http://www.erlang.org/doc/man/compile.html#noenv_output_generated-1" "noenv_output_generated(Options) -> true | false")
               "compile:noenv_forms/2"
               ("http://www.erlang.org/doc/man/compile.html#noenv_forms-2" "noenv_forms(Forms, Options) -> CompRet")
               "compile:noenv_file/2"
               ("http://www.erlang.org/doc/man/compile.html#noenv_file-2" "noenv_file(File, Options) -> CompRet")
               "compile:output_generated/1"
               ("http://www.erlang.org/doc/man/compile.html#output_generated-1" "output_generated(Options) -> true | false")
               "compile:format_error/1"
               ("http://www.erlang.org/doc/man/compile.html#format_error-1" "format_error(ErrorDescriptor) -> chars()")
               "compile:forms/2"
               ("http://www.erlang.org/doc/man/compile.html#forms-2" "forms(Forms, Options) -> CompRet")
               "compile:forms/1"
               ("http://www.erlang.org/doc/man/compile.html#forms-1" "forms(Forms)")
               "compile:"
               ("http://www.erlang.org/doc/man/compile.html#type-option" "Available options:")
               "compile:file/2"
               ("http://www.erlang.org/doc/man/compile.html#file-2" "file(File, Options) -> CompRet")
               "compile:file/1"
               ("http://www.erlang.org/doc/man/compile.html#file-1" "file(File)")
               "compile:env_compiler_options/0"
               ("http://www.erlang.org/doc/man/compile.html#env_compiler_options-0" "env_compiler_options()")
               "corba:orb_init/1"
               ("http://www.erlang.org/doc/man/corba.html#orb_init-1" "orb_init(KeyValueList) -> ok | {'EXIT', Reason}")
               "corba:add_alternate_iiop_address/3"
               ("http://www.erlang.org/doc/man/corba.html#add_alternate_iiop_address-3" "add_alternate_iiop_address(Object, Host, Port) -> NewObject | {'EXCEPTION', E}")
               "corba:print_object/1"
               ("http://www.erlang.org/doc/man/corba.html#print_object-1" "print_object(Data [, Type]) -> ok | {'EXCEPTION', E} |  {'EXIT', R} | string()")
               "corba:string_to_object/2"
               ("http://www.erlang.org/doc/man/corba.html#string_to_object-2" "string_to_object(IOR_string, Contexts) -> Object")
               "corba:string_to_object/1"
               ("http://www.erlang.org/doc/man/corba.html#string_to_object-1" "string_to_object(IOR_string) -> Object")
               "corba:object_to_string/1"
               ("http://www.erlang.org/doc/man/corba.html#object_to_string-1" "object_to_string(Object) -> IOR_string")
               "corba:list_initial_services_remote/2"
               ("http://www.erlang.org/doc/man/corba.html#list_initial_services_remote-2" "list_initial_services_remote(Address, Contexts) -> [ObjectId]")
               "corba:list_initial_services_remote/1"
               ("http://www.erlang.org/doc/man/corba.html#list_initial_services_remote-1" "list_initial_services_remote(Address) -> [ObjectId]")
               "corba:resolve_initial_references_remote/3"
               ("http://www.erlang.org/doc/man/corba.html#resolve_initial_references_remote-3" "resolve_initial_references_remote(ObjectId, Address, Contexts) -> Object")
               "corba:resolve_initial_references_remote/2"
               ("http://www.erlang.org/doc/man/corba.html#resolve_initial_references_remote-2" "resolve_initial_references_remote(ObjectId, Address) -> Object")
               "corba:list_initial_services/0"
               ("http://www.erlang.org/doc/man/corba.html#list_initial_services-0" "list_initial_services() -> [ObjectId]")
               "corba:remove_initial_service/1"
               ("http://www.erlang.org/doc/man/corba.html#remove_initial_service-1" "remove_initial_service(ObjectId) -> boolean()")
               "corba:add_initial_service/2"
               ("http://www.erlang.org/doc/man/corba.html#add_initial_service-2" "add_initial_service(ObjectId, Object) -> boolean()")
               "corba:resolve_initial_references/2"
               ("http://www.erlang.org/doc/man/corba.html#resolve_initial_references-2" "resolve_initial_references(ObjectId, Contexts) -> Object")
               "corba:resolve_initial_references/1"
               ("http://www.erlang.org/doc/man/corba.html#resolve_initial_references-1" "resolve_initial_references(ObjectId) -> Object")
               "corba:reply/2"
               ("http://www.erlang.org/doc/man/corba.html#reply-2" "reply(To, Reply) -> true")
               "corba:raise/1"
               ("http://www.erlang.org/doc/man/corba.html#raise-1" "raise(Exception)")
               "corba:get_pid/1"
               ("http://www.erlang.org/doc/man/corba.html#get_pid-1" "get_pid(Object) -> Result")
               "corba:get_subobject_key/1"
               ("http://www.erlang.org/doc/man/corba.html#get_subobject_key-1" "get_subobject_key(Object) -> Result")
               "corba:create_subobject_key/2"
               ("http://www.erlang.org/doc/man/corba.html#create_subobject_key-2" "create_subobject_key(Object, Key) -> Result")
               "corba:create_nil_objref/0"
               ("http://www.erlang.org/doc/man/corba.html#create_nil_objref-0" "create_nil_objref() -> Object")
               "corba:dispose/1"
               ("http://www.erlang.org/doc/man/corba.html#dispose-1" "dispose(Object) -> ok")
               "corba:create_link/4"
               ("http://www.erlang.org/doc/man/corba.html#create_link-4" "create_link(Module, TypeID, Env, Options2) -> Reply")
               "corba:create_link/3"
               ("http://www.erlang.org/doc/man/corba.html#create_link-3" "create_link(Module, TypeID, Env) -> Object")
               "corba:create_link/2"
               ("http://www.erlang.org/doc/man/corba.html#create_link-2" "create_link(Module, TypeID) -> Object")
               "corba:create/4"
               ("http://www.erlang.org/doc/man/corba.html#create-4" "create(Module, TypeID, Env, Optons1) -> Object")
               "corba:create/3"
               ("http://www.erlang.org/doc/man/corba.html#create-3" "create(Module, TypeID, Env) -> Object")
               "corba:create/2"
               ("http://www.erlang.org/doc/man/corba.html#create-2" "create(Module, TypeID) -> Object")
               "corba_object:hash/2"
               ("http://www.erlang.org/doc/man/corba_object.html#hash-2" "hash(Object, Maximum) -> int()")
               "corba_object:is_equivalent/2"
               ("http://www.erlang.org/doc/man/corba_object.html#is_equivalent-2" "is_equivalent(Object, OtherObject) -> boolean()")
               "corba_object:not_existent/2"
               ("http://www.erlang.org/doc/man/corba_object.html#not_existent-2" "not_existent(Object, Contexts) -> Return")
               "corba_object:not_existent/1"
               ("http://www.erlang.org/doc/man/corba_object.html#not_existent-1" "not_existent(Object) -> Return")
               "corba_object:non_existent/2"
               ("http://www.erlang.org/doc/man/corba_object.html#non_existent-2" "non_existent(Object, Contexts) -> Return")
               "corba_object:non_existent/1"
               ("http://www.erlang.org/doc/man/corba_object.html#non_existent-1" "non_existent(Object) -> Return")
               "corba_object:is_remote/1"
               ("http://www.erlang.org/doc/man/corba_object.html#is_remote-1" "is_remote(Object) -> boolean()")
               "corba_object:is_a/3"
               ("http://www.erlang.org/doc/man/corba_object.html#is_a-3" "is_a(Object, Logical_type_id, Contexts) -> Return")
               "corba_object:is_a/2"
               ("http://www.erlang.org/doc/man/corba_object.html#is_a-2" "is_a(Object, Logical_type_id) -> Return")
               "corba_object:is_nil/1"
               ("http://www.erlang.org/doc/man/corba_object.html#is_nil-1" "is_nil(Object) -> boolean()")
               "corba_object:get_interface/1"
               ("http://www.erlang.org/doc/man/corba_object.html#get_interface-1" "get_interface(Object) -> InterfaceDef")
               "cosEventApp:stop_channel/1"
               ("http://www.erlang.org/doc/man/cosEventApp.html#stop_channel-1" "stop_channel(Channel) -> Reply")
               "cosEventApp:start_channel_link/1"
               ("http://www.erlang.org/doc/man/cosEventApp.html#start_channel_link-1" "start_channel_link(Options) -> Channel")
               "cosEventApp:start_channel_link/0"
               ("http://www.erlang.org/doc/man/cosEventApp.html#start_channel_link-0" "start_channel_link() -> Channel")
               "cosEventApp:start_channel/1"
               ("http://www.erlang.org/doc/man/cosEventApp.html#start_channel-1" "start_channel(Options) -> Channel")
               "cosEventApp:start_channel/0"
               ("http://www.erlang.org/doc/man/cosEventApp.html#start_channel-0" "start_channel() -> Channel")
               "cosEventApp:stop/0"
               ("http://www.erlang.org/doc/man/cosEventApp.html#stop-0" "stop() -> Return")
               "cosEventApp:start/0"
               ("http://www.erlang.org/doc/man/cosEventApp.html#start-0" "start() -> Return")
               "cosEventApp:uninstall/0"
               ("http://www.erlang.org/doc/man/cosEventApp.html#uninstall-0" "uninstall() -> Return")
               "cosEventApp:install/0"
               ("http://www.erlang.org/doc/man/cosEventApp.html#install-0" "install() -> Return")
               "CosEventChannelAdmin_ConsumerAdmin:obtain_pull_supplier/1"
               ("http://www.erlang.org/doc/man/CosEventChannelAdmin_ConsumerAdmin.html#obtain_pull_supplier-1" "obtain_pull_supplier(Object) -> Return")
               "CosEventChannelAdmin_ConsumerAdmin:obtain_push_supplier/1"
               ("http://www.erlang.org/doc/man/CosEventChannelAdmin_ConsumerAdmin.html#obtain_push_supplier-1" "obtain_push_supplier(Object) -> Return")
               "CosEventChannelAdmin_EventChannel:destroy/1"
               ("http://www.erlang.org/doc/man/CosEventChannelAdmin_EventChannel.html#destroy-1" "destroy(Object) -> Return")
               "CosEventChannelAdmin_EventChannel:for_suppliers/1"
               ("http://www.erlang.org/doc/man/CosEventChannelAdmin_EventChannel.html#for_suppliers-1" "for_suppliers(Object) -> Return")
               "CosEventChannelAdmin_EventChannel:for_consumers/1"
               ("http://www.erlang.org/doc/man/CosEventChannelAdmin_EventChannel.html#for_consumers-1" "for_consumers(Object) -> Return")
               "CosEventChannelAdmin_ProxyPullConsumer:disconnect_pull_consumer/1"
               ("http://www.erlang.org/doc/man/CosEventChannelAdmin_ProxyPullConsumer.html#disconnect_pull_consumer-1" "disconnect_pull_consumer(Object) -> Return")
               "CosEventChannelAdmin_ProxyPullConsumer:connect_pull_supplier/2"
               ("http://www.erlang.org/doc/man/CosEventChannelAdmin_ProxyPullConsumer.html#connect_pull_supplier-2" "connect_pull_supplier(Object, PullSupplier) -> Return")
               "CosEventChannelAdmin_ProxyPullSupplier:try_pull/1"
               ("http://www.erlang.org/doc/man/CosEventChannelAdmin_ProxyPullSupplier.html#try_pull-1" "try_pull(Object) -> Return")
               "CosEventChannelAdmin_ProxyPullSupplier:pull/1"
               ("http://www.erlang.org/doc/man/CosEventChannelAdmin_ProxyPullSupplier.html#pull-1" "pull(Object) -> Return")
               "CosEventChannelAdmin_ProxyPullSupplier:disconnect_pull_supplier/1"
               ("http://www.erlang.org/doc/man/CosEventChannelAdmin_ProxyPullSupplier.html#disconnect_pull_supplier-1" "disconnect_pull_supplier(Object) -> Return")
               "CosEventChannelAdmin_ProxyPullSupplier:connect_pull_consumer/2"
               ("http://www.erlang.org/doc/man/CosEventChannelAdmin_ProxyPullSupplier.html#connect_pull_consumer-2" "connect_pull_consumer(Object, PullConsumer) -> Return")
               "CosEventChannelAdmin_ProxyPushConsumer:push/2"
               ("http://www.erlang.org/doc/man/CosEventChannelAdmin_ProxyPushConsumer.html#push-2" "push(Object, Data) -> Return")
               "CosEventChannelAdmin_ProxyPushConsumer:disconnect_push_consumer/1"
               ("http://www.erlang.org/doc/man/CosEventChannelAdmin_ProxyPushConsumer.html#disconnect_push_consumer-1" "disconnect_push_consumer(Object) -> Return")
               "CosEventChannelAdmin_ProxyPushConsumer:connect_push_supplier/2"
               ("http://www.erlang.org/doc/man/CosEventChannelAdmin_ProxyPushConsumer.html#connect_push_supplier-2" "connect_push_supplier(Object, PushSupplier) -> Return")
               "CosEventChannelAdmin_ProxyPushSupplier:disconnect_push_supplier/1"
               ("http://www.erlang.org/doc/man/CosEventChannelAdmin_ProxyPushSupplier.html#disconnect_push_supplier-1" "disconnect_push_supplier(Object) -> Return")
               "CosEventChannelAdmin_ProxyPushSupplier:connect_push_consumer/2"
               ("http://www.erlang.org/doc/man/CosEventChannelAdmin_ProxyPushSupplier.html#connect_push_consumer-2" "connect_push_consumer(Object, PushConsumer) -> Return")
               "CosEventChannelAdmin_SupplierAdmin:obtain_pull_consumer/1"
               ("http://www.erlang.org/doc/man/CosEventChannelAdmin_SupplierAdmin.html#obtain_pull_consumer-1" "obtain_pull_consumer(Object) -> Return")
               "CosEventChannelAdmin_SupplierAdmin:obtain_push_consumer/1"
               ("http://www.erlang.org/doc/man/CosEventChannelAdmin_SupplierAdmin.html#obtain_push_consumer-1" "obtain_push_consumer(Object) -> Return")
               "CosEventDomainAdmin:'ForbidDiamonds'/0"
               ("http://www.erlang.org/doc/man/CosEventDomainAdmin.html#'ForbidDiamonds'-0" "'ForbidDiamonds'() -> short()")
               "CosEventDomainAdmin:'AuthorizeDiamonds'/0"
               ("http://www.erlang.org/doc/man/CosEventDomainAdmin.html#'AuthorizeDiamonds'-0" "'AuthorizeDiamonds'() -> short()")
               "CosEventDomainAdmin:'DiamondDetection'/0"
               ("http://www.erlang.org/doc/man/CosEventDomainAdmin.html#'DiamondDetection'-0" "'DiamondDetection'() -> string()")
               "CosEventDomainAdmin:'ForbidCycles'/0"
               ("http://www.erlang.org/doc/man/CosEventDomainAdmin.html#'ForbidCycles'-0" "'ForbidCycles'() -> short()")
               "CosEventDomainAdmin:'AuthorizeCycles'/0"
               ("http://www.erlang.org/doc/man/CosEventDomainAdmin.html#'AuthorizeCycles'-0" "'AuthorizeCycles'() -> short()")
               "CosEventDomainAdmin:'CycleDetection'/0"
               ("http://www.erlang.org/doc/man/CosEventDomainAdmin.html#'CycleDetection'-0" "'CycleDetection'() -> string()")
               "CosEventDomainAdmin_EventDomain:connect_sequence_pull_supplier_with_id/3"
               ("http://www.erlang.org/doc/man/CosEventDomainAdmin_EventDomain.html#connect_sequence_pull_supplier_with_id-3" "connect_sequence_pull_supplier_with_id(EventDomain, Supplier, MemberID) -> Reply")
               "CosEventDomainAdmin_EventDomain:connect_sequence_push_supplier_with_id/3"
               ("http://www.erlang.org/doc/man/CosEventDomainAdmin_EventDomain.html#connect_sequence_push_supplier_with_id-3" "connect_sequence_push_supplier_with_id(EventDomain, Supplier, MemberID) -> Reply")
               "CosEventDomainAdmin_EventDomain:connect_sequence_pull_consumer_with_id/3"
               ("http://www.erlang.org/doc/man/CosEventDomainAdmin_EventDomain.html#connect_sequence_pull_consumer_with_id-3" "connect_sequence_pull_consumer_with_id(EventDomain, Consumer, MemberID) -> Reply")
               "CosEventDomainAdmin_EventDomain:connect_sequence_push_consumer_with_id/3"
               ("http://www.erlang.org/doc/man/CosEventDomainAdmin_EventDomain.html#connect_sequence_push_consumer_with_id-3" "connect_sequence_push_consumer_with_id(EventDomain, Consumer, MemberID) -> Reply")
               "CosEventDomainAdmin_EventDomain:connect_structured_pull_supplier_with_id/3"
               ("http://www.erlang.org/doc/man/CosEventDomainAdmin_EventDomain.html#connect_structured_pull_supplier_with_id-3" "connect_structured_pull_supplier_with_id(EventDomain, Supplier, MemberID) -> Reply")
               "CosEventDomainAdmin_EventDomain:connect_structured_push_supplier_with_id/3"
               ("http://www.erlang.org/doc/man/CosEventDomainAdmin_EventDomain.html#connect_structured_push_supplier_with_id-3" "connect_structured_push_supplier_with_id(EventDomain, Supplier, MemberID) -> Reply")
               "CosEventDomainAdmin_EventDomain:connect_structured_pull_consumer_with_id/3"
               ("http://www.erlang.org/doc/man/CosEventDomainAdmin_EventDomain.html#connect_structured_pull_consumer_with_id-3" "connect_structured_pull_consumer_with_id(EventDomain, Consumer, MemberID) -> Reply")
               "CosEventDomainAdmin_EventDomain:connect_structured_push_consumer_with_id/3"
               ("http://www.erlang.org/doc/man/CosEventDomainAdmin_EventDomain.html#connect_structured_push_consumer_with_id-3" "connect_structured_push_consumer_with_id(EventDomain, Consumer, MemberID) -> Reply")
               "CosEventDomainAdmin_EventDomain:connect_pull_supplier_with_id/3"
               ("http://www.erlang.org/doc/man/CosEventDomainAdmin_EventDomain.html#connect_pull_supplier_with_id-3" "connect_pull_supplier_with_id(EventDomain, Supplier, MemberID) -> Reply")
               "CosEventDomainAdmin_EventDomain:connect_push_supplier_with_id/3"
               ("http://www.erlang.org/doc/man/CosEventDomainAdmin_EventDomain.html#connect_push_supplier_with_id-3" "connect_push_supplier_with_id(EventDomain, Supplier, MemberID) -> Reply")
               "CosEventDomainAdmin_EventDomain:connect_pull_consumer_with_id/3"
               ("http://www.erlang.org/doc/man/CosEventDomainAdmin_EventDomain.html#connect_pull_consumer_with_id-3" "connect_pull_consumer_with_id(EventDomain, Consumer, MemberID) -> Reply")
               "CosEventDomainAdmin_EventDomain:connect_push_consumer_with_id/3"
               ("http://www.erlang.org/doc/man/CosEventDomainAdmin_EventDomain.html#connect_push_consumer_with_id-3" "connect_push_consumer_with_id(EventDomain, Consumer, MemberID) -> Reply")
               "CosEventDomainAdmin_EventDomain:connect_sequence_pull_supplier/2"
               ("http://www.erlang.org/doc/man/CosEventDomainAdmin_EventDomain.html#connect_sequence_pull_supplier-2" "connect_sequence_pull_supplier(EventDomain, Supplier) -> Reply")
               "CosEventDomainAdmin_EventDomain:connect_sequence_push_supplier/2"
               ("http://www.erlang.org/doc/man/CosEventDomainAdmin_EventDomain.html#connect_sequence_push_supplier-2" "connect_sequence_push_supplier(EventDomain, Supplier) -> Reply")
               "CosEventDomainAdmin_EventDomain:connect_sequence_pull_consumer/2"
               ("http://www.erlang.org/doc/man/CosEventDomainAdmin_EventDomain.html#connect_sequence_pull_consumer-2" "connect_sequence_pull_consumer(EventDomain, Consumer) -> Reply")
               "CosEventDomainAdmin_EventDomain:connect_sequence_push_consumer/2"
               ("http://www.erlang.org/doc/man/CosEventDomainAdmin_EventDomain.html#connect_sequence_push_consumer-2" "connect_sequence_push_consumer(EventDomain, Consumer) -> Reply")
               "CosEventDomainAdmin_EventDomain:connect_structured_pull_supplier/2"
               ("http://www.erlang.org/doc/man/CosEventDomainAdmin_EventDomain.html#connect_structured_pull_supplier-2" "connect_structured_pull_supplier(EventDomain, Supplier) -> Reply")
               "CosEventDomainAdmin_EventDomain:connect_structured_push_supplier/2"
               ("http://www.erlang.org/doc/man/CosEventDomainAdmin_EventDomain.html#connect_structured_push_supplier-2" "connect_structured_push_supplier(EventDomain, Supplier) -> Reply")
               "CosEventDomainAdmin_EventDomain:connect_structured_pull_consumer/2"
               ("http://www.erlang.org/doc/man/CosEventDomainAdmin_EventDomain.html#connect_structured_pull_consumer-2" "connect_structured_pull_consumer(EventDomain, Consumer) -> Reply")
               "CosEventDomainAdmin_EventDomain:connect_structured_push_consumer/2"
               ("http://www.erlang.org/doc/man/CosEventDomainAdmin_EventDomain.html#connect_structured_push_consumer-2" "connect_structured_push_consumer(EventDomain, Consumer) -> Reply")
               "CosEventDomainAdmin_EventDomain:connect_pull_supplier/2"
               ("http://www.erlang.org/doc/man/CosEventDomainAdmin_EventDomain.html#connect_pull_supplier-2" "connect_pull_supplier(EventDomain, Supplier) -> Reply")
               "CosEventDomainAdmin_EventDomain:connect_push_supplier/2"
               ("http://www.erlang.org/doc/man/CosEventDomainAdmin_EventDomain.html#connect_push_supplier-2" "connect_push_supplier(EventDomain, Supplier) -> Reply")
               "CosEventDomainAdmin_EventDomain:connect_pull_consumer/2"
               ("http://www.erlang.org/doc/man/CosEventDomainAdmin_EventDomain.html#connect_pull_consumer-2" "connect_pull_consumer(EventDomain, Consumer) -> Reply")
               "CosEventDomainAdmin_EventDomain:connect_push_consumer/2"
               ("http://www.erlang.org/doc/man/CosEventDomainAdmin_EventDomain.html#connect_push_consumer-2" "connect_push_consumer(EventDomain, Consumer) -> Reply")
               "CosEventDomainAdmin_EventDomain:set_default_supplier_channel/2"
               ("http://www.erlang.org/doc/man/CosEventDomainAdmin_EventDomain.html#set_default_supplier_channel-2" "set_default_supplier_channel(EventDomain, MemberID) -> Reply")
               "CosEventDomainAdmin_EventDomain:set_default_consumer_channel/2"
               ("http://www.erlang.org/doc/man/CosEventDomainAdmin_EventDomain.html#set_default_consumer_channel-2" "set_default_consumer_channel(EventDomain, MemberID) -> Reply")
               "CosEventDomainAdmin_EventDomain:get_diamonds/1"
               ("http://www.erlang.org/doc/man/CosEventDomainAdmin_EventDomain.html#get_diamonds-1" "get_diamonds(EventDomain) -> DiamondSeq")
               "CosEventDomainAdmin_EventDomain:get_cycles/1"
               ("http://www.erlang.org/doc/man/CosEventDomainAdmin_EventDomain.html#get_cycles-1" "get_cycles(EventDomain) -> RouteSeq")
               "CosEventDomainAdmin_EventDomain:destroy/1"
               ("http://www.erlang.org/doc/man/CosEventDomainAdmin_EventDomain.html#destroy-1" "destroy(EventDomain) -> ok")
               "CosEventDomainAdmin_EventDomain:get_subscription_channels/2"
               ("http://www.erlang.org/doc/man/CosEventDomainAdmin_EventDomain.html#get_subscription_channels-2" "get_subscription_channels(EventDomain, MemberID) -> Reply")
               "CosEventDomainAdmin_EventDomain:get_offer_channels/2"
               ("http://www.erlang.org/doc/man/CosEventDomainAdmin_EventDomain.html#get_offer_channels-2" "get_offer_channels(EventDomain, MemberID) -> Reply")
               "CosEventDomainAdmin_EventDomain:remove_connection/2"
               ("http://www.erlang.org/doc/man/CosEventDomainAdmin_EventDomain.html#remove_connection-2" "remove_connection(EventDomain, ConnectionID) -> Reply")
               "CosEventDomainAdmin_EventDomain:get_connection/2"
               ("http://www.erlang.org/doc/man/CosEventDomainAdmin_EventDomain.html#get_connection-2" "get_connection(EventDomain, ConnectionID) -> Reply")
               "CosEventDomainAdmin_EventDomain:get_all_connections/1"
               ("http://www.erlang.org/doc/man/CosEventDomainAdmin_EventDomain.html#get_all_connections-1" "get_all_connections(EventDomain) -> ConnectionIDSeq")
               "CosEventDomainAdmin_EventDomain:add_connection/2"
               ("http://www.erlang.org/doc/man/CosEventDomainAdmin_EventDomain.html#add_connection-2" "add_connection(EventDomain, Connection) -> Reply")
               "CosEventDomainAdmin_EventDomain:remove_channel/2"
               ("http://www.erlang.org/doc/man/CosEventDomainAdmin_EventDomain.html#remove_channel-2" "remove_channel(EventDomain, MemberID) -> Reply")
               "CosEventDomainAdmin_EventDomain:get_channel/2"
               ("http://www.erlang.org/doc/man/CosEventDomainAdmin_EventDomain.html#get_channel-2" "get_channel(EventDomain, MemberID) -> Reply")
               "CosEventDomainAdmin_EventDomain:get_all_channels/1"
               ("http://www.erlang.org/doc/man/CosEventDomainAdmin_EventDomain.html#get_all_channels-1" "get_all_channels(EventDomain) -> MemberIDSeq")
               "CosEventDomainAdmin_EventDomain:add_channel/2"
               ("http://www.erlang.org/doc/man/CosEventDomainAdmin_EventDomain.html#add_channel-2" "add_channel(EventDomain, Channel) -> MemberID")
               "CosEventDomainAdmin_EventDomainFactory:get_event_domain/2"
               ("http://www.erlang.org/doc/man/CosEventDomainAdmin_EventDomainFactory.html#get_event_domain-2" "get_event_domain(Factory, DomainID) -> Reply")
               "CosEventDomainAdmin_EventDomainFactory:get_all_domains/1"
               ("http://www.erlang.org/doc/man/CosEventDomainAdmin_EventDomainFactory.html#get_all_domains-1" "get_all_domains(Factory) -> DomainIDSeq")
               "CosEventDomainAdmin_EventDomainFactory:create_event_domain/3"
               ("http://www.erlang.org/doc/man/CosEventDomainAdmin_EventDomainFactory.html#create_event_domain-3" "create_event_domain(Factory, QoS, Admin) -> Reply")
               "cosEventDomainApp:stop_factory/1"
               ("http://www.erlang.org/doc/man/cosEventDomainApp.html#stop_factory-1" "stop_factory(Factory) -> Reply")
               "cosEventDomainApp:start_factory_link/1"
               ("http://www.erlang.org/doc/man/cosEventDomainApp.html#start_factory_link-1" "start_factory_link(Options) -> Factory")
               "cosEventDomainApp:start_factory_link/0"
               ("http://www.erlang.org/doc/man/cosEventDomainApp.html#start_factory_link-0" "start_factory_link() -> Factory")
               "cosEventDomainApp:start_factory/1"
               ("http://www.erlang.org/doc/man/cosEventDomainApp.html#start_factory-1" "start_factory(Options) -> Factory")
               "cosEventDomainApp:start_factory/0"
               ("http://www.erlang.org/doc/man/cosEventDomainApp.html#start_factory-0" "start_factory() -> Factory")
               "cosEventDomainApp:stop/0"
               ("http://www.erlang.org/doc/man/cosEventDomainApp.html#stop-0" "stop() -> Return")
               "cosEventDomainApp:start/0"
               ("http://www.erlang.org/doc/man/cosEventDomainApp.html#start-0" "start() -> Return")
               "cosEventDomainApp:uninstall/0"
               ("http://www.erlang.org/doc/man/cosEventDomainApp.html#uninstall-0" "uninstall() -> Return")
               "cosEventDomainApp:install/0"
               ("http://www.erlang.org/doc/man/cosEventDomainApp.html#install-0" "install() -> Return")
               "CosFileTransfer_Directory:list/2"
               ("http://www.erlang.org/doc/man/CosFileTransfer_Directory.html#list-2" "list(Directory, Max) -> Return")
               "CosFileTransfer_File:'_get_associated_session'/1"
               ("http://www.erlang.org/doc/man/CosFileTransfer_File.html#'_get_associated_session'-1" "'_get_associated_session'(File) -> FileTransferSession")
               "CosFileTransfer_File:'_get_parent'/1"
               ("http://www.erlang.org/doc/man/CosFileTransfer_File.html#'_get_parent'-1" "'_get_parent'(File) -> Directory")
               "CosFileTransfer_File:'_get_complete_file_name'/1"
               ("http://www.erlang.org/doc/man/CosFileTransfer_File.html#'_get_complete_file_name'-1" "'_get_complete_file_name'(File) -> string()")
               "CosFileTransfer_File:'_get_name'/1"
               ("http://www.erlang.org/doc/man/CosFileTransfer_File.html#'_get_name'-1" "'_get_name'(File) -> string()")
               "CosFileTransfer_FileIterator:destroy/1"
               ("http://www.erlang.org/doc/man/CosFileTransfer_FileIterator.html#destroy-1" "destroy(Iterator) -> ok")
               "CosFileTransfer_FileIterator:next_n/2"
               ("http://www.erlang.org/doc/man/CosFileTransfer_FileIterator.html#next_n-2" "next_n(Iterator, Max) -> Return")
               "CosFileTransfer_FileIterator:next_one/1"
               ("http://www.erlang.org/doc/man/CosFileTransfer_FileIterator.html#next_one-1" "next_one(Iterator) -> Return")
               "CosFileTransfer_FileTransferSession:logout/1"
               ("http://www.erlang.org/doc/man/CosFileTransfer_FileTransferSession.html#logout-1" "logout(FTS) -> ok")
               "CosFileTransfer_FileTransferSession:insert/4"
               ("http://www.erlang.org/doc/man/CosFileTransfer_FileTransferSession.html#insert-4" "insert(FTS, SourceFile, DestinationFile, Offset) -> Return")
               "CosFileTransfer_FileTransferSession:append/3"
               ("http://www.erlang.org/doc/man/CosFileTransfer_FileTransferSession.html#append-3" "append(FTS, SourceFile, DestinationFile) -> Return")
               "CosFileTransfer_FileTransferSession:transfer/3"
               ("http://www.erlang.org/doc/man/CosFileTransfer_FileTransferSession.html#transfer-3" "transfer(FTS, SourceFile, DestinationFile) -> Return")
               "CosFileTransfer_FileTransferSession:delete/2"
               ("http://www.erlang.org/doc/man/CosFileTransfer_FileTransferSession.html#delete-2" "delete(FTS, File) -> Return")
               "CosFileTransfer_FileTransferSession:get_file/2"
               ("http://www.erlang.org/doc/man/CosFileTransfer_FileTransferSession.html#get_file-2" "get_file(FTS, FileNameList) -> Return")
               "CosFileTransfer_FileTransferSession:create_directory/2"
               ("http://www.erlang.org/doc/man/CosFileTransfer_FileTransferSession.html#create_directory-2" "create_directory(FTS, FileNameList) -> Return")
               "CosFileTransfer_FileTransferSession:create_file/2"
               ("http://www.erlang.org/doc/man/CosFileTransfer_FileTransferSession.html#create_file-2" "create_file(FTS, FileNameList) -> Return")
               "CosFileTransfer_FileTransferSession:set_directory/2"
               ("http://www.erlang.org/doc/man/CosFileTransfer_FileTransferSession.html#set_directory-2" "set_directory(FTS, Directory) -> Return")
               "CosFileTransfer_FileTransferSession:'_get_protocols_supported'/1"
               ("http://www.erlang.org/doc/man/CosFileTransfer_FileTransferSession.html#'_get_protocols_supported'-1" "'_get_protocols_supported'(FTS) -> Return")
               "CosFileTransfer_VirtualFileSystem:login/4"
               ("http://www.erlang.org/doc/man/CosFileTransfer_VirtualFileSystem.html#login-4" "login(VFS, User, Password, Account) -> Return")
               "CosFileTransfer_VirtualFileSystem:'_get_supported_content_types'/1"
               ("http://www.erlang.org/doc/man/CosFileTransfer_VirtualFileSystem.html#'_get_supported_content_types'-1" "'_get_supported_content_types'(VFS) -> Return")
               "CosFileTransfer_VirtualFileSystem:'_get_file_system_type'/1"
               ("http://www.erlang.org/doc/man/CosFileTransfer_VirtualFileSystem.html#'_get_file_system_type'-1" "'_get_file_system_type'(VFS) -> Return")
               "cosFileTransferApp:ssl_client_depth/0"
               ("http://www.erlang.org/doc/man/cosFileTransferApp.html#ssl_client_depth-0" "ssl_client_depth() ->  int()")
               "cosFileTransferApp:ssl_server_depth/0"
               ("http://www.erlang.org/doc/man/cosFileTransferApp.html#ssl_server_depth-0" "ssl_server_depth() -> int()")
               "cosFileTransferApp:ssl_client_verify/0"
               ("http://www.erlang.org/doc/man/cosFileTransferApp.html#ssl_client_verify-0" "ssl_client_verify() -> 0 | 1 | 2")
               "cosFileTransferApp:ssl_server_verify/0"
               ("http://www.erlang.org/doc/man/cosFileTransferApp.html#ssl_server_verify-0" "ssl_server_verify() -> 0 | 1 | 2")
               "cosFileTransferApp:ssl_client_certfile/0"
               ("http://www.erlang.org/doc/man/cosFileTransferApp.html#ssl_client_certfile-0" "ssl_client_certfile() -> string()")
               "cosFileTransferApp:ssl_server_certfile/0"
               ("http://www.erlang.org/doc/man/cosFileTransferApp.html#ssl_server_certfile-0" "ssl_server_certfile() -> string()")
               "cosFileTransferApp:create_VFS/4"
               ("http://www.erlang.org/doc/man/cosFileTransferApp.html#create_VFS-4" "create_VFS(Type, Content, Host, Port [,Options]) -> Return")
               "cosFileTransferApp:stop/0"
               ("http://www.erlang.org/doc/man/cosFileTransferApp.html#stop-0" "stop() -> Return")
               "cosFileTransferApp:start/0"
               ("http://www.erlang.org/doc/man/cosFileTransferApp.html#start-0" "start() -> Return")
               "cosFileTransferApp:uninstall/0"
               ("http://www.erlang.org/doc/man/cosFileTransferApp.html#uninstall-0" "uninstall() -> Return")
               "cosFileTransferApp:install/0"
               ("http://www.erlang.org/doc/man/cosFileTransferApp.html#install-0" "install() -> Return")
               "CosNaming_BindingIterator:destroy/1"
               ("http://www.erlang.org/doc/man/CosNaming_BindingIterator.html#destroy-1" "destroy(BindingIterator) -> Return")
               "CosNaming_BindingIterator:next_n/2"
               ("http://www.erlang.org/doc/man/CosNaming_BindingIterator.html#next_n-2" "next_n(BindinIterator, HowMany) -> Return")
               "CosNaming_BindingIterator:next_one/1"
               ("http://www.erlang.org/doc/man/CosNaming_BindingIterator.html#next_one-1" "next_one(BindinIterator) -> Return")
               "CosNaming_NamingContext:list/2"
               ("http://www.erlang.org/doc/man/CosNaming_NamingContext.html#list-2" "list(NamingContext, HowMany) -> Return")
               "CosNaming_NamingContext:destroy/1"
               ("http://www.erlang.org/doc/man/CosNaming_NamingContext.html#destroy-1" "destroy(NamingContext) -> Return")
               "CosNaming_NamingContext:bind_new_context/2"
               ("http://www.erlang.org/doc/man/CosNaming_NamingContext.html#bind_new_context-2" "bind_new_context(NamingContext, Name) -> Return")
               "CosNaming_NamingContext:new_context/1"
               ("http://www.erlang.org/doc/man/CosNaming_NamingContext.html#new_context-1" "new_context(NamingContext) -> Return")
               "CosNaming_NamingContext:unbind/2"
               ("http://www.erlang.org/doc/man/CosNaming_NamingContext.html#unbind-2" "unbind(NamingContext, Name) -> Return")
               "CosNaming_NamingContext:resolve/2"
               ("http://www.erlang.org/doc/man/CosNaming_NamingContext.html#resolve-2" "resolve(NamingContext, Name) -> Return")
               "CosNaming_NamingContext:rebind_context/3"
               ("http://www.erlang.org/doc/man/CosNaming_NamingContext.html#rebind_context-3" "rebind_context(NamingContext1, Name, NamingContex2) -> Return")
               "CosNaming_NamingContext:bind_context/3"
               ("http://www.erlang.org/doc/man/CosNaming_NamingContext.html#bind_context-3" "bind_context(NamingContext1, Name, NamingContex2) -> Return")
               "CosNaming_NamingContext:rebind/3"
               ("http://www.erlang.org/doc/man/CosNaming_NamingContext.html#rebind-3" "rebind(NamingContext, Name, Object) -> Return")
               "CosNaming_NamingContext:bind/3"
               ("http://www.erlang.org/doc/man/CosNaming_NamingContext.html#bind-3" "bind(NamingContext, Name, Object) -> Return")
               "CosNaming_NamingContextExt:resolve_str/2"
               ("http://www.erlang.org/doc/man/CosNaming_NamingContextExt.html#resolve_str-2" "resolve_str(NamingContext, NameString) -> Return")
               "CosNaming_NamingContextExt:to_url/3"
               ("http://www.erlang.org/doc/man/CosNaming_NamingContextExt.html#to_url-3" "to_url(NamingContext, AddressString, NameString) -> Return")
               "CosNaming_NamingContextExt:to_name/2"
               ("http://www.erlang.org/doc/man/CosNaming_NamingContextExt.html#to_name-2" "to_name(NamingContext, NameString) -> Return")
               "CosNaming_NamingContextExt:to_string/2"
               ("http://www.erlang.org/doc/man/CosNaming_NamingContextExt.html#to_string-2" "to_string(NamingContext, Name) -> Return")
               "CosNotification:'MaxSuppliers'/0"
               ("http://www.erlang.org/doc/man/CosNotification.html#'MaxSuppliers'-0" "'MaxSuppliers'() -> string()")
               "CosNotification:'MaxConsumers'/0"
               ("http://www.erlang.org/doc/man/CosNotification.html#'MaxConsumers'-0" "'MaxConsumers'() -> string()")
               "CosNotification:'MaxQueueLength'/0"
               ("http://www.erlang.org/doc/man/CosNotification.html#'MaxQueueLength'-0" "'MaxQueueLength'() -> string()")
               "CosNotification:'MaxEventsPerConsumer'/0"
               ("http://www.erlang.org/doc/man/CosNotification.html#'MaxEventsPerConsumer'-0" "'MaxEventsPerConsumer'() -> string()")
               "CosNotification:'StopTimeSupported'/0"
               ("http://www.erlang.org/doc/man/CosNotification.html#'StopTimeSupported'-0" "'StopTimeSupported'() -> string()")
               "CosNotification:'StartTimeSupported'/0"
               ("http://www.erlang.org/doc/man/CosNotification.html#'StartTimeSupported'-0" "'StartTimeSupported'() -> string()")
               "CosNotification:'PacingInterval'/0"
               ("http://www.erlang.org/doc/man/CosNotification.html#'PacingInterval'-0" "'PacingInterval'() -> string()")
               "CosNotification:'MaximumBatchSize'/0"
               ("http://www.erlang.org/doc/man/CosNotification.html#'MaximumBatchSize'-0" "'MaximumBatchSize'() -> string()")
               "CosNotification:'RejectNewEvents'/0"
               ("http://www.erlang.org/doc/man/CosNotification.html#'RejectNewEvents'-0" "'RejectNewEvents'() -> short()")
               "CosNotification:'LifoOrder'/0"
               ("http://www.erlang.org/doc/man/CosNotification.html#'LifoOrder'-0" "'LifoOrder'() -> short()")
               "CosNotification:'DiscardPolicy'/0"
               ("http://www.erlang.org/doc/man/CosNotification.html#'DiscardPolicy'-0" "'DiscardPolicy'() -> string()")
               "CosNotification:'DeadlineOrder'/0"
               ("http://www.erlang.org/doc/man/CosNotification.html#'DeadlineOrder'-0" "'DeadlineOrder'() -> short()")
               "CosNotification:'PriorityOrder'/0"
               ("http://www.erlang.org/doc/man/CosNotification.html#'PriorityOrder'-0" "'PriorityOrder'() -> short()")
               "CosNotification:'FifoOrder'/0"
               ("http://www.erlang.org/doc/man/CosNotification.html#'FifoOrder'-0" "'FifoOrder'() -> short()")
               "CosNotification:'AnyOrder'/0"
               ("http://www.erlang.org/doc/man/CosNotification.html#'AnyOrder'-0" "'AnyOrder'() -> short()")
               "CosNotification:'OrderPolicy'/0"
               ("http://www.erlang.org/doc/man/CosNotification.html#'OrderPolicy'-0" "'OrderPolicy'() -> string()")
               "CosNotification:'Timeout'/0"
               ("http://www.erlang.org/doc/man/CosNotification.html#'Timeout'-0" "'Timeout'() -> string()")
               "CosNotification:'StopTime'/0"
               ("http://www.erlang.org/doc/man/CosNotification.html#'StopTime'-0" "'StopTime'() -> string()")
               "CosNotification:'StartTime'/0"
               ("http://www.erlang.org/doc/man/CosNotification.html#'StartTime'-0" "'StartTime'() -> string()")
               "CosNotification:'DefaultPriority'/0"
               ("http://www.erlang.org/doc/man/CosNotification.html#'DefaultPriority'-0" "'DefaultPriority'() -> short()")
               "CosNotification:'HighestPriority'/0"
               ("http://www.erlang.org/doc/man/CosNotification.html#'HighestPriority'-0" "'HighestPriority'() -> short()")
               "CosNotification:'LowestPriority'/0"
               ("http://www.erlang.org/doc/man/CosNotification.html#'LowestPriority'-0" "'LowestPriority'() -> short()")
               "CosNotification:'Priority'/0"
               ("http://www.erlang.org/doc/man/CosNotification.html#'Priority'-0" "'Priority'() -> string()")
               "CosNotification:'ConnectionReliability'/0"
               ("http://www.erlang.org/doc/man/CosNotification.html#'ConnectionReliability'-0" "'ConnectionReliability'() -> string()")
               "CosNotification:'Persistent'/0"
               ("http://www.erlang.org/doc/man/CosNotification.html#'Persistent'-0" "'Persistent'() -> short()")
               "CosNotification:'BestEffort'/0"
               ("http://www.erlang.org/doc/man/CosNotification.html#'BestEffort'-0" "'BestEffort'() -> short()")
               "CosNotification:'EventReliability'/0"
               ("http://www.erlang.org/doc/man/CosNotification.html#'EventReliability'-0" "'EventReliability'() -> string()")
               "CosNotification_AdminPropertiesAdmin:set_admin/2"
               ("http://www.erlang.org/doc/man/CosNotification_AdminPropertiesAdmin.html#set_admin-2" "set_admin(Object, AdminProperties) -> Reply")
               "CosNotification_AdminPropertiesAdmin:get_admin/1"
               ("http://www.erlang.org/doc/man/CosNotification_AdminPropertiesAdmin.html#get_admin-1" "get_admin(Object) -> AdminProperties")
               "CosNotification_QoSAdmin:validate_qos/2"
               ("http://www.erlang.org/doc/man/CosNotification_QoSAdmin.html#validate_qos-2" "validate_qos(Object, QoS) -> Reply")
               "CosNotification_QoSAdmin:set_qos/2"
               ("http://www.erlang.org/doc/man/CosNotification_QoSAdmin.html#set_qos-2" "set_qos(Object, QoS) -> Reply")
               "CosNotification_QoSAdmin:get_qos/1"
               ("http://www.erlang.org/doc/man/CosNotification_QoSAdmin.html#get_qos-1" "get_qos(Object) -> Reply")
               "cosNotificationApp:type_check/0"
               ("http://www.erlang.org/doc/man/cosNotificationApp.html#type_check-0" "type_check() -> Reply")
               "cosNotificationApp:create_structured_event/6"
               ("http://www.erlang.org/doc/man/cosNotificationApp.html#create_structured_event-6" "create_structured_event(Domain, Type, Event, VariableHeader, FilterableBody, BodyRemainder) -> Reply")
               "cosNotificationApp:stop_filter_factory/1"
               ("http://www.erlang.org/doc/man/cosNotificationApp.html#stop_filter_factory-1" "stop_filter_factory(FilterFactory) -> Reply")
               "cosNotificationApp:start_filter_factory/0"
               ("http://www.erlang.org/doc/man/cosNotificationApp.html#start_filter_factory-0" "start_filter_factory() -> FilterFactory")
               "cosNotificationApp:stop_factory/1"
               ("http://www.erlang.org/doc/man/cosNotificationApp.html#stop_factory-1" "stop_factory(ChannelFactory) -> Reply")
               "cosNotificationApp:start_factory/1"
               ("http://www.erlang.org/doc/man/cosNotificationApp.html#start_factory-1" "start_factory(Options) -> ChannelFactory")
               "cosNotificationApp:start_factory/0"
               ("http://www.erlang.org/doc/man/cosNotificationApp.html#start_factory-0" "start_factory() -> ChannelFactory")
               "cosNotificationApp:start_global_factory/1"
               ("http://www.erlang.org/doc/man/cosNotificationApp.html#start_global_factory-1" "start_global_factory(Options) -> ChannelFactory")
               "cosNotificationApp:start_global_factory/0"
               ("http://www.erlang.org/doc/man/cosNotificationApp.html#start_global_factory-0" "start_global_factory() -> ChannelFactory")
               "cosNotificationApp:stop/0"
               ("http://www.erlang.org/doc/man/cosNotificationApp.html#stop-0" "stop() -> Return")
               "cosNotificationApp:start/0"
               ("http://www.erlang.org/doc/man/cosNotificationApp.html#start-0" "start() -> Return")
               "cosNotificationApp:uninstall_event/1"
               ("http://www.erlang.org/doc/man/cosNotificationApp.html#uninstall_event-1" "uninstall_event(Seconds) -> Return")
               "cosNotificationApp:uninstall_event/0"
               ("http://www.erlang.org/doc/man/cosNotificationApp.html#uninstall_event-0" "uninstall_event() -> Return")
               "cosNotificationApp:uninstall/1"
               ("http://www.erlang.org/doc/man/cosNotificationApp.html#uninstall-1" "uninstall(Seconds) -> Return")
               "cosNotificationApp:uninstall/0"
               ("http://www.erlang.org/doc/man/cosNotificationApp.html#uninstall-0" "uninstall() -> Return")
               "cosNotificationApp:install_event/1"
               ("http://www.erlang.org/doc/man/cosNotificationApp.html#install_event-1" "install_event(Seconds) -> Return")
               "cosNotificationApp:install_event/0"
               ("http://www.erlang.org/doc/man/cosNotificationApp.html#install_event-0" "install_event() -> Return")
               "cosNotificationApp:install/1"
               ("http://www.erlang.org/doc/man/cosNotificationApp.html#install-1" "install(Seconds) -> Return")
               "cosNotificationApp:install/0"
               ("http://www.erlang.org/doc/man/cosNotificationApp.html#install-0" "install() -> Return")
               "CosNotifyChannelAdmin_ConsumerAdmin:destroy/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_ConsumerAdmin.html#destroy-1" "destroy(ConsumerAdmin) -> ok")
               "CosNotifyChannelAdmin_ConsumerAdmin:obtain_push_supplier/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_ConsumerAdmin.html#obtain_push_supplier-1" "obtain_push_supplier(ConsumerAdmin) -> Proxy")
               "CosNotifyChannelAdmin_ConsumerAdmin:obtain_notification_push_supplier/2"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_ConsumerAdmin.html#obtain_notification_push_supplier-2" "obtain_notification_push_supplier(ConsumerAdmin, ConsumerType) -> Reply")
               "CosNotifyChannelAdmin_ConsumerAdmin:obtain_pull_supplier/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_ConsumerAdmin.html#obtain_pull_supplier-1" "obtain_pull_supplier(ConsumerAdmin) -> Proxy")
               "CosNotifyChannelAdmin_ConsumerAdmin:obtain_notification_pull_supplier/2"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_ConsumerAdmin.html#obtain_notification_pull_supplier-2" "obtain_notification_pull_supplier(ConsumerAdmin, ConsumerType) -> Reply")
               "CosNotifyChannelAdmin_ConsumerAdmin:get_proxy_supplier/2"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_ConsumerAdmin.html#get_proxy_supplier-2" "get_proxy_supplier(ConsumerAdmin, ProxyID) -> Reply")
               "CosNotifyChannelAdmin_ConsumerAdmin:_get_push_suppliers/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_ConsumerAdmin.html#_get_push_suppliers-1" "_get_push_suppliers(ConsumerAdmin) -> ProxyIDSeq")
               "CosNotifyChannelAdmin_ConsumerAdmin:_get_pull_suppliers/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_ConsumerAdmin.html#_get_pull_suppliers-1" "_get_pull_suppliers(ConsumerAdmin) -> ProxyIDSeq")
               "CosNotifyChannelAdmin_ConsumerAdmin:_set_lifetime_filter/2"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_ConsumerAdmin.html#_set_lifetime_filter-2" "_set_lifetime_filter(ConsumerAdmin, MappingFilter) -> ok")
               "CosNotifyChannelAdmin_ConsumerAdmin:_get_lifetime_filter/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_ConsumerAdmin.html#_get_lifetime_filter-1" "_get_lifetime_filter(ConsumerAdmin) -> MappingFilter")
               "CosNotifyChannelAdmin_ConsumerAdmin:_set_priority_filter/2"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_ConsumerAdmin.html#_set_priority_filter-2" "_set_priority_filter(ConsumerAdmin, MappingFilter) -> ok")
               "CosNotifyChannelAdmin_ConsumerAdmin:_get_priority_filter/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_ConsumerAdmin.html#_get_priority_filter-1" "_get_priority_filter(ConsumerAdmin) -> MappingFilter")
               "CosNotifyChannelAdmin_ConsumerAdmin:_get_MyOperator/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_ConsumerAdmin.html#_get_MyOperator-1" "_get_MyOperator(ConsumerAdmin) -> OpType")
               "CosNotifyChannelAdmin_ConsumerAdmin:_get_MyChannel/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_ConsumerAdmin.html#_get_MyChannel-1" "_get_MyChannel(ConsumerAdmin) -> Channel")
               "CosNotifyChannelAdmin_ConsumerAdmin:_get_MyID/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_ConsumerAdmin.html#_get_MyID-1" "_get_MyID(ConsumerAdmin) -> AdminID")
               "CosNotifyChannelAdmin_EventChannel:destroy/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_EventChannel.html#destroy-1" "destroy(Channel) -> ok")
               "CosNotifyChannelAdmin_EventChannel:get_all_supplieradmins/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_EventChannel.html#get_all_supplieradmins-1" "get_all_supplieradmins(Channel) -> Reply")
               "CosNotifyChannelAdmin_EventChannel:get_all_consumeradmins/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_EventChannel.html#get_all_consumeradmins-1" "get_all_consumeradmins(Channel) -> Reply")
               "CosNotifyChannelAdmin_EventChannel:get_supplieradmin/2"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_EventChannel.html#get_supplieradmin-2" "get_supplieradmin(Channel, AdminID) -> SupplierAdmin")
               "CosNotifyChannelAdmin_EventChannel:get_consumeradmin/2"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_EventChannel.html#get_consumeradmin-2" "get_consumeradmin(Channel, AdminID) -> ConsumerAdmin")
               "CosNotifyChannelAdmin_EventChannel:for_suppliers/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_EventChannel.html#for_suppliers-1" "for_suppliers(Channel) -> SupplierAdmin")
               "CosNotifyChannelAdmin_EventChannel:new_for_suppliers/2"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_EventChannel.html#new_for_suppliers-2" "new_for_suppliers(Channel, OpType) -> Return")
               "CosNotifyChannelAdmin_EventChannel:for_consumers/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_EventChannel.html#for_consumers-1" "for_consumers(Channel) -> ConsumerAdmin")
               "CosNotifyChannelAdmin_EventChannel:new_for_consumers/2"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_EventChannel.html#new_for_consumers-2" "new_for_consumers(Channel, OpType) -> Return")
               "CosNotifyChannelAdmin_EventChannel:_get_default_filter_factory/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_EventChannel.html#_get_default_filter_factory-1" "_get_default_filter_factory(Channel) -> FilterFactory")
               "CosNotifyChannelAdmin_EventChannel:_get_default_supplier_admin/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_EventChannel.html#_get_default_supplier_admin-1" "_get_default_supplier_admin(Channel) -> SupplierAdmin")
               "CosNotifyChannelAdmin_EventChannel:_get_default_consumer_admin/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_EventChannel.html#_get_default_consumer_admin-1" "_get_default_consumer_admin(Channel) -> ConsumerAdmin")
               "CosNotifyChannelAdmin_EventChannel:_get_MyFactory/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_EventChannel.html#_get_MyFactory-1" "_get_MyFactory(Channel) -> ChannelFactory")
               "CosNotifyChannelAdmin_EventChannelFactory:get_event_channel/2"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_EventChannelFactory.html#get_event_channel-2" "get_event_channel(ChannelFactory, ChannelID) -> Return")
               "CosNotifyChannelAdmin_EventChannelFactory:get_all_channels/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_EventChannelFactory.html#get_all_channels-1" "get_all_channels(ChannelFactory) -> ChannelIDSeq")
               "CosNotifyChannelAdmin_EventChannelFactory:create_channel/3"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_EventChannelFactory.html#create_channel-3" "create_channel(ChannelFactory, InitialQoS, InitialAdmin) -> Return")
               "CosNotifyChannelAdmin_ProxyConsumer:validate_event_qos/2"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_ProxyConsumer.html#validate_event_qos-2" "validate_event_qos(ProxyConsumer, QoSProperties) -> Reply")
               "CosNotifyChannelAdmin_ProxyConsumer:obtain_subscription_types/2"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_ProxyConsumer.html#obtain_subscription_types-2" "obtain_subscription_types(ProxyConsumer, ObtainInfoMode) -> EventTypeSeq")
               "CosNotifyChannelAdmin_ProxyConsumer:_get_MyAdmin/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_ProxyConsumer.html#_get_MyAdmin-1" "_get_MyAdmin(ProxyConsumer) -> AdminObject")
               "CosNotifyChannelAdmin_ProxyConsumer:_get_MyType/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_ProxyConsumer.html#_get_MyType-1" "_get_MyType(ProxyConsumer) -> ProxyType")
               "CosNotifyChannelAdmin_ProxyPullConsumer:disconnect_pull_consumer/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_ProxyPullConsumer.html#disconnect_pull_consumer-1" "disconnect_pull_consumer(ProxyPullConsumer) -> ok")
               "CosNotifyChannelAdmin_ProxyPullConsumer:resume_connection/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_ProxyPullConsumer.html#resume_connection-1" "resume_connection(ProxyPullConsumer) -> Reply")
               "CosNotifyChannelAdmin_ProxyPullConsumer:suspend_connection/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_ProxyPullConsumer.html#suspend_connection-1" "suspend_connection(ProxyPullConsumer) -> Reply")
               "CosNotifyChannelAdmin_ProxyPullConsumer:connect_any_pull_supplier/2"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_ProxyPullConsumer.html#connect_any_pull_supplier-2" "connect_any_pull_supplier(ProxyPullConsumer, PullSupplier) -> Reply")
               "CosNotifyChannelAdmin_ProxyPullSupplier:disconnect_pull_supplier/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_ProxyPullSupplier.html#disconnect_pull_supplier-1" "disconnect_pull_supplier(ProxyPullSupplier) -> ok")
               "CosNotifyChannelAdmin_ProxyPullSupplier:try_pull/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_ProxyPullSupplier.html#try_pull-1" "try_pull(ProxyPullSupplier) -> Reply")
               "CosNotifyChannelAdmin_ProxyPullSupplier:pull/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_ProxyPullSupplier.html#pull-1" "pull(ProxyPullSupplier) -> Reply")
               "CosNotifyChannelAdmin_ProxyPullSupplier:connect_any_pull_consumer/2"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_ProxyPullSupplier.html#connect_any_pull_consumer-2" "connect_any_pull_consumer(ProxyPullSupplier, PullConsumer) -> Reply")
               "CosNotifyChannelAdmin_ProxyPushConsumer:disconnect_push_consumer/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_ProxyPushConsumer.html#disconnect_push_consumer-1" "disconnect_push_consumer(ProxyPushConsumer) -> ok")
               "CosNotifyChannelAdmin_ProxyPushConsumer:push/2"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_ProxyPushConsumer.html#push-2" "push(ProxyPushConsumer, Event) -> Reply")
               "CosNotifyChannelAdmin_ProxyPushConsumer:connect_any_push_supplier/2"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_ProxyPushConsumer.html#connect_any_push_supplier-2" "connect_any_push_supplier(ProxyPushConsumer, PushSupplier) -> Reply")
               "CosNotifyChannelAdmin_ProxyPushSupplier:disconnect_push_supplier/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_ProxyPushSupplier.html#disconnect_push_supplier-1" "disconnect_push_supplier(ProxyPushSupplier) -> ok")
               "CosNotifyChannelAdmin_ProxyPushSupplier:resume_connection/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_ProxyPushSupplier.html#resume_connection-1" "resume_connection(ProxyPushSupplier) -> Reply")
               "CosNotifyChannelAdmin_ProxyPushSupplier:suspend_connection/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_ProxyPushSupplier.html#suspend_connection-1" "suspend_connection(ProxyPushSupplier) -> Reply")
               "CosNotifyChannelAdmin_ProxyPushSupplier:connect_any_push_consumer/2"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_ProxyPushSupplier.html#connect_any_push_consumer-2" "connect_any_push_consumer(ProxyPushSupplier, PushConsumer) -> Reply")
               "CosNotifyChannelAdmin_ProxySupplier:validate_event_qos/2"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_ProxySupplier.html#validate_event_qos-2" "validate_event_qos(ProxySupplier, QoSProperties) -> Reply")
               "CosNotifyChannelAdmin_ProxySupplier:obtain_offered_types/2"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_ProxySupplier.html#obtain_offered_types-2" "obtain_offered_types(ProxySupplier, ObtainInfoMode) -> EventTypeSeq")
               "CosNotifyChannelAdmin_ProxySupplier:_set_lifetime_filter/2"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_ProxySupplier.html#_set_lifetime_filter-2" "_set_lifetime_filter(ProxySupplier, MappingFilter) -> ok")
               "CosNotifyChannelAdmin_ProxySupplier:_get_lifetime_filter/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_ProxySupplier.html#_get_lifetime_filter-1" "_get_lifetime_filter(ProxySupplier) -> MappingFilter")
               "CosNotifyChannelAdmin_ProxySupplier:_set_priority_filter/2"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_ProxySupplier.html#_set_priority_filter-2" "_set_priority_filter(ProxySupplier, MappingFilter) -> ok")
               "CosNotifyChannelAdmin_ProxySupplier:_get_priority_filter/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_ProxySupplier.html#_get_priority_filter-1" "_get_priority_filter(ProxySupplier) -> MappingFilter")
               "CosNotifyChannelAdmin_ProxySupplier:_get_MyAdmin/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_ProxySupplier.html#_get_MyAdmin-1" "_get_MyAdmin(ProxySupplier) -> AdminObject")
               "CosNotifyChannelAdmin_ProxySupplier:_get_MyType/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_ProxySupplier.html#_get_MyType-1" "_get_MyType(ProxySupplier) -> ProxyType")
               "CosNotifyChannelAdmin_SequenceProxyPullConsumer:disconnect_sequence_pull_consumer/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_SequenceProxyPullConsumer.html#disconnect_sequence_pull_consumer-1" "disconnect_sequence_pull_consumer(SequenceProxyPullConsumer) -> ok")
               "CosNotifyChannelAdmin_SequenceProxyPullConsumer:resume_connection/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_SequenceProxyPullConsumer.html#resume_connection-1" "resume_connection(SequenceProxyPullConsumer) -> Reply")
               "CosNotifyChannelAdmin_SequenceProxyPullConsumer:suspend_connection/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_SequenceProxyPullConsumer.html#suspend_connection-1" "suspend_connection(SequenceProxyPullConsumer) -> Reply")
               "CosNotifyChannelAdmin_SequenceProxyPullConsumer:connect_sequence_pull_supplier/2"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_SequenceProxyPullConsumer.html#connect_sequence_pull_supplier-2" "connect_sequence_pull_supplier(SequenceProxyPullConsumer, PullSupplier) -> Reply")
               "CosNotifyChannelAdmin_SequenceProxyPullSupplier:disconnect_sequence_pull_supplier/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_SequenceProxyPullSupplier.html#disconnect_sequence_pull_supplier-1" "disconnect_sequence_pull_supplier(SequenceProxyPullSupplier) -> ok")
               "CosNotifyChannelAdmin_SequenceProxyPullSupplier:try_pull_structured_events/2"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_SequenceProxyPullSupplier.html#try_pull_structured_events-2" "try_pull_structured_events(SequenceProxyPullSupplier, MaxEvents) -> Reply")
               "CosNotifyChannelAdmin_SequenceProxyPullSupplier:pull_structured_events/2"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_SequenceProxyPullSupplier.html#pull_structured_events-2" "pull_structured_events(SequenceProxyPullSupplier, MaxEvents) -> Reply")
               "CosNotifyChannelAdmin_SequenceProxyPullSupplier:connect_sequence_pull_consumer/2"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_SequenceProxyPullSupplier.html#connect_sequence_pull_consumer-2" "connect_sequence_pull_consumer(SequenceProxyPullSupplier, PullConsumer) -> Reply")
               "CosNotifyChannelAdmin_SequenceProxyPushConsumer:disconnect_sequence_push_consumer/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_SequenceProxyPushConsumer.html#disconnect_sequence_push_consumer-1" "disconnect_sequence_push_consumer(SequenceProxyPushConsumer) -> ok")
               "CosNotifyChannelAdmin_SequenceProxyPushConsumer:push_structured_events/2"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_SequenceProxyPushConsumer.html#push_structured_events-2" "push_structured_events(SequenceProxyPushConsumer, EventBatch) -> Reply")
               "CosNotifyChannelAdmin_SequenceProxyPushConsumer:connect_sequence_push_supplier/2"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_SequenceProxyPushConsumer.html#connect_sequence_push_supplier-2" "connect_sequence_push_supplier(SequenceProxyPushConsumer, PushSupplier) -> Reply")
               "CosNotifyChannelAdmin_SequenceProxyPushSupplier:disconnect_sequence_push_supplier/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_SequenceProxyPushSupplier.html#disconnect_sequence_push_supplier-1" "disconnect_sequence_push_supplier(SequenceProxyPushSupplier) -> ok")
               "CosNotifyChannelAdmin_SequenceProxyPushSupplier:resume_connection/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_SequenceProxyPushSupplier.html#resume_connection-1" "resume_connection(SequenceProxyPushSupplier) -> Reply")
               "CosNotifyChannelAdmin_SequenceProxyPushSupplier:suspend_connection/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_SequenceProxyPushSupplier.html#suspend_connection-1" "suspend_connection(SequenceProxyPushSupplier) -> Reply")
               "CosNotifyChannelAdmin_SequenceProxyPushSupplier:connect_sequence_push_consumer/2"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_SequenceProxyPushSupplier.html#connect_sequence_push_consumer-2" "connect_sequence_push_consumer(SequenceProxyPushSupplier, PushConsumer) -> Reply")
               "CosNotifyChannelAdmin_StructuredProxyPullConsumer:disconnect_structured_pull_consumer/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_StructuredProxyPullConsumer.html#disconnect_structured_pull_consumer-1" "disconnect_structured_pull_consumer(StructuredProxyPullConsumer) -> ok")
               "CosNotifyChannelAdmin_StructuredProxyPullConsumer:resume_connection/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_StructuredProxyPullConsumer.html#resume_connection-1" "resume_connection(StructuredProxyPullConsumer) -> Reply")
               "CosNotifyChannelAdmin_StructuredProxyPullConsumer:suspend_connection/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_StructuredProxyPullConsumer.html#suspend_connection-1" "suspend_connection(StructuredProxyPullConsumer) -> Reply")
               "CosNotifyChannelAdmin_StructuredProxyPullConsumer:connect_structured_pull_supplier/2"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_StructuredProxyPullConsumer.html#connect_structured_pull_supplier-2" "connect_structured_pull_supplier(StructuredProxyPullConsumer, PullSupplier) -> Reply")
               "CosNotifyChannelAdmin_StructuredProxyPullSupplier:disconnect_structured_pull_supplier/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_StructuredProxyPullSupplier.html#disconnect_structured_pull_supplier-1" "disconnect_structured_pull_supplier(StructuredProxyPullSupplier) -> ok")
               "CosNotifyChannelAdmin_StructuredProxyPullSupplier:try_pull_structured_event/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_StructuredProxyPullSupplier.html#try_pull_structured_event-1" "try_pull_structured_event(StructuredProxyPullSupplier) -> Reply")
               "CosNotifyChannelAdmin_StructuredProxyPullSupplier:pull_structured_event/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_StructuredProxyPullSupplier.html#pull_structured_event-1" "pull_structured_event(StructuredProxyPullSupplier) -> Reply")
               "CosNotifyChannelAdmin_StructuredProxyPullSupplier:connect_structured_pull_consumer/2"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_StructuredProxyPullSupplier.html#connect_structured_pull_consumer-2" "connect_structured_pull_consumer(StructuredProxyPullSupplier, PullConsumer) -> Reply")
               "CosNotifyChannelAdmin_StructuredProxyPushConsumer:disconnect_structured_push_consumer/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_StructuredProxyPushConsumer.html#disconnect_structured_push_consumer-1" "disconnect_structured_push_consumer(StructuredProxyPushConsumer) -> ok")
               "CosNotifyChannelAdmin_StructuredProxyPushConsumer:push_structured_event/2"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_StructuredProxyPushConsumer.html#push_structured_event-2" "push_structured_event(StructuredProxyPushConsumer, StructuredEvent) -> Reply")
               "CosNotifyChannelAdmin_StructuredProxyPushConsumer:connect_structured_push_supplier/2"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_StructuredProxyPushConsumer.html#connect_structured_push_supplier-2" "connect_structured_push_supplier(StructuredProxyPushConsumer, PushSupplier) -> Reply")
               "CosNotifyChannelAdmin_StructuredProxyPushSupplier:disconnect_structured_push_supplier/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_StructuredProxyPushSupplier.html#disconnect_structured_push_supplier-1" "disconnect_structured_push_supplier(StructuredProxyPushSupplier) -> ok")
               "CosNotifyChannelAdmin_StructuredProxyPushSupplier:resume_connection/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_StructuredProxyPushSupplier.html#resume_connection-1" "resume_connection(StructuredProxyPushSupplier) -> Reply")
               "CosNotifyChannelAdmin_StructuredProxyPushSupplier:suspend_connection/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_StructuredProxyPushSupplier.html#suspend_connection-1" "suspend_connection(StructuredProxyPushSupplier) -> Reply")
               "CosNotifyChannelAdmin_StructuredProxyPushSupplier:connect_structured_push_consumer/2"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_StructuredProxyPushSupplier.html#connect_structured_push_consumer-2" "connect_structured_push_consumer(StructuredProxyPushSupplier, PushConsumer) -> Reply")
               "CosNotifyChannelAdmin_SupplierAdmin:destroy/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_SupplierAdmin.html#destroy-1" "destroy(SupplierAdmin) -> ok")
               "CosNotifyChannelAdmin_SupplierAdmin:obtain_push_consumer/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_SupplierAdmin.html#obtain_push_consumer-1" "obtain_push_consumer(SupplierAdmin) -> Proxy")
               "CosNotifyChannelAdmin_SupplierAdmin:obtain_notification_push_consumer/2"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_SupplierAdmin.html#obtain_notification_push_consumer-2" "obtain_notification_push_consumer(SupplierAdmin, SupplierType) -> Reply")
               "CosNotifyChannelAdmin_SupplierAdmin:obtain_pull_consumer/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_SupplierAdmin.html#obtain_pull_consumer-1" "obtain_pull_consumer(SupplierAdmin) -> Proxy")
               "CosNotifyChannelAdmin_SupplierAdmin:obtain_notification_pull_consumer/2"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_SupplierAdmin.html#obtain_notification_pull_consumer-2" "obtain_notification_pull_consumer(SupplierAdmin, SupplierType) -> Reply")
               "CosNotifyChannelAdmin_SupplierAdmin:get_proxy_consumer/2"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_SupplierAdmin.html#get_proxy_consumer-2" "get_proxy_consumer(SupplierAdmin, ProxyID) -> Reply")
               "CosNotifyChannelAdmin_SupplierAdmin:_get_push_consumers/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_SupplierAdmin.html#_get_push_consumers-1" "_get_push_consumers(SupplierAdmin) -> ProxyIDSeq")
               "CosNotifyChannelAdmin_SupplierAdmin:_get_pull_consumers/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_SupplierAdmin.html#_get_pull_consumers-1" "_get_pull_consumers(SupplierAdmin) -> ProxyIDSeq")
               "CosNotifyChannelAdmin_SupplierAdmin:_get_MyOperator/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_SupplierAdmin.html#_get_MyOperator-1" "_get_MyOperator(SupplierAdmin) -> OpType")
               "CosNotifyChannelAdmin_SupplierAdmin:_get_MyChannel/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_SupplierAdmin.html#_get_MyChannel-1" "_get_MyChannel(SupplierAdmin) -> Channel")
               "CosNotifyChannelAdmin_SupplierAdmin:_get_MyID/1"
               ("http://www.erlang.org/doc/man/CosNotifyChannelAdmin_SupplierAdmin.html#_get_MyID-1" "_get_MyID(SupplierAdmin) -> AdminID")
               "CosNotifyComm_NotifyPublish:offer_change/3"
               ("http://www.erlang.org/doc/man/CosNotifyComm_NotifyPublish.html#offer_change-3" "offer_change(Object, Added, Removed) -> Reply")
               "CosNotifyComm_NotifySubscribe:subscription_change/3"
               ("http://www.erlang.org/doc/man/CosNotifyComm_NotifySubscribe.html#subscription_change-3" "subscription_change(Object, Added, Removed) -> Reply")
               "CosNotifyFilter_Filter:get_callbacks/1"
               ("http://www.erlang.org/doc/man/CosNotifyFilter_Filter.html#get_callbacks-1" "get_callbacks(Filter) -> CallbackIDSeq")
               "CosNotifyFilter_Filter:detach_callback/2"
               ("http://www.erlang.org/doc/man/CosNotifyFilter_Filter.html#detach_callback-2" "detach_callback(Filter, CallbackID) -> Reply")
               "CosNotifyFilter_Filter:attach_callback/2"
               ("http://www.erlang.org/doc/man/CosNotifyFilter_Filter.html#attach_callback-2" "attach_callback(Filter, NotifySubscribe) -> CallbackID")
               "CosNotifyFilter_Filter:match_structured/2"
               ("http://www.erlang.org/doc/man/CosNotifyFilter_Filter.html#match_structured-2" "match_structured(Filter, Event) -> Reply")
               "CosNotifyFilter_Filter:match/2"
               ("http://www.erlang.org/doc/man/CosNotifyFilter_Filter.html#match-2" "match(Filter, Event) -> Reply")
               "CosNotifyFilter_Filter:destroy/1"
               ("http://www.erlang.org/doc/man/CosNotifyFilter_Filter.html#destroy-1" "destroy(Filter) -> ok")
               "CosNotifyFilter_Filter:remove_all_constraints/1"
               ("http://www.erlang.org/doc/man/CosNotifyFilter_Filter.html#remove_all_constraints-1" "remove_all_constraints(Filter) -> ok")
               "CosNotifyFilter_Filter:get_all_constraints/1"
               ("http://www.erlang.org/doc/man/CosNotifyFilter_Filter.html#get_all_constraints-1" "get_all_constraints(Filter) -> ConstraintInfoSeq")
               "CosNotifyFilter_Filter:get_constraints/2"
               ("http://www.erlang.org/doc/man/CosNotifyFilter_Filter.html#get_constraints-2" "get_constraints(Filter, ConstraintIDSeq) -> Reply")
               "CosNotifyFilter_Filter:modify_constraints/3"
               ("http://www.erlang.org/doc/man/CosNotifyFilter_Filter.html#modify_constraints-3" "modify_constraints(Filter, ConstraintIDSeq, ConstraintInfoSeq) -> Reply")
               "CosNotifyFilter_Filter:add_constraints/2"
               ("http://www.erlang.org/doc/man/CosNotifyFilter_Filter.html#add_constraints-2" "add_constraints(Filter, ConstraintExpSeq) -> Reply")
               "CosNotifyFilter_Filter:_get_constraint_grammar/1"
               ("http://www.erlang.org/doc/man/CosNotifyFilter_Filter.html#_get_constraint_grammar-1" "_get_constraint_grammar(Filter) -> Grammar")
               "CosNotifyFilter_FilterAdmin:remove_all_filters/1"
               ("http://www.erlang.org/doc/man/CosNotifyFilter_FilterAdmin.html#remove_all_filters-1" "remove_all_filters(Object) -> ok")
               "CosNotifyFilter_FilterAdmin:get_all_filters/1"
               ("http://www.erlang.org/doc/man/CosNotifyFilter_FilterAdmin.html#get_all_filters-1" "get_all_filters(Object) -> FilterIDSeq")
               "CosNotifyFilter_FilterAdmin:get_filter/2"
               ("http://www.erlang.org/doc/man/CosNotifyFilter_FilterAdmin.html#get_filter-2" "get_filter(Object, FilterID) -> Reply")
               "CosNotifyFilter_FilterAdmin:remove_filter/2"
               ("http://www.erlang.org/doc/man/CosNotifyFilter_FilterAdmin.html#remove_filter-2" "remove_filter(Object, FilterID) -> ok")
               "CosNotifyFilter_FilterAdmin:add_filter/2"
               ("http://www.erlang.org/doc/man/CosNotifyFilter_FilterAdmin.html#add_filter-2" "add_filter(Object, Filter) -> FilterID")
               "CosNotifyFilter_FilterFactory:create_mapping_filter/2"
               ("http://www.erlang.org/doc/man/CosNotifyFilter_FilterFactory.html#create_mapping_filter-2" "create_mapping_filter(FilterFactory, Grammar) -> Reply")
               "CosNotifyFilter_FilterFactory:create_filter/2"
               ("http://www.erlang.org/doc/man/CosNotifyFilter_FilterFactory.html#create_filter-2" "create_filter(FilterFactory, Grammar) -> Reply")
               "CosNotifyFilter_MappingFilter:match_structured/2"
               ("http://www.erlang.org/doc/man/CosNotifyFilter_MappingFilter.html#match_structured-2" "match_structured(MappingFilter, Event) -> Reply")
               "CosNotifyFilter_MappingFilter:match/2"
               ("http://www.erlang.org/doc/man/CosNotifyFilter_MappingFilter.html#match-2" "match(MappingFilter, Event) -> Reply")
               "CosNotifyFilter_MappingFilter:destroy/1"
               ("http://www.erlang.org/doc/man/CosNotifyFilter_MappingFilter.html#destroy-1" "destroy(MappingFilter) -> ok")
               "CosNotifyFilter_MappingFilter:remove_all_mapping_constraints/1"
               ("http://www.erlang.org/doc/man/CosNotifyFilter_MappingFilter.html#remove_all_mapping_constraints-1" "remove_all_mapping_constraints(MappingFilter) -> ok")
               "CosNotifyFilter_MappingFilter:get_all_mapping_constraints/1"
               ("http://www.erlang.org/doc/man/CosNotifyFilter_MappingFilter.html#get_all_mapping_constraints-1" "get_all_mapping_constraints(MappingFilter) -> MappingConstraintInfoSeq")
               "CosNotifyFilter_MappingFilter:get_mapping_constraints/2"
               ("http://www.erlang.org/doc/man/CosNotifyFilter_MappingFilter.html#get_mapping_constraints-2" "get_mapping_constraints(MappingFilter, ConstraintIDSeq) -> Reply")
               "CosNotifyFilter_MappingFilter:modify_constraints/3"
               ("http://www.erlang.org/doc/man/CosNotifyFilter_MappingFilter.html#modify_constraints-3" "modify_constraints(MappingFilter, ConstraintIDSeq, MappingConstraintInfoSeq) -> Reply")
               "CosNotifyFilter_MappingFilter:add_mapping_constraints/2"
               ("http://www.erlang.org/doc/man/CosNotifyFilter_MappingFilter.html#add_mapping_constraints-2" "add_mapping_constraints(MappingFilter, MappingConstraintPairSeq) -> Reply")
               "CosNotifyFilter_MappingFilter:_get_default_value/1"
               ("http://www.erlang.org/doc/man/CosNotifyFilter_MappingFilter.html#_get_default_value-1" "_get_default_value(MappingFilter) -> #any")
               "CosNotifyFilter_MappingFilter:_get_value_type/1"
               ("http://www.erlang.org/doc/man/CosNotifyFilter_MappingFilter.html#_get_value_type-1" "_get_value_type(MappingFilter) -> CORBA::TypeCode")
               "CosNotifyFilter_MappingFilter:_get_constraint_grammar/1"
               ("http://www.erlang.org/doc/man/CosNotifyFilter_MappingFilter.html#_get_constraint_grammar-1" "_get_constraint_grammar(MappingFilter) -> Grammar")
               "cosProperty:stop/0"
               ("http://www.erlang.org/doc/man/cosProperty.html#stop-0" "stop() -> Return")
               "cosProperty:stop_SetFactory/1"
               ("http://www.erlang.org/doc/man/cosProperty.html#stop_SetFactory-1" "stop_SetFactory(Factory) -> Return")
               "cosProperty:stop_SetDefFactory/1"
               ("http://www.erlang.org/doc/man/cosProperty.html#stop_SetDefFactory-1" "stop_SetDefFactory(Factory) -> Return")
               "cosProperty:start_SetFactory/0"
               ("http://www.erlang.org/doc/man/cosProperty.html#start_SetFactory-0" "start_SetFactory() -> Return")
               "cosProperty:start_SetDefFactory/0"
               ("http://www.erlang.org/doc/man/cosProperty.html#start_SetDefFactory-0" "start_SetDefFactory() -> Return")
               "cosProperty:start/0"
               ("http://www.erlang.org/doc/man/cosProperty.html#start-0" "start() -> Return")
               "cosProperty:uninstall_db/0"
               ("http://www.erlang.org/doc/man/cosProperty.html#uninstall_db-0" "uninstall_db() -> Return")
               "cosProperty:uninstall/0"
               ("http://www.erlang.org/doc/man/cosProperty.html#uninstall-0" "uninstall() -> Return")
               "cosProperty:install_db/0"
               ("http://www.erlang.org/doc/man/cosProperty.html#install_db-0" "install_db() -> Return")
               "cosProperty:install/0"
               ("http://www.erlang.org/doc/man/cosProperty.html#install-0" "install() -> Return")
               "CosPropertyService_PropertiesIterator:destroy/1"
               ("http://www.erlang.org/doc/man/CosPropertyService_PropertiesIterator.html#destroy-1" "destroy(Iterator) -> ok")
               "CosPropertyService_PropertiesIterator:next_n/2"
               ("http://www.erlang.org/doc/man/CosPropertyService_PropertiesIterator.html#next_n-2" "next_n(Iterator, HowMany) -> Reply")
               "CosPropertyService_PropertiesIterator:next_one/1"
               ("http://www.erlang.org/doc/man/CosPropertyService_PropertiesIterator.html#next_one-1" "next_one(Iterator) -> Reply")
               "CosPropertyService_PropertiesIterator:reset/1"
               ("http://www.erlang.org/doc/man/CosPropertyService_PropertiesIterator.html#reset-1" "reset(Iterator) -> ok")
               "CosPropertyService_PropertyNamesIterator:destroy/1"
               ("http://www.erlang.org/doc/man/CosPropertyService_PropertyNamesIterator.html#destroy-1" "destroy(Iterator) -> ok")
               "CosPropertyService_PropertyNamesIterator:next_n/2"
               ("http://www.erlang.org/doc/man/CosPropertyService_PropertyNamesIterator.html#next_n-2" "next_n(Iterator, HowMany) -> Reply")
               "CosPropertyService_PropertyNamesIterator:next_one/1"
               ("http://www.erlang.org/doc/man/CosPropertyService_PropertyNamesIterator.html#next_one-1" "next_one(Iterator) -> Reply")
               "CosPropertyService_PropertyNamesIterator:reset/1"
               ("http://www.erlang.org/doc/man/CosPropertyService_PropertyNamesIterator.html#reset-1" "reset(Iterator) -> ok")
               "CosPropertyService_PropertySet:is_property_defined/2"
               ("http://www.erlang.org/doc/man/CosPropertyService_PropertySet.html#is_property_defined-2" "is_property_defined(PropertySet, Name) -> Reply")
               "CosPropertyService_PropertySet:delete_all_properties/1"
               ("http://www.erlang.org/doc/man/CosPropertyService_PropertySet.html#delete_all_properties-1" "delete_all_properties(PropertySet) -> boolean()")
               "CosPropertyService_PropertySet:delete_properties/2"
               ("http://www.erlang.org/doc/man/CosPropertyService_PropertySet.html#delete_properties-2" "delete_properties(PropertySet, Names) -> Reply")
               "CosPropertyService_PropertySet:delete_property/2"
               ("http://www.erlang.org/doc/man/CosPropertyService_PropertySet.html#delete_property-2" "delete_property(PropertySet, Name) -> Reply")
               "CosPropertyService_PropertySet:get_all_properties/2"
               ("http://www.erlang.org/doc/man/CosPropertyService_PropertySet.html#get_all_properties-2" "get_all_properties(PropertySet, Max) -> Reply")
               "CosPropertyService_PropertySet:get_properties/2"
               ("http://www.erlang.org/doc/man/CosPropertyService_PropertySet.html#get_properties-2" "get_properties(PropertySet, Names) -> Reply")
               "CosPropertyService_PropertySet:get_property_value/2"
               ("http://www.erlang.org/doc/man/CosPropertyService_PropertySet.html#get_property_value-2" "get_property_value(PropertySet, Name) -> Reply")
               "CosPropertyService_PropertySet:get_all_property_names/2"
               ("http://www.erlang.org/doc/man/CosPropertyService_PropertySet.html#get_all_property_names-2" "get_all_property_names(PropertySet, Max) -> Reply")
               "CosPropertyService_PropertySet:get_number_of_properties/1"
               ("http://www.erlang.org/doc/man/CosPropertyService_PropertySet.html#get_number_of_properties-1" "get_number_of_properties(PropertySet) -> ulong()")
               "CosPropertyService_PropertySet:define_properties/2"
               ("http://www.erlang.org/doc/man/CosPropertyService_PropertySet.html#define_properties-2" "define_properties(PropertySet, Properties) -> Reply")
               "CosPropertyService_PropertySet:define_property/3"
               ("http://www.erlang.org/doc/man/CosPropertyService_PropertySet.html#define_property-3" "define_property(PropertySet, Name, Value) -> Reply")
               "CosPropertyService_PropertySetDef:set_property_modes/2"
               ("http://www.erlang.org/doc/man/CosPropertyService_PropertySetDef.html#set_property_modes-2" "set_property_modes(PropertySetDef, PropertyModes) -> Reply")
               "CosPropertyService_PropertySetDef:set_property_mode/3"
               ("http://www.erlang.org/doc/man/CosPropertyService_PropertySetDef.html#set_property_mode-3" "set_property_mode(PropertySetDef, Name, Mode) -> Reply")
               "CosPropertyService_PropertySetDef:get_property_modes/2"
               ("http://www.erlang.org/doc/man/CosPropertyService_PropertySetDef.html#get_property_modes-2" "get_property_modes(PropertySetDef, Names) -> Reply")
               "CosPropertyService_PropertySetDef:get_property_mode/2"
               ("http://www.erlang.org/doc/man/CosPropertyService_PropertySetDef.html#get_property_mode-2" "get_property_mode(PropertySetDef, Name) -> Reply")
               "CosPropertyService_PropertySetDef:define_properties_with_modes/2"
               ("http://www.erlang.org/doc/man/CosPropertyService_PropertySetDef.html#define_properties_with_modes-2" "define_properties_with_modes(PropertySetDef, PropertyDefs) -> Reply")
               "CosPropertyService_PropertySetDef:define_property_with_mode/4"
               ("http://www.erlang.org/doc/man/CosPropertyService_PropertySetDef.html#define_property_with_mode-4" "define_property_with_mode(PropertySetDef, Name, Value, Mode) -> Reply")
               "CosPropertyService_PropertySetDef:get_allowed_properties/1"
               ("http://www.erlang.org/doc/man/CosPropertyService_PropertySetDef.html#get_allowed_properties-1" "get_allowed_properties(PropertySetDef) -> Reply")
               "CosPropertyService_PropertySetDef:get_allowed_property_types/1"
               ("http://www.erlang.org/doc/man/CosPropertyService_PropertySetDef.html#get_allowed_property_types-1" "get_allowed_property_types(PropertySetDef) -> Reply")
               "CosPropertyService_PropertySetDefFactory:create_initial_propertysetdef/2"
               ("http://www.erlang.org/doc/man/CosPropertyService_PropertySetDefFactory.html#create_initial_propertysetdef-2" "create_initial_propertysetdef(Factory, PropertyDefs) -> Reply")
               "CosPropertyService_PropertySetDefFactory:create_constrained_propertysetdef/3"
               ("http://www.erlang.org/doc/man/CosPropertyService_PropertySetDefFactory.html#create_constrained_propertysetdef-3" "create_constrained_propertysetdef(Factory, PropertyTypes, PropertyDefs) -> Reply")
               "CosPropertyService_PropertySetDefFactory:create_propertysetdef/1"
               ("http://www.erlang.org/doc/man/CosPropertyService_PropertySetDefFactory.html#create_propertysetdef-1" "create_propertysetdef(Factory) ->")
               "CosPropertyService_PropertySetFactory:create_initial_propertyset/2"
               ("http://www.erlang.org/doc/man/CosPropertyService_PropertySetFactory.html#create_initial_propertyset-2" "create_initial_propertyset(Factory, Properties) -> Reply")
               "CosPropertyService_PropertySetFactory:create_constrained_propertyset/3"
               ("http://www.erlang.org/doc/man/CosPropertyService_PropertySetFactory.html#create_constrained_propertyset-3" "create_constrained_propertyset(Factory, PropertyTypes, Properties) -> Reply")
               "CosPropertyService_PropertySetFactory:create_propertyset/1"
               ("http://www.erlang.org/doc/man/CosPropertyService_PropertySetFactory.html#create_propertyset-1" "create_propertyset(Factory) -> PropertySet")
               "cosTime:stop_timerevent_service/1"
               ("http://www.erlang.org/doc/man/cosTime.html#stop_timerevent_service-1" "stop_timerevent_service(TimerEventService) -> ok")
               "cosTime:start_timerevent_service/1"
               ("http://www.erlang.org/doc/man/cosTime.html#start_timerevent_service-1" "start_timerevent_service(TimeService) -> ok")
               "cosTime:stop_time_service/1"
               ("http://www.erlang.org/doc/man/cosTime.html#stop_time_service-1" "stop_time_service(TimeService) -> ok")
               "cosTime:start_time_service/2"
               ("http://www.erlang.org/doc/man/cosTime.html#start_time_service-2" "start_time_service(Tdf, Inaccuracy) -> Return")
               "cosTime:stop/0"
               ("http://www.erlang.org/doc/man/cosTime.html#stop-0" "stop() -> Return")
               "cosTime:start/0"
               ("http://www.erlang.org/doc/man/cosTime.html#start-0" "start() -> Return")
               "cosTime:uninstall_timerevent/0"
               ("http://www.erlang.org/doc/man/cosTime.html#uninstall_timerevent-0" "uninstall_timerevent() -> Return")
               "cosTime:install_timerevent/0"
               ("http://www.erlang.org/doc/man/cosTime.html#install_timerevent-0" "install_timerevent() -> Return")
               "cosTime:uninstall_time/0"
               ("http://www.erlang.org/doc/man/cosTime.html#uninstall_time-0" "uninstall_time() -> Return")
               "cosTime:install_time/0"
               ("http://www.erlang.org/doc/man/cosTime.html#install_time-0" "install_time() -> Return")
               "CosTime_TimeService:new_interval/3"
               ("http://www.erlang.org/doc/man/CosTime_TimeService.html#new_interval-3" "new_interval(TimeService, Lower, Upper) -> TIO")
               "CosTime_TimeService:uto_from_utc/2"
               ("http://www.erlang.org/doc/man/CosTime_TimeService.html#uto_from_utc-2" "uto_from_utc(TimeService, Utc) -> UTO")
               "CosTime_TimeService:new_universal_time/4"
               ("http://www.erlang.org/doc/man/CosTime_TimeService.html#new_universal_time-4" "new_universal_time(TimeService, Time, Inaccuracy, Tdf) -> UTO")
               "CosTime_TimeService:universal_time/1"
               ("http://www.erlang.org/doc/man/CosTime_TimeService.html#universal_time-1" "universal_time(TimeService) -> Reply")
               "CosTime_TIO:time/1"
               ("http://www.erlang.org/doc/man/CosTime_TIO.html#time-1" "time(TIO) -> UTO")
               "CosTime_TIO:overlaps/2"
               ("http://www.erlang.org/doc/man/CosTime_TIO.html#overlaps-2" "overlaps(TIO, OtherTIO) -> Reply")
               "CosTime_TIO:spans/2"
               ("http://www.erlang.org/doc/man/CosTime_TIO.html#spans-2" "spans(TIO, UTO) -> Reply")
               "CosTime_TIO:'_get_time_interval'/1"
               ("http://www.erlang.org/doc/man/CosTime_TIO.html#'_get_time_interval'-1" "'_get_time_interval'(TIO) -> TimeInterval")
               "CosTime_UTO:interval/1"
               ("http://www.erlang.org/doc/man/CosTime_UTO.html#interval-1" "interval(UTO) -> TIO")
               "CosTime_UTO:time_to_interval/2"
               ("http://www.erlang.org/doc/man/CosTime_UTO.html#time_to_interval-2" "time_to_interval(UTO, OtherUTO) -> TIO")
               "CosTime_UTO:compare_time/3"
               ("http://www.erlang.org/doc/man/CosTime_UTO.html#compare_time-3" "compare_time(UTO, ComparisonType, OtherUTO) -> Reply")
               "CosTime_UTO:absolute_time/1"
               ("http://www.erlang.org/doc/man/CosTime_UTO.html#absolute_time-1" "absolute_time(UTO) -> OtherUTO")
               "CosTime_UTO:'_get_utc_time'/1"
               ("http://www.erlang.org/doc/man/CosTime_UTO.html#'_get_utc_time'-1" "'_get_utc_time'(UTO) -> UtcT")
               "CosTime_UTO:'_get_tdf'/1"
               ("http://www.erlang.org/doc/man/CosTime_UTO.html#'_get_tdf'-1" "'_get_tdf'(UTO) -> short()")
               "CosTime_UTO:'_get_inaccuracy'/1"
               ("http://www.erlang.org/doc/man/CosTime_UTO.html#'_get_inaccuracy'-1" "'_get_inaccuracy'(UTO) -> ulonglong()")
               "CosTime_UTO:'_get_time'/1"
               ("http://www.erlang.org/doc/man/CosTime_UTO.html#'_get_time'-1" "'_get_time'(UTO) -> ulonglong()")
               "CosTimerEvent_TimerEventHandler:set_data/2"
               ("http://www.erlang.org/doc/man/CosTimerEvent_TimerEventHandler.html#set_data-2" "set_data(TimerEventHandler, EventData) -> ok")
               "CosTimerEvent_TimerEventHandler:cancel_timer/1"
               ("http://www.erlang.org/doc/man/CosTimerEvent_TimerEventHandler.html#cancel_timer-1" "cancel_timer(TimerEventHandler) -> boolean()")
               "CosTimerEvent_TimerEventHandler:set_timer/3"
               ("http://www.erlang.org/doc/man/CosTimerEvent_TimerEventHandler.html#set_timer-3" "set_timer(TimerEventHandler, TimeType, TriggerTime) -> void()")
               "CosTimerEvent_TimerEventHandler:time_set/1"
               ("http://www.erlang.org/doc/man/CosTimerEvent_TimerEventHandler.html#time_set-1" "time_set(TimerEventHandler) -> Reply")
               "CosTimerEvent_TimerEventHandler:'_get_status'/1"
               ("http://www.erlang.org/doc/man/CosTimerEvent_TimerEventHandler.html#'_get_status'-1" "'_get_status'(TimerEventHandler) -> Reply")
               "CosTimerEvent_TimerEventService:event_time/2"
               ("http://www.erlang.org/doc/man/CosTimerEvent_TimerEventService.html#event_time-2" "event_time(TimerEventService, TimerEvent) -> UTO")
               "CosTimerEvent_TimerEventService:unregister/2"
               ("http://www.erlang.org/doc/man/CosTimerEvent_TimerEventService.html#unregister-2" "unregister(TimerEventService, TimerEventHandler) -> ok")
               "CosTimerEvent_TimerEventService:register/3"
               ("http://www.erlang.org/doc/man/CosTimerEvent_TimerEventService.html#register-3" "register(TimerEventService, CosEventCommPushConsumer, Data) -> TimerEventHandler")
               "cosTransactions:stop_factory/1"
               ("http://www.erlang.org/doc/man/cosTransactions.html#stop_factory-1" "stop_factory(TransactionFactory) -> Reply")
               "cosTransactions:start_factory/1"
               ("http://www.erlang.org/doc/man/cosTransactions.html#start_factory-1" "start_factory(FacDef) -> TransactionFactory")
               "cosTransactions:start_factory/0"
               ("http://www.erlang.org/doc/man/cosTransactions.html#start_factory-0" "start_factory() -> TransactionFactory")
               "cosTransactions:stop/0"
               ("http://www.erlang.org/doc/man/cosTransactions.html#stop-0" "stop() -> Return")
               "cosTransactions:start/0"
               ("http://www.erlang.org/doc/man/cosTransactions.html#start-0" "start() -> Return")
               "CosTransactions_Control:get_terminator/1"
               ("http://www.erlang.org/doc/man/CosTransactions_Control.html#get_terminator-1" "get_terminator(Control) -> Return")
               "CosTransactions_Control:get_coordinator/1"
               ("http://www.erlang.org/doc/man/CosTransactions_Control.html#get_coordinator-1" "get_coordinator(Control) -> Return")
               "CosTransactions_Coordinator:rollback_only/1"
               ("http://www.erlang.org/doc/man/CosTransactions_Coordinator.html#rollback_only-1" "rollback_only(Coordinator) -> Return")
               "CosTransactions_Coordinator:register_subtran_aware/2"
               ("http://www.erlang.org/doc/man/CosTransactions_Coordinator.html#register_subtran_aware-2" "register_subtran_aware(Coordinator, SubtransactionAwareResource) -> Return")
               "CosTransactions_Coordinator:register_resource/2"
               ("http://www.erlang.org/doc/man/CosTransactions_Coordinator.html#register_resource-2" "register_resource(Coordinator, Resource) -> RecoveryCoordinator")
               "CosTransactions_Coordinator:is_top_level_transaction/1"
               ("http://www.erlang.org/doc/man/CosTransactions_Coordinator.html#is_top_level_transaction-1" "is_top_level_transaction(Coordinator) -> Return")
               "CosTransactions_Coordinator:is_same_transaction/2"
               ("http://www.erlang.org/doc/man/CosTransactions_Coordinator.html#is_same_transaction-2" "is_same_transaction(Coordinator, OtherCoordinator) -> Return")
               "CosTransactions_Coordinator:is_descendant_transaction/2"
               ("http://www.erlang.org/doc/man/CosTransactions_Coordinator.html#is_descendant_transaction-2" "is_descendant_transaction(Coordinator, OtherCoordinator) -> Return")
               "CosTransactions_Coordinator:hash_transaction/1"
               ("http://www.erlang.org/doc/man/CosTransactions_Coordinator.html#hash_transaction-1" "hash_transaction(Coordinator) -> Return")
               "CosTransactions_Coordinator:hash_top_level_tran/1"
               ("http://www.erlang.org/doc/man/CosTransactions_Coordinator.html#hash_top_level_tran-1" "hash_top_level_tran(Coordinator) -> Return")
               "CosTransactions_Coordinator:get_top_level_status/1"
               ("http://www.erlang.org/doc/man/CosTransactions_Coordinator.html#get_top_level_status-1" "get_top_level_status(Coordinator) -> Status")
               "CosTransactions_Coordinator:get_status/1"
               ("http://www.erlang.org/doc/man/CosTransactions_Coordinator.html#get_status-1" "get_status(Coordinator) -> Status")
               "CosTransactions_Coordinator:get_parent_status/1"
               ("http://www.erlang.org/doc/man/CosTransactions_Coordinator.html#get_parent_status-1" "get_parent_status(Coordinator) -> Status")
               "CosTransactions_Coordinator:get_transaction_name/1"
               ("http://www.erlang.org/doc/man/CosTransactions_Coordinator.html#get_transaction_name-1" "get_transaction_name(Coordinator) -> Name")
               "CosTransactions_Coordinator:create_subtransaction/1"
               ("http://www.erlang.org/doc/man/CosTransactions_Coordinator.html#create_subtransaction-1" "create_subtransaction(Coordinator) -> Control")
               "CosTransactions_RecoveryCoordinator:replay_completion/3"
               ("http://www.erlang.org/doc/man/CosTransactions_RecoveryCoordinator.html#replay_completion-3" "replay_completion(RecoveryCoordinator, Timeout, Resource) -> Return")
               "CosTransactions_Resource:rollback/1"
               ("http://www.erlang.org/doc/man/CosTransactions_Resource.html#rollback-1" "rollback(Resource) -> Return")
               "CosTransactions_Resource:prepare/1"
               ("http://www.erlang.org/doc/man/CosTransactions_Resource.html#prepare-1" "prepare(Resource) -> Return")
               "CosTransactions_Resource:forget/1"
               ("http://www.erlang.org/doc/man/CosTransactions_Resource.html#forget-1" "forget(Resource) -> Return")
               "CosTransactions_Resource:commit_one_phase/1"
               ("http://www.erlang.org/doc/man/CosTransactions_Resource.html#commit_one_phase-1" "commit_one_phase(Resource) -> Return")
               "CosTransactions_Resource:commit/1"
               ("http://www.erlang.org/doc/man/CosTransactions_Resource.html#commit-1" "commit(Resource) -> Return")
               "CosTransactions_SubtransactionAwareResource:rollback_subtransaction/1"
               ("http://www.erlang.org/doc/man/CosTransactions_SubtransactionAwareResource.html#rollback_subtransaction-1" "rollback_subtransaction(SubtransactionAwareResource) -> Return")
               "CosTransactions_SubtransactionAwareResource:commit_subtransaction/2"
               ("http://www.erlang.org/doc/man/CosTransactions_SubtransactionAwareResource.html#commit_subtransaction-2" "commit_subtransaction(SubtransactionAwareResource, Coordinator) -> Return")
               "CosTransactions_Terminator:rollback/1"
               ("http://www.erlang.org/doc/man/CosTransactions_Terminator.html#rollback-1" "rollback(Terminator) -> Return")
               "CosTransactions_Terminator:commit/2"
               ("http://www.erlang.org/doc/man/CosTransactions_Terminator.html#commit-2" "commit(Terminator, ReportHeuristics) -> Return")
               "CosTransactions_TransactionFactory:create/2"
               ("http://www.erlang.org/doc/man/CosTransactions_TransactionFactory.html#create-2" "create(TransactionFactory, Timeout) -> Control")
               "cover:flush/1"
               ("http://www.erlang.org/doc/man/cover.html#flush-1" "flush(Nodes) -> ok | {error,not_main_node}")
               "cover:stop/1"
               ("http://www.erlang.org/doc/man/cover.html#stop-1" "stop(Nodes) -> ok | {error,not_main_node}")
               "cover:stop/0"
               ("http://www.erlang.org/doc/man/cover.html#stop-0" "stop() -> ok | {error,not_main_node}")
               "cover:import/1"
               ("http://www.erlang.org/doc/man/cover.html#import-1" "import(ExportFile) -> ok | {error,Reason}")
               "cover:export/2"
               ("http://www.erlang.org/doc/man/cover.html#export-2" "export(ExportFile,Module) -> ok | {error,Reason}")
               "cover:export/1"
               ("http://www.erlang.org/doc/man/cover.html#export-1" "export(ExportFile)")
               "cover:reset/0"
               ("http://www.erlang.org/doc/man/cover.html#reset-0" "reset() ->  ok | {error,not_main_node}")
               "cover:reset/1"
               ("http://www.erlang.org/doc/man/cover.html#reset-1" "reset(Module) ->")
               "cover:is_compiled/1"
               ("http://www.erlang.org/doc/man/cover.html#is_compiled-1" "is_compiled(Module) -> {file,File} | false |  {error,not_main_node}")
               "cover:which_nodes/0"
               ("http://www.erlang.org/doc/man/cover.html#which_nodes-0" "which_nodes() -> [Node] | {error,not_main_node}")
               "cover:imported/0"
               ("http://www.erlang.org/doc/man/cover.html#imported-0" "imported() -> [File] | {error,not_main_node}")
               "cover:imported_modules/0"
               ("http://www.erlang.org/doc/man/cover.html#imported_modules-0" "imported_modules() -> [Module] | {error,not_main_node}")
               "cover:modules/0"
               ("http://www.erlang.org/doc/man/cover.html#modules-0" "modules() -> [Module] | {error,not_main_node}")
               "cover:async_analyse_to_file/3"
               ("http://www.erlang.org/doc/man/cover.html#async_analyse_to_file-3" "async_analyse_to_file(Module, OutFile, Options) ->  pid()")
               "cover:async_analyse_to_file/2"
               ("http://www.erlang.org/doc/man/cover.html#async_analyse_to_file-2" "async_analyse_to_file(Module,Options) ->")
               "cover:async_analyse_to_file/1"
               ("http://www.erlang.org/doc/man/cover.html#async_analyse_to_file-1" "async_analyse_to_file(Module) ->")
               "cover:analyse_to_file/2"
               ("http://www.erlang.org/doc/man/cover.html#analyse_to_file-2" "analyse_to_file(Modules,Options) -> Answer | {result,Ok,Fail} | {error,not_main_node}")
               "cover:analyse_to_file/1"
               ("http://www.erlang.org/doc/man/cover.html#analyse_to_file-1" "analyse_to_file(Modules) ->  Answer | {result,Ok,Fail} | {error,not_main_node}")
               "cover:analyse_to_file/0"
               ("http://www.erlang.org/doc/man/cover.html#analyse_to_file-0" "analyse_to_file() -> {result,Ok,Fail} | {error,not_main_node}")
               "cover:analyse/3"
               ("http://www.erlang.org/doc/man/cover.html#analyse-3" "analyse(Modules, Analysis, Level) -> OneResult | {result,Ok,Fail} | {error,not_main_node}")
               "cover:analyse/2"
               ("http://www.erlang.org/doc/man/cover.html#analyse-2" "analyse(Modules, Analysis) -> OneResult | {result,Ok,Fail} | {error,not_main_node}")
               "cover:analyse/1"
               ("http://www.erlang.org/doc/man/cover.html#analyse-1" "analyse(Modules) -> OneResult | {result,Ok,Fail} | {error,not_main_node}")
               "cover:analyse/0"
               ("http://www.erlang.org/doc/man/cover.html#analyse-0" "analyse() -> {result,Ok,Fail} | {error,not_main_node}")
               "cover:compile_beam_directory/1"
               ("http://www.erlang.org/doc/man/cover.html#compile_beam_directory-1" "compile_beam_directory(Dir) -> [Result] | {error,Reason}")
               "cover:compile_beam_directory/0"
               ("http://www.erlang.org/doc/man/cover.html#compile_beam_directory-0" "compile_beam_directory() -> [Result] | {error,Reason}")
               "cover:compile_beam/1"
               ("http://www.erlang.org/doc/man/cover.html#compile_beam-1" "compile_beam(ModFiles) -> Result | [Result]")
               "cover:compile_directory/2"
               ("http://www.erlang.org/doc/man/cover.html#compile_directory-2" "compile_directory(Dir, Options) -> [Result] | {error,Reason}")
               "cover:compile_directory/1"
               ("http://www.erlang.org/doc/man/cover.html#compile_directory-1" "compile_directory(Dir) -> [Result] | {error,Reason}")
               "cover:compile_directory/0"
               ("http://www.erlang.org/doc/man/cover.html#compile_directory-0" "compile_directory() -> [Result] | {error,Reason}")
               "cover:compile_module/2"
               ("http://www.erlang.org/doc/man/cover.html#compile_module-2" "compile_module(ModFiles, Options) -> Result | [Result]")
               "cover:compile_module/1"
               ("http://www.erlang.org/doc/man/cover.html#compile_module-1" "compile_module(ModFiles) -> Result | [Result]")
               "cover:compile/2"
               ("http://www.erlang.org/doc/man/cover.html#compile-2" "compile(ModFiles, Options) -> Result | [Result]")
               "cover:compile/1"
               ("http://www.erlang.org/doc/man/cover.html#compile-1" "compile(ModFiles) -> Result | [Result]")
               "cover:start/1"
               ("http://www.erlang.org/doc/man/cover.html#start-1" "start(Nodes) -> {ok,StartedNodes} | {error,not_main_node}")
               "cover:start/0"
               ("http://www.erlang.org/doc/man/cover.html#start-0" "start() -> {ok,Pid} | {error,Reason}")
               "cprof:stop/3"
               ("http://www.erlang.org/doc/man/cprof.html#stop-3" "stop(Mod, Func, Arity) -> integer()")
               "cprof:stop/2"
               ("http://www.erlang.org/doc/man/cprof.html#stop-2" "stop(Mod, Func) -> integer()")
               "cprof:stop/1"
               ("http://www.erlang.org/doc/man/cprof.html#stop-1" "stop(FuncSpec) -> integer()")
               "cprof:stop/0"
               ("http://www.erlang.org/doc/man/cprof.html#stop-0" "stop() -> integer()")
               "cprof:start/3"
               ("http://www.erlang.org/doc/man/cprof.html#start-3" "start(Mod, Func, Arity) -> integer()")
               "cprof:start/2"
               ("http://www.erlang.org/doc/man/cprof.html#start-2" "start(Mod, Func) -> integer()")
               "cprof:start/1"
               ("http://www.erlang.org/doc/man/cprof.html#start-1" "start(FuncSpec) -> integer()")
               "cprof:start/0"
               ("http://www.erlang.org/doc/man/cprof.html#start-0" "start() -> integer()")
               "cprof:restart/3"
               ("http://www.erlang.org/doc/man/cprof.html#restart-3" "restart(Mod, Func, Arity) -> integer()")
               "cprof:restart/2"
               ("http://www.erlang.org/doc/man/cprof.html#restart-2" "restart(Mod, Func) -> integer()")
               "cprof:restart/1"
               ("http://www.erlang.org/doc/man/cprof.html#restart-1" "restart(FuncSpec) -> integer()")
               "cprof:restart/0"
               ("http://www.erlang.org/doc/man/cprof.html#restart-0" "restart() -> integer()")
               "cprof:pause/3"
               ("http://www.erlang.org/doc/man/cprof.html#pause-3" "pause(Mod, Func, Arity) -> integer()")
               "cprof:pause/2"
               ("http://www.erlang.org/doc/man/cprof.html#pause-2" "pause(Mod, Func) -> integer()")
               "cprof:pause/1"
               ("http://www.erlang.org/doc/man/cprof.html#pause-1" "pause(FuncSpec) -> integer()")
               "cprof:pause/0"
               ("http://www.erlang.org/doc/man/cprof.html#pause-0" "pause() -> integer()")
               "cprof:analyse/2"
               ("http://www.erlang.org/doc/man/cprof.html#analyse-2" "analyse(Mod, Limit) -> ModAnalysis")
               "cprof:analyse/1"
               ("http://www.erlang.org/doc/man/cprof.html#analyse-1" "analyse(Limit) -> {AllCallCount, ModAnalysisList}")
               "cprof:analyse/0"
               ("http://www.erlang.org/doc/man/cprof.html#analyse-0" "analyse() -> {AllCallCount, ModAnalysisList}")
               "cpu_sup:util/1"
               ("http://www.erlang.org/doc/man/cpu_sup.html#util-1" "util(Opts) -> UtilSpec | {error, Reason}")
               "cpu_sup:util/0"
               ("http://www.erlang.org/doc/man/cpu_sup.html#util-0" "util() -> CpuUtil | {error, Reason}")
               "cpu_sup:avg15/0"
               ("http://www.erlang.org/doc/man/cpu_sup.html#avg15-0" "avg15() -> SystemLoad | {error, Reason}")
               "cpu_sup:avg5/0"
               ("http://www.erlang.org/doc/man/cpu_sup.html#avg5-0" "avg5() -> SystemLoad | {error, Reason}")
               "cpu_sup:avg1/0"
               ("http://www.erlang.org/doc/man/cpu_sup.html#avg1-0" "avg1() -> SystemLoad | {error, Reason}")
               "cpu_sup:nprocs/0"
               ("http://www.erlang.org/doc/man/cpu_sup.html#nprocs-0" "nprocs() -> UnixProcesses | {error, Reason}")
               "crashdump_viewer:stop/0"
               ("http://www.erlang.org/doc/man/crashdump_viewer.html#stop-0" "stop() -> ok")
               "crashdump_viewer:start/1"
               ("http://www.erlang.org/doc/man/crashdump_viewer.html#start-1" "start(File) -> ok")
               "crashdump_viewer:start/0"
               ("http://www.erlang.org/doc/man/crashdump_viewer.html#start-0" "start() -> ok")
               "crypto:verify/5"
               ("http://www.erlang.org/doc/man/crypto.html#verify-5" "verify(Algorithm, DigestType, Msg, Signature, Key) -> boolean()")
               "crypto:ec_curve/1"
               ("http://www.erlang.org/doc/man/crypto.html#ec_curve-1" "ec_curve(NamedCurve) -> EllipticCurve")
               "crypto:ec_curves/0"
               ("http://www.erlang.org/doc/man/crypto.html#ec_curves-0" "ec_curves() -> EllipticCurveList")
               "crypto:supports/0"
               ("http://www.erlang.org/doc/man/crypto.html#supports-0" "supports() -> AlgorithmList")
               "crypto:stream_decrypt/2"
               ("http://www.erlang.org/doc/man/crypto.html#stream_decrypt-2" "stream_decrypt(State, CipherText) -> { NewState, PlainText }")
               "crypto:stream_encrypt/2"
               ("http://www.erlang.org/doc/man/crypto.html#stream_encrypt-2" "stream_encrypt(State, PlainText) -> { NewState, CipherText}")
               "crypto:stream_init/3"
               ("http://www.erlang.org/doc/man/crypto.html#stream_init-3" "stream_init(Type, Key, IVec) -> State")
               "crypto:stream_init/2"
               ("http://www.erlang.org/doc/man/crypto.html#stream_init-2" "stream_init(Type, Key) -> State")
               "crypto:strong_rand_bytes/1"
               ("http://www.erlang.org/doc/man/crypto.html#strong_rand_bytes-1" "strong_rand_bytes(N) -> binary()")
               "crypto:stop/0"
               ("http://www.erlang.org/doc/man/crypto.html#stop-0" "stop() -> ok")
               "crypto:start/0"
               ("http://www.erlang.org/doc/man/crypto.html#start-0" "start() -> ok")
               "crypto:sign/4"
               ("http://www.erlang.org/doc/man/crypto.html#sign-4" "sign(Algorithm, DigestType, Msg, Key) -> binary()")
               "crypto:rand_uniform/2"
               ("http://www.erlang.org/doc/man/crypto.html#rand_uniform-2" "rand_uniform(Lo, Hi) -> N")
               "crypto:rand_seed/1"
               ("http://www.erlang.org/doc/man/crypto.html#rand_seed-1" "rand_seed(Seed) -> ok")
               "crypto:public_encrypt/4"
               ("http://www.erlang.org/doc/man/crypto.html#public_encrypt-4" "public_encrypt(Type, PlainText, PublicKey, Padding) -> CipherText")
               "crypto:public_decrypt/4"
               ("http://www.erlang.org/doc/man/crypto.html#public_decrypt-4" "public_decrypt(Type, CipherText, PublicKey, Padding) -> PlainText")
               "crypto:private_encrypt/4"
               ("http://www.erlang.org/doc/man/crypto.html#private_encrypt-4" "private_encrypt(Type, PlainText, PrivateKey, Padding) -> CipherText")
               "crypto:private_decrypt/4"
               ("http://www.erlang.org/doc/man/crypto.html#private_decrypt-4" "private_decrypt(Type, CipherText, PrivateKey, Padding) -> PlainText")
               "crypto:next_iv/3"
               ("http://www.erlang.org/doc/man/crypto.html#next_iv-3" "next_iv(Type, Data, IVec) -> NextIVec")
               "crypto:next_iv/2"
               ("http://www.erlang.org/doc/man/crypto.html#next_iv-2" "next_iv(Type, Data) -> NextIVec")
               "crypto:mod_pow/3"
               ("http://www.erlang.org/doc/man/crypto.html#mod_pow-3" "mod_pow(N, P, M) -> Result")
               "crypto:info_lib/0"
               ("http://www.erlang.org/doc/man/crypto.html#info_lib-0" "info_lib() -> [{Name,VerNum,VerStr}]")
               "crypto:hmac_final_n/2"
               ("http://www.erlang.org/doc/man/crypto.html#hmac_final_n-2" "hmac_final_n(Context, HashLen) -> Mac")
               "crypto:hmac_final/1"
               ("http://www.erlang.org/doc/man/crypto.html#hmac_final-1" "hmac_final(Context) -> Mac")
               "crypto:hmac_update/2"
               ("http://www.erlang.org/doc/man/crypto.html#hmac_update-2" "hmac_update(Context, Data) -> NewContext")
               "crypto:hmac_init/2"
               ("http://www.erlang.org/doc/man/crypto.html#hmac_init-2" "hmac_init(Type, Key) -> Context")
               "crypto:hmac/4"
               ("http://www.erlang.org/doc/man/crypto.html#hmac-4" "hmac(Type, Key, Data, MacLength) -> Mac")
               "crypto:hmac/3"
               ("http://www.erlang.org/doc/man/crypto.html#hmac-3" "hmac(Type, Key, Data) -> Mac")
               "crypto:hash_final/1"
               ("http://www.erlang.org/doc/man/crypto.html#hash_final-1" "hash_final(Context) -> Digest")
               "crypto:hash_update/2"
               ("http://www.erlang.org/doc/man/crypto.html#hash_update-2" "hash_update(Context, Data) -> NewContext")
               "crypto:hash_init/1"
               ("http://www.erlang.org/doc/man/crypto.html#hash_init-1" "hash_init(Type) -> Context")
               "crypto:hash/2"
               ("http://www.erlang.org/doc/man/crypto.html#hash-2" "hash(Type, Data) -> Digest")
               "crypto:generate_key/3"
               ("http://www.erlang.org/doc/man/crypto.html#generate_key-3" "generate_key(Type, Params, PrivKeyIn) -> {PublicKey, PrivKeyOut}")
               "crypto:generate_key/2"
               ("http://www.erlang.org/doc/man/crypto.html#generate_key-2" "generate_key(Type, Params) -> {PublicKey, PrivKeyOut}")
               "crypto:exor/2"
               ("http://www.erlang.org/doc/man/crypto.html#exor-2" "exor(Data1, Data2) -> Result")
               "crypto:compute_key/4"
               ("http://www.erlang.org/doc/man/crypto.html#compute_key-4" "compute_key(Type, OthersPublicKey, MyKey, Params) -> SharedSecret")
               "crypto:bytes_to_integer/1"
               ("http://www.erlang.org/doc/man/crypto.html#bytes_to_integer-1" "bytes_to_integer(Bin) -> Integer")
               "crypto:block_decrypt/4"
               ("http://www.erlang.org/doc/man/crypto.html#block_decrypt-4" "block_decrypt(Type, Key, Ivec, CipherText) -> PlainText")
               "crypto:block_encrypt/4"
               ("http://www.erlang.org/doc/man/crypto.html#block_encrypt-4" "block_encrypt(Type, Key, Ivec, PlainText) -> CipherText")
               "crypto:block_decrypt/3"
               ("http://www.erlang.org/doc/man/crypto.html#block_decrypt-3" "block_decrypt(Type, Key, CipherText) -> PlainText")
               "crypto:block_encrypt/3"
               ("http://www.erlang.org/doc/man/crypto.html#block_encrypt-3" "block_encrypt(Type, Key, PlainText) -> CipherText")
               "ct:userdata/3"
               ("http://www.erlang.org/doc/man/ct.html#userdata-3" "userdata(TestDir, Suite, Case::GroupOrCase) -> TCUserData | {error, Reason}")
               "ct:userdata/2"
               ("http://www.erlang.org/doc/man/ct.html#userdata-2" "userdata(TestDir, Suite) -> SuiteUserData | {error, Reason}")
               "ct:timetrap/1"
               ("http://www.erlang.org/doc/man/ct.html#timetrap-1" "timetrap(Time) -> ok")
               "ct:testcases/2"
               ("http://www.erlang.org/doc/man/ct.html#testcases-2" "testcases(TestDir, Suite) -> Testcases | {error, Reason}")
               "ct:sync_notify/2"
               ("http://www.erlang.org/doc/man/ct.html#sync_notify-2" "sync_notify(Name, Data) -> ok")
               "ct:stop_interactive/0"
               ("http://www.erlang.org/doc/man/ct.html#stop_interactive-0" "stop_interactive() -> ok")
               "ct:step/4"
               ("http://www.erlang.org/doc/man/ct.html#step-4" "step(TestDir, Suite, Case, Opts) -> Result")
               "ct:step/3"
               ("http://www.erlang.org/doc/man/ct.html#step-3" "step(TestDir, Suite, Case) -> Result")
               "ct:start_interactive/0"
               ("http://www.erlang.org/doc/man/ct.html#start_interactive-0" "start_interactive() -> ok")
               "ct:sleep/1"
               ("http://www.erlang.org/doc/man/ct.html#sleep-1" "sleep(Time) -> ok")
               "ct:set_verbosity/2"
               ("http://www.erlang.org/doc/man/ct.html#set_verbosity-2" "set_verbosity(Category, Level) -> ok")
               "ct:run_testspec/1"
               ("http://www.erlang.org/doc/man/ct.html#run_testspec-1" "run_testspec(TestSpec) -> Result")
               "ct:run_test/1"
               ("http://www.erlang.org/doc/man/ct.html#run_test-1" "run_test(Opts) -> Result")
               "ct:run/3"
               ("http://www.erlang.org/doc/man/ct.html#run-3" "run(TestDir, Suite, Cases) -> Result")
               "ct:run/2"
               ("http://www.erlang.org/doc/man/ct.html#run-2" "run(TestDir, Suite) -> Result")
               "ct:run/1"
               ("http://www.erlang.org/doc/man/ct.html#run-1" "run(TestDirs) -> Result")
               "ct:require/2"
               ("http://www.erlang.org/doc/man/ct.html#require-2" "require(Name, Required) -> ok | {error, Reason}")
               "ct:require/1"
               ("http://www.erlang.org/doc/man/ct.html#require-1" "require(Required) -> ok | {error, Reason}")
               "ct:remove_config/2"
               ("http://www.erlang.org/doc/man/ct.html#remove_config-2" "remove_config(Callback, Config) -> ok")
               "ct:reload_config/1"
               ("http://www.erlang.org/doc/man/ct.html#reload_config-1" "reload_config(Required) -> ValueOrElement | {error, Reason}")
               "ct:print/5"
               ("http://www.erlang.org/doc/man/ct.html#print-5" "print(Category, Importance, Format, FormatArgs, Opts) -> ok")
               "ct:print/4"
               ("http://www.erlang.org/doc/man/ct.html#print-4" "print(X1, X2, X3, X4) -> ok")
               "ct:print/3"
               ("http://www.erlang.org/doc/man/ct.html#print-3" "print(X1, X2, X3) -> ok")
               "ct:print/2"
               ("http://www.erlang.org/doc/man/ct.html#print-2" "print(X1, X2) -> ok")
               "ct:print/1"
               ("http://www.erlang.org/doc/man/ct.html#print-1" "print(Format) -> ok")
               "ct:parse_table/1"
               ("http://www.erlang.org/doc/man/ct.html#parse_table-1" "parse_table(Data) -> {Heading, Table}")
               "ct:pal/5"
               ("http://www.erlang.org/doc/man/ct.html#pal-5" "pal(Category, Importance, Format, FormatArgs, Opts) -> ok")
               "ct:pal/4"
               ("http://www.erlang.org/doc/man/ct.html#pal-4" "pal(X1, X2, X3, X4) -> ok")
               "ct:pal/3"
               ("http://www.erlang.org/doc/man/ct.html#pal-3" "pal(X1, X2, X3) -> ok")
               "ct:pal/2"
               ("http://www.erlang.org/doc/man/ct.html#pal-2" "pal(X1, X2) -> ok")
               "ct:pal/1"
               ("http://www.erlang.org/doc/man/ct.html#pal-1" "pal(Format) -> ok")
               "ct:notify/2"
               ("http://www.erlang.org/doc/man/ct.html#notify-2" "notify(Name, Data) -> ok")
               "ct:make_priv_dir/0"
               ("http://www.erlang.org/doc/man/ct.html#make_priv_dir-0" "make_priv_dir() -> ok | {error, Reason}")
               "ct:log/5"
               ("http://www.erlang.org/doc/man/ct.html#log-5" "log(Category, Importance, Format, FormatArgs, Opts) -> ok")
               "ct:log/4"
               ("http://www.erlang.org/doc/man/ct.html#log-4" "log(X1, X2, X3, X4) -> ok")
               "ct:log/3"
               ("http://www.erlang.org/doc/man/ct.html#log-3" "log(X1, X2, X3) -> ok")
               "ct:log/2"
               ("http://www.erlang.org/doc/man/ct.html#log-2" "log(X1, X2) -> ok")
               "ct:log/1"
               ("http://www.erlang.org/doc/man/ct.html#log-1" "log(Format) -> ok")
               "ct:listenv/1"
               ("http://www.erlang.org/doc/man/ct.html#listenv-1" "listenv(Telnet) -> [Env]")
               "ct:install/1"
               ("http://www.erlang.org/doc/man/ct.html#install-1" "install(Opts) -> ok | {error, Reason}")
               "ct:get_verbosity/1"
               ("http://www.erlang.org/doc/man/ct.html#get_verbosity-1" "get_verbosity(Category) -> Level | undefined")
               "ct:get_timetrap_info/0"
               ("http://www.erlang.org/doc/man/ct.html#get_timetrap_info-0" "get_timetrap_info() -> {Time, {Scaling,ScaleVal}}")
               "ct:get_testspec_terms/1"
               ("http://www.erlang.org/doc/man/ct.html#get_testspec_terms-1" "get_testspec_terms(Tags) -> TestSpecTerms | undefined")
               "ct:get_testspec_terms/0"
               ("http://www.erlang.org/doc/man/ct.html#get_testspec_terms-0" "get_testspec_terms() -> TestSpecTerms | undefined")
               "ct:get_target_name/1"
               ("http://www.erlang.org/doc/man/ct.html#get_target_name-1" "get_target_name(Handle) -> {ok, TargetName} | {error, Reason}")
               "ct:get_status/0"
               ("http://www.erlang.org/doc/man/ct.html#get_status-0" "get_status() -> TestStatus | {error, Reason} | no_tests_running")
               "ct:get_event_mgr_ref/0"
               ("http://www.erlang.org/doc/man/ct.html#get_event_mgr_ref-0" "get_event_mgr_ref() -> EvMgrRef")
               "ct:get_config/3"
               ("http://www.erlang.org/doc/man/ct.html#get_config-3" "get_config(Required, Default, Opts) -> ValueOrElement")
               "ct:get_config/2"
               ("http://www.erlang.org/doc/man/ct.html#get_config-2" "get_config(Required, Default) -> Value")
               "ct:get_config/1"
               ("http://www.erlang.org/doc/man/ct.html#get_config-1" "get_config(Required) -> Value")
               "ct:fail/2"
               ("http://www.erlang.org/doc/man/ct.html#fail-2" "fail(Format, Args) -> ok")
               "ct:fail/1"
               ("http://www.erlang.org/doc/man/ct.html#fail-1" "fail(Reason) -> ok")
               "ct:encrypt_config_file/3"
               ("http://www.erlang.org/doc/man/ct.html#encrypt_config_file-3" "encrypt_config_file(SrcFileName, EncryptFileName, KeyOrFile) -> ok | {error, Reason}")
               "ct:encrypt_config_file/2"
               ("http://www.erlang.org/doc/man/ct.html#encrypt_config_file-2" "encrypt_config_file(SrcFileName, EncryptFileName) -> ok | {error, Reason}")
               "ct:decrypt_config_file/3"
               ("http://www.erlang.org/doc/man/ct.html#decrypt_config_file-3" "decrypt_config_file(EncryptFileName, TargetFileName, KeyOrFile) -> ok | {error, Reason}")
               "ct:decrypt_config_file/2"
               ("http://www.erlang.org/doc/man/ct.html#decrypt_config_file-2" "decrypt_config_file(EncryptFileName, TargetFileName) -> ok | {error, Reason}")
               "ct:continue/1"
               ("http://www.erlang.org/doc/man/ct.html#continue-1" "continue(TestCase) -> ok")
               "ct:continue/0"
               ("http://www.erlang.org/doc/man/ct.html#continue-0" "continue() -> ok")
               "ct:comment/2"
               ("http://www.erlang.org/doc/man/ct.html#comment-2" "comment(Format, Args) -> ok")
               "ct:comment/1"
               ("http://www.erlang.org/doc/man/ct.html#comment-1" "comment(Comment) -> ok")
               "ct:capture_stop/0"
               ("http://www.erlang.org/doc/man/ct.html#capture_stop-0" "capture_stop() -> ok")
               "ct:capture_start/0"
               ("http://www.erlang.org/doc/man/ct.html#capture_start-0" "capture_start() -> ok")
               "ct:capture_get/1"
               ("http://www.erlang.org/doc/man/ct.html#capture_get-1" "capture_get(ExclCategories) -> ListOfStrings")
               "ct:capture_get/0"
               ("http://www.erlang.org/doc/man/ct.html#capture_get-0" "capture_get() -> ListOfStrings")
               "ct:break/2"
               ("http://www.erlang.org/doc/man/ct.html#break-2" "break(TestCase, Comment) -> ok | {error, Reason}")
               "ct:break/1"
               ("http://www.erlang.org/doc/man/ct.html#break-1" "break(Comment) -> ok | {error, Reason}")
               "ct:add_config/2"
               ("http://www.erlang.org/doc/man/ct.html#add_config-2" "add_config(Callback, Config) -> ok | {error, Reason}")
               "ct:abort_current_testcase/1"
               ("http://www.erlang.org/doc/man/ct.html#abort_current_testcase-1" "abort_current_testcase(Reason) -> ok | {error, ErrorReason}")
               "ct:"
               ("http://www.erlang.org/doc/man/ct.html#type-handle" "  The identity (handle) of a connection. ")
               "ct_cover:remove_nodes/1"
               ("http://www.erlang.org/doc/man/ct_cover.html#remove_nodes-1" "remove_nodes(Nodes) -> ok | {error, Reason}")
               "ct_cover:cross_cover_analyse/2"
               ("http://www.erlang.org/doc/man/ct_cover.html#cross_cover_analyse-2" "cross_cover_analyse(Level, Tests) -> ok")
               "ct_cover:add_nodes/1"
               ("http://www.erlang.org/doc/man/ct_cover.html#add_nodes-1" "add_nodes(Nodes) -> {ok, StartedNodes} | {error, Reason}")
               "ct_ftp:"
               ("http://www.erlang.org/doc/man/ct_ftp.html#type-connection" "  For target_name , see module ct . ")
               "ct_ftp:type/2"
               ("http://www.erlang.org/doc/man/ct_ftp.html#type-2" "type(Connection, Type) -> ok | {error, Reason}")
               "ct_ftp:send/3"
               ("http://www.erlang.org/doc/man/ct_ftp.html#send-3" "send(Connection, LocalFile, RemoteFile) -> ok | {error, Reason}")
               "ct_ftp:send/2"
               ("http://www.erlang.org/doc/man/ct_ftp.html#send-2" "send(Connection, LocalFile) -> ok | {error, Reason}")
               "ct_ftp:recv/3"
               ("http://www.erlang.org/doc/man/ct_ftp.html#recv-3" "recv(Connection, RemoteFile, LocalFile) -> ok | {error, Reason}")
               "ct_ftp:recv/2"
               ("http://www.erlang.org/doc/man/ct_ftp.html#recv-2" "recv(Connection, RemoteFile) -> ok | {error, Reason}")
               "ct_ftp:put/3"
               ("http://www.erlang.org/doc/man/ct_ftp.html#put-3" "put(KeyOrName, LocalFile, RemoteFile) -> ok | {error, Reason}")
               "ct_ftp:open/1"
               ("http://www.erlang.org/doc/man/ct_ftp.html#open-1" "open(KeyOrName) -> {ok, Handle} | {error, Reason}")
               "ct_ftp:ls/2"
               ("http://www.erlang.org/doc/man/ct_ftp.html#ls-2" "ls(Connection, Dir) -> {ok, Listing} | {error, Reason}")
               "ct_ftp:get/3"
               ("http://www.erlang.org/doc/man/ct_ftp.html#get-3" "get(KeyOrName, RemoteFile, LocalFile) -> ok | {error, Reason}")
               "ct_ftp:delete/2"
               ("http://www.erlang.org/doc/man/ct_ftp.html#delete-2" "delete(Connection, File) -> ok | {error, Reason}")
               "ct_ftp:close/1"
               ("http://www.erlang.org/doc/man/ct_ftp.html#close-1" "close(Connection) -> ok | {error, Reason}")
               "ct_ftp:cd/2"
               ("http://www.erlang.org/doc/man/ct_ftp.html#cd-2" "cd(Connection, Dir) -> ok | {error, Reason}")
               "ct_hooks:Module:id/1"
               ("http://www.erlang.org/doc/man/ct_hooks.html#Module:id-1" "Module:id(Opts) -> Id")
               "ct_hooks:Module:terminate/1"
               ("http://www.erlang.org/doc/man/ct_hooks.html#Module:terminate-1" "Module:terminate(CTHState)")
               "ct_hooks:Module:on_tc_skip/3"
               ("http://www.erlang.org/doc/man/ct_hooks.html#Module:on_tc_skip-3" "Module:on_tc_skip(TestName, Reason, CTHState) -> NewCTHState")
               "ct_hooks:Module:on_tc_fail/3"
               ("http://www.erlang.org/doc/man/ct_hooks.html#Module:on_tc_fail-3" "Module:on_tc_fail(TestName, Reason, CTHState) -> NewCTHState")
               "ct_hooks:Module:post_end_per_suite/4"
               ("http://www.erlang.org/doc/man/ct_hooks.html#Module:post_end_per_suite-4" "Module:post_end_per_suite(SuiteName, Config, Return, CTHState) -> Result")
               "ct_hooks:Module:pre_end_per_suite/3"
               ("http://www.erlang.org/doc/man/ct_hooks.html#Module:pre_end_per_suite-3" "Module:pre_end_per_suite(SuiteName, EndData, CTHState) -> Result")
               "ct_hooks:Module:post_end_per_group/4"
               ("http://www.erlang.org/doc/man/ct_hooks.html#Module:post_end_per_group-4" "Module:post_end_per_group(GroupName, Config, Return, CTHState) -> Result")
               "ct_hooks:Module:pre_end_per_group/3"
               ("http://www.erlang.org/doc/man/ct_hooks.html#Module:pre_end_per_group-3" "Module:pre_end_per_group(GroupName, EndData, CTHState) -> Result")
               "ct_hooks:Module:post_end_per_testcase/4"
               ("http://www.erlang.org/doc/man/ct_hooks.html#Module:post_end_per_testcase-4" "Module:post_end_per_testcase(TestcaseName, Config, Return, CTHState) -> Result")
               "ct_hooks:Module:pre_end_per_testcase/3"
               ("http://www.erlang.org/doc/man/ct_hooks.html#Module:pre_end_per_testcase-3" "Module:pre_end_per_testcase(TestcaseName, InitData, CTHState) -> Result")
               "ct_hooks:Module:post_init_per_testcase/4"
               ("http://www.erlang.org/doc/man/ct_hooks.html#Module:post_init_per_testcase-4" "Module:post_init_per_testcase(TestcaseName, Config, Return, CTHState) -> Result")
               "ct_hooks:Module:pre_init_per_testcase/3"
               ("http://www.erlang.org/doc/man/ct_hooks.html#Module:pre_init_per_testcase-3" "Module:pre_init_per_testcase(TestcaseName, InitData, CTHState) -> Result")
               "ct_hooks:Module:post_init_per_group/4"
               ("http://www.erlang.org/doc/man/ct_hooks.html#Module:post_init_per_group-4" "Module:post_init_per_group(GroupName, Config, Return, CTHState) -> Result")
               "ct_hooks:Module:pre_init_per_group/3"
               ("http://www.erlang.org/doc/man/ct_hooks.html#Module:pre_init_per_group-3" "Module:pre_init_per_group(GroupName, InitData, CTHState) -> Result")
               "ct_hooks:Module:post_init_per_suite/4"
               ("http://www.erlang.org/doc/man/ct_hooks.html#Module:post_init_per_suite-4" "Module:post_init_per_suite(SuiteName, Config, Return, CTHState) -> Result")
               "ct_hooks:Module:pre_init_per_suite/3"
               ("http://www.erlang.org/doc/man/ct_hooks.html#Module:pre_init_per_suite-3" "Module:pre_init_per_suite(SuiteName, InitData, CTHState) -> Result")
               "ct_hooks:Module:init/2"
               ("http://www.erlang.org/doc/man/ct_hooks.html#Module:init-2" "Module:init(Id, Opts) -> {ok, State} | {ok, State, Priority}")
               "ct_master:run_test/2"
               ("http://www.erlang.org/doc/man/ct_master.html#run_test-2" "run_test(Node, Opts) -> ok")
               "ct_master:run_on_node/3"
               ("http://www.erlang.org/doc/man/ct_master.html#run_on_node-3" "run_on_node(TestSpecs, AllowUserTerms, Node) -> ok")
               "ct_master:run_on_node/2"
               ("http://www.erlang.org/doc/man/ct_master.html#run_on_node-2" "run_on_node(TestSpecs, Node) -> ok")
               "ct_master:run/4"
               ("http://www.erlang.org/doc/man/ct_master.html#run-4" "run(TestSpecs, AllowUserTerms, InclNodes, ExclNodes) -> ok")
               "ct_master:run/3"
               ("http://www.erlang.org/doc/man/ct_master.html#run-3" "run(TestSpecs, InclNodes, ExclNodes) -> ok")
               "ct_master:run/1"
               ("http://www.erlang.org/doc/man/ct_master.html#run-1" "run(TestSpecs) -> ok")
               "ct_master:progress/0"
               ("http://www.erlang.org/doc/man/ct_master.html#progress-0" "progress() -> [{Node, Status}]")
               "ct_master:get_event_mgr_ref/0"
               ("http://www.erlang.org/doc/man/ct_master.html#get_event_mgr_ref-0" "get_event_mgr_ref() -> MasterEvMgrRef")
               "ct_master:basic_html/1"
               ("http://www.erlang.org/doc/man/ct_master.html#basic_html-1" "basic_html(Bool) -> ok")
               "ct_master:abort/1"
               ("http://www.erlang.org/doc/man/ct_master.html#abort-1" "abort(Nodes) -> ok")
               "ct_master:abort/0"
               ("http://www.erlang.org/doc/man/ct_master.html#abort-0" "abort() -> ok")
               "ct_netconfc:unlock/3"
               ("http://www.erlang.org/doc/man/ct_netconfc.html#unlock-3" "unlock(Client, Target, Timeout) -> Result")
               "ct_netconfc:unlock/2"
               ("http://www.erlang.org/doc/man/ct_netconfc.html#unlock-2" "unlock(Client, Target) -> Result")
               "ct_netconfc:send_rpc/3"
               ("http://www.erlang.org/doc/man/ct_netconfc.html#send_rpc-3" "send_rpc(Client, SimpleXml, Timeout) -> Result")
               "ct_netconfc:send_rpc/2"
               ("http://www.erlang.org/doc/man/ct_netconfc.html#send_rpc-2" "send_rpc(Client, SimpleXml) -> Result")
               "ct_netconfc:send/3"
               ("http://www.erlang.org/doc/man/ct_netconfc.html#send-3" "send(Client, SimpleXml, Timeout) -> Result")
               "ct_netconfc:send/2"
               ("http://www.erlang.org/doc/man/ct_netconfc.html#send-2" "send(Client, SimpleXml) -> Result")
               "ct_netconfc:open/2"
               ("http://www.erlang.org/doc/man/ct_netconfc.html#open-2" "open(KeyOrName, ExtraOptions) -> Result")
               "ct_netconfc:open/1"
               ("http://www.erlang.org/doc/man/ct_netconfc.html#open-1" "open(Options) -> Result")
               "ct_netconfc:only_open/2"
               ("http://www.erlang.org/doc/man/ct_netconfc.html#only_open-2" "only_open(KeyOrName, ExtraOptions) -> Result")
               "ct_netconfc:only_open/1"
               ("http://www.erlang.org/doc/man/ct_netconfc.html#only_open-1" "only_open(Options) -> Result")
               "ct_netconfc:lock/3"
               ("http://www.erlang.org/doc/man/ct_netconfc.html#lock-3" "lock(Client, Target, Timeout) -> Result")
               "ct_netconfc:lock/2"
               ("http://www.erlang.org/doc/man/ct_netconfc.html#lock-2" "lock(Client, Target) -> Result")
               "ct_netconfc:kill_session/3"
               ("http://www.erlang.org/doc/man/ct_netconfc.html#kill_session-3" "kill_session(Client, SessionId, Timeout) -> Result")
               "ct_netconfc:kill_session/2"
               ("http://www.erlang.org/doc/man/ct_netconfc.html#kill_session-2" "kill_session(Client, SessionId) -> Result")
               "ct_netconfc:hello/3"
               ("http://www.erlang.org/doc/man/ct_netconfc.html#hello-3" "hello(Client, Options, Timeout) -> Result")
               "ct_netconfc:hello/2"
               ("http://www.erlang.org/doc/man/ct_netconfc.html#hello-2" "hello(Client, Timeout) -> Result")
               "ct_netconfc:hello/1"
               ("http://www.erlang.org/doc/man/ct_netconfc.html#hello-1" "hello(Client) -> Result")
               "ct_netconfc:get_session_id/2"
               ("http://www.erlang.org/doc/man/ct_netconfc.html#get_session_id-2" "get_session_id(Client, Timeout) -> Result")
               "ct_netconfc:get_session_id/1"
               ("http://www.erlang.org/doc/man/ct_netconfc.html#get_session_id-1" "get_session_id(Client) -> Result")
               "ct_netconfc:get_event_streams/3"
               ("http://www.erlang.org/doc/man/ct_netconfc.html#get_event_streams-3" "get_event_streams(Client, Streams, Timeout) -> Result")
               "ct_netconfc:get_event_streams/2"
               ("http://www.erlang.org/doc/man/ct_netconfc.html#get_event_streams-2" "get_event_streams(Client, Timeout) -> Result")
               "ct_netconfc:get_config/4"
               ("http://www.erlang.org/doc/man/ct_netconfc.html#get_config-4" "get_config(Client, Source, Filter, Timeout) -> Result")
               "ct_netconfc:get_config/3"
               ("http://www.erlang.org/doc/man/ct_netconfc.html#get_config-3" "get_config(Client, Source, Filter) -> Result")
               "ct_netconfc:get_capabilities/2"
               ("http://www.erlang.org/doc/man/ct_netconfc.html#get_capabilities-2" "get_capabilities(Client, Timeout) -> Result")
               "ct_netconfc:get_capabilities/1"
               ("http://www.erlang.org/doc/man/ct_netconfc.html#get_capabilities-1" "get_capabilities(Client) -> Result")
               "ct_netconfc:get/3"
               ("http://www.erlang.org/doc/man/ct_netconfc.html#get-3" "get(Client, Filter, Timeout) -> Result")
               "ct_netconfc:get/2"
               ("http://www.erlang.org/doc/man/ct_netconfc.html#get-2" "get(Client, Filter) -> Result")
               "ct_netconfc:edit_config/5"
               ("http://www.erlang.org/doc/man/ct_netconfc.html#edit_config-5" "edit_config(Client, Target, Config, OptParams, Timeout) -> Result")
               "ct_netconfc:edit_config/4"
               ("http://www.erlang.org/doc/man/ct_netconfc.html#edit_config-4" "edit_config(Client, Target, Config, OptParamsOrTimeout) -> Result")
               "ct_netconfc:edit_config/3"
               ("http://www.erlang.org/doc/man/ct_netconfc.html#edit_config-3" "edit_config(Client, Target, Config) -> Result")
               "ct_netconfc:delete_config/3"
               ("http://www.erlang.org/doc/man/ct_netconfc.html#delete_config-3" "delete_config(Client, Target, Timeout) -> Result")
               "ct_netconfc:delete_config/2"
               ("http://www.erlang.org/doc/man/ct_netconfc.html#delete_config-2" "delete_config(Client, Target) -> Result")
               "ct_netconfc:create_subscription/6"
               ("http://www.erlang.org/doc/man/ct_netconfc.html#create_subscription-6" "create_subscription(Client, Stream, Filter, StartTime, StopTime, Timeout) -> Result")
               "ct_netconfc:create_subscription/5"
               ("http://www.erlang.org/doc/man/ct_netconfc.html#create_subscription-5" "create_subscription(Client, Stream, StartTime, StopTime, Timeout) -> term()")
               "ct_netconfc:create_subscription/4"
               ("http://www.erlang.org/doc/man/ct_netconfc.html#create_subscription-4" "create_subscription(Client, StartTime, StopTime, Timeout) -> term()")
               "ct_netconfc:create_subscription/3"
               ("http://www.erlang.org/doc/man/ct_netconfc.html#create_subscription-3" "create_subscription(Client, Stream, Timeout) -> term()")
               "ct_netconfc:create_subscription/2"
               ("http://www.erlang.org/doc/man/ct_netconfc.html#create_subscription-2" "create_subscription(Client, Timeout) -> term()")
               "ct_netconfc:create_subscription/1"
               ("http://www.erlang.org/doc/man/ct_netconfc.html#create_subscription-1" "create_subscription(Client) -> term()")
               "ct_netconfc:copy_config/4"
               ("http://www.erlang.org/doc/man/ct_netconfc.html#copy_config-4" "copy_config(Client, Target, Source, Timeout) -> Result")
               "ct_netconfc:copy_config/3"
               ("http://www.erlang.org/doc/man/ct_netconfc.html#copy_config-3" "copy_config(Client, Source, Target) -> Result")
               "ct_netconfc:close_session/2"
               ("http://www.erlang.org/doc/man/ct_netconfc.html#close_session-2" "close_session(Client, Timeout) -> Result")
               "ct_netconfc:close_session/1"
               ("http://www.erlang.org/doc/man/ct_netconfc.html#close_session-1" "close_session(Client) -> Result")
               "ct_netconfc:action/3"
               ("http://www.erlang.org/doc/man/ct_netconfc.html#action-3" "action(Client, Action, Timeout) -> Result")
               "ct_netconfc:action/2"
               ("http://www.erlang.org/doc/man/ct_netconfc.html#action-2" "action(Client, Action) -> Result")
               "ct_netconfc:"
               ("http://www.erlang.org/doc/man/ct_netconfc.html#type-client" "  For handle() , see module ct . ")
               "ct_property_test:quickcheck/2"
               ("http://www.erlang.org/doc/man/ct_property_test.html#quickcheck-2" "quickcheck(Property, Config) -> true | {fail, Reason}")
               "ct_property_test:init_per_suite/1"
               ("http://www.erlang.org/doc/man/ct_property_test.html#init_per_suite-1" "init_per_suite(Config) -> Config | {skip, Reason}")
               "ct_rpc:cast/5"
               ("http://www.erlang.org/doc/man/ct_rpc.html#cast-5" "cast(Node, Module, Function, Args, Cookie) -> ok")
               "ct_rpc:cast/4"
               ("http://www.erlang.org/doc/man/ct_rpc.html#cast-4" "cast(Node, Module, Function, Args) -> ok")
               "ct_rpc:call/6"
               ("http://www.erlang.org/doc/man/ct_rpc.html#call-6" "call(Node, Module, Function, Args, TimeOut, Cookie) -> term() | {badrpc, Reason}")
               "ct_rpc:call/5"
               ("http://www.erlang.org/doc/man/ct_rpc.html#call-5" "call(Node, Module, Function, Args, TimeOut) -> term() | {badrpc, Reason}")
               "ct_rpc:call/4"
               ("http://www.erlang.org/doc/man/ct_rpc.html#call-4" "call(Node, Module, Function, Args) -> term() | {badrpc, Reason}")
               "ct_rpc:app_node/4"
               ("http://www.erlang.org/doc/man/ct_rpc.html#app_node-4" "app_node(App, Candidates, FailOnBadRPC, Cookie) -> NodeName")
               "ct_rpc:app_node/3"
               ("http://www.erlang.org/doc/man/ct_rpc.html#app_node-3" "app_node(App, Candidates, FailOnBadRPC) -> NodeName")
               "ct_rpc:app_node/2"
               ("http://www.erlang.org/doc/man/ct_rpc.html#app_node-2" "app_node(App, Candidates) -> NodeName")
               "ct_slave:stop/2"
               ("http://www.erlang.org/doc/man/ct_slave.html#stop-2" "stop(Host, Node) -> Result")
               "ct_slave:stop/1"
               ("http://www.erlang.org/doc/man/ct_slave.html#stop-1" "stop(Node) -> Result")
               "ct_slave:start/3"
               ("http://www.erlang.org/doc/man/ct_slave.html#start-3" "start(Host, Node, Opts) -> Result")
               "ct_slave:start/2"
               ("http://www.erlang.org/doc/man/ct_slave.html#start-2" "start(HostOrNode, NodeOrOpts) -> Result")
               "ct_slave:start/1"
               ("http://www.erlang.org/doc/man/ct_slave.html#start-1" "start(Node) -> Result")
               "ct_snmp:unregister_usm_users/2"
               ("http://www.erlang.org/doc/man/ct_snmp.html#unregister_usm_users-2" "unregister_usm_users(MgrAgentConfName, UsmUsers) -> ok")
               "ct_snmp:unregister_usm_users/1"
               ("http://www.erlang.org/doc/man/ct_snmp.html#unregister_usm_users-1" "unregister_usm_users(MgrAgentConfName) -> ok")
               "ct_snmp:unregister_users/2"
               ("http://www.erlang.org/doc/man/ct_snmp.html#unregister_users-2" "unregister_users(MgrAgentConfName, Users) -> ok")
               "ct_snmp:unregister_users/1"
               ("http://www.erlang.org/doc/man/ct_snmp.html#unregister_users-1" "unregister_users(MgrAgentConfName) -> ok")
               "ct_snmp:unregister_agents/2"
               ("http://www.erlang.org/doc/man/ct_snmp.html#unregister_agents-2" "unregister_agents(MgrAgentConfName, ManagedAgents) -> ok")
               "ct_snmp:unregister_agents/1"
               ("http://www.erlang.org/doc/man/ct_snmp.html#unregister_agents-1" "unregister_agents(MgrAgentConfName) -> ok")
               "ct_snmp:unload_mibs/1"
               ("http://www.erlang.org/doc/man/ct_snmp.html#unload_mibs-1" "unload_mibs(Mibs) -> ok | {error, Reason}")
               "ct_snmp:stop/1"
               ("http://www.erlang.org/doc/man/ct_snmp.html#stop-1" "stop(Config) -> ok")
               "ct_snmp:start/3"
               ("http://www.erlang.org/doc/man/ct_snmp.html#start-3" "start(Config, MgrAgentConfName, SnmpAppConfName) -> ok")
               "ct_snmp:start/2"
               ("http://www.erlang.org/doc/man/ct_snmp.html#start-2" "start(Config, MgrAgentConfName) -> ok")
               "ct_snmp:set_values/4"
               ("http://www.erlang.org/doc/man/ct_snmp.html#set_values-4" "set_values(Agent, VarsAndVals, MgrAgentConfName, Config) -> SnmpReply")
               "ct_snmp:set_info/1"
               ("http://www.erlang.org/doc/man/ct_snmp.html#set_info-1" "set_info(Config) -> [{Agent, OldVarsAndVals, NewVarsAndVals}]")
               "ct_snmp:register_usm_users/2"
               ("http://www.erlang.org/doc/man/ct_snmp.html#register_usm_users-2" "register_usm_users(MgrAgentConfName, UsmUsers) -> ok | {error, Reason}")
               "ct_snmp:register_users/2"
               ("http://www.erlang.org/doc/man/ct_snmp.html#register_users-2" "register_users(MgrAgentConfName, Users) -> ok | {error, Reason}")
               "ct_snmp:register_agents/2"
               ("http://www.erlang.org/doc/man/ct_snmp.html#register_agents-2" "register_agents(MgrAgentConfName, ManagedAgents) -> ok | {error, Reason}")
               "ct_snmp:load_mibs/1"
               ("http://www.erlang.org/doc/man/ct_snmp.html#load_mibs-1" "load_mibs(Mibs) -> ok | {error, Reason}")
               "ct_snmp:get_values/3"
               ("http://www.erlang.org/doc/man/ct_snmp.html#get_values-3" "get_values(Agent, Oids, MgrAgentConfName) -> SnmpReply")
               "ct_snmp:get_next_values/3"
               ("http://www.erlang.org/doc/man/ct_snmp.html#get_next_values-3" "get_next_values(Agent, Oids, MgrAgentConfName) -> SnmpReply")
               "ct_snmp:"
               ("http://www.erlang.org/doc/man/ct_snmp.html#type-agent_config" " ")
               "ct_ssh:write_file_info/4"
               ("http://www.erlang.org/doc/man/ct_ssh.html#write_file_info-4" "write_file_info(SSH, Server, Name, Info) -> Result")
               "ct_ssh:write_file_info/3"
               ("http://www.erlang.org/doc/man/ct_ssh.html#write_file_info-3" "write_file_info(SSH, Name, Info) -> Result")
               "ct_ssh:write_file/4"
               ("http://www.erlang.org/doc/man/ct_ssh.html#write_file-4" "write_file(SSH, Server, File, Iolist) -> Result")
               "ct_ssh:write_file/3"
               ("http://www.erlang.org/doc/man/ct_ssh.html#write_file-3" "write_file(SSH, File, Iolist) -> Result")
               "ct_ssh:write/4"
               ("http://www.erlang.org/doc/man/ct_ssh.html#write-4" "write(SSH, Server, Handle, Data) -> Result")
               "ct_ssh:write/3"
               ("http://www.erlang.org/doc/man/ct_ssh.html#write-3" "write(SSH, Handle, Data) -> Result")
               "ct_ssh:subsystem/4"
               ("http://www.erlang.org/doc/man/ct_ssh.html#subsystem-4" "subsystem(SSH, ChannelId, Subsystem, Timeout) -> Status | {error, Reason}")
               "ct_ssh:subsystem/3"
               ("http://www.erlang.org/doc/man/ct_ssh.html#subsystem-3" "subsystem(SSH, ChannelId, Subsystem) -> Status | {error, Reason}")
               "ct_ssh:sftp_connect/1"
               ("http://www.erlang.org/doc/man/ct_ssh.html#sftp_connect-1" "sftp_connect(SSH) -> {ok, Server} | {error, Reason}")
               "ct_ssh:session_open/2"
               ("http://www.erlang.org/doc/man/ct_ssh.html#session_open-2" "session_open(SSH, Timeout) -> {ok, ChannelId} | {error, Reason}")
               "ct_ssh:session_open/1"
               ("http://www.erlang.org/doc/man/ct_ssh.html#session_open-1" "session_open(SSH) -> {ok, ChannelId} | {error, Reason}")
               "ct_ssh:session_close/2"
               ("http://www.erlang.org/doc/man/ct_ssh.html#session_close-2" "session_close(SSH, ChannelId) -> ok | {error, Reason}")
               "ct_ssh:send_and_receive/6"
               ("http://www.erlang.org/doc/man/ct_ssh.html#send_and_receive-6" "send_and_receive(SSH, ChannelId, Type, Data, End, Timeout) -> {ok, Data} | {error, Reason}")
               "ct_ssh:send_and_receive/5"
               ("http://www.erlang.org/doc/man/ct_ssh.html#send_and_receive-5" "send_and_receive(SSH, ChannelId, Data, End, Timeout) -> {ok, Data} | {error, Reason}")
               "ct_ssh:send_and_receive/4"
               ("http://www.erlang.org/doc/man/ct_ssh.html#send_and_receive-4" "send_and_receive(SSH, ChannelId, Data, End) -> {ok, Data} | {error, Reason}")
               "ct_ssh:send_and_receive/3"
               ("http://www.erlang.org/doc/man/ct_ssh.html#send_and_receive-3" "send_and_receive(SSH, ChannelId, Data) -> {ok, Data} | {error, Reason}")
               "ct_ssh:send/5"
               ("http://www.erlang.org/doc/man/ct_ssh.html#send-5" "send(SSH, ChannelId, Type, Data, Timeout) -> ok | {error, Reason}")
               "ct_ssh:send/4"
               ("http://www.erlang.org/doc/man/ct_ssh.html#send-4" "send(SSH, ChannelId, Data, Timeout) -> ok | {error, Reason}")
               "ct_ssh:send/3"
               ("http://www.erlang.org/doc/man/ct_ssh.html#send-3" "send(SSH, ChannelId, Data) -> ok | {error, Reason}")
               "ct_ssh:rename/4"
               ("http://www.erlang.org/doc/man/ct_ssh.html#rename-4" "rename(SSH, Server, OldName, NewName) -> Result")
               "ct_ssh:rename/3"
               ("http://www.erlang.org/doc/man/ct_ssh.html#rename-3" "rename(SSH, OldName, NewName) -> Result")
               "ct_ssh:receive_response/4"
               ("http://www.erlang.org/doc/man/ct_ssh.html#receive_response-4" "receive_response(SSH, ChannelId, End, Timeout) -> {ok, Data} | {timeout, Data} | {error, Reason}")
               "ct_ssh:receive_response/3"
               ("http://www.erlang.org/doc/man/ct_ssh.html#receive_response-3" "receive_response(SSH, ChannelId, End) -> {ok, Data} | {error, Reason}")
               "ct_ssh:receive_response/2"
               ("http://www.erlang.org/doc/man/ct_ssh.html#receive_response-2" "receive_response(SSH, ChannelId) -> {ok, Data} | {error, Reason}")
               "ct_ssh:read_link_info/3"
               ("http://www.erlang.org/doc/man/ct_ssh.html#read_link_info-3" "read_link_info(SSH, Server, Name) -> Result")
               "ct_ssh:read_link_info/2"
               ("http://www.erlang.org/doc/man/ct_ssh.html#read_link_info-2" "read_link_info(SSH, Name) -> Result")
               "ct_ssh:read_link/3"
               ("http://www.erlang.org/doc/man/ct_ssh.html#read_link-3" "read_link(SSH, Server, Name) -> Result")
               "ct_ssh:read_link/2"
               ("http://www.erlang.org/doc/man/ct_ssh.html#read_link-2" "read_link(SSH, Name) -> Result")
               "ct_ssh:read_file_info/3"
               ("http://www.erlang.org/doc/man/ct_ssh.html#read_file_info-3" "read_file_info(SSH, Server, Name) -> Result")
               "ct_ssh:read_file_info/2"
               ("http://www.erlang.org/doc/man/ct_ssh.html#read_file_info-2" "read_file_info(SSH, Name) -> Result")
               "ct_ssh:read_file/3"
               ("http://www.erlang.org/doc/man/ct_ssh.html#read_file-3" "read_file(SSH, Server, File) -> Result")
               "ct_ssh:read_file/2"
               ("http://www.erlang.org/doc/man/ct_ssh.html#read_file-2" "read_file(SSH, File) -> Result")
               "ct_ssh:read/4"
               ("http://www.erlang.org/doc/man/ct_ssh.html#read-4" "read(SSH, Server, Handle, Len) -> Result")
               "ct_ssh:read/3"
               ("http://www.erlang.org/doc/man/ct_ssh.html#read-3" "read(SSH, Handle, Len) -> Result")
               "ct_ssh:pwrite/5"
               ("http://www.erlang.org/doc/man/ct_ssh.html#pwrite-5" "pwrite(SSH, Server, Handle, Position, Data) -> Result")
               "ct_ssh:pwrite/4"
               ("http://www.erlang.org/doc/man/ct_ssh.html#pwrite-4" "pwrite(SSH, Handle, Position, Data) -> Result")
               "ct_ssh:pread/5"
               ("http://www.erlang.org/doc/man/ct_ssh.html#pread-5" "pread(SSH, Server, Handle, Position, Length) -> Result")
               "ct_ssh:pread/4"
               ("http://www.erlang.org/doc/man/ct_ssh.html#pread-4" "pread(SSH, Handle, Position, Length) -> Result")
               "ct_ssh:position/4"
               ("http://www.erlang.org/doc/man/ct_ssh.html#position-4" "position(SSH, Server, Handle, Location) -> Result")
               "ct_ssh:position/3"
               ("http://www.erlang.org/doc/man/ct_ssh.html#position-3" "position(SSH, Handle, Location) -> Result")
               "ct_ssh:opendir/3"
               ("http://www.erlang.org/doc/man/ct_ssh.html#opendir-3" "opendir(SSH, Server, Path) -> Result")
               "ct_ssh:opendir/2"
               ("http://www.erlang.org/doc/man/ct_ssh.html#opendir-2" "opendir(SSH, Path) -> Result")
               "ct_ssh:open/4"
               ("http://www.erlang.org/doc/man/ct_ssh.html#open-4" "open(SSH, Server, File, Mode) -> Result")
               "ct_ssh:open/3"
               ("http://www.erlang.org/doc/man/ct_ssh.html#open-3" "open(SSH, File, Mode) -> Result")
               "ct_ssh:make_symlink/4"
               ("http://www.erlang.org/doc/man/ct_ssh.html#make_symlink-4" "make_symlink(SSH, Server, Name, Target) -> Result")
               "ct_ssh:make_symlink/3"
               ("http://www.erlang.org/doc/man/ct_ssh.html#make_symlink-3" "make_symlink(SSH, Name, Target) -> Result")
               "ct_ssh:make_dir/3"
               ("http://www.erlang.org/doc/man/ct_ssh.html#make_dir-3" "make_dir(SSH, Server, Name) -> Result")
               "ct_ssh:make_dir/2"
               ("http://www.erlang.org/doc/man/ct_ssh.html#make_dir-2" "make_dir(SSH, Name) -> Result")
               "ct_ssh:list_dir/3"
               ("http://www.erlang.org/doc/man/ct_ssh.html#list_dir-3" "list_dir(SSH, Server, Path) -> Result")
               "ct_ssh:list_dir/2"
               ("http://www.erlang.org/doc/man/ct_ssh.html#list_dir-2" "list_dir(SSH, Path) -> Result")
               "ct_ssh:get_file_info/3"
               ("http://www.erlang.org/doc/man/ct_ssh.html#get_file_info-3" "get_file_info(SSH, Server, Handle) -> Result")
               "ct_ssh:get_file_info/2"
               ("http://www.erlang.org/doc/man/ct_ssh.html#get_file_info-2" "get_file_info(SSH, Handle) -> Result")
               "ct_ssh:exec/4"
               ("http://www.erlang.org/doc/man/ct_ssh.html#exec-4" "exec(SSH, ChannelId, Command, Timeout) -> {ok, Data} | {error, Reason}")
               "ct_ssh:exec/3"
               ("http://www.erlang.org/doc/man/ct_ssh.html#exec-3" "exec(SSH, Command, Timeout) -> {ok, Data} | {error, Reason}")
               "ct_ssh:exec/2"
               ("http://www.erlang.org/doc/man/ct_ssh.html#exec-2" "exec(SSH, Command) -> {ok, Data} | {error, Reason}")
               "ct_ssh:disconnect/1"
               ("http://www.erlang.org/doc/man/ct_ssh.html#disconnect-1" "disconnect(SSH) -> ok | {error, Reason}")
               "ct_ssh:delete/3"
               ("http://www.erlang.org/doc/man/ct_ssh.html#delete-3" "delete(SSH, Server, Name) -> Result")
               "ct_ssh:delete/2"
               ("http://www.erlang.org/doc/man/ct_ssh.html#delete-2" "delete(SSH, Name) -> Result")
               "ct_ssh:del_dir/3"
               ("http://www.erlang.org/doc/man/ct_ssh.html#del_dir-3" "del_dir(SSH, Server, Name) -> Result")
               "ct_ssh:del_dir/2"
               ("http://www.erlang.org/doc/man/ct_ssh.html#del_dir-2" "del_dir(SSH, Name) -> Result")
               "ct_ssh:connect/3"
               ("http://www.erlang.org/doc/man/ct_ssh.html#connect-3" "connect(KeyOrName, ConnType, ExtraOpts) -> {ok, Handle} | {error, Reason}")
               "ct_ssh:connect/2"
               ("http://www.erlang.org/doc/man/ct_ssh.html#connect-2" "connect(KeyOrName, ConnType) -> {ok, Handle} | {error, Reason}")
               "ct_ssh:connect/1"
               ("http://www.erlang.org/doc/man/ct_ssh.html#connect-1" "connect(KeyOrName) -> {ok, Handle} | {error, Reason}")
               "ct_ssh:close/3"
               ("http://www.erlang.org/doc/man/ct_ssh.html#close-3" "close(SSH, Server, Handle) -> Result")
               "ct_ssh:close/2"
               ("http://www.erlang.org/doc/man/ct_ssh.html#close-2" "close(SSH, Handle) -> Result")
               "ct_ssh:awrite/4"
               ("http://www.erlang.org/doc/man/ct_ssh.html#awrite-4" "awrite(SSH, Server, Handle, Data) -> Result")
               "ct_ssh:awrite/3"
               ("http://www.erlang.org/doc/man/ct_ssh.html#awrite-3" "awrite(SSH, Handle, Data) -> Result")
               "ct_ssh:aread/4"
               ("http://www.erlang.org/doc/man/ct_ssh.html#aread-4" "aread(SSH, Server, Handle, Len) -> Result")
               "ct_ssh:aread/3"
               ("http://www.erlang.org/doc/man/ct_ssh.html#aread-3" "aread(SSH, Handle, Len) -> Result")
               "ct_ssh:apwrite/5"
               ("http://www.erlang.org/doc/man/ct_ssh.html#apwrite-5" "apwrite(SSH, Server, Handle, Position, Data) -> Result")
               "ct_ssh:apwrite/4"
               ("http://www.erlang.org/doc/man/ct_ssh.html#apwrite-4" "apwrite(SSH, Handle, Position, Data) -> Result")
               "ct_ssh:apread/5"
               ("http://www.erlang.org/doc/man/ct_ssh.html#apread-5" "apread(SSH, Server, Handle, Position, Length) -> Result")
               "ct_ssh:apread/4"
               ("http://www.erlang.org/doc/man/ct_ssh.html#apread-4" "apread(SSH, Handle, Position, Length) -> Result")
               "ct_ssh:"
               ("http://www.erlang.org/doc/man/ct_ssh.html#type-connection" "  For target_name , see module ct . ")
               "ct_telnet:sendf/4"
               ("http://www.erlang.org/doc/man/ct_telnet.html#sendf-4" "sendf(Connection, CmdFormat, Args, Opts) -> ok | {error, Reason}")
               "ct_telnet:sendf/3"
               ("http://www.erlang.org/doc/man/ct_telnet.html#sendf-3" "sendf(Connection, CmdFormat, Args) -> ok | {error, Reason}")
               "ct_telnet:send/3"
               ("http://www.erlang.org/doc/man/ct_telnet.html#send-3" "send(Connection, Cmd, Opts) -> ok | {error, Reason}")
               "ct_telnet:send/2"
               ("http://www.erlang.org/doc/man/ct_telnet.html#send-2" "send(Connection, Cmd) -> ok | {error, Reason}")
               "ct_telnet:open/4"
               ("http://www.erlang.org/doc/man/ct_telnet.html#open-4" "open(KeyOrName, ConnType, TargetMod, Extra) -> {ok, Handle} | {error, Reason}")
               "ct_telnet:open/3"
               ("http://www.erlang.org/doc/man/ct_telnet.html#open-3" "open(KeyOrName, ConnType, TargetMod) -> {ok, Handle} | {error, Reason}")
               "ct_telnet:open/2"
               ("http://www.erlang.org/doc/man/ct_telnet.html#open-2" "open(Name, ConnType) -> {ok, Handle} | {error, Reason}")
               "ct_telnet:open/1"
               ("http://www.erlang.org/doc/man/ct_telnet.html#open-1" "open(Name) -> {ok, Handle} | {error, Reason}")
               "ct_telnet:get_data/1"
               ("http://www.erlang.org/doc/man/ct_telnet.html#get_data-1" "get_data(Connection) -> {ok, Data} | {error, Reason}")
               "ct_telnet:expect/3"
               ("http://www.erlang.org/doc/man/ct_telnet.html#expect-3" "expect(Connection, Patterns, Opts) -> {ok, Match} | {ok, MatchList, HaltReason} | {error, Reason}")
               "ct_telnet:expect/2"
               ("http://www.erlang.org/doc/man/ct_telnet.html#expect-2" "expect(Connection, Patterns) -> term()")
               "ct_telnet:cmdf/4"
               ("http://www.erlang.org/doc/man/ct_telnet.html#cmdf-4" "cmdf(Connection, CmdFormat, Args, Opts) -> {ok, Data} | {error, Reason}")
               "ct_telnet:cmdf/3"
               ("http://www.erlang.org/doc/man/ct_telnet.html#cmdf-3" "cmdf(Connection, CmdFormat, Args) -> {ok, Data} | {error, Reason}")
               "ct_telnet:cmd/3"
               ("http://www.erlang.org/doc/man/ct_telnet.html#cmd-3" "cmd(Connection, Cmd, Opts) -> {ok, Data} | {error, Reason}")
               "ct_telnet:cmd/2"
               ("http://www.erlang.org/doc/man/ct_telnet.html#cmd-2" "cmd(Connection, Cmd) -> {ok, Data} | {error, Reason}")
               "ct_telnet:close/1"
               ("http://www.erlang.org/doc/man/ct_telnet.html#close-1" "close(Connection) -> ok | {error, Reason}")
               "ct_telnet:"
               ("http://www.erlang.org/doc/man/ct_telnet.html#type-connection" "  For target_name() , see module ct . ")
               "dbg:stop_clear/0"
               ("http://www.erlang.org/doc/man/dbg.html#stop_clear-0" "stop_clear() -> ok")
               "dbg:stop/0"
               ("http://www.erlang.org/doc/man/dbg.html#stop-0" "stop() -> ok")
               "dbg:get_tracer/1"
               ("http://www.erlang.org/doc/man/dbg.html#get_tracer-1" "get_tracer(Nodename) -> {ok, Tracer}")
               "dbg:get_tracer/0"
               ("http://www.erlang.org/doc/man/dbg.html#get_tracer-0" "get_tracer()")
               "dbg:stop_trace_client/1"
               ("http://www.erlang.org/doc/man/dbg.html#stop_trace_client-1" "stop_trace_client(Pid) -> ok")
               "dbg:trace_client/3"
               ("http://www.erlang.org/doc/man/dbg.html#trace_client-3" "trace_client(Type, Parameters, HandlerSpec) -> pid()")
               "dbg:trace_client/2"
               ("http://www.erlang.org/doc/man/dbg.html#trace_client-2" "trace_client(Type, Parameters) -> pid()")
               "dbg:trace_port_control/2"
               ("http://www.erlang.org/doc/man/dbg.html#trace_port_control-2" "trace_port_control(Nodename,Operation) ->  ok | {ok, Result} | {error, Reason}")
               "dbg:trace_port_control/1"
               ("http://www.erlang.org/doc/man/dbg.html#trace_port_control-1" "trace_port_control(Operation)")
               "dbg:flush_trace_port/1"
               ("http://www.erlang.org/doc/man/dbg.html#flush_trace_port-1" "flush_trace_port(Nodename) -> ok | {error, Reason}")
               "dbg:flush_trace_port/0"
               ("http://www.erlang.org/doc/man/dbg.html#flush_trace_port-0" "flush_trace_port()")
               "dbg:trace_port/2"
               ("http://www.erlang.org/doc/man/dbg.html#trace_port-2" "trace_port(Type, Parameters) -> fun()")
               "dbg:tracer/3"
               ("http://www.erlang.org/doc/man/dbg.html#tracer-3" "tracer(Nodename, Type, Data) -> {ok, Nodename} | {error, Reason}")
               "dbg:tracer/2"
               ("http://www.erlang.org/doc/man/dbg.html#tracer-2" "tracer(Type, Data) -> {ok, pid()} | {error, Error}")
               "dbg:tracer/0"
               ("http://www.erlang.org/doc/man/dbg.html#tracer-0" "tracer() -> {ok, pid()} | {error, already_started}")
               "dbg:ln/0"
               ("http://www.erlang.org/doc/man/dbg.html#ln-0" "ln() -> ok")
               "dbg:cn/1"
               ("http://www.erlang.org/doc/man/dbg.html#cn-1" "cn(Nodename) -> ok")
               "dbg:n/1"
               ("http://www.erlang.org/doc/man/dbg.html#n-1" "n(Nodename) -> {ok, Nodename} | {error, Reason}")
               "dbg:rtp/1"
               ("http://www.erlang.org/doc/man/dbg.html#rtp-1" "rtp(Name) -> ok | {error, Error}")
               "dbg:wtp/1"
               ("http://www.erlang.org/doc/man/dbg.html#wtp-1" "wtp(Name) -> ok | {error, IOError}")
               "dbg:dtp/1"
               ("http://www.erlang.org/doc/man/dbg.html#dtp-1" "dtp(N) -> ok")
               "dbg:dtp/0"
               ("http://www.erlang.org/doc/man/dbg.html#dtp-0" "dtp() -> ok")
               "dbg:ltp/0"
               ("http://www.erlang.org/doc/man/dbg.html#ltp-0" "ltp() -> ok")
               "dbg:ctpe/1"
               ("http://www.erlang.org/doc/man/dbg.html#ctpe-1" "ctpe(Event) -> {ok, MatchDesc} | {error, term()}")
               "dbg:ctpg/1"
               ("http://www.erlang.org/doc/man/dbg.html#ctpg-1" "ctpg(Module)")
               "dbg:ctpg/3"
               ("http://www.erlang.org/doc/man/dbg.html#ctpg-3" "ctpg(Module, Function, Arity)")
               "dbg:ctpg/2"
               ("http://www.erlang.org/doc/man/dbg.html#ctpg-2" "ctpg(Module, Function)")
               "dbg:ctpg/0"
               ("http://www.erlang.org/doc/man/dbg.html#ctpg-0" "ctpg()")
               "dbg:ctpl/1"
               ("http://www.erlang.org/doc/man/dbg.html#ctpl-1" "ctpl(Module)")
               "dbg:ctpl/3"
               ("http://www.erlang.org/doc/man/dbg.html#ctpl-3" "ctpl(Module, Function, Arity)")
               "dbg:ctpl/2"
               ("http://www.erlang.org/doc/man/dbg.html#ctpl-2" "ctpl(Module, Function)")
               "dbg:ctpl/0"
               ("http://www.erlang.org/doc/man/dbg.html#ctpl-0" "ctpl()")
               "dbg:ctp/1"
               ("http://www.erlang.org/doc/man/dbg.html#ctp-1" "ctp(Module)")
               "dbg:ctp/3"
               ("http://www.erlang.org/doc/man/dbg.html#ctp-3" "ctp(Module, Function, Arity)")
               "dbg:ctp/2"
               ("http://www.erlang.org/doc/man/dbg.html#ctp-2" "ctp(Module, Function)")
               "dbg:ctp/0"
               ("http://www.erlang.org/doc/man/dbg.html#ctp-0" "ctp()")
               "dbg:tpe/2"
               ("http://www.erlang.org/doc/man/dbg.html#tpe-2" "tpe(Event, MatchSpec) -> {ok, MatchDesc} | {error, term()}")
               "dbg:tpl/2"
               ("http://www.erlang.org/doc/man/dbg.html#tpl-2" "tpl(Module,MatchSpec)")
               "dbg:tpl/4"
               ("http://www.erlang.org/doc/man/dbg.html#tpl-4" "tpl(Module, Function, Arity, MatchSpec)")
               "dbg:tpl/3"
               ("http://www.erlang.org/doc/man/dbg.html#tpl-3" "tpl(Module,Function,MatchSpec)")
               "dbg:tp/2"
               ("http://www.erlang.org/doc/man/dbg.html#tp-2" "tp(Module,MatchSpec)")
               "dbg:tp/4"
               ("http://www.erlang.org/doc/man/dbg.html#tp-4" "tp(Module, Function, Arity, MatchSpec)")
               "dbg:tp/3"
               ("http://www.erlang.org/doc/man/dbg.html#tp-3" "tp(Module,Function,MatchSpec)")
               "dbg:i/0"
               ("http://www.erlang.org/doc/man/dbg.html#i-0" "i() -> ok")
               "dbg:c/4"
               ("http://www.erlang.org/doc/man/dbg.html#c-4" "c(Mod, Fun, Args, Flags)")
               "dbg:c/3"
               ("http://www.erlang.org/doc/man/dbg.html#c-3" "c(Mod, Fun, Args)")
               "dbg:p/2"
               ("http://www.erlang.org/doc/man/dbg.html#p-2" "p(Item, Flags) -> {ok, MatchDesc} | {error, term()}")
               "dbg:p/1"
               ("http://www.erlang.org/doc/man/dbg.html#p-1" "p(Item) -> {ok, MatchDesc} | {error, term()}")
               "dbg:h/1"
               ("http://www.erlang.org/doc/man/dbg.html#h-1" "h(Item) -> ok")
               "dbg:h/0"
               ("http://www.erlang.org/doc/man/dbg.html#h-0" "h() -> ok")
               "dbg:fun2ms/1"
               ("http://www.erlang.org/doc/man/dbg.html#fun2ms-1" "fun2ms(LiteralFun) -> MatchSpec")
               "debugger:quick/3"
               ("http://www.erlang.org/doc/man/debugger.html#quick-3" "quick(Module, Name, Args)")
               "debugger:start/2"
               ("http://www.erlang.org/doc/man/debugger.html#start-2" "start(Mode, File)")
               "debugger:start/1"
               ("http://www.erlang.org/doc/man/debugger.html#start-1" "start(File)")
               "debugger:start/0"
               ("http://www.erlang.org/doc/man/debugger.html#start-0" "start()")
               "dets:update_counter/3"
               ("http://www.erlang.org/doc/man/dets.html#update_counter-3" "update_counter(Name, Key, Increment) -> Result")
               "dets:traverse/2"
               ("http://www.erlang.org/doc/man/dets.html#traverse-2" "traverse(Name, Fun) -> Return | {error, Reason}")
               "dets:to_ets/2"
               ("http://www.erlang.org/doc/man/dets.html#to_ets-2" "to_ets(Name, EtsTab) -> EtsTab | {error, Reason}")
               "dets:table/2"
               ("http://www.erlang.org/doc/man/dets.html#table-2" "table(Name, Options) -> QueryHandle")
               "dets:table/1"
               ("http://www.erlang.org/doc/man/dets.html#table-1" "table(Name) -> QueryHandle")
               "dets:sync/1"
               ("http://www.erlang.org/doc/man/dets.html#sync-1" "sync(Name) -> ok | {error, Reason}")
               "dets:slot/2"
               ("http://www.erlang.org/doc/man/dets.html#slot-2" "slot(Name, I) -> '$end_of_table' | Objects | {error, Reason}")
               "dets:select_delete/2"
               ("http://www.erlang.org/doc/man/dets.html#select_delete-2" "select_delete(Name, MatchSpec) -> N | {error, Reason}")
               "dets:select/3"
               ("http://www.erlang.org/doc/man/dets.html#select-3" "select(Name, MatchSpec, N) -> {Selection, Continuation} | '$end_of_table' | {error, Reason}")
               "dets:select/2"
               ("http://www.erlang.org/doc/man/dets.html#select-2" "select(Name, MatchSpec) -> Selection | {error, Reason}")
               "dets:select/1"
               ("http://www.erlang.org/doc/man/dets.html#select-1" "select(Continuation) -> {Selection, Continuation2} | '$end_of_table' | {error, Reason}")
               "dets:safe_fixtable/2"
               ("http://www.erlang.org/doc/man/dets.html#safe_fixtable-2" "safe_fixtable(Name, Fix) -> ok")
               "dets:repair_continuation/2"
               ("http://www.erlang.org/doc/man/dets.html#repair_continuation-2" "repair_continuation(Continuation, MatchSpec) -> Continuation2")
               "dets:pid2name/1"
               ("http://www.erlang.org/doc/man/dets.html#pid2name-1" "pid2name(Pid) -> {ok, Name} | undefined")
               "dets:open_file/2"
               ("http://www.erlang.org/doc/man/dets.html#open_file-2" "open_file(Name, Args) -> {ok, Name} | {error, Reason}")
               "dets:open_file/1"
               ("http://www.erlang.org/doc/man/dets.html#open_file-1" "open_file(Filename) -> {ok, Reference} | {error, Reason}")
               "dets:next/2"
               ("http://www.erlang.org/doc/man/dets.html#next-2" "next(Name, Key1) -> Key2 | '$end_of_table'")
               "dets:member/2"
               ("http://www.erlang.org/doc/man/dets.html#member-2" "member(Name, Key) -> boolean() | {error, Reason}")
               "dets:match_object/3"
               ("http://www.erlang.org/doc/man/dets.html#match_object-3" "match_object(Name, Pattern, N) -> {Objects, Continuation} | '$end_of_table' | {error, Reason}")
               "dets:match_object/2"
               ("http://www.erlang.org/doc/man/dets.html#match_object-2" "match_object(Name, Pattern) -> Objects | {error, Reason}")
               "dets:match_object/1"
               ("http://www.erlang.org/doc/man/dets.html#match_object-1" "match_object(Continuation) -> {Objects, Continuation2} | '$end_of_table' | {error, Reason}")
               "dets:match_delete/2"
               ("http://www.erlang.org/doc/man/dets.html#match_delete-2" "match_delete(Name, Pattern) -> ok | {error, Reason}")
               "dets:match/3"
               ("http://www.erlang.org/doc/man/dets.html#match-3" "match(Name, Pattern, N) -> {[Match], Continuation} | '$end_of_table' | {error, Reason}")
               "dets:match/2"
               ("http://www.erlang.org/doc/man/dets.html#match-2" "match(Name, Pattern) -> [Match] | {error, Reason}")
               "dets:match/1"
               ("http://www.erlang.org/doc/man/dets.html#match-1" "match(Continuation) -> {[Match], Continuation2} | '$end_of_table' | {error, Reason}")
               "dets:lookup/2"
               ("http://www.erlang.org/doc/man/dets.html#lookup-2" "lookup(Name, Key) -> Objects | {error, Reason}")
               "dets:is_dets_file/1"
               ("http://www.erlang.org/doc/man/dets.html#is_dets_file-1" "is_dets_file(Filename) -> boolean() | {error, Reason}")
               "dets:is_compatible_bchunk_format/2"
               ("http://www.erlang.org/doc/man/dets.html#is_compatible_bchunk_format-2" "is_compatible_bchunk_format(Name, BchunkFormat) -> boolean()")
               "dets:insert_new/2"
               ("http://www.erlang.org/doc/man/dets.html#insert_new-2" "insert_new(Name, Objects) -> boolean() | {error, Reason}")
               "dets:insert/2"
               ("http://www.erlang.org/doc/man/dets.html#insert-2" "insert(Name, Objects) -> ok | {error, Reason}")
               "dets:init_table/3"
               ("http://www.erlang.org/doc/man/dets.html#init_table-3" "init_table(Name, InitFun, Options) -> ok | {error, Reason}")
               "dets:init_table/2"
               ("http://www.erlang.org/doc/man/dets.html#init_table-2" "init_table(Name, InitFun) -> ok | {error, Reason}")
               "dets:info/2"
               ("http://www.erlang.org/doc/man/dets.html#info-2" "info(Name, Item) -> Value | undefined")
               "dets:info/1"
               ("http://www.erlang.org/doc/man/dets.html#info-1" "info(Name) -> InfoList | undefined")
               "dets:from_ets/2"
               ("http://www.erlang.org/doc/man/dets.html#from_ets-2" "from_ets(Name, EtsTab) -> ok | {error, Reason}")
               "dets:foldr/3"
               ("http://www.erlang.org/doc/man/dets.html#foldr-3" "foldr(Function, Acc0, Name) -> Acc | {error, Reason}")
               "dets:foldl/3"
               ("http://www.erlang.org/doc/man/dets.html#foldl-3" "foldl(Function, Acc0, Name) -> Acc | {error, Reason}")
               "dets:first/1"
               ("http://www.erlang.org/doc/man/dets.html#first-1" "first(Name) -> Key | '$end_of_table'")
               "dets:delete_object/2"
               ("http://www.erlang.org/doc/man/dets.html#delete_object-2" "delete_object(Name, Object) -> ok | {error, Reason}")
               "dets:delete_all_objects/1"
               ("http://www.erlang.org/doc/man/dets.html#delete_all_objects-1" "delete_all_objects(Name) -> ok | {error, Reason}")
               "dets:delete/2"
               ("http://www.erlang.org/doc/man/dets.html#delete-2" "delete(Name, Key) -> ok | {error, Reason}")
               "dets:close/1"
               ("http://www.erlang.org/doc/man/dets.html#close-1" "close(Name) -> ok | {error, Reason}")
               "dets:bchunk/2"
               ("http://www.erlang.org/doc/man/dets.html#bchunk-2" "bchunk(Name, Continuation) -> {Continuation2, Data} | '$end_of_table' | {error, Reason}")
               "dets:all/0"
               ("http://www.erlang.org/doc/man/dets.html#all-0" "all() -> [ tab_name() ]")
               "dets:version()"
               ("http://www.erlang.org/doc/man/dets.html#type-version" "version() = 8 | 9 | default")
               "dets:type()"
               ("http://www.erlang.org/doc/man/dets.html#type-type" "type() = bag | duplicate_bag | set")
               "dets:tab_name()"
               ("http://www.erlang.org/doc/man/dets.html#type-tab_name" "tab_name() = term()")
               "dets:select_cont()"
               ("http://www.erlang.org/doc/man/dets.html#type-select_cont" "select_cont()")
               "dets:pattern()"
               ("http://www.erlang.org/doc/man/dets.html#type-pattern" "pattern() = atom() | tuple()")
               "dets:object_cont()"
               ("http://www.erlang.org/doc/man/dets.html#type-object_cont" "object_cont()")
               "dets:object()"
               ("http://www.erlang.org/doc/man/dets.html#type-object" "object() = tuple()")
               "dets:no_slots()"
               ("http://www.erlang.org/doc/man/dets.html#type-no_slots" "no_slots() = integer() >= 0 | default")
               "dets:match_spec()"
               ("http://www.erlang.org/doc/man/dets.html#type-match_spec" "match_spec() = ets:match_spec()")
               "dets:keypos()"
               ("http://www.erlang.org/doc/man/dets.html#type-keypos" "keypos() = integer() >= 1")
               "dets:cont()"
               ("http://www.erlang.org/doc/man/dets.html#type-cont" "cont()")
               "dets:bindings_cont()"
               ("http://www.erlang.org/doc/man/dets.html#type-bindings_cont" "bindings_cont()")
               "dets:auto_save()"
               ("http://www.erlang.org/doc/man/dets.html#type-auto_save" "auto_save() = infinity | integer() >= 0")
               "dets:access()"
               ("http://www.erlang.org/doc/man/dets.html#type-access" "access() = read | read_write")
               "dialyzer:run/1"
               ("http://www.erlang.org/doc/man/dialyzer.html#run-1" "run(OptList) -> Warnings")
               "dialyzer:plt_info/1"
               ("http://www.erlang.org/doc/man/dialyzer.html#plt_info-1" "plt_info(string()) -> {'ok', [{atom(), any()}]} | {'error', atom()}")
               "dialyzer:gui/1"
               ("http://www.erlang.org/doc/man/dialyzer.html#gui-1" "gui(OptList) -> ok | {error, Msg}")
               "dialyzer:gui/0"
               ("http://www.erlang.org/doc/man/dialyzer.html#gui-0" "gui() -> ok | {error, Msg}")
               "dialyzer:format_warning/1"
               ("http://www.erlang.org/doc/man/dialyzer.html#format_warning-1" "format_warning(Msg) -> string()")
               "diameter:unsubscribe/1"
               ("http://www.erlang.org/doc/man/diameter.html#unsubscribe-1" "unsubscribe(SvcName) -> true")
               "diameter:subscribe/1"
               ("http://www.erlang.org/doc/man/diameter.html#subscribe-1" "subscribe(SvcName) -> true")
               "diameter:stop_service/1"
               ("http://www.erlang.org/doc/man/diameter.html#stop_service-1" "stop_service(SvcName) -> ok | {error, Reason}")
               "diameter:stop/0"
               ("http://www.erlang.org/doc/man/diameter.html#stop-0" "stop() -> ok | {error, Reason}")
               "diameter:start_service/2"
               ("http://www.erlang.org/doc/man/diameter.html#start_service-2" "start_service(SvcName, Options) -> ok | {error, Reason}")
               "diameter:start/0"
               ("http://www.erlang.org/doc/man/diameter.html#start-0" "start() -> ok | {error, Reason}")
               "diameter:session_id/1"
               ("http://www.erlang.org/doc/man/diameter.html#session_id-1" "session_id(Ident) -> OctetString()")
               "diameter:services/0"
               ("http://www.erlang.org/doc/man/diameter.html#services-0" "services() -> [SvcName]")
               "diameter:service_info/2"
               ("http://www.erlang.org/doc/man/diameter.html#service_info-2" "service_info(SvcName, Info) -> term()")
               "diameter:remove_transport/2"
               ("http://www.erlang.org/doc/man/diameter.html#remove_transport-2" "remove_transport(SvcName, Pred) -> ok | {error, Reason}")
               "diameter:origin_state_id/0"
               ("http://www.erlang.org/doc/man/diameter.html#origin_state_id-0" "origin_state_id() -> Unsigned32()")
               "diameter:call/4"
               ("http://www.erlang.org/doc/man/diameter.html#call-4" "call(SvcName, App, Request, [Opt]) -> Answer | ok | {error, Reason}")
               "diameter:add_transport/2"
               ("http://www.erlang.org/doc/man/diameter.html#add_transport-2" "add_transport(SvcName, {connect|listen, [Opt]})\n        -> {ok, Ref} | {error, Reason}")
               "diameter_app:Mod:handle_request/3"
               ("http://www.erlang.org/doc/man/diameter_app.html#Mod:handle_request-3" "Mod:handle_request(Packet, SvcName, Peer) -> Action")
               "diameter_app:Mod:handle_error/4"
               ("http://www.erlang.org/doc/man/diameter_app.html#Mod:handle_error-4" "Mod:handle_error(Reason, Request, SvcName, Peer) -> Result")
               "diameter_app:Mod:handle_answer/4"
               ("http://www.erlang.org/doc/man/diameter_app.html#Mod:handle_answer-4" "Mod:handle_answer(Packet, Request, SvcName, Peer) -> Result")
               "diameter_app:Mod:prepare_retransmit/3"
               ("http://www.erlang.org/doc/man/diameter_app.html#Mod:prepare_retransmit-3" "Mod:prepare_retransmit(Packet, SvcName, Peer) -> Action")
               "diameter_app:Mod:prepare_request/3"
               ("http://www.erlang.org/doc/man/diameter_app.html#Mod:prepare_request-3" "Mod:prepare_request(Packet, SvcName, Peer) -> Action")
               "diameter_app:Mod:pick_peer/4"
               ("http://www.erlang.org/doc/man/diameter_app.html#Mod:pick_peer-4" "Mod:pick_peer(LocalCandidates, RemoteCandidates, SvcName, State)\n      -> Selection | false")
               "diameter_app:Mod:peer_down/3"
               ("http://www.erlang.org/doc/man/diameter_app.html#Mod:peer_down-3" "Mod:peer_down(SvcName, Peer, State) -> NewState")
               "diameter_app:Mod:peer_up/3"
               ("http://www.erlang.org/doc/man/diameter_app.html#Mod:peer_up-3" "Mod:peer_up(SvcName, Peer, State) -> NewState")
               "diameter_codec:encode/2"
               ("http://www.erlang.org/doc/man/diameter_codec.html#encode-2" "encode(Mod, Msg) -> Pkt")
               "diameter_codec:decode/2"
               ("http://www.erlang.org/doc/man/diameter_codec.html#decode-2" "decode(Mod, Bin) -> Pkt")
               "diameter_make:format_error/1"
               ("http://www.erlang.org/doc/man/diameter_make.html#format_error-1" "format_error(Reason) -> string()")
               "diameter_make:flatten/1"
               ("http://www.erlang.org/doc/man/diameter_make.html#flatten-1" "flatten(Parsed) -> term()")
               "diameter_make:format/1"
               ("http://www.erlang.org/doc/man/diameter_make.html#format-1" "format(Parsed) -> iolist()")
               "diameter_make:codec/2"
               ("http://www.erlang.org/doc/man/diameter_make.html#codec-2" "codec(File :: iolist() | binary(), [Opt]) -> ok\n                                                 | {ok, [Out]}\n                                                 | {error, Reason}")
               "diameter_sctp:start/3"
               ("http://www.erlang.org/doc/man/diameter_sctp.html#start-3" "start({Type, Ref}, Svc, [Opt])\n         -> {ok, Pid, [LAddr]} | {error, Reason}")
               "diameter_tcp:start/3"
               ("http://www.erlang.org/doc/man/diameter_tcp.html#start-3" "start({Type, Ref}, Svc, [Opt])\n         -> {ok, Pid}\n          | {ok, Pid, [LAddr]}\n          | {error, Reason}")
               "diameter_transport:Mod:start/3"
               ("http://www.erlang.org/doc/man/diameter_transport.html#Mod:start-3" "Mod:start({Type, Ref}, Svc, Config)\n         -> {ok, Pid}\n          | {ok, Pid, LAddrs}\n          | {error, Reason}")
               "dict:update_counter/3"
               ("http://www.erlang.org/doc/man/dict.html#update_counter-3" "update_counter(Key, Increment, Dict1) -> Dict2")
               "dict:update/4"
               ("http://www.erlang.org/doc/man/dict.html#update-4" "update(Key, Fun, Initial, Dict1) -> Dict2")
               "dict:update/3"
               ("http://www.erlang.org/doc/man/dict.html#update-3" "update(Key, Fun, Dict1) -> Dict2")
               "dict:to_list/1"
               ("http://www.erlang.org/doc/man/dict.html#to_list-1" "to_list(Dict) -> List")
               "dict:store/3"
               ("http://www.erlang.org/doc/man/dict.html#store-3" "store(Key, Value, Dict1) -> Dict2")
               "dict:size/1"
               ("http://www.erlang.org/doc/man/dict.html#size-1" "size(Dict) -> integer() >= 0")
               "dict:new/0"
               ("http://www.erlang.org/doc/man/dict.html#new-0" "new() -> dict()")
               "dict:merge/3"
               ("http://www.erlang.org/doc/man/dict.html#merge-3" "merge(Fun, Dict1, Dict2) -> Dict3")
               "dict:map/2"
               ("http://www.erlang.org/doc/man/dict.html#map-2" "map(Fun, Dict1) -> Dict2")
               "dict:is_key/2"
               ("http://www.erlang.org/doc/man/dict.html#is_key-2" "is_key(Key, Dict) -> boolean()")
               "dict:is_empty/1"
               ("http://www.erlang.org/doc/man/dict.html#is_empty-1" "is_empty(Dict) -> boolean()")
               "dict:from_list/1"
               ("http://www.erlang.org/doc/man/dict.html#from_list-1" "from_list(List) -> Dict")
               "dict:fold/3"
               ("http://www.erlang.org/doc/man/dict.html#fold-3" "fold(Fun, Acc0, Dict) -> Acc1")
               "dict:find/2"
               ("http://www.erlang.org/doc/man/dict.html#find-2" "find(Key, Dict) -> {ok, Value} | error")
               "dict:filter/2"
               ("http://www.erlang.org/doc/man/dict.html#filter-2" "filter(Pred, Dict1) -> Dict2")
               "dict:fetch_keys/1"
               ("http://www.erlang.org/doc/man/dict.html#fetch_keys-1" "fetch_keys(Dict) -> Keys")
               "dict:fetch/2"
               ("http://www.erlang.org/doc/man/dict.html#fetch-2" "fetch(Key, Dict) -> Value")
               "dict:erase/2"
               ("http://www.erlang.org/doc/man/dict.html#erase-2" "erase(Key, Dict1) -> Dict2")
               "dict:append_list/3"
               ("http://www.erlang.org/doc/man/dict.html#append_list-3" "append_list(Key, ValList, Dict1) -> Dict2")
               "dict:append/3"
               ("http://www.erlang.org/doc/man/dict.html#append-3" "append(Key, Value, Dict1) -> Dict2")
               "dict:dict()"
               ("http://www.erlang.org/doc/man/dict.html#type-dict" "dict() = dict (term(), term())")
               "dict:dict(Key, Value)"
               ("http://www.erlang.org/doc/man/dict.html#type-dict" "dict(Key, Value)")
               "digraph:vertices/1"
               ("http://www.erlang.org/doc/man/digraph.html#vertices-1" "vertices(G) -> Vertices")
               "digraph:vertex/2"
               ("http://www.erlang.org/doc/man/digraph.html#vertex-2" "vertex(G, V) -> {V, Label} | false")
               "digraph:out_neighbours/2"
               ("http://www.erlang.org/doc/man/digraph.html#out_neighbours-2" "out_neighbours(G, V) -> Vertices")
               "digraph:out_edges/2"
               ("http://www.erlang.org/doc/man/digraph.html#out_edges-2" "out_edges(G, V) -> Edges")
               "digraph:out_degree/2"
               ("http://www.erlang.org/doc/man/digraph.html#out_degree-2" "out_degree(G, V) -> integer() >= 0")
               "digraph:no_vertices/1"
               ("http://www.erlang.org/doc/man/digraph.html#no_vertices-1" "no_vertices(G) -> integer() >= 0")
               "digraph:no_edges/1"
               ("http://www.erlang.org/doc/man/digraph.html#no_edges-1" "no_edges(G) -> integer() >= 0")
               "digraph:new/1"
               ("http://www.erlang.org/doc/man/digraph.html#new-1" "new(Type) -> graph()")
               "digraph:new/0"
               ("http://www.erlang.org/doc/man/digraph.html#new-0" "new() -> graph()")
               "digraph:info/1"
               ("http://www.erlang.org/doc/man/digraph.html#info-1" "info(G) -> InfoList")
               "digraph:in_neighbours/2"
               ("http://www.erlang.org/doc/man/digraph.html#in_neighbours-2" "in_neighbours(G, V) -> Vertex")
               "digraph:in_edges/2"
               ("http://www.erlang.org/doc/man/digraph.html#in_edges-2" "in_edges(G, V) -> Edges")
               "digraph:in_degree/2"
               ("http://www.erlang.org/doc/man/digraph.html#in_degree-2" "in_degree(G, V) -> integer() >= 0")
               "digraph:get_short_path/3"
               ("http://www.erlang.org/doc/man/digraph.html#get_short_path-3" "get_short_path(G, V1, V2) -> Vertices | false")
               "digraph:get_short_cycle/2"
               ("http://www.erlang.org/doc/man/digraph.html#get_short_cycle-2" "get_short_cycle(G, V) -> Vertices | false")
               "digraph:get_path/3"
               ("http://www.erlang.org/doc/man/digraph.html#get_path-3" "get_path(G, V1, V2) -> Vertices | false")
               "digraph:get_cycle/2"
               ("http://www.erlang.org/doc/man/digraph.html#get_cycle-2" "get_cycle(G, V) -> Vertices | false")
               "digraph:edges/2"
               ("http://www.erlang.org/doc/man/digraph.html#edges-2" "edges(G, V) -> Edges")
               "digraph:edges/1"
               ("http://www.erlang.org/doc/man/digraph.html#edges-1" "edges(G) -> Edges")
               "digraph:edge/2"
               ("http://www.erlang.org/doc/man/digraph.html#edge-2" "edge(G, E) -> {E, V1, V2, Label} | false")
               "digraph:delete/1"
               ("http://www.erlang.org/doc/man/digraph.html#delete-1" "delete(G) -> true")
               "digraph:del_vertices/2"
               ("http://www.erlang.org/doc/man/digraph.html#del_vertices-2" "del_vertices(G, Vertices) -> true")
               "digraph:del_vertex/2"
               ("http://www.erlang.org/doc/man/digraph.html#del_vertex-2" "del_vertex(G, V) -> true")
               "digraph:del_path/3"
               ("http://www.erlang.org/doc/man/digraph.html#del_path-3" "del_path(G, V1, V2) -> true")
               "digraph:del_edges/2"
               ("http://www.erlang.org/doc/man/digraph.html#del_edges-2" "del_edges(G, Edges) -> true")
               "digraph:del_edge/2"
               ("http://www.erlang.org/doc/man/digraph.html#del_edge-2" "del_edge(G, E) -> true")
               "digraph:add_vertex/3"
               ("http://www.erlang.org/doc/man/digraph.html#add_vertex-3" "add_vertex(G, V, Label) -> vertex()")
               "digraph:add_vertex/2"
               ("http://www.erlang.org/doc/man/digraph.html#add_vertex-2" "add_vertex(G, V) -> vertex()")
               "digraph:add_vertex/1"
               ("http://www.erlang.org/doc/man/digraph.html#add_vertex-1" "add_vertex(G) -> vertex()")
               "digraph:add_edge/5"
               ("http://www.erlang.org/doc/man/digraph.html#add_edge-5" "add_edge(G, E, V1, V2, Label) ->  edge() | {error, add_edge_err_rsn()}")
               "digraph:add_edge/4"
               ("http://www.erlang.org/doc/man/digraph.html#add_edge-4" "add_edge(G, V1, V2, Label) -> edge() | {error, add_edge_err_rsn()}")
               "digraph:add_edge/3"
               ("http://www.erlang.org/doc/man/digraph.html#add_edge-3" "add_edge(G, V1, V2) -> edge() | {error, add_edge_err_rsn()}")
               "digraph:"
               ("http://www.erlang.org/doc/man/digraph.html#type-edge" "edge()")
               "digraph:label()"
               ("http://www.erlang.org/doc/man/digraph.html#type-label" "label() = term()")
               "digraph:graph()"
               ("http://www.erlang.org/doc/man/digraph.html#type-graph" "graph()")
               "digraph:d_protection()"
               ("http://www.erlang.org/doc/man/digraph.html#type-d_protection" "d_protection() = private | protected")
               "digraph:d_cyclicity()"
               ("http://www.erlang.org/doc/man/digraph.html#type-d_cyclicity" "d_cyclicity() = acyclic | cyclic")
               "digraph:d_type()"
               ("http://www.erlang.org/doc/man/digraph.html#type-d_type" "d_type() = d_cyclicity() | d_protection()")
               "digraph_utils:topsort/1"
               ("http://www.erlang.org/doc/man/digraph_utils.html#topsort-1" "topsort(Digraph) -> Vertices | false")
               "digraph_utils:subgraph/3"
               ("http://www.erlang.org/doc/man/digraph_utils.html#subgraph-3" "subgraph(Digraph, Vertices, Options) -> SubGraph")
               "digraph_utils:subgraph/2"
               ("http://www.erlang.org/doc/man/digraph_utils.html#subgraph-2" "subgraph(Digraph, Vertices) -> SubGraph")
               "digraph_utils:strong_components/1"
               ("http://www.erlang.org/doc/man/digraph_utils.html#strong_components-1" "strong_components(Digraph) -> [StrongComponent]")
               "digraph_utils:reaching_neighbours/2"
               ("http://www.erlang.org/doc/man/digraph_utils.html#reaching_neighbours-2" "reaching_neighbours(Vertices, Digraph) -> Reaching")
               "digraph_utils:reaching/2"
               ("http://www.erlang.org/doc/man/digraph_utils.html#reaching-2" "reaching(Vertices, Digraph) -> Reaching")
               "digraph_utils:reachable_neighbours/2"
               ("http://www.erlang.org/doc/man/digraph_utils.html#reachable_neighbours-2" "reachable_neighbours(Vertices, Digraph) -> Reachable")
               "digraph_utils:reachable/2"
               ("http://www.erlang.org/doc/man/digraph_utils.html#reachable-2" "reachable(Vertices, Digraph) -> Reachable")
               "digraph_utils:preorder/1"
               ("http://www.erlang.org/doc/man/digraph_utils.html#preorder-1" "preorder(Digraph) -> Vertices")
               "digraph_utils:postorder/1"
               ("http://www.erlang.org/doc/man/digraph_utils.html#postorder-1" "postorder(Digraph) -> Vertices")
               "digraph_utils:loop_vertices/1"
               ("http://www.erlang.org/doc/man/digraph_utils.html#loop_vertices-1" "loop_vertices(Digraph) -> Vertices")
               "digraph_utils:is_tree/1"
               ("http://www.erlang.org/doc/man/digraph_utils.html#is_tree-1" "is_tree(Digraph) -> boolean()")
               "digraph_utils:is_arborescence/1"
               ("http://www.erlang.org/doc/man/digraph_utils.html#is_arborescence-1" "is_arborescence(Digraph) -> boolean()")
               "digraph_utils:is_acyclic/1"
               ("http://www.erlang.org/doc/man/digraph_utils.html#is_acyclic-1" "is_acyclic(Digraph) -> boolean()")
               "digraph_utils:cyclic_strong_components/1"
               ("http://www.erlang.org/doc/man/digraph_utils.html#cyclic_strong_components-1" "cyclic_strong_components(Digraph) -> [StrongComponent]")
               "digraph_utils:condensation/1"
               ("http://www.erlang.org/doc/man/digraph_utils.html#condensation-1" "condensation(Digraph) -> CondensedDigraph")
               "digraph_utils:components/1"
               ("http://www.erlang.org/doc/man/digraph_utils.html#components-1" "components(Digraph) -> [Component]")
               "digraph_utils:arborescence_root/1"
               ("http://www.erlang.org/doc/man/digraph_utils.html#arborescence_root-1" "arborescence_root(Digraph) -> no | {yes, Root}")
               "disk_log:unblock/1"
               ("http://www.erlang.org/doc/man/disk_log.html#unblock-1" "unblock(Log) -> ok | {error, unblock_error_rsn()}")
               "disk_log:btruncate/2"
               ("http://www.erlang.org/doc/man/disk_log.html#btruncate-2" "btruncate(Log, BHead) -> ok | {error, trunc_error_rsn()}")
               "disk_log:truncate/2"
               ("http://www.erlang.org/doc/man/disk_log.html#truncate-2" "truncate(Log, Head) -> ok | {error, trunc_error_rsn()}")
               "disk_log:truncate/1"
               ("http://www.erlang.org/doc/man/disk_log.html#truncate-1" "truncate(Log) -> ok | {error, trunc_error_rsn()}")
               "disk_log:sync/1"
               ("http://www.erlang.org/doc/man/disk_log.html#sync-1" "sync(Log) -> ok | {error, sync_error_rsn()}")
               "disk_log:breopen/3"
               ("http://www.erlang.org/doc/man/disk_log.html#breopen-3" "breopen(Log, File, BHead) -> ok | {error, reopen_error_rsn()}")
               "disk_log:reopen/3"
               ("http://www.erlang.org/doc/man/disk_log.html#reopen-3" "reopen(Log, File, Head) -> ok | {error, reopen_error_rsn()}")
               "disk_log:reopen/2"
               ("http://www.erlang.org/doc/man/disk_log.html#reopen-2" "reopen(Log, File) -> ok | {error, reopen_error_rsn()}")
               "disk_log:pid2name/1"
               ("http://www.erlang.org/doc/man/disk_log.html#pid2name-1" "pid2name(Pid) -> {ok, Log} | undefined")
               "disk_log:open/1"
               ("http://www.erlang.org/doc/man/disk_log.html#open-1" "open(ArgL) -> open_ret() | dist_open_ret()")
               "disk_log:blog_terms/2"
               ("http://www.erlang.org/doc/man/disk_log.html#blog_terms-2" "blog_terms(Log, BytesList) -> ok | {error, Reason :: log_error_rsn()}")
               "disk_log:log_terms/2"
               ("http://www.erlang.org/doc/man/disk_log.html#log_terms-2" "log_terms(Log, TermList) -> ok | {error, Resaon :: log_error_rsn()}")
               "disk_log:blog/2"
               ("http://www.erlang.org/doc/man/disk_log.html#blog-2" "blog(Log, Bytes) -> ok | {error, Reason :: log_error_rsn()}")
               "disk_log:log/2"
               ("http://www.erlang.org/doc/man/disk_log.html#log-2" "log(Log, Term) -> ok | {error, Reason :: log_error_rsn()}")
               "disk_log:lclose/2"
               ("http://www.erlang.org/doc/man/disk_log.html#lclose-2" "lclose(Log, Node) -> ok | {error, lclose_error_rsn()}")
               "disk_log:lclose/1"
               ("http://www.erlang.org/doc/man/disk_log.html#lclose-1" "lclose(Log) -> ok | {error, lclose_error_rsn()}")
               "disk_log:info/1"
               ("http://www.erlang.org/doc/man/disk_log.html#info-1" "info(Log) -> InfoList | {error, no_such_log}")
               "disk_log:inc_wrap_file/1"
               ("http://www.erlang.org/doc/man/disk_log.html#inc_wrap_file-1" "inc_wrap_file(Log) -> ok | {error, inc_wrap_error_rsn()}")
               "disk_log:format_error/1"
               ("http://www.erlang.org/doc/man/disk_log.html#format_error-1" "format_error(Error) -> io_lib:chars()")
               "disk_log:close/1"
               ("http://www.erlang.org/doc/man/disk_log.html#close-1" "close(Log) -> ok | {error, close_error_rsn()}")
               "disk_log:chunk_step/3"
               ("http://www.erlang.org/doc/man/disk_log.html#chunk_step-3" "chunk_step(Log, Continuation, Step) -> {ok, any()} | {error, Reason}")
               "disk_log:chunk_info/1"
               ("http://www.erlang.org/doc/man/disk_log.html#chunk_info-1" "chunk_info(Continuation) -> InfoList | {error, Reason}")
               "disk_log:bchunk/3"
               ("http://www.erlang.org/doc/man/disk_log.html#bchunk-3" "bchunk(Log, Continuation, N) -> bchunk_ret()")
               "disk_log:bchunk/2"
               ("http://www.erlang.org/doc/man/disk_log.html#bchunk-2" "bchunk(Log, Continuation) -> bchunk_ret()")
               "disk_log:chunk/3"
               ("http://www.erlang.org/doc/man/disk_log.html#chunk-3" "chunk(Log, Continuation, N) -> chunk_ret()")
               "disk_log:chunk/2"
               ("http://www.erlang.org/doc/man/disk_log.html#chunk-2" "chunk(Log, Continuation) -> chunk_ret()")
               "disk_log:change_size/2"
               ("http://www.erlang.org/doc/man/disk_log.html#change_size-2" "change_size(Log, Size) -> ok | {error, Reason}")
               "disk_log:change_notify/3"
               ("http://www.erlang.org/doc/man/disk_log.html#change_notify-3" "change_notify(Log, Owner, Notify) -> ok | {error, Reason}")
               "disk_log:change_header/2"
               ("http://www.erlang.org/doc/man/disk_log.html#change_header-2" "change_header(Log, Header) -> ok | {error, Reason}")
               "disk_log:block/2"
               ("http://www.erlang.org/doc/man/disk_log.html#block-2" "block(Log, QueueLogRecords) -> ok | {error, block_error_rsn()}")
               "disk_log:block/1"
               ("http://www.erlang.org/doc/man/disk_log.html#block-1" "block(Log) -> ok | {error, block_error_rsn()}")
               "disk_log:balog_terms/2"
               ("http://www.erlang.org/doc/man/disk_log.html#balog_terms-2" "balog_terms(Log, ByteList) -> notify_ret()")
               "disk_log:alog_terms/2"
               ("http://www.erlang.org/doc/man/disk_log.html#alog_terms-2" "alog_terms(Log, TermList) -> notify_ret()")
               "disk_log:balog/2"
               ("http://www.erlang.org/doc/man/disk_log.html#balog-2" "balog(Log, Bytes) -> notify_ret()")
               "disk_log:alog/2"
               ("http://www.erlang.org/doc/man/disk_log.html#alog-2" "alog(Log, Term) -> notify_ret()")
               "disk_log:accessible_logs/0"
               ("http://www.erlang.org/doc/man/disk_log.html#accessible_logs-0" "accessible_logs() -> {[LocalLog], [DistributedLog]}")
               "disk_log:file_error()"
               ("http://www.erlang.org/doc/man/disk_log.html#type-file_error" "file_error() = term()")
               "disk_log:invalid_header()"
               ("http://www.erlang.org/doc/man/disk_log.html#type-invalid_header" "invalid_header() = term()")
               "disk_log:bytes()"
               ("http://www.erlang.org/doc/man/disk_log.html#type-bytes" "bytes() = binary() | [byte()]")
               "disk_log:continuation()"
               ("http://www.erlang.org/doc/man/disk_log.html#type-continuation" "continuation()")
               "disk_log:dlog_type()"
               ("http://www.erlang.org/doc/man/disk_log.html#type-dlog_type" "dlog_type() = halt | wrap")
               "disk_log:dlog_mode()"
               ("http://www.erlang.org/doc/man/disk_log.html#type-dlog_mode" "dlog_mode() = read_only | read_write")
               "disk_log:dlog_byte()"
               ("http://www.erlang.org/doc/man/disk_log.html#type-dlog_byte" "dlog_byte() = [ dlog_byte() ] | byte()")
               "disk_log:dlog_head_opt()"
               ("http://www.erlang.org/doc/man/disk_log.html#type-dlog_head_opt" "dlog_head_opt() = none | term() | binary() | [ dlog_byte() ]")
               "disk_log:dlog_format()"
               ("http://www.erlang.org/doc/man/disk_log.html#type-dlog_format" "dlog_format() = external | internal")
               "disk_log:dlog_size()"
               ("http://www.erlang.org/doc/man/disk_log.html#type-dlog_size" "dlog_size() = infinity | integer() >= 1 | {MaxNoBytes :: integer() >= 1, MaxNoFiles :: integer() >= 1}")
               "disk_log:log()"
               ("http://www.erlang.org/doc/man/disk_log.html#type-log" "log() = term()")
               "disksup:set_almost_full_threshold/1"
               ("http://www.erlang.org/doc/man/disksup.html#set_almost_full_threshold-1" "set_almost_full_threshold(Float) -> ok")
               "disksup:get_almost_full_threshold/0"
               ("http://www.erlang.org/doc/man/disksup.html#get_almost_full_threshold-0" "get_almost_full_threshold() -> Percent")
               "disksup:set_check_interval/1"
               ("http://www.erlang.org/doc/man/disksup.html#set_check_interval-1" "set_check_interval(Minutes) -> ok")
               "disksup:get_check_interval/0"
               ("http://www.erlang.org/doc/man/disksup.html#get_check_interval-0" "get_check_interval() -> MS")
               "disksup:get_disk_data/0"
               ("http://www.erlang.org/doc/man/disksup.html#get_disk_data-0" "get_disk_data() -> [DiskData]")
               "dyntrace:restore_tag/1"
               ("http://www.erlang.org/doc/man/dyntrace.html#restore_tag-1" "restore_tag(TagData) -> true")
               "dyntrace:spread_tag/1"
               ("http://www.erlang.org/doc/man/dyntrace.html#spread_tag-1" "spread_tag(boolean()) -> TagData")
               "dyntrace:put_tag/1"
               ("http://www.erlang.org/doc/man/dyntrace.html#put_tag-1" "put_tag(Item) -> binary() | undefined")
               "dyntrace:get_tag/0"
               ("http://www.erlang.org/doc/man/dyntrace.html#get_tag-0" "get_tag() -> binary() | undefined")
               "dyntrace:p/8"
               ("http://www.erlang.org/doc/man/dyntrace.html#p-8" "p(integer(), integer(), integer(), integer(), string(), string(), string(), string()) -> true | false | error | badarg")
               "dyntrace:p/7"
               ("http://www.erlang.org/doc/man/dyntrace.html#p-7" "p(integer(), integer(), integer(), integer() | string(), string(), string(), string()) -> true | false | error | badarg")
               "dyntrace:p/6"
               ("http://www.erlang.org/doc/man/dyntrace.html#p-6" "p(integer(), integer(), integer() | string(), integer() | string(), string(), string()) -> true | false | error | badarg")
               "dyntrace:p/5"
               ("http://www.erlang.org/doc/man/dyntrace.html#p-5" "p(integer(), integer() | string(), integer() | string(), integer() | string(), string()) -> true | false | error | badarg")
               "dyntrace:p/4"
               ("http://www.erlang.org/doc/man/dyntrace.html#p-4" "p(integer() | string(), integer() | string(), integer() | string(), integer() | string()) -> true | false | error | badarg")
               "dyntrace:p/3"
               ("http://www.erlang.org/doc/man/dyntrace.html#p-3" "p(integer() | string(), integer() | string(), integer() | string()) -> true | false | error | badarg")
               "dyntrace:p/2"
               ("http://www.erlang.org/doc/man/dyntrace.html#p-2" "p(integer() | string(), integer() | string()) -> true | false | error | badarg")
               "dyntrace:p/1"
               ("http://www.erlang.org/doc/man/dyntrace.html#p-1" "p(integer() | string()) -> true | false | error | badarg")
               "dyntrace:p/0"
               ("http://www.erlang.org/doc/man/dyntrace.html#p-0" "p() -> true | false | error | badarg")
               "dyntrace:available/0"
               ("http://www.erlang.org/doc/man/dyntrace.html#available-0" "available() -> boolean()")
               "edoc:run/2"
               ("http://www.erlang.org/doc/man/edoc.html#run-2" "run(Files::[ filename() ], Options:: proplist() ) -> ok")
               "edoc:read_source/2"
               ("http://www.erlang.org/doc/man/edoc.html#read_source-2" "read_source(File:: filename() , Options:: proplist() ) -> [ syntaxTree() ]")
               "edoc:read_source/1"
               ("http://www.erlang.org/doc/man/edoc.html#read_source-1" "read_source(Name::File) -> [ syntaxTree() ]")
               "edoc:read_comments/2"
               ("http://www.erlang.org/doc/man/edoc.html#read_comments-2" "read_comments(File:: filename() , Options:: proplist() ) -> [ comment() ]")
               "edoc:read_comments/1"
               ("http://www.erlang.org/doc/man/edoc.html#read_comments-1" "read_comments(File) -> [ comment() ]")
               "edoc:read/2"
               ("http://www.erlang.org/doc/man/edoc.html#read-2" "read(File:: filename() , Options:: proplist() ) -> string()")
               "edoc:read/1"
               ("http://www.erlang.org/doc/man/edoc.html#read-1" "read(File:: filename() ) -> string()")
               "edoc:layout/2"
               ("http://www.erlang.org/doc/man/edoc.html#layout-2" "layout(Doc:: edoc_module() , Options:: proplist() ) -> string()")
               "edoc:layout/1"
               ("http://www.erlang.org/doc/man/edoc.html#layout-1" "layout(Doc:: edoc_module() ) -> string()")
               "edoc:get_doc/3"
               ("http://www.erlang.org/doc/man/edoc.html#get_doc-3" "get_doc(File:: filename() , Env:: edoc_lib:edoc_env() , Options:: proplist() ) -> {ModuleName, edoc_module() }")
               "edoc:get_doc/2"
               ("http://www.erlang.org/doc/man/edoc.html#get_doc-2" "get_doc(File:: filename() , Options:: proplist() ) -> {ModuleName, edoc_module() }")
               "edoc:get_doc/1"
               ("http://www.erlang.org/doc/man/edoc.html#get_doc-1" "get_doc(File:: filename() ) -> {ModuleName, edoc_module() }")
               "edoc:files/2"
               ("http://www.erlang.org/doc/man/edoc.html#files-2" "files(Files::[ filename() ], Options:: proplist() ) -> ok")
               "edoc:files/1"
               ("http://www.erlang.org/doc/man/edoc.html#files-1" "files(Files::[ filename() ]) -> ok")
               "edoc:file/2"
               ("http://www.erlang.org/doc/man/edoc.html#file-2" "file(Name:: filename() , Options:: proplist() ) -> ok")
               "edoc:file/1"
               ("http://www.erlang.org/doc/man/edoc.html#file-1" "file(Name:: filename() ) -> ok")
               "edoc:application/3"
               ("http://www.erlang.org/doc/man/edoc.html#application-3" "application(Application::atom(), Dir:: filename() , Options:: proplist() ) -> ok")
               "edoc:application/2"
               ("http://www.erlang.org/doc/man/edoc.html#application-2" "application(Application::atom(), Options:: proplist() ) -> ok")
               "edoc:application/1"
               ("http://www.erlang.org/doc/man/edoc.html#application-1" "application(Application::atom()) -> ok")
               "edoc:"
               ("http://www.erlang.org/doc/man/edoc.html#type-comment" "comment() = {Line, Column, Indentation, Text}")
               "edoc_doclet:run/2"
               ("http://www.erlang.org/doc/man/edoc_doclet.html#run-2" "run(Command:: doclet_gen() | doclet_toc() , Ctxt:: edoc_context() ) -> ok")
               "edoc_doclet:"
               ("http://www.erlang.org/doc/man/edoc_doclet.html#type-doclet_gen" "doclet_gen() = #doclet_gen{sources=[string()], app= no_app() | atom(), modules=[atom()]}")
               "edoc_extract:text/4"
               ("http://www.erlang.org/doc/man/edoc_extract.html#text-4" "text(Text::string(), Context, Env:: edoc_env() , Options:: proplist() ) -> Tags")
               "edoc_extract:source/5"
               ("http://www.erlang.org/doc/man/edoc_extract.html#source-5" "source(Forms, Comments::[ edoc:comment() ], File:: filename() , Env:: edoc_env() , Options:: proplist() ) -> {ModuleName, edoc:edoc_module() }")
               "edoc_extract:source/4"
               ("http://www.erlang.org/doc/man/edoc_extract.html#source-4" "source(Forms, File:: filename() , Env:: edoc_env() , Options:: proplist() ) -> {ModuleName, edoc:edoc_module() }")
               "edoc_extract:source/3"
               ("http://www.erlang.org/doc/man/edoc_extract.html#source-3" "source(File:: filename() , Env:: edoc_env() , Options:: proplist() ) -> {ModuleName, edoc:edoc_module() }")
               "edoc_extract:header/5"
               ("http://www.erlang.org/doc/man/edoc_extract.html#header-5" "header(Forms, Comments::[ edoc:comment() ], File:: filename() , Env:: edoc_env() , Options:: proplist() ) -> {ok, Tags} | {error, Reason}")
               "edoc_extract:header/4"
               ("http://www.erlang.org/doc/man/edoc_extract.html#header-4" "header(Forms, File:: filename() , Env:: edoc_env() , Options:: proplist() ) -> {ok, Tags} | {error, Reason}")
               "edoc_extract:header/3"
               ("http://www.erlang.org/doc/man/edoc_extract.html#header-3" "header(File:: filename() , Env:: edoc_env() , Options:: proplist() ) -> {ok, Tags} | {error, Reason}")
               "edoc_extract:file/4"
               ("http://www.erlang.org/doc/man/edoc_extract.html#file-4" "file(File:: filename() , Context, Env:: edoc_env() , Options:: proplist() ) -> {ok, Tags} | {error, Reason}")
               "edoc_extract:"
               ("http://www.erlang.org/doc/man/edoc_extract.html#type-edoc_env" "edoc_env() = edoc_lib:edoc_env()")
               "edoc_layout:"
               ("http://www.erlang.org/doc/man/edoc_layout.html#type-1" "type(E) -> term()")
               "edoc_layout:type/1"
               ("http://www.erlang.org/doc/man/edoc_layout.html#type-1" "type(E) -> term()")
               "edoc_layout:overview/2"
               ("http://www.erlang.org/doc/man/edoc_layout.html#overview-2" "overview(E, Options) -> term()")
               "edoc_layout:module/2"
               ("http://www.erlang.org/doc/man/edoc_layout.html#module-2" "module(Element, Options) -> term()")
               "edoc_lib:write_file/4"
               ("http://www.erlang.org/doc/man/edoc_lib.html#write_file-4" "write_file(Text, Dir, Name, Options) -> term()")
               "edoc_lib:get_doc_env/3"
               ("http://www.erlang.org/doc/man/edoc_lib.html#get_doc_env-3" "get_doc_env(App, Modules, Options:: proplist() ) -> edoc_env()")
               "edoc_lib:"
               ("http://www.erlang.org/doc/man/edoc_lib.html#type-edoc_env" "edoc_env()")
               "edoc_run:files/1"
               ("http://www.erlang.org/doc/man/edoc_run.html#files-1" "files(Args::[string()]) -> none()")
               "edoc_run:file/1"
               ("http://www.erlang.org/doc/man/edoc_run.html#file-1" "file(Args::[string()]) -> none()")
               "edoc_run:application/1"
               ("http://www.erlang.org/doc/man/edoc_run.html#application-1" "application(Args::[string()]) -> none()")
               "egd:text/5"
               ("http://www.erlang.org/doc/man/egd.html#text-5" "text(Image:: egd_image() , P:: point() , Font:: font() , Text::string(), Color:: color() ) -> ok")
               "egd:save/2"
               ("http://www.erlang.org/doc/man/egd.html#save-2" "save(Binary::binary(), Filename::string()) -> ok")
               "egd:render/3"
               ("http://www.erlang.org/doc/man/egd.html#render-3" "render(Image:: egd_image() , Type::png | raw_bitmap, Options::[ render_option() ]) -> binary()")
               "egd:render/2"
               ("http://www.erlang.org/doc/man/egd.html#render-2" "render(Image:: egd_image() , Type::png | raw_bitmap) -> binary()")
               "egd:render/1"
               ("http://www.erlang.org/doc/man/egd.html#render-1" "render(Image:: egd_image() ) -> binary()")
               "egd:rectangle/4"
               ("http://www.erlang.org/doc/man/egd.html#rectangle-4" "rectangle(Image:: egd_image() , P1:: point() , P2:: point() , Color:: color() ) -> ok")
               "egd:line/4"
               ("http://www.erlang.org/doc/man/egd.html#line-4" "line(Image:: egd_image() , P1:: point() , P2:: point() , Color:: color() ) -> ok")
               "egd:filledRectangle/4"
               ("http://www.erlang.org/doc/man/egd.html#filledRectangle-4" "filledRectangle(Image:: egd_image() , P1:: point() , P2:: point() , Color:: color() ) -> ok")
               "egd:filledEllipse/4"
               ("http://www.erlang.org/doc/man/egd.html#filledEllipse-4" "filledEllipse(Image:: egd_image() , P1:: point() , P2:: point() , Color:: color() ) -> ok")
               "egd:destroy/1"
               ("http://www.erlang.org/doc/man/egd.html#destroy-1" "destroy(Image:: egd_image() ) -> ok")
               "egd:create/2"
               ("http://www.erlang.org/doc/man/egd.html#create-2" "create(Width::integer(), Height::integer()) -> egd_image()")
               "egd:color/1"
               ("http://www.erlang.org/doc/man/egd.html#color-1" "color(Color::Value | Name) -> color()")
               "egd:"
               ("http://www.erlang.org/doc/man/egd.html#type-color" "color()")
               "ei:ei_x_new_with_version()"
               ("http://www.erlang.org/doc/man/ei.html#ei_x_new_with_version" "int ei_x_new_with_version(ei_x_buff* x)")
               "ei:ei_x_new()"
               ("http://www.erlang.org/doc/man/ei.html#ei_x_new" "int ei_x_new(ei_x_buff* x)")
               "ei:ei_x_free()"
               ("http://www.erlang.org/doc/man/ei.html#ei_x_free" "int ei_x_free(ei_x_buff* x)")
               "ei:ei_x_format_wo_ver()"
               ("http://www.erlang.org/doc/man/ei.html#ei_x_format_wo_ver" "int ei_x_format_wo_ver(ei_x_buff* x, const char *fmt, ... )")
               "ei:ei_x_format()"
               ("http://www.erlang.org/doc/man/ei.html#ei_x_format" "int ei_x_format(ei_x_buff* x, const char* fmt, ...)")
               "ei:ei_x_append_buf()"
               ("http://www.erlang.org/doc/man/ei.html#ei_x_append_buf" "int ei_x_append_buf(ei_x_buff* x, const char* buf, int len)")
               "ei:ei_x_append()"
               ("http://www.erlang.org/doc/man/ei.html#ei_x_append" "int ei_x_append(ei_x_buff* x, const ei_x_buff* x2)")
               "ei:ei_skip_term()"
               ("http://www.erlang.org/doc/man/ei.html#ei_skip_term" "int ei_skip_term(const char* buf, int* index)")
               "ei:ei_set_compat_rel()"
               ("http://www.erlang.org/doc/man/ei.html#ei_set_compat_rel" "void ei_set_compat_rel(release_number)")
               "ei:ei_s_print_term()"
               ("http://www.erlang.org/doc/man/ei.html#ei_s_print_term" "int ei_s_print_term(char** s, const char* buf, int* index)")
               "ei:ei_print_term()"
               ("http://www.erlang.org/doc/man/ei.html#ei_print_term" "int ei_print_term(FILE* fp, const char* buf, int* index)")
               "ei:ei_get_type()"
               ("http://www.erlang.org/doc/man/ei.html#ei_get_type" "int ei_get_type(const char *buf, const int *index, int *type, int *size)")
               "ei:ei_x_encode_version()"
               ("http://www.erlang.org/doc/man/ei.html#ei_x_encode_version" "int ei_x_encode_version(ei_x_buff* x)")
               "ei:ei_encode_version()"
               ("http://www.erlang.org/doc/man/ei.html#ei_encode_version" "int ei_encode_version(char *buf, int *index)")
               "ei:ei_x_encode_ulonglong()"
               ("http://www.erlang.org/doc/man/ei.html#ei_x_encode_ulonglong" "int ei_x_encode_ulonglong(ei_x_buff* x, unsigned long long p)")
               "ei:ei_encode_ulonglong()"
               ("http://www.erlang.org/doc/man/ei.html#ei_encode_ulonglong" "int ei_encode_ulonglong(char *buf, int *index, unsigned long long p)")
               "ei:ei_x_encode_ulong()"
               ("http://www.erlang.org/doc/man/ei.html#ei_x_encode_ulong" "int ei_x_encode_ulong(ei_x_buff* x, unsigned long p)")
               "ei:ei_encode_ulong()"
               ("http://www.erlang.org/doc/man/ei.html#ei_encode_ulong" "int ei_encode_ulong(char *buf, int *index, unsigned long p)")
               "ei:ei_x_encode_tuple_header()"
               ("http://www.erlang.org/doc/man/ei.html#ei_x_encode_tuple_header" "int ei_x_encode_tuple_header(ei_x_buff* x, int arity)")
               "ei:ei_encode_tuple_header()"
               ("http://www.erlang.org/doc/man/ei.html#ei_encode_tuple_header" "int ei_encode_tuple_header(char *buf, int *index, int arity)")
               "ei:ei_x_encode_trace()"
               ("http://www.erlang.org/doc/man/ei.html#ei_x_encode_trace" "int ei_x_encode_trace(ei_x_buff* x, const erlang_trace *p)")
               "ei:ei_encode_trace()"
               ("http://www.erlang.org/doc/man/ei.html#ei_encode_trace" "int ei_encode_trace(char *buf, int *index, const erlang_trace *p)")
               "ei:ei_x_encode_term()"
               ("http://www.erlang.org/doc/man/ei.html#ei_x_encode_term" "int ei_x_encode_term(ei_x_buff* x, void *t)")
               "ei:ei_encode_term()"
               ("http://www.erlang.org/doc/man/ei.html#ei_encode_term" "int ei_encode_term(char *buf, int *index, void *t)")
               "ei:ei_x_encode_string_len()"
               ("http://www.erlang.org/doc/man/ei.html#ei_x_encode_string_len" "int ei_x_encode_string_len(ei_x_buff* x, const char* s, int len)")
               "ei:ei_x_encode_string()"
               ("http://www.erlang.org/doc/man/ei.html#ei_x_encode_string" "int ei_x_encode_string(ei_x_buff* x, const char *p)")
               "ei:ei_encode_string_len()"
               ("http://www.erlang.org/doc/man/ei.html#ei_encode_string_len" "int ei_encode_string_len(char *buf, int *index, const char *p, int len)")
               "ei:ei_encode_string()"
               ("http://www.erlang.org/doc/man/ei.html#ei_encode_string" "int ei_encode_string(char *buf, int *index, const char *p)")
               "ei:ei_x_encode_ref()"
               ("http://www.erlang.org/doc/man/ei.html#ei_x_encode_ref" "int ei_x_encode_ref(ei_x_buff* x, const erlang_ref *p)")
               "ei:ei_encode_ref()"
               ("http://www.erlang.org/doc/man/ei.html#ei_encode_ref" "int ei_encode_ref(char *buf, int *index, const erlang_ref *p)")
               "ei:ei_x_encode_port()"
               ("http://www.erlang.org/doc/man/ei.html#ei_x_encode_port" "int ei_x_encode_port(ei_x_buff* x, const erlang_port *p)")
               "ei:ei_encode_port()"
               ("http://www.erlang.org/doc/man/ei.html#ei_encode_port" "int ei_encode_port(char *buf, int *index, const erlang_port *p)")
               "ei:ei_x_encode_pid()"
               ("http://www.erlang.org/doc/man/ei.html#ei_x_encode_pid" "int ei_x_encode_pid(ei_x_buff* x, const erlang_pid *p)")
               "ei:ei_encode_pid()"
               ("http://www.erlang.org/doc/man/ei.html#ei_encode_pid" "int ei_encode_pid(char *buf, int *index, const erlang_pid *p)")
               "ei:ei_x_encode_map_header()"
               ("http://www.erlang.org/doc/man/ei.html#ei_x_encode_map_header" "int ei_x_encode_map_header(ei_x_buff* x, int arity)")
               "ei:ei_encode_map_header()"
               ("http://www.erlang.org/doc/man/ei.html#ei_encode_map_header" "int ei_encode_map_header(char *buf, int *index, int arity)")
               "ei:ei_x_encode_longlong()"
               ("http://www.erlang.org/doc/man/ei.html#ei_x_encode_longlong" "int ei_x_encode_longlong(ei_x_buff* x, long long p)")
               "ei:ei_encode_longlong()"
               ("http://www.erlang.org/doc/man/ei.html#ei_encode_longlong" "int ei_encode_longlong(char *buf, int *index, long long p)")
               "ei:ei_x_encode_long()"
               ("http://www.erlang.org/doc/man/ei.html#ei_x_encode_long" "int ei_x_encode_long(ei_x_buff* x, long p)")
               "ei:ei_encode_long()"
               ("http://www.erlang.org/doc/man/ei.html#ei_encode_long" "int ei_encode_long(char *buf, int *index, long p)")
               "ei:ei_x_encode_list_header()"
               ("http://www.erlang.org/doc/man/ei.html#ei_x_encode_list_header" "int ei_x_encode_list_header(ei_x_buff* x, int arity)")
               "ei:ei_encode_list_header()"
               ("http://www.erlang.org/doc/man/ei.html#ei_encode_list_header" "int ei_encode_list_header(char *buf, int *index, int arity)")
               "ei:ei_x_encode_fun()"
               ("http://www.erlang.org/doc/man/ei.html#ei_x_encode_fun" "int ei_x_encode_fun(ei_x_buff* x, const erlang_fun* fun)")
               "ei:ei_encode_fun()"
               ("http://www.erlang.org/doc/man/ei.html#ei_encode_fun" "int ei_encode_fun(char *buf, int *index, const erlang_fun *p)")
               "ei:ei_x_encode_empty_list()"
               ("http://www.erlang.org/doc/man/ei.html#ei_x_encode_empty_list" "int ei_x_encode_empty_list(ei_x_buff* x)")
               "ei:ei_encode_empty_list()"
               ("http://www.erlang.org/doc/man/ei.html#ei_encode_empty_list" "int ei_encode_empty_list(char* buf, int* index)")
               "ei:ei_x_encode_double()"
               ("http://www.erlang.org/doc/man/ei.html#ei_x_encode_double" "int ei_x_encode_double(ei_x_buff* x, double p)")
               "ei:ei_encode_double()"
               ("http://www.erlang.org/doc/man/ei.html#ei_encode_double" "int ei_encode_double(char *buf, int *index, double p)")
               "ei:ei_x_encode_char()"
               ("http://www.erlang.org/doc/man/ei.html#ei_x_encode_char" "int ei_x_encode_char(ei_x_buff* x, char p)")
               "ei:ei_encode_char()"
               ("http://www.erlang.org/doc/man/ei.html#ei_encode_char" "int ei_encode_char(char *buf, int *index, char p)")
               "ei:ei_x_encode_boolean()"
               ("http://www.erlang.org/doc/man/ei.html#ei_x_encode_boolean" "int ei_x_encode_boolean(ei_x_buff* x, int p)")
               "ei:ei_encode_boolean()"
               ("http://www.erlang.org/doc/man/ei.html#ei_encode_boolean" "int ei_encode_boolean(char *buf, int *index, int p)")
               "ei:ei_x_encode_binary()"
               ("http://www.erlang.org/doc/man/ei.html#ei_x_encode_binary" "int ei_x_encode_binary(ei_x_buff* x, const void *p, long len)")
               "ei:ei_encode_binary()"
               ("http://www.erlang.org/doc/man/ei.html#ei_encode_binary" "int ei_encode_binary(char *buf, int *index, const void *p, long len)")
               "ei:ei_x_encode_bignum()"
               ("http://www.erlang.org/doc/man/ei.html#ei_x_encode_bignum" "int ei_x_encode_bignum(ei_x_buff *x, mpz_t obj)")
               "ei:ei_encode_bignum()"
               ("http://www.erlang.org/doc/man/ei.html#ei_encode_bignum" "int ei_encode_bignum(char *buf, int *index, mpz_t obj)")
               "ei:ei_x_encode_atom_len_as()"
               ("http://www.erlang.org/doc/man/ei.html#ei_x_encode_atom_len_as" "int ei_x_encode_atom_len_as(ei_x_buff* x, const char *p, int len, erlang_char_encoding from_enc, erlang_char_encoding to_enc)")
               "ei:ei_x_encode_atom_as()"
               ("http://www.erlang.org/doc/man/ei.html#ei_x_encode_atom_as" "int ei_x_encode_atom_as(ei_x_buff* x, const char *p, erlang_char_encoding from_enc, erlang_char_encoding to_enc)")
               "ei:ei_encode_atom_len_as()"
               ("http://www.erlang.org/doc/man/ei.html#ei_encode_atom_len_as" "int ei_encode_atom_len_as(char *buf, int *index, const char *p, int len, erlang_char_encoding from_enc, erlang_char_encoding to_enc)")
               "ei:ei_encode_atom_as()"
               ("http://www.erlang.org/doc/man/ei.html#ei_encode_atom_as" "int ei_encode_atom_as(char *buf, int *index, const char *p, erlang_char_encoding from_enc, erlang_char_encoding to_enc)")
               "ei:ei_x_encode_atom_len()"
               ("http://www.erlang.org/doc/man/ei.html#ei_x_encode_atom_len" "int ei_x_encode_atom_len(ei_x_buff* x, const char *p, int len)")
               "ei:ei_x_encode_atom()"
               ("http://www.erlang.org/doc/man/ei.html#ei_x_encode_atom" "int ei_x_encode_atom(ei_x_buff* x, const char *p)")
               "ei:ei_encode_atom_len()"
               ("http://www.erlang.org/doc/man/ei.html#ei_encode_atom_len" "int ei_encode_atom_len(char *buf, int *index, const char *p, int len)")
               "ei:ei_encode_atom()"
               ("http://www.erlang.org/doc/man/ei.html#ei_encode_atom" "int ei_encode_atom(char *buf, int *index, const char *p)")
               "ei:ei_decode_version()"
               ("http://www.erlang.org/doc/man/ei.html#ei_decode_version" "int ei_decode_version(const char *buf, int *index, int *version)")
               "ei:ei_decode_ulonglong()"
               ("http://www.erlang.org/doc/man/ei.html#ei_decode_ulonglong" "int ei_decode_ulonglong(const char *buf, int *index, unsigned long long *p)")
               "ei:ei_decode_ulong()"
               ("http://www.erlang.org/doc/man/ei.html#ei_decode_ulong" "int ei_decode_ulong(const char *buf, int *index, unsigned long *p)")
               "ei:ei_decode_tuple_header()"
               ("http://www.erlang.org/doc/man/ei.html#ei_decode_tuple_header" "int ei_decode_tuple_header(const char *buf, int *index, int *arity)")
               "ei:ei_decode_trace()"
               ("http://www.erlang.org/doc/man/ei.html#ei_decode_trace" "int ei_decode_trace(const char *buf, int *index, erlang_trace *p)")
               "ei:ei_decode_term()"
               ("http://www.erlang.org/doc/man/ei.html#ei_decode_term" "int ei_decode_term(const char *buf, int *index, void *t)")
               "ei:ei_decode_string()"
               ("http://www.erlang.org/doc/man/ei.html#ei_decode_string" "int ei_decode_string(const char *buf, int *index, char *p)")
               "ei:ei_decode_ref()"
               ("http://www.erlang.org/doc/man/ei.html#ei_decode_ref" "int ei_decode_ref(const char *buf, int *index, erlang_ref *p)")
               "ei:ei_decode_port()"
               ("http://www.erlang.org/doc/man/ei.html#ei_decode_port" "int ei_decode_port(const char *buf, int *index, erlang_port *p)")
               "ei:ei_decode_pid()"
               ("http://www.erlang.org/doc/man/ei.html#ei_decode_pid" "int ei_decode_pid(const char *buf, int *index, erlang_pid *p)")
               "ei:ei_decode_map_header()"
               ("http://www.erlang.org/doc/man/ei.html#ei_decode_map_header" "int ei_decode_map_header(const char *buf, int *index, int *arity)")
               "ei:ei_decode_longlong()"
               ("http://www.erlang.org/doc/man/ei.html#ei_decode_longlong" "int ei_decode_longlong(const char *buf, int *index, long long *p)")
               "ei:ei_decode_long()"
               ("http://www.erlang.org/doc/man/ei.html#ei_decode_long" "int ei_decode_long(const char *buf, int *index, long *p)")
               "ei:ei_decode_list_header()"
               ("http://www.erlang.org/doc/man/ei.html#ei_decode_list_header" "int ei_decode_list_header(const char *buf, int *index, int *arity)")
               "ei:free_fun()"
               ("http://www.erlang.org/doc/man/ei.html#free_fun" "void free_fun(erlang_fun* f)")
               "ei:ei_decode_fun()"
               ("http://www.erlang.org/doc/man/ei.html#ei_decode_fun" "int ei_decode_fun(const char *buf, int *index, erlang_fun *p)")
               "ei:ei_decode_ei_term()"
               ("http://www.erlang.org/doc/man/ei.html#ei_decode_ei_term" "int ei_decode_ei_term(const char* buf, int* index, ei_term* term)")
               "ei:ei_decode_double()"
               ("http://www.erlang.org/doc/man/ei.html#ei_decode_double" "int ei_decode_double(const char *buf, int *index, double *p)")
               "ei:ei_decode_char()"
               ("http://www.erlang.org/doc/man/ei.html#ei_decode_char" "int ei_decode_char(const char *buf, int *index, char *p)")
               "ei:ei_decode_boolean()"
               ("http://www.erlang.org/doc/man/ei.html#ei_decode_boolean" "int ei_decode_boolean(const char *buf, int *index, int *p)")
               "ei:ei_decode_binary()"
               ("http://www.erlang.org/doc/man/ei.html#ei_decode_binary" "int ei_decode_binary(const char *buf, int *index, void *p, long *len)")
               "ei:ei_decode_bignum()"
               ("http://www.erlang.org/doc/man/ei.html#ei_decode_bignum" "int ei_decode_bignum(const char *buf, int *index, mpz_t obj)")
               "ei:ei_decode_atom_as()"
               ("http://www.erlang.org/doc/man/ei.html#ei_decode_atom_as" "int ei_decode_atom_as(const char *buf, int *index, char *p, int plen, erlang_char_encoding want, erlang_char_encoding* was, erlang_char_encoding* result)")
               "ei:ei_decode_atom()"
               ("http://www.erlang.org/doc/man/ei.html#ei_decode_atom" "int ei_decode_atom(const char *buf, int *index, char *p)")
               "ei_connect:ei_unpublish_tmo()"
               ("http://www.erlang.org/doc/man/ei_connect.html#ei_unpublish_tmo" "int ei_unpublish_tmo(ei_cnode *ec, unsigned timeout_ms)")
               "ei_connect:ei_unpublish()"
               ("http://www.erlang.org/doc/man/ei_connect.html#ei_unpublish" "int ei_unpublish(ei_cnode *ec)")
               "ei_connect:ei_thisalivename()"
               ("http://www.erlang.org/doc/man/ei_connect.html#ei_thisalivename" "const char *ei_thisalivename(ei_cnode *ec)")
               "ei_connect:ei_thishostname()"
               ("http://www.erlang.org/doc/man/ei_connect.html#ei_thishostname" "const char *ei_thishostname(ei_cnode *ec)")
               "ei_connect:ei_thisnodename()"
               ("http://www.erlang.org/doc/man/ei_connect.html#ei_thisnodename" "const char *ei_thisnodename(ei_cnode *ec)")
               "ei_connect:ei_send_tmo()"
               ("http://www.erlang.org/doc/man/ei_connect.html#ei_send_tmo" "int ei_send_tmo(int fd, erlang_pid* to, char* buf, int len, unsigned timeout_ms)")
               "ei_connect:ei_send_reg_encoded_tmo()"
               ("http://www.erlang.org/doc/man/ei_connect.html#ei_send_reg_encoded_tmo" "int ei_send_reg_encoded_tmo(int fd, const erlang_pid *from, const char *to, const char *buf, int len)")
               "ei_connect:ei_send_reg_encoded()"
               ("http://www.erlang.org/doc/man/ei_connect.html#ei_send_reg_encoded" "int ei_send_reg_encoded(int fd, const erlang_pid *from, const char *to, const char *buf, int len)")
               "ei_connect:ei_send_encoded_tmo()"
               ("http://www.erlang.org/doc/man/ei_connect.html#ei_send_encoded_tmo" "int ei_send_encoded_tmo(int fd, erlang_pid* to, char* buf, int len, unsigned timeout_ms)")
               "ei_connect:ei_send_encoded()"
               ("http://www.erlang.org/doc/man/ei_connect.html#ei_send_encoded" "int ei_send_encoded(int fd, erlang_pid* to, char* buf, int len)")
               "ei_connect:ei_send()"
               ("http://www.erlang.org/doc/man/ei_connect.html#ei_send" "int ei_send(int fd, erlang_pid* to, char* buf, int len)")
               "ei_connect:ei_self()"
               ("http://www.erlang.org/doc/man/ei_connect.html#ei_self" "erlang_pid *ei_self(ei_cnode *ec)")
               "ei_connect:ei_rpc_from()"
               ("http://www.erlang.org/doc/man/ei_connect.html#ei_rpc_from" "int ei_rpc_from(ei_cnode *ec, int fd, int timeout, erlang_msg *msg, ei_x_buff *x)")
               "ei_connect:ei_rpc_to()"
               ("http://www.erlang.org/doc/man/ei_connect.html#ei_rpc_to" "int ei_rpc_to(ei_cnode *ec, int fd, char *mod, char *fun, const char *argbuf, int argbuflen)")
               "ei_connect:ei_rpc()"
               ("http://www.erlang.org/doc/man/ei_connect.html#ei_rpc" "int ei_rpc(ei_cnode *ec, int fd, char *mod, char *fun, const char *argbuf, int argbuflen, ei_x_buff *x)")
               "ei_connect:ei_reg_send_tmo()"
               ("http://www.erlang.org/doc/man/ei_connect.html#ei_reg_send_tmo" "int ei_reg_send_tmo(ei_cnode* ec, int fd, char* server_name, char* buf, int len, unsigned timeout_ms)")
               "ei_connect:ei_reg_send()"
               ("http://www.erlang.org/doc/man/ei_connect.html#ei_reg_send" "int ei_reg_send(ei_cnode* ec, int fd, char* server_name, char* buf, int len)")
               "ei_connect:ei_receive_tmo()"
               ("http://www.erlang.org/doc/man/ei_connect.html#ei_receive_tmo" "int ei_receive_tmo(int fd, unsigned char* bufp, int bufsize, unsigned timeout_ms)")
               "ei_connect:ei_xreceive_msg_tmo()"
               ("http://www.erlang.org/doc/man/ei_connect.html#ei_xreceive_msg_tmo" "int ei_xreceive_msg_tmo(int fd, erlang_msg* msg, ei_x_buff* x, unsigned timeout_ms)")
               "ei_connect:ei_receive_msg_tmo()"
               ("http://www.erlang.org/doc/man/ei_connect.html#ei_receive_msg_tmo" "int ei_receive_msg_tmo(int fd, erlang_msg* msg, ei_x_buff* x, unsigned imeout_ms)")
               "ei_connect:ei_xreceive_msg()"
               ("http://www.erlang.org/doc/man/ei_connect.html#ei_xreceive_msg" "int ei_xreceive_msg(int fd, erlang_msg* msg, ei_x_buff* x)")
               "ei_connect:ei_receive_msg()"
               ("http://www.erlang.org/doc/man/ei_connect.html#ei_receive_msg" "int ei_receive_msg(int fd, erlang_msg* msg, ei_x_buff* x)")
               "ei_connect:ei_receive_encoded_tmo()"
               ("http://www.erlang.org/doc/man/ei_connect.html#ei_receive_encoded_tmo" "int ei_receive_encoded_tmo(int fd, char **mbufp, int *bufsz,  erlang_msg *msg, int *msglen, unsigned timeout_ms)")
               "ei_connect:ei_receive_encoded()"
               ("http://www.erlang.org/doc/man/ei_connect.html#ei_receive_encoded" "int ei_receive_encoded(int fd, char **mbufp, int *bufsz,  erlang_msg *msg, int *msglen)")
               "ei_connect:ei_receive()"
               ("http://www.erlang.org/doc/man/ei_connect.html#ei_receive" "int ei_receive(int fd, unsigned char* bufp, int bufsize)")
               "ei_connect:ei_publish_tmo()"
               ("http://www.erlang.org/doc/man/ei_connect.html#ei_publish_tmo" "int ei_publish_tmo(ei_cnode *ec, int port, unsigned timeout_ms)")
               "ei_connect:ei_publish()"
               ("http://www.erlang.org/doc/man/ei_connect.html#ei_publish" "int ei_publish(ei_cnode *ec, int port)")
               "ei_connect:ei_set_tracelevel()"
               ("http://www.erlang.org/doc/man/ei_connect.html#ei_set_tracelevel" "void ei_set_tracelevel(int level)")
               "ei_connect:ei_get_tracelevel()"
               ("http://www.erlang.org/doc/man/ei_connect.html#ei_get_tracelevel" "int ei_get_tracelevel(void)")
               "ei_connect:ei_xconnect_tmo()"
               ("http://www.erlang.org/doc/man/ei_connect.html#ei_xconnect_tmo" "int ei_xconnect_tmo(ei_cnode* ec, Erl_IpAddr adr, char *alivename, unsigned timeout_ms)")
               "ei_connect:ei_connect_tmo()"
               ("http://www.erlang.org/doc/man/ei_connect.html#ei_connect_tmo" "int ei_connect_tmo(ei_cnode* ec, char *nodename, unsigned timeout_ms)")
               "ei_connect:ei_connect_xinit()"
               ("http://www.erlang.org/doc/man/ei_connect.html#ei_connect_xinit" "int ei_connect_xinit(ei_cnode* ec, const char *thishostname, const char *thisalivename, const char *thisnodename, Erl_IpAddr thisipaddr, const char *cookie, short creation)")
               "ei_connect:ei_connect_init()"
               ("http://www.erlang.org/doc/man/ei_connect.html#ei_connect_init" "int ei_connect_init(ei_cnode* ec, const char* this_node_name, const char *cookie, short creation)")
               "ei_connect:ei_xconnect()"
               ("http://www.erlang.org/doc/man/ei_connect.html#ei_xconnect" "int ei_xconnect(ei_cnode* ec, Erl_IpAddr adr, char *alivename)")
               "ei_connect:ei_connect()"
               ("http://www.erlang.org/doc/man/ei_connect.html#ei_connect" "int ei_connect(ei_cnode* ec, char *nodename)")
               "ei_connect:ei_accept_tmo()"
               ("http://www.erlang.org/doc/man/ei_connect.html#ei_accept_tmo" "int ei_accept_tmo(ei_cnode *ec, int listensock, ErlConnect *conp, unsigned timeout_ms)")
               "ei_connect:ei_accept()"
               ("http://www.erlang.org/doc/man/ei_connect.html#ei_accept" "int ei_accept(ei_cnode *ec, int listensock, ErlConnect *conp)")
               "ei_connect:*ei_gethostbyname_r()"
               ("http://www.erlang.org/doc/man/ei_connect.html#*ei_gethostbyname_r" "struct hostent *ei_gethostbyname_r(const char *name,  struct hostent *hostp,  char *buffer,  int buflen,  int *h_errnop)")
               "ei_connect:*ei_gethostbyname()"
               ("http://www.erlang.org/doc/man/ei_connect.html#*ei_gethostbyname" "struct hostent *ei_gethostbyname(const char *name)")
               "ei_connect:*ei_gethostbyaddr_r()"
               ("http://www.erlang.org/doc/man/ei_connect.html#*ei_gethostbyaddr_r" "struct hostent *ei_gethostbyaddr_r(const char *addr, int length,  int type,  struct hostent *hostp, char *buffer,   int buflen,  int *h_errnop)")
               "ei_connect:*ei_gethostbyaddr()"
               ("http://www.erlang.org/doc/man/ei_connect.html#*ei_gethostbyaddr" "struct hostent *ei_gethostbyaddr(const char *addr, int len, int type)")
               "eldap:'not'/1"
               ("http://www.erlang.org/doc/man/eldap.html#'not'-1" "'not'(Filter) -> filter()")
               "eldap:'or'/1"
               ("http://www.erlang.org/doc/man/eldap.html#'or'-1" "'or'([Filter]) -> filter()")
               "eldap:'and'/1"
               ("http://www.erlang.org/doc/man/eldap.html#'and'-1" "'and'([Filter]) -> filter()")
               "eldap:extensibleMatch/2"
               ("http://www.erlang.org/doc/man/eldap.html#extensibleMatch-2" "extensibleMatch(MatchValue, OptionalAttrs) -> filter()")
               "eldap:approxMatch/2"
               ("http://www.erlang.org/doc/man/eldap.html#approxMatch-2" "approxMatch(Type, Value) -> filter()")
               "eldap:lessOrEqual/2"
               ("http://www.erlang.org/doc/man/eldap.html#lessOrEqual-2" "lessOrEqual(Type, Value) -> filter()")
               "eldap:greaterOrEqual/2"
               ("http://www.erlang.org/doc/man/eldap.html#greaterOrEqual-2" "greaterOrEqual(Type, Value) -> filter()")
               "eldap:equalityMatch/2"
               ("http://www.erlang.org/doc/man/eldap.html#equalityMatch-2" "equalityMatch(Type, Value) -> filter()")
               "eldap:substrings/2"
               ("http://www.erlang.org/doc/man/eldap.html#substrings-2" "substrings(Type, [SubString]) -> filter()")
               "eldap:present/1"
               ("http://www.erlang.org/doc/man/eldap.html#present-1" "present(Type) -> filter()")
               "eldap:derefFindingBaseObj/0"
               ("http://www.erlang.org/doc/man/eldap.html#derefFindingBaseObj-0" "derefFindingBaseObj() -> dereference()")
               "eldap:derefInSearching/0"
               ("http://www.erlang.org/doc/man/eldap.html#derefInSearching-0" "derefInSearching() -> dereference()")
               "eldap:derefAlways/0"
               ("http://www.erlang.org/doc/man/eldap.html#derefAlways-0" "derefAlways() -> dereference()")
               "eldap:neverDerefAliases/0"
               ("http://www.erlang.org/doc/man/eldap.html#neverDerefAliases-0" "neverDerefAliases() -> dereference()")
               "eldap:wholeSubtree/0"
               ("http://www.erlang.org/doc/man/eldap.html#wholeSubtree-0" "wholeSubtree() -> scope()")
               "eldap:singleLevel/0"
               ("http://www.erlang.org/doc/man/eldap.html#singleLevel-0" "singleLevel() -> scope()")
               "eldap:baseObject/0"
               ("http://www.erlang.org/doc/man/eldap.html#baseObject-0" "baseObject() -> scope()")
               "eldap:search/2"
               ("http://www.erlang.org/doc/man/eldap.html#search-2" "search(Handle, SearchOptions) -> {ok, #eldap_search_result{}} | {ok, {referral,referrals()}} | {error, Reason}")
               "eldap:modify_dn/5"
               ("http://www.erlang.org/doc/man/eldap.html#modify_dn-5" "modify_dn(Handle, Dn, NewRDN, DeleteOldRDN, NewSupDN) -> return_value()")
               "eldap:modify_password/4"
               ("http://www.erlang.org/doc/man/eldap.html#modify_password-4" "modify_password(Handle, Dn, NewPasswd, OldPasswd) -> return_value() | {ok, GenPasswd}")
               "eldap:modify_password/3"
               ("http://www.erlang.org/doc/man/eldap.html#modify_password-3" "modify_password(Handle, Dn, NewPasswd) -> return_value() | {ok, GenPasswd}")
               "eldap:modify/3"
               ("http://www.erlang.org/doc/man/eldap.html#modify-3" "modify(Handle, Dn, [ModifyOp]) -> return_value()")
               "eldap:mod_replace/2"
               ("http://www.erlang.org/doc/man/eldap.html#mod_replace-2" "mod_replace(Type, [Value]) -> modify_op()")
               "eldap:mod_delete/2"
               ("http://www.erlang.org/doc/man/eldap.html#mod_delete-2" "mod_delete(Type, [Value]) -> modify_op()")
               "eldap:mod_add/2"
               ("http://www.erlang.org/doc/man/eldap.html#mod_add-2" "mod_add(Type, [Value]) -> modify_op()")
               "eldap:delete/2"
               ("http://www.erlang.org/doc/man/eldap.html#delete-2" "delete(Handle, Dn) -> return_value()")
               "eldap:add/3"
               ("http://www.erlang.org/doc/man/eldap.html#add-3" "add(Handle, Dn, [Attribute]) -> return_value()")
               "eldap:simple_bind/3"
               ("http://www.erlang.org/doc/man/eldap.html#simple_bind-3" "simple_bind(Handle, Dn, Password) -> return_value()")
               "eldap:start_tls/3"
               ("http://www.erlang.org/doc/man/eldap.html#start_tls-3" "start_tls(Handle, Options, Timeout) -> return_value()")
               "eldap:start_tls/2"
               ("http://www.erlang.org/doc/man/eldap.html#start_tls-2" "start_tls(Handle, Options) -> return_value()")
               "eldap:close/1"
               ("http://www.erlang.org/doc/man/eldap.html#close-1" "close(Handle) -> ok")
               "eldap:open/2"
               ("http://www.erlang.org/doc/man/eldap.html#open-2" "open([Host], [Option]) -> {ok, Handle} | {error, Reason}")
               "eldap:open/1"
               ("http://www.erlang.org/doc/man/eldap.html#open-1" "open([Host]) -> {ok, Handle} | {error, Reason}")
               "epp:set_encoding/2"
               ("http://www.erlang.org/doc/man/epp.html#set_encoding-2" "set_encoding(File, Default) -> source_encoding() | none")
               "epp:set_encoding/1"
               ("http://www.erlang.org/doc/man/epp.html#set_encoding-1" "set_encoding(File) -> source_encoding() | none")
               "epp:read_encoding_from_binary/2"
               ("http://www.erlang.org/doc/man/epp.html#read_encoding_from_binary-2" "read_encoding_from_binary(Binary, Options) ->  source_encoding() | none")
               "epp:read_encoding_from_binary/1"
               ("http://www.erlang.org/doc/man/epp.html#read_encoding_from_binary-1" "read_encoding_from_binary(Binary) -> source_encoding() | none")
               "epp:read_encoding/2"
               ("http://www.erlang.org/doc/man/epp.html#read_encoding-2" "read_encoding(FileName, Options) -> source_encoding() | none")
               "epp:read_encoding/1"
               ("http://www.erlang.org/doc/man/epp.html#read_encoding-1" "read_encoding(FileName) -> source_encoding() | none")
               "epp:parse_file/3"
               ("http://www.erlang.org/doc/man/epp.html#parse_file-3" "parse_file(FileName, IncludePath, PredefMacros) -> {ok, [Form]} | {error, OpenError}")
               "epp:parse_file/2"
               ("http://www.erlang.org/doc/man/epp.html#parse_file-2" "parse_file(FileName, Options) -> {ok, [Form]} | {ok, [Form], Extra} | {error, OpenError}")
               "epp:parse_erl_form/1"
               ("http://www.erlang.org/doc/man/epp.html#parse_erl_form-1" "parse_erl_form(Epp) -> {ok, AbsForm} | {error, ErrorInfo} | {warning, WarningInfo} | {eof, Line}")
               "epp:open/3"
               ("http://www.erlang.org/doc/man/epp.html#open-3" "open(FileName, IncludePath, PredefMacros) -> {ok, Epp} | {error, ErrorDescriptor}")
               "epp:open/2"
               ("http://www.erlang.org/doc/man/epp.html#open-2" "open(FileName, IncludePath) -> {ok, Epp} | {error, ErrorDescriptor}")
               "epp:open/1"
               ("http://www.erlang.org/doc/man/epp.html#open-1" "open(Options) -> {ok, Epp} | {ok, Epp, Extra} | {error, ErrorDescriptor}")
               "epp:format_error/1"
               ("http://www.erlang.org/doc/man/epp.html#format_error-1" "format_error(ErrorDescriptor) -> io_lib:chars()")
               "epp:encoding_to_string/1"
               ("http://www.erlang.org/doc/man/epp.html#encoding_to_string-1" "encoding_to_string(Encoding) -> string()")
               "epp:default_encoding/0"
               ("http://www.erlang.org/doc/man/epp.html#default_encoding-0" "default_encoding() -> source_encoding()")
               "epp:close/1"
               ("http://www.erlang.org/doc/man/epp.html#close-1" "close(Epp) -> ok")
               "epp:source_encoding()"
               ("http://www.erlang.org/doc/man/epp.html#type-source_encoding" "source_encoding() = latin1 | utf8")
               "epp:epp_handle()"
               ("http://www.erlang.org/doc/man/epp.html#type-epp_handle" "epp_handle() = pid()")
               "epp:macros()"
               ("http://www.erlang.org/doc/man/epp.html#type-macros" "macros() = [atom() | {atom(), term()}]")
               "epp_dodger:tokens_to_string/1"
               ("http://www.erlang.org/doc/man/epp_dodger.html#tokens_to_string-1" "tokens_to_string(Tokens::[term()]) -> string()")
               "epp_dodger:quick_parse_form/3"
               ("http://www.erlang.org/doc/man/epp_dodger.html#quick_parse_form-3" "quick_parse_form(Dev::IODevice, L0::StartLine, Options) -> {ok, Form, LineNo} | {eof, LineNo} | {error, errorinfo() , LineNo}")
               "epp_dodger:quick_parse_form/2"
               ("http://www.erlang.org/doc/man/epp_dodger.html#quick_parse_form-2" "quick_parse_form(Dev::IODevice, L0::StartLine) -> {ok, Form, LineNo} | {eof, LineNo} | {error, errorinfo() , LineNo}")
               "epp_dodger:quick_parse_file/2"
               ("http://www.erlang.org/doc/man/epp_dodger.html#quick_parse_file-2" "quick_parse_file(File, Options) -> {ok, Forms} | {error, errorinfo() }")
               "epp_dodger:quick_parse_file/1"
               ("http://www.erlang.org/doc/man/epp_dodger.html#quick_parse_file-1" "quick_parse_file(File) -> {ok, Forms} | {error, errorinfo() }")
               "epp_dodger:quick_parse/3"
               ("http://www.erlang.org/doc/man/epp_dodger.html#quick_parse-3" "quick_parse(Dev::IODevice, L0::StartLine, Options) -> {ok, Forms} | {error, errorinfo() }")
               "epp_dodger:quick_parse/2"
               ("http://www.erlang.org/doc/man/epp_dodger.html#quick_parse-2" "quick_parse(Dev::IODevice, L::StartLine) -> {ok, Forms} | {error, errorinfo() }")
               "epp_dodger:quick_parse/1"
               ("http://www.erlang.org/doc/man/epp_dodger.html#quick_parse-1" "quick_parse(Dev::IODevice) -> {ok, Forms} | {error, errorinfo() }")
               "epp_dodger:parse_form/3"
               ("http://www.erlang.org/doc/man/epp_dodger.html#parse_form-3" "parse_form(Dev::IODevice, L0::StartLine, Options) -> {ok, Form, LineNo} | {eof, LineNo} | {error, errorinfo() , LineNo}")
               "epp_dodger:parse_form/2"
               ("http://www.erlang.org/doc/man/epp_dodger.html#parse_form-2" "parse_form(Dev::IODevice, L0::StartLine) -> {ok, Form, LineNo} | {eof, LineNo} | {error, errorinfo() , LineNo}")
               "epp_dodger:parse_file/2"
               ("http://www.erlang.org/doc/man/epp_dodger.html#parse_file-2" "parse_file(File, Options) -> {ok, Forms} | {error, errorinfo() }")
               "epp_dodger:parse_file/1"
               ("http://www.erlang.org/doc/man/epp_dodger.html#parse_file-1" "parse_file(File) -> {ok, Forms} | {error, errorinfo() }")
               "epp_dodger:parse/3"
               ("http://www.erlang.org/doc/man/epp_dodger.html#parse-3" "parse(Dev::IODevice, L0::StartLine, Options) -> {ok, Forms} | {error, errorinfo() }")
               "epp_dodger:parse/2"
               ("http://www.erlang.org/doc/man/epp_dodger.html#parse-2" "parse(Dev::IODevice, L::StartLine) -> {ok, Forms} | {error, errorinfo() }")
               "epp_dodger:parse/1"
               ("http://www.erlang.org/doc/man/epp_dodger.html#parse-1" "parse(Dev::IODevice) -> {ok, Forms} | {error, errorinfo() }")
               "epp_dodger:"
               ("http://www.erlang.org/doc/man/epp_dodger.html#type-errorinfo" "errorinfo() = {ErrorLine::integer(), Module::atom(), Descriptor::term()}")
               "eprof:stop/0"
               ("http://www.erlang.org/doc/man/eprof.html#stop-0" "stop() -> stopped")
               "eprof:log/1"
               ("http://www.erlang.org/doc/man/eprof.html#log-1" "log(File) -> ok")
               "eprof:analyze/2"
               ("http://www.erlang.org/doc/man/eprof.html#analyze-2" "analyze(Type,Options) -> ok")
               "eprof:analyze/1"
               ("http://www.erlang.org/doc/man/eprof.html#analyze-1" "analyze(Type) -> ok")
               "eprof:analyze/0"
               ("http://www.erlang.org/doc/man/eprof.html#analyze-0" "analyze() -> ok")
               "eprof:profile/6"
               ("http://www.erlang.org/doc/man/eprof.html#profile-6" "profile(Rootset,Module,Function,Args,Pattern,Options) -> {ok, Value} | {error, Reason}")
               "eprof:profile/5"
               ("http://www.erlang.org/doc/man/eprof.html#profile-5" "profile(Rootset,Module,Function,Args,Pattern) -> {ok, Value} | {error, Reason}")
               "eprof:profile/4"
               ("http://www.erlang.org/doc/man/eprof.html#profile-4" "profile(Rootset,Module,Function,Args) -> {ok, Value} | {error, Reason}")
               "eprof:profile/3"
               ("http://www.erlang.org/doc/man/eprof.html#profile-3" "profile(Rootset,Fun,Pattern) -> {ok, Value} | {error, Reason}")
               "eprof:profile/2"
               ("http://www.erlang.org/doc/man/eprof.html#profile-2" "profile(Fun, Options) -> profiling | {error, Reason}")
               "eprof:profile/1"
               ("http://www.erlang.org/doc/man/eprof.html#profile-1" "profile(Fun) -> profiling | {error, Reason}")
               "eprof:stop_profiling/0"
               ("http://www.erlang.org/doc/man/eprof.html#stop_profiling-0" "stop_profiling() -> profiling_stopped | profiling_already_stopped")
               "eprof:start_profiling/3"
               ("http://www.erlang.org/doc/man/eprof.html#start_profiling-3" "start_profiling(Rootset,Pattern,Options) -> profiling | {error, Reason}")
               "eprof:start_profiling/2"
               ("http://www.erlang.org/doc/man/eprof.html#start_profiling-2" "start_profiling(Rootset,Pattern) -> profiling | {error, Reason}")
               "eprof:start_profiling/1"
               ("http://www.erlang.org/doc/man/eprof.html#start_profiling-1" "start_profiling(Rootset) -> profiling | {error, Reason}")
               "eprof:start/0"
               ("http://www.erlang.org/doc/man/eprof.html#start-0" "start() -> {ok,Pid} | {error,Reason}")
               "erl_anno:to_term/1"
               ("http://www.erlang.org/doc/man/erl_anno.html#to_term-1" "to_term(Anno) -> anno_term()")
               "erl_anno:text/1"
               ("http://www.erlang.org/doc/man/erl_anno.html#text-1" "text(Anno) -> text() | undefined")
               "erl_anno:set_text/2"
               ("http://www.erlang.org/doc/man/erl_anno.html#set_text-2" "set_text(Text, Anno) -> Anno")
               "erl_anno:set_record/2"
               ("http://www.erlang.org/doc/man/erl_anno.html#set_record-2" "set_record(Record, Anno) -> Anno")
               "erl_anno:set_location/2"
               ("http://www.erlang.org/doc/man/erl_anno.html#set_location-2" "set_location(Location, Anno) -> Anno")
               "erl_anno:set_line/2"
               ("http://www.erlang.org/doc/man/erl_anno.html#set_line-2" "set_line(Line, Anno) -> Anno")
               "erl_anno:set_generated/2"
               ("http://www.erlang.org/doc/man/erl_anno.html#set_generated-2" "set_generated(Generated, Anno) -> Anno")
               "erl_anno:set_file/2"
               ("http://www.erlang.org/doc/man/erl_anno.html#set_file-2" "set_file(File, Anno) -> Anno")
               "erl_anno:new/1"
               ("http://www.erlang.org/doc/man/erl_anno.html#new-1" "new(Location) -> anno()")
               "erl_anno:location/1"
               ("http://www.erlang.org/doc/man/erl_anno.html#location-1" "location(Anno) -> location()")
               "erl_anno:line/1"
               ("http://www.erlang.org/doc/man/erl_anno.html#line-1" "line(Anno) -> line()")
               "erl_anno:is_anno/1"
               ("http://www.erlang.org/doc/man/erl_anno.html#is_anno-1" "is_anno(Term) -> boolean()")
               "erl_anno:generated/1"
               ("http://www.erlang.org/doc/man/erl_anno.html#generated-1" "generated(Anno) -> generated()")
               "erl_anno:from_term/1"
               ("http://www.erlang.org/doc/man/erl_anno.html#from_term-1" "from_term(Term) -> Anno")
               "erl_anno:file/1"
               ("http://www.erlang.org/doc/man/erl_anno.html#file-1" "file(Anno) -> filename() | undefined")
               "erl_anno:end_location/1"
               ("http://www.erlang.org/doc/man/erl_anno.html#end_location-1" "end_location(Anno) -> location() | undefined")
               "erl_anno:column/1"
               ("http://www.erlang.org/doc/man/erl_anno.html#column-1" "column(Anno) -> column() | undefined")
               "erl_anno:text()"
               ("http://www.erlang.org/doc/man/erl_anno.html#type-text" "text() = string()")
               "erl_anno:location()"
               ("http://www.erlang.org/doc/man/erl_anno.html#type-location" "location() = line() | { line() , column() }")
               "erl_anno:line()"
               ("http://www.erlang.org/doc/man/erl_anno.html#type-line" "line() = integer() >= 0")
               "erl_anno:column()"
               ("http://www.erlang.org/doc/man/erl_anno.html#type-column" "column() = integer() >= 1")
               "erl_anno:anno_term()"
               ("http://www.erlang.org/doc/man/erl_anno.html#type-anno_term" "anno_term() = term()")
               "erl_anno:"
               ("http://www.erlang.org/doc/man/erl_anno.html#type-anno" "anno()")
               "erl_boot_server:which_slaves/0"
               ("http://www.erlang.org/doc/man/erl_boot_server.html#which_slaves-0" "which_slaves() -> Slaves")
               "erl_boot_server:start_link/1"
               ("http://www.erlang.org/doc/man/erl_boot_server.html#start_link-1" "start_link(Slaves) -> {ok, Pid} | {error, What}")
               "erl_boot_server:start/1"
               ("http://www.erlang.org/doc/man/erl_boot_server.html#start-1" "start(Slaves) -> {ok, Pid} | {error, What}")
               "erl_boot_server:delete_slave/1"
               ("http://www.erlang.org/doc/man/erl_boot_server.html#delete_slave-1" "delete_slave(Slave) -> ok | {error, What}")
               "erl_boot_server:add_slave/1"
               ("http://www.erlang.org/doc/man/erl_boot_server.html#add_slave-1" "add_slave(Slave) -> ok | {error, What}")
               "erl_comment_scan:string/1"
               ("http://www.erlang.org/doc/man/erl_comment_scan.html#string-1" "string(Text::string()) -> [Comment]")
               "erl_comment_scan:scan_lines/1"
               ("http://www.erlang.org/doc/man/erl_comment_scan.html#scan_lines-1" "scan_lines(Text::string()) -> [CommentLine]")
               "erl_comment_scan:join_lines/1"
               ("http://www.erlang.org/doc/man/erl_comment_scan.html#join_lines-1" "join_lines(Lines::[CommentLine]) -> [Comment]")
               "erl_comment_scan:file/1"
               ("http://www.erlang.org/doc/man/erl_comment_scan.html#file-1" "file(FileName:: file:filename() ) -> [Comment]")
               "erl_comment_scan:"
               ("http://www.erlang.org/doc/man/erl_comment_scan.html#type-comment" "comment() = {Line::integer(), Column::integer(), Indentation::integer(), Text::[string()]}")
               "erl_connect:*erl_gethostbyname_r()"
               ("http://www.erlang.org/doc/man/erl_connect.html#*erl_gethostbyname_r" "struct hostent *erl_gethostbyname_r(name, hostp, buffer, buflen, h_errnop)")
               "erl_connect:*erl_gethostbyname()"
               ("http://www.erlang.org/doc/man/erl_connect.html#*erl_gethostbyname" "struct hostent *erl_gethostbyname(name)")
               "erl_connect:*erl_gethostbyaddr_r()"
               ("http://www.erlang.org/doc/man/erl_connect.html#*erl_gethostbyaddr_r" "struct hostent *erl_gethostbyaddr_r(addr, length, type, hostp, buffer, buflen, h_errnop)")
               "erl_connect:*erl_gethostbyaddr()"
               ("http://www.erlang.org/doc/man/erl_connect.html#*erl_gethostbyaddr" "struct hostent *erl_gethostbyaddr(addr, length, type)")
               "erl_connect:erl_xreceive_msg()"
               ("http://www.erlang.org/doc/man/erl_connect.html#erl_xreceive_msg" "int erl_xreceive_msg(fd, bufpp, bufsizep, emsg)")
               "erl_connect:erl_unpublish()"
               ("http://www.erlang.org/doc/man/erl_connect.html#erl_unpublish" "int erl_unpublish(alive)")
               "erl_connect:erl_thisnodename()"
               ("http://www.erlang.org/doc/man/erl_connect.html#erl_thisnodename" "const char *erl_thisnodename()")
               "erl_connect:erl_thishostname()"
               ("http://www.erlang.org/doc/man/erl_connect.html#erl_thishostname" "const char *erl_thishostname()")
               "erl_connect:erl_thiscreation()"
               ("http://www.erlang.org/doc/man/erl_connect.html#erl_thiscreation" "short erl_thiscreation()")
               "erl_connect:erl_thiscookie()"
               ("http://www.erlang.org/doc/man/erl_connect.html#erl_thiscookie" "const char *erl_thiscookie()")
               "erl_connect:erl_thisalivename()"
               ("http://www.erlang.org/doc/man/erl_connect.html#erl_thisalivename" "const char *erl_thisalivename()")
               "erl_connect:erl_send()"
               ("http://www.erlang.org/doc/man/erl_connect.html#erl_send" "int erl_send(fd, to, msg)")
               "erl_connect:erl_rpc_to()"
               ("http://www.erlang.org/doc/man/erl_connect.html#erl_rpc_to" "int erl_rpc_to(fd, mod, fun, args)")
               "erl_connect:erl_rpc_from()"
               ("http://www.erlang.org/doc/man/erl_connect.html#erl_rpc_from" "int erl_rpc_from(fd, timeout, emsg)")
               "erl_connect:erl_rpc()"
               ("http://www.erlang.org/doc/man/erl_connect.html#erl_rpc" "ETERM *erl_rpc(fd, mod, fun, args)")
               "erl_connect:erl_reg_send()"
               ("http://www.erlang.org/doc/man/erl_connect.html#erl_reg_send" "int erl_reg_send(fd, to, msg)")
               "erl_connect:erl_receive_msg()"
               ("http://www.erlang.org/doc/man/erl_connect.html#erl_receive_msg" "int erl_receive_msg(fd, bufp, bufsize, emsg)")
               "erl_connect:erl_receive()"
               ("http://www.erlang.org/doc/man/erl_connect.html#erl_receive" "int erl_receive(fd, bufp, bufsize)")
               "erl_connect:erl_publish()"
               ("http://www.erlang.org/doc/man/erl_connect.html#erl_publish" "int erl_publish(port)")
               "erl_connect:erl_connect_xinit()"
               ("http://www.erlang.org/doc/man/erl_connect.html#erl_connect_xinit" "int erl_connect_xinit(host, alive, node, addr, cookie, creation)")
               "erl_connect:erl_connect_init()"
               ("http://www.erlang.org/doc/man/erl_connect.html#erl_connect_init" "int erl_connect_init(number, cookie, creation)")
               "erl_connect:erl_xconnect()"
               ("http://www.erlang.org/doc/man/erl_connect.html#erl_xconnect" "int erl_xconnect(addr, alive)")
               "erl_connect:erl_connect()"
               ("http://www.erlang.org/doc/man/erl_connect.html#erl_connect" "int erl_connect(node)")
               "erl_connect:erl_close_connection()"
               ("http://www.erlang.org/doc/man/erl_connect.html#erl_close_connection" "int erl_close_connection(fd)")
               "erl_connect:erl_accept()"
               ("http://www.erlang.org/doc/man/erl_connect.html#erl_accept" "int erl_accept(listensock, conp)")
               "erl_ddll:unload_driver/1"
               ("http://www.erlang.org/doc/man/erl_ddll.html#unload_driver-1" "unload_driver(Name) -> ok | {error, ErrorDesc}")
               "erl_ddll:unload/1"
               ("http://www.erlang.org/doc/man/erl_ddll.html#unload-1" "unload(Name) -> ok | {error, ErrorDesc}")
               "erl_ddll:try_unload/2"
               ("http://www.erlang.org/doc/man/erl_ddll.html#try_unload-2" "try_unload(Name, OptionList) -> {ok, Status} | {ok, PendingStatus, Ref} | {error, ErrorAtom}")
               "erl_ddll:try_load/3"
               ("http://www.erlang.org/doc/man/erl_ddll.html#try_load-3" "try_load(Path, Name, OptionList) -> {ok, Status} | {ok, PendingStatus, Ref} | {error, ErrorDesc}")
               "erl_ddll:reload_driver/2"
               ("http://www.erlang.org/doc/man/erl_ddll.html#reload_driver-2" "reload_driver(Path, Name) -> ok | {error, ErrorDesc}")
               "erl_ddll:reload/2"
               ("http://www.erlang.org/doc/man/erl_ddll.html#reload-2" "reload(Path, Name) -> ok | {error, ErrorDesc}")
               "erl_ddll:monitor/2"
               ("http://www.erlang.org/doc/man/erl_ddll.html#monitor-2" "monitor(Tag, Item) -> MonitorRef")
               "erl_ddll:loaded_drivers/0"
               ("http://www.erlang.org/doc/man/erl_ddll.html#loaded_drivers-0" "loaded_drivers() -> {ok, Drivers}")
               "erl_ddll:load_driver/2"
               ("http://www.erlang.org/doc/man/erl_ddll.html#load_driver-2" "load_driver(Path, Name) -> ok | {error, ErrorDesc}")
               "erl_ddll:load/2"
               ("http://www.erlang.org/doc/man/erl_ddll.html#load-2" "load(Path, Name) -> ok | {error, ErrorDesc}")
               "erl_ddll:info/2"
               ("http://www.erlang.org/doc/man/erl_ddll.html#info-2" "info(Name, Tag) -> Value")
               "erl_ddll:info/1"
               ("http://www.erlang.org/doc/man/erl_ddll.html#info-1" "info(Name) -> InfoList")
               "erl_ddll:info/0"
               ("http://www.erlang.org/doc/man/erl_ddll.html#info-0" "info() -> AllInfoList")
               "erl_ddll:format_error/1"
               ("http://www.erlang.org/doc/man/erl_ddll.html#format_error-1" "format_error(ErrorDesc) -> string()")
               "erl_ddll:demonitor/1"
               ("http://www.erlang.org/doc/man/erl_ddll.html#demonitor-1" "demonitor(MonitorRef) -> ok")
               "erl_ddll:path()"
               ("http://www.erlang.org/doc/man/erl_ddll.html#type-path" "path() = string() | atom()")
               "erl_ddll:driver()"
               ("http://www.erlang.org/doc/man/erl_ddll.html#type-driver" "driver() = iolist() | atom()")
               "erl_driver:set_port_control_flags()"
               ("http://www.erlang.org/doc/man/erl_driver.html#set_port_control_flags" "void set_port_control_flags(ErlDrvPort port,\n        int flags)")
               "erl_driver:set_busy_port()"
               ("http://www.erlang.org/doc/man/erl_driver.html#set_busy_port" "void set_busy_port(ErlDrvPort port, int\n        on)")
               "erl_driver:remove_driver_entry()"
               ("http://www.erlang.org/doc/man/erl_driver.html#remove_driver_entry" "int remove_driver_entry(ErlDrvEntry\n        *de)")
               "erl_driver:erl_errno_id()"
               ("http://www.erlang.org/doc/man/erl_driver.html#erl_errno_id" "char *erl_errno_id(int error)")
               "erl_driver:erl_drv_tsd_set()"
               ("http://www.erlang.org/doc/man/erl_driver.html#erl_drv_tsd_set" "void erl_drv_tsd_set(ErlDrvTSDKey key, void\n        *data)")
               "erl_driver:erl_drv_tsd_key_destroy()"
               ("http://www.erlang.org/doc/man/erl_driver.html#erl_drv_tsd_key_destroy" "void erl_drv_tsd_key_destroy(ErlDrvTSDKey\n        key)")
               "erl_driver:erl_drv_tsd_key_create()"
               ("http://www.erlang.org/doc/man/erl_driver.html#erl_drv_tsd_key_create" "int erl_drv_tsd_key_create(char *name,\n        ErlDrvTSDKey *key)")
               "erl_driver:erl_drv_tsd_get()"
               ("http://www.erlang.org/doc/man/erl_driver.html#erl_drv_tsd_get" "void *erl_drv_tsd_get(ErlDrvTSDKey\n        key)")
               "erl_driver:erl_drv_time_offset()"
               ("http://www.erlang.org/doc/man/erl_driver.html#erl_drv_time_offset" "ErlDrvTime erl_drv_time_offset(ErlDrvTimeUnit\n        time_unit)")
               "erl_driver:erl_drv_thread_self()"
               ("http://www.erlang.org/doc/man/erl_driver.html#erl_drv_thread_self" "ErlDrvTid erl_drv_thread_self(void)")
               "erl_driver:erl_drv_thread_opts_destroy()"
               ("http://www.erlang.org/doc/man/erl_driver.html#erl_drv_thread_opts_destroy" "void erl_drv_thread_opts_destroy(ErlDrvThreadOpts *opts)")
               "erl_driver:erl_drv_thread_opts_create()"
               ("http://www.erlang.org/doc/man/erl_driver.html#erl_drv_thread_opts_create" "ErlDrvThreadOpts *erl_drv_thread_opts_create(char *name)")
               "erl_driver:erl_drv_rwlock_name()"
               ("http://www.erlang.org/doc/man/erl_driver.html#erl_drv_rwlock_name" "char *erl_drv_rwlock_name(ErlDrvRWLock\n        *rwlck)")
               "erl_driver:erl_drv_thread_name()"
               ("http://www.erlang.org/doc/man/erl_driver.html#erl_drv_thread_name" "char *erl_drv_thread_name(ErlDrvTid\n        tid)")
               "erl_driver:erl_drv_thread_join()"
               ("http://www.erlang.org/doc/man/erl_driver.html#erl_drv_thread_join" "int erl_drv_thread_join(ErlDrvTid tid, void\n        **exit_value)")
               "erl_driver:erl_drv_thread_exit()"
               ("http://www.erlang.org/doc/man/erl_driver.html#erl_drv_thread_exit" "void erl_drv_thread_exit(void\n        *exit_value)")
               "erl_driver:erl_drv_thread_create()"
               ("http://www.erlang.org/doc/man/erl_driver.html#erl_drv_thread_create" "int erl_drv_thread_create(char *name, ErlDrvTid\n        *tid, void * (*func)(void *), void *arg, ErlDrvThreadOpts\n        *opts)")
               "erl_driver:erl_drv_set_os_pid()"
               ("http://www.erlang.org/doc/man/erl_driver.html#erl_drv_set_os_pid" "void erl_drv_set_os_pid(ErlDrvPort port,\n        ErlDrvSInt pid)")
               "erl_driver:erl_drv_send_term()"
               ("http://www.erlang.org/doc/man/erl_driver.html#erl_drv_send_term" "int erl_drv_send_term(ErlDrvTermData port,\n        ErlDrvTermData receiver, ErlDrvTermData* term, int n)")
               "erl_driver:erl_drv_rwlock_tryrwlock()"
               ("http://www.erlang.org/doc/man/erl_driver.html#erl_drv_rwlock_tryrwlock" "int erl_drv_rwlock_tryrwlock(ErlDrvRWLock\n        *rwlck)")
               "erl_driver:erl_drv_rwlock_tryrlock()"
               ("http://www.erlang.org/doc/man/erl_driver.html#erl_drv_rwlock_tryrlock" "int erl_drv_rwlock_tryrlock(ErlDrvRWLock\n        *rwlck)")
               "erl_driver:erl_drv_rwlock_rwunlock()"
               ("http://www.erlang.org/doc/man/erl_driver.html#erl_drv_rwlock_rwunlock" "void erl_drv_rwlock_rwunlock(ErlDrvRWLock\n        *rwlck)")
               "erl_driver:erl_drv_rwlock_rwlock()"
               ("http://www.erlang.org/doc/man/erl_driver.html#erl_drv_rwlock_rwlock" "void erl_drv_rwlock_rwlock(ErlDrvRWLock\n        *rwlck)")
               "erl_driver:erl_drv_rwlock_runlock()"
               ("http://www.erlang.org/doc/man/erl_driver.html#erl_drv_rwlock_runlock" "void erl_drv_rwlock_runlock(ErlDrvRWLock\n        *rwlck)")
               "erl_driver:erl_drv_rwlock_rlock()"
               ("http://www.erlang.org/doc/man/erl_driver.html#erl_drv_rwlock_rlock" "void erl_drv_rwlock_rlock(ErlDrvRWLock\n        *rwlck)")
               "erl_driver:erl_drv_rwlock_destroy()"
               ("http://www.erlang.org/doc/man/erl_driver.html#erl_drv_rwlock_destroy" "void erl_drv_rwlock_destroy(ErlDrvRWLock\n        *rwlck)")
               "erl_driver:erl_drv_rwlock_create()"
               ("http://www.erlang.org/doc/man/erl_driver.html#erl_drv_rwlock_create" "ErlDrvRWLock *erl_drv_rwlock_create(char\n        *name)")
               "erl_driver:erl_drv_putenv()"
               ("http://www.erlang.org/doc/man/erl_driver.html#erl_drv_putenv" "int erl_drv_putenv(const char *key, char\n        *value)")
               "erl_driver:erl_drv_output_term()"
               ("http://www.erlang.org/doc/man/erl_driver.html#erl_drv_output_term" "int erl_drv_output_term(ErlDrvTermData port,\n        ErlDrvTermData* term, int n)")
               "erl_driver:erl_drv_mutex_unlock()"
               ("http://www.erlang.org/doc/man/erl_driver.html#erl_drv_mutex_unlock" "void erl_drv_mutex_unlock(ErlDrvMutex\n        *mtx)")
               "erl_driver:erl_drv_mutex_trylock()"
               ("http://www.erlang.org/doc/man/erl_driver.html#erl_drv_mutex_trylock" "int erl_drv_mutex_trylock(ErlDrvMutex\n        *mtx)")
               "erl_driver:erl_drv_mutex_name()"
               ("http://www.erlang.org/doc/man/erl_driver.html#erl_drv_mutex_name" "char *erl_drv_mutex_name(ErlDrvMutex\n        *mtx)")
               "erl_driver:erl_drv_mutex_lock()"
               ("http://www.erlang.org/doc/man/erl_driver.html#erl_drv_mutex_lock" "void erl_drv_mutex_lock(ErlDrvMutex\n        *mtx)")
               "erl_driver:erl_drv_mutex_destroy()"
               ("http://www.erlang.org/doc/man/erl_driver.html#erl_drv_mutex_destroy" "void erl_drv_mutex_destroy(ErlDrvMutex\n        *mtx)")
               "erl_driver:erl_drv_mutex_create()"
               ("http://www.erlang.org/doc/man/erl_driver.html#erl_drv_mutex_create" "ErlDrvMutex *erl_drv_mutex_create(char\n        *name)")
               "erl_driver:erl_drv_monotonic_time()"
               ("http://www.erlang.org/doc/man/erl_driver.html#erl_drv_monotonic_time" "ErlDrvTime erl_drv_monotonic_time(ErlDrvTimeUnit time_unit)")
               "erl_driver:erl_drv_init_ack()"
               ("http://www.erlang.org/doc/man/erl_driver.html#erl_drv_init_ack" "void erl_drv_init_ack(ErlDrvPort port,\n        ErlDrvData res)")
               "erl_driver:erl_drv_getenv()"
               ("http://www.erlang.org/doc/man/erl_driver.html#erl_drv_getenv" "int erl_drv_getenv(const char *key, char\n        *value, size_t *value_size)")
               "erl_driver:erl_drv_equal_tids()"
               ("http://www.erlang.org/doc/man/erl_driver.html#erl_drv_equal_tids" "int erl_drv_equal_tids(ErlDrvTid tid1,\n        ErlDrvTid tid2)")
               "erl_driver:erl_drv_convert_time_unit()"
               ("http://www.erlang.org/doc/man/erl_driver.html#erl_drv_convert_time_unit" "ErlDrvTime erl_drv_convert_time_unit(ErlDrvTime\n        val, ErlDrvTimeUnit from, ErlDrvTimeUnit to)")
               "erl_driver:erl_drv_consume_timeslice()"
               ("http://www.erlang.org/doc/man/erl_driver.html#erl_drv_consume_timeslice" "int erl_drv_consume_timeslice(ErlDrvPort port,\n        int percent)")
               "erl_driver:erl_drv_cond_wait()"
               ("http://www.erlang.org/doc/man/erl_driver.html#erl_drv_cond_wait" "void erl_drv_cond_wait(ErlDrvCond *cnd,\n        ErlDrvMutex *mtx)")
               "erl_driver:erl_drv_cond_signal()"
               ("http://www.erlang.org/doc/man/erl_driver.html#erl_drv_cond_signal" "void erl_drv_cond_signal(ErlDrvCond\n        *cnd)")
               "erl_driver:erl_drv_cond_name()"
               ("http://www.erlang.org/doc/man/erl_driver.html#erl_drv_cond_name" "char *erl_drv_cond_name(ErlDrvCond\n        *cnd)")
               "erl_driver:erl_drv_cond_destroy()"
               ("http://www.erlang.org/doc/man/erl_driver.html#erl_drv_cond_destroy" "void erl_drv_cond_destroy(ErlDrvCond\n        *cnd)")
               "erl_driver:erl_drv_cond_create()"
               ("http://www.erlang.org/doc/man/erl_driver.html#erl_drv_cond_create" "ErlDrvCond *erl_drv_cond_create(char\n        *name)")
               "erl_driver:erl_drv_cond_broadcast()"
               ("http://www.erlang.org/doc/man/erl_driver.html#erl_drv_cond_broadcast" "void erl_drv_cond_broadcast(ErlDrvCond\n        *cnd)")
               "erl_driver:erl_drv_busy_msgq_limits()"
               ("http://www.erlang.org/doc/man/erl_driver.html#erl_drv_busy_msgq_limits" "void erl_drv_busy_msgq_limits(ErlDrvPort port,\n        ErlDrvSizeT *low, ErlDrvSizeT *high)")
               "erl_driver:driver_vec_to_buf()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_vec_to_buf" "ErlDrvSizeT driver_vec_to_buf(ErlIOVec *ev,\n        char *buf, ErlDrvSizeT len)")
               "erl_driver:driver_system_info()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_system_info" "void driver_system_info(ErlDrvSysInfo\n        *sys_info_ptr, size_t size)")
               "erl_driver:driver_sizeq()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_sizeq" "ErlDrvSizeT driver_sizeq(ErlDrvPort port)")
               "erl_driver:driver_set_timer()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_set_timer" "int driver_set_timer(ErlDrvPort port, unsigned\n        long time)")
               "erl_driver:driver_send_term()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_send_term" "int driver_send_term(ErlDrvPort port,\n        ErlDrvTermData receiver, ErlDrvTermData* term, int n)")
               "erl_driver:driver_select()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_select" "int driver_select(ErlDrvPort port, ErlDrvEvent\n        event, int mode, int on)")
               "erl_driver:driver_realloc_binary()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_realloc_binary" "ErlDrvBinary *driver_realloc_binary(ErlDrvBinary *bin, ErlDrvSizeT size)")
               "erl_driver:driver_realloc()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_realloc" "void *driver_realloc(void *ptr, ErlDrvSizeT size)")
               "erl_driver:driver_read_timer()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_read_timer" "int driver_read_timer(ErlDrvPort port, unsigned\n        long *time_left)")
               "erl_driver:driver_pushqv()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_pushqv" "int driver_pushqv(ErlDrvPort port, ErlIOVec\n        *ev, ErlDrvSizeT skip)")
               "erl_driver:driver_pushq_bin()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_pushq_bin" "int driver_pushq_bin(ErlDrvPort port,\n        ErlDrvBinary *bin, ErlDrvSizeT offset, ErlDrvSizeT len)")
               "erl_driver:driver_pushq()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_pushq" "int driver_pushq(ErlDrvPort port, char* buf,\n        ErlDrvSizeT len)")
               "erl_driver:driver_peekqv()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_peekqv" "ErlDrvSizeT driver_peekqv(ErlDrvPort port,\n        ErlIOVec *ev)")
               "erl_driver:driver_peekq()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_peekq" "SysIOVec *driver_peekq(ErlDrvPort port, int\n        *vlen)")
               "erl_driver:driver_pdl_unlock()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_pdl_unlock" "void driver_pdl_unlock(ErlDrvPDL pdl)")
               "erl_driver:driver_pdl_lock()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_pdl_lock" "void driver_pdl_lock(ErlDrvPDL pdl)")
               "erl_driver:driver_pdl_inc_refc()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_pdl_inc_refc" "long driver_pdl_inc_refc(ErlDrvPDL pdl)")
               "erl_driver:driver_pdl_get_refc()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_pdl_get_refc" "long driver_pdl_get_refc(ErlDrvPDL pdl)")
               "erl_driver:driver_pdl_dec_refc()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_pdl_dec_refc" "long driver_pdl_dec_refc(ErlDrvPDL\n        pdl)")
               "erl_driver:driver_pdl_create()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_pdl_create" "ErlDrvPDL driver_pdl_create(ErlDrvPort port)")
               "erl_driver:driver_outputv()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_outputv" "int driver_outputv(ErlDrvPort port, char* hbuf,\n        ErlDrvSizeT hlen, ErlIOVec *ev, ErlDrvSizeT skip)")
               "erl_driver:driver_output2()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_output2" "int driver_output2(ErlDrvPort port, char *hbuf,\n        ErlDrvSizeT hlen, char *buf, ErlDrvSizeT len)")
               "erl_driver:driver_output_term()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_output_term" "int driver_output_term(ErlDrvPort port,\n        ErlDrvTermData* term, int n)")
               "erl_driver:driver_output_binary()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_output_binary" "int driver_output_binary(ErlDrvPort port, char\n        *hbuf, ErlDrvSizeT hlen, ErlDrvBinary* bin, ErlDrvSizeT offset,\n        ErlDrvSizeT len)")
               "erl_driver:driver_output()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_output" "int driver_output(ErlDrvPort port, char *buf,\n        ErlDrvSizeT len)")
               "erl_driver:driver_monitor_process()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_monitor_process" "int driver_monitor_process(ErlDrvPort port,\n        ErlDrvTermData process, ErlDrvMonitor *monitor)")
               "erl_driver:driver_mk_port()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_mk_port" "ErlDrvTermData driver_mk_port(ErlDrvPort\n        port)")
               "erl_driver:driver_mk_atom()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_mk_atom" "ErlDrvTermData driver_mk_atom(char*\n        string)")
               "erl_driver:driver_lock_driver()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_lock_driver" "int driver_lock_driver(ErlDrvPort\n        port)")
               "erl_driver:driver_get_now()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_get_now" "int driver_get_now(ErlDrvNowData *now)")
               "erl_driver:driver_get_monitored_process()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_get_monitored_process" "ErlDrvTermData driver_get_monitored_process(ErlDrvPort port, const\n        ErlDrvMonitor *monitor)")
               "erl_driver:driver_free_binary()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_free_binary" "void driver_free_binary(ErlDrvBinary *bin)")
               "erl_driver:driver_free()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_free" "void driver_free(void *ptr)")
               "erl_driver:driver_failure_eof()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_failure_eof" "int driver_failure_eof(ErlDrvPort\n        port)")
               "erl_driver:driver_failure()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_failure" "int driver_failure(ErlDrvPort port, int\n        error)")
               "erl_driver:driver_failure_posix()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_failure_posix" "int driver_failure_posix(ErlDrvPort port, int\n        error)")
               "erl_driver:driver_failure_atom()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_failure_atom" "int driver_failure_atom(ErlDrvPort port, char\n        *string)")
               "erl_driver:driver_enqv()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_enqv" "int driver_enqv(ErlDrvPort port, ErlIOVec *ev,\n        ErlDrvSizeT skip)")
               "erl_driver:driver_enq_bin()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_enq_bin" "int driver_enq_bin(ErlDrvPort port,\n        ErlDrvBinary *bin, ErlDrvSizeT offset, ErlDrvSizeT len)")
               "erl_driver:driver_enq()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_enq" "int driver_enq(ErlDrvPort port, char* buf,\n        ErlDrvSizeT len)")
               "erl_driver:driver_deq()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_deq" "ErlDrvSizeT driver_deq(ErlDrvPort port,\n        ErlDrvSizeT size)")
               "erl_driver:driver_demonitor_process()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_demonitor_process" "int driver_demonitor_process(ErlDrvPort port,\n        const ErlDrvMonitor *monitor)")
               "erl_driver:driver_create_port()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_create_port" "ErlDrvPort driver_create_port(ErlDrvPort port,\n        ErlDrvTermData owner_pid, char* name,\n        ErlDrvData drv_data)")
               "erl_driver:driver_connected()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_connected" "ErlDrvTermData driver_connected(ErlDrvPort\n        port)")
               "erl_driver:driver_compare_monitors()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_compare_monitors" "int driver_compare_monitors(const ErlDrvMonitor\n        *monitor1, const ErlDrvMonitor *monitor2)")
               "erl_driver:driver_cancel_timer()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_cancel_timer" "int driver_cancel_timer(ErlDrvPort port)")
               "erl_driver:driver_caller()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_caller" "ErlDrvTermData driver_caller(ErlDrvPort\n        port)")
               "erl_driver:driver_binary_inc_refc()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_binary_inc_refc" "long driver_binary_inc_refc(ErlDrvBinary *bin)")
               "erl_driver:driver_binary_get_refc()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_binary_get_refc" "long driver_binary_get_refc(ErlDrvBinary *bin)")
               "erl_driver:driver_binary_dec_refc()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_binary_dec_refc" "long driver_binary_dec_refc(ErlDrvBinary *bin)")
               "erl_driver:driver_async_port_key()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_async_port_key" "unsigned int driver_async_port_key(ErlDrvPort\n        port)")
               "erl_driver:driver_async()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_async" "long driver_async(ErlDrvPort port, unsigned\n        int* key, void (*async_invoke)(void*), void* async_data, void\n        (*async_free)(void*))")
               "erl_driver:driver_alloc_binary()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_alloc_binary" "ErlDrvBinary *driver_alloc_binary(ErlDrvSizeT size)")
               "erl_driver:driver_alloc()"
               ("http://www.erlang.org/doc/man/erl_driver.html#driver_alloc" "void *driver_alloc(ErlDrvSizeT size)")
               "erl_driver:add_driver_entry()"
               ("http://www.erlang.org/doc/man/erl_driver.html#add_driver_entry" "void add_driver_entry(ErlDrvEntry\n        *de)")
               "erl_error:erl_errno()"
               ("http://www.erlang.org/doc/man/erl_error.html#" "volatile int erl_errno")
               "erl_error:erl_err_sys()"
               ("http://www.erlang.org/doc/man/erl_error.html#erl_err_sys" "void erl_err_sys(FormatStr, ... )")
               "erl_error:erl_err_ret()"
               ("http://www.erlang.org/doc/man/erl_error.html#erl_err_ret" "void erl_err_ret(FormatStr, ... )")
               "erl_error:erl_err_quit()"
               ("http://www.erlang.org/doc/man/erl_error.html#erl_err_quit" "void erl_err_quit(FormatStr, ... )")
               "erl_error:erl_err_msg()"
               ("http://www.erlang.org/doc/man/erl_error.html#erl_err_msg" "void erl_err_msg(FormatStr, ... )")
               "erl_eterm:erl_var_content()"
               ("http://www.erlang.org/doc/man/erl_eterm.html#erl_var_content" "ETERM *erl_var_content(term, name)")
               "erl_eterm:erl_tl()"
               ("http://www.erlang.org/doc/man/erl_eterm.html#erl_tl" "ETERM *erl_tl(list)")
               "erl_eterm:erl_size()"
               ("http://www.erlang.org/doc/man/erl_eterm.html#erl_size" "int erl_size(term)")
               "erl_eterm:erl_set_compat_rel()"
               ("http://www.erlang.org/doc/man/erl_eterm.html#erl_set_compat_rel" "void erl_set_compat_rel(release_number)")
               "erl_eterm:erl_print_term()"
               ("http://www.erlang.org/doc/man/erl_eterm.html#erl_print_term" "int erl_print_term(stream, term)")
               "erl_eterm:erl_mk_var()"
               ("http://www.erlang.org/doc/man/erl_eterm.html#erl_mk_var" "ETERM *erl_mk_var(name)")
               "erl_eterm:erl_mk_uint()"
               ("http://www.erlang.org/doc/man/erl_eterm.html#erl_mk_uint" "ETERM *erl_mk_uint(n)")
               "erl_eterm:erl_mk_tuple()"
               ("http://www.erlang.org/doc/man/erl_eterm.html#erl_mk_tuple" "ETERM *erl_mk_tuple(array, arrsize)")
               "erl_eterm:erl_mk_string()"
               ("http://www.erlang.org/doc/man/erl_eterm.html#erl_mk_string" "ETERM *erl_mk_string(string)")
               "erl_eterm:erl_mk_ref()"
               ("http://www.erlang.org/doc/man/erl_eterm.html#erl_mk_ref" "ETERM *erl_mk_ref(node, number, creation)")
               "erl_eterm:erl_mk_port()"
               ("http://www.erlang.org/doc/man/erl_eterm.html#erl_mk_port" "ETERM *erl_mk_port(node, number, creation)")
               "erl_eterm:erl_mk_pid()"
               ("http://www.erlang.org/doc/man/erl_eterm.html#erl_mk_pid" "ETERM *erl_mk_pid(node, number, serial, creation)")
               "erl_eterm:erl_mk_long_ref()"
               ("http://www.erlang.org/doc/man/erl_eterm.html#erl_mk_long_ref" "ETERM *erl_mk_long_ref(node, n1, n2, n3, creation)")
               "erl_eterm:erl_mk_list()"
               ("http://www.erlang.org/doc/man/erl_eterm.html#erl_mk_list" "ETERM *erl_mk_list(array, arrsize)")
               "erl_eterm:erl_mk_int()"
               ("http://www.erlang.org/doc/man/erl_eterm.html#erl_mk_int" "ETERM *erl_mk_int(n)")
               "erl_eterm:erl_mk_float()"
               ("http://www.erlang.org/doc/man/erl_eterm.html#erl_mk_float" "ETERM *erl_mk_float(f)")
               "erl_eterm:erl_mk_estring()"
               ("http://www.erlang.org/doc/man/erl_eterm.html#erl_mk_estring" "ETERM *erl_mk_estring(string, len)")
               "erl_eterm:erl_mk_empty_list()"
               ("http://www.erlang.org/doc/man/erl_eterm.html#erl_mk_empty_list" "ETERM *erl_mk_empty_list()")
               "erl_eterm:erl_mk_binary()"
               ("http://www.erlang.org/doc/man/erl_eterm.html#erl_mk_binary" "ETERM *erl_mk_binary(bptr, size)")
               "erl_eterm:erl_mk_atom()"
               ("http://www.erlang.org/doc/man/erl_eterm.html#erl_mk_atom" "ETERM *erl_mk_atom(string)")
               "erl_eterm:erl_length()"
               ("http://www.erlang.org/doc/man/erl_eterm.html#erl_length" "int erl_length(list)")
               "erl_eterm:erl_iolist_to_string()"
               ("http://www.erlang.org/doc/man/erl_eterm.html#erl_iolist_to_string" "char *erl_iolist_to_string(list)")
               "erl_eterm:erl_iolist_to_binary()"
               ("http://www.erlang.org/doc/man/erl_eterm.html#erl_iolist_to_binary" "ETERM *erl_iolist_to_binary(term)")
               "erl_eterm:erl_iolist_length()"
               ("http://www.erlang.org/doc/man/erl_eterm.html#erl_iolist_length" "int erl_iolist_length(list)")
               "erl_eterm:erl_init()"
               ("http://www.erlang.org/doc/man/erl_eterm.html#erl_init" "void erl_init(NULL, 0)")
               "erl_eterm:erl_hd()"
               ("http://www.erlang.org/doc/man/erl_eterm.html#erl_hd" "ETERM *erl_hd(list)")
               "erl_eterm:erl_element()"
               ("http://www.erlang.org/doc/man/erl_eterm.html#erl_element" "ETERM *erl_element(position, tuple)")
               "erl_eterm:erl_copy_term()"
               ("http://www.erlang.org/doc/man/erl_eterm.html#erl_copy_term" "ETERM *erl_copy_term(term)")
               "erl_eterm:erl_cons()"
               ("http://www.erlang.org/doc/man/erl_eterm.html#erl_cons" "ETERM *erl_cons(head, tail)")
               "erl_eval:new_bindings/0"
               ("http://www.erlang.org/doc/man/erl_eval.html#new_bindings-0" "new_bindings() -> binding_struct()")
               "erl_eval:exprs/4"
               ("http://www.erlang.org/doc/man/erl_eval.html#exprs-4" "exprs(Expressions, Bindings, LocalFunctionHandler, NonLocalFunctionHandler) -> {value, Value, NewBindings}")
               "erl_eval:exprs/3"
               ("http://www.erlang.org/doc/man/erl_eval.html#exprs-3" "exprs(Expressions, Bindings, LocalFunctionHandler) -> {value, Value, NewBindings}")
               "erl_eval:exprs/2"
               ("http://www.erlang.org/doc/man/erl_eval.html#exprs-2" "exprs(Expressions, Bindings) -> {value, Value, NewBindings}")
               "erl_eval:expr_list/4"
               ("http://www.erlang.org/doc/man/erl_eval.html#expr_list-4" "expr_list(ExpressionList, Bindings, LocalFunctionHandler, NonLocalFunctionHandler) -> {ValueList, NewBindings}")
               "erl_eval:expr_list/3"
               ("http://www.erlang.org/doc/man/erl_eval.html#expr_list-3" "expr_list(ExpressionList, Bindings, LocalFunctionHandler) -> {ValueList, NewBindings}")
               "erl_eval:expr_list/2"
               ("http://www.erlang.org/doc/man/erl_eval.html#expr_list-2" "expr_list(ExpressionList, Bindings) -> {ValueList, NewBindings}")
               "erl_eval:expr/5"
               ("http://www.erlang.org/doc/man/erl_eval.html#expr-5" "expr(Expression, Bindings, LocalFunctionHandler, NonLocalFunctionHandler, ReturnFormat) -> {value, Value, NewBindings} | Value")
               "erl_eval:expr/4"
               ("http://www.erlang.org/doc/man/erl_eval.html#expr-4" "expr(Expression, Bindings, LocalFunctionHandler, NonLocalFunctionHandler) -> {value, Value, NewBindings}")
               "erl_eval:expr/3"
               ("http://www.erlang.org/doc/man/erl_eval.html#expr-3" "expr(Expression, Bindings, LocalFunctionHandler) -> {value, Value, NewBindings}")
               "erl_eval:expr/2"
               ("http://www.erlang.org/doc/man/erl_eval.html#expr-2" "expr(Expression, Bindings) -> {value, Value, NewBindings}")
               "erl_eval:del_binding/2"
               ("http://www.erlang.org/doc/man/erl_eval.html#del_binding-2" "del_binding(Name, BindingStruct) -> binding_struct()")
               "erl_eval:bindings/1"
               ("http://www.erlang.org/doc/man/erl_eval.html#bindings-1" "bindings(BindingStruct :: binding_struct() ) -> bindings()")
               "erl_eval:binding/2"
               ("http://www.erlang.org/doc/man/erl_eval.html#binding-2" "binding(Name, BindingStruct) -> {value, value() } | unbound")
               "erl_eval:add_binding/3"
               ("http://www.erlang.org/doc/man/erl_eval.html#add_binding-3" "add_binding(Name, Value, BindingStruct) -> binding_struct()")
               "erl_eval:value()"
               ("http://www.erlang.org/doc/man/erl_eval.html#type-value" "value() = term()")
               "erl_eval:non_local_function_handler()"
               ("http://www.erlang.org/doc/man/erl_eval.html#type-non_local_function_handler" "non_local_function_handler() = {value, nlfun_handler() } | none")
               "erl_eval:nlfun_handler()"
               ("http://www.erlang.org/doc/man/erl_eval.html#type-nlfun_handler" "nlfun_handler() = fun((FuncSpec :: func_spec() , Arguments :: [term()]) -> term())")
               "erl_eval:name()"
               ("http://www.erlang.org/doc/man/erl_eval.html#type-name" "name() = term()")
               "erl_eval:local_function_handler()"
               ("http://www.erlang.org/doc/man/erl_eval.html#type-local_function_handler" "local_function_handler() = {value, lfun_value_handler() } | {eval, lfun_eval_handler() } | none")
               "erl_eval:lfun_value_handler()"
               ("http://www.erlang.org/doc/man/erl_eval.html#type-lfun_value_handler" "lfun_value_handler() = fun((Name :: atom(), Arguments :: [term()]) -> Value :: value() )")
               "erl_eval:lfun_eval_handler()"
               ("http://www.erlang.org/doc/man/erl_eval.html#type-lfun_eval_handler" "lfun_eval_handler() = fun((Name :: atom(), Arguments :: expression_list() , Bindings :: binding_struct() ) -> {value, Value :: value() , NewBindings :: binding_struct() })")
               "erl_eval:func_spec()"
               ("http://www.erlang.org/doc/man/erl_eval.html#type-func_spec" "func_spec() = {Module :: module(), Function :: atom()} | function()")
               "erl_eval:expression_list()"
               ("http://www.erlang.org/doc/man/erl_eval.html#type-expression_list" "expression_list() = [ expression() ]")
               "erl_eval:expressions()"
               ("http://www.erlang.org/doc/man/erl_eval.html#type-expressions" "expressions() = [ erl_parse:abstract_expr() ]")
               "erl_eval:expression()"
               ("http://www.erlang.org/doc/man/erl_eval.html#type-expression" "expression() = erl_parse:abstract_expr()")
               "erl_eval:binding_struct()"
               ("http://www.erlang.org/doc/man/erl_eval.html#type-binding_struct" "binding_struct() = orddict:orddict()")
               "erl_eval:bindings()"
               ("http://www.erlang.org/doc/man/erl_eval.html#type-bindings" "bindings() = [{ name() , value() }]")
               "erl_expand_records:module/2"
               ("http://www.erlang.org/doc/man/erl_expand_records.html#module-2" "module(AbsForms, CompileOptions) -> AbsForms2")
               "erl_format:erl_match()"
               ("http://www.erlang.org/doc/man/erl_format.html#erl_match" "int erl_match(Pattern, Term)")
               "erl_format:erl_format()"
               ("http://www.erlang.org/doc/man/erl_format.html#erl_format" "ETERM *erl_format(FormatStr, ...)")
               "erl_global:erl_global_whereis()"
               ("http://www.erlang.org/doc/man/erl_global.html#erl_global_whereis" "ETERM *erl_global_whereis(fd,name,node)")
               "erl_global:erl_global_unregister()"
               ("http://www.erlang.org/doc/man/erl_global.html#erl_global_unregister" "int erl_global_unregister(fd,name)")
               "erl_global:erl_global_register()"
               ("http://www.erlang.org/doc/man/erl_global.html#erl_global_register" "int erl_global_register(fd,name,pid)")
               "erl_global:erl_global_names()"
               ("http://www.erlang.org/doc/man/erl_global.html#erl_global_names" "char **erl_global_names(fd,count)")
               "erl_id_trans:parse_transform/2"
               ("http://www.erlang.org/doc/man/erl_id_trans.html#parse_transform-2" "parse_transform(Forms, Options) -> Forms")
               "erl_internal:type_test/2"
               ("http://www.erlang.org/doc/man/erl_internal.html#type_test-2" "type_test(Name, Arity) -> boolean()")
               "erl_internal:send_op/2"
               ("http://www.erlang.org/doc/man/erl_internal.html#send_op-2" "send_op(OpName, Arity) -> boolean()")
               "erl_internal:op_type/2"
               ("http://www.erlang.org/doc/man/erl_internal.html#op_type-2" "op_type(OpName, Arity) -> Type")
               "erl_internal:list_op/2"
               ("http://www.erlang.org/doc/man/erl_internal.html#list_op-2" "list_op(OpName, Arity) -> boolean()")
               "erl_internal:guard_bif/2"
               ("http://www.erlang.org/doc/man/erl_internal.html#guard_bif-2" "guard_bif(Name, Arity) -> boolean()")
               "erl_internal:comp_op/2"
               ("http://www.erlang.org/doc/man/erl_internal.html#comp_op-2" "comp_op(OpName, Arity) -> boolean()")
               "erl_internal:bool_op/2"
               ("http://www.erlang.org/doc/man/erl_internal.html#bool_op-2" "bool_op(OpName, Arity) -> boolean()")
               "erl_internal:bif/2"
               ("http://www.erlang.org/doc/man/erl_internal.html#bif-2" "bif(Name, Arity) -> boolean()")
               "erl_internal:arith_op/2"
               ("http://www.erlang.org/doc/man/erl_internal.html#arith_op-2" "arith_op(OpName, Arity) -> boolean()")
               "erl_lint:module/3"
               ("http://www.erlang.org/doc/man/erl_lint.html#module-3" "module(AbsForms, FileName, CompileOptions) -> {ok, Warnings} | {error, Errors, Warnings}")
               "erl_lint:module/2"
               ("http://www.erlang.org/doc/man/erl_lint.html#module-2" "module(AbsForms, FileName) -> {ok, Warnings} | {error, Errors, Warnings}")
               "erl_lint:module/1"
               ("http://www.erlang.org/doc/man/erl_lint.html#module-1" "module(AbsForms) -> {ok, Warnings} | {error, Errors, Warnings}")
               "erl_lint:is_guard_test/1"
               ("http://www.erlang.org/doc/man/erl_lint.html#is_guard_test-1" "is_guard_test(Expr) -> boolean()")
               "erl_lint:format_error/1"
               ("http://www.erlang.org/doc/man/erl_lint.html#format_error-1" "format_error(ErrorDescriptor) -> io_lib:chars()")
               "erl_lint:error_description()"
               ("http://www.erlang.org/doc/man/erl_lint.html#type-error_description" "error_description() = term()")
               "erl_lint:error_info()"
               ("http://www.erlang.org/doc/man/erl_lint.html#type-error_info" "error_info() = { erl_anno:line() , module(), error_description() }")
               "erl_malloc:erl_malloc()"
               ("http://www.erlang.org/doc/man/erl_malloc.html#erl_malloc" "void erl_malloc(size)")
               "erl_malloc:erl_free_term()"
               ("http://www.erlang.org/doc/man/erl_malloc.html#erl_free_term" "void erl_free_term(t)")
               "erl_malloc:erl_free_compound()"
               ("http://www.erlang.org/doc/man/erl_malloc.html#erl_free_compound" "void erl_free_compound(t)")
               "erl_malloc:erl_free_array()"
               ("http://www.erlang.org/doc/man/erl_malloc.html#erl_free_array" "void erl_free_array(array, size)")
               "erl_malloc:erl_free()"
               ("http://www.erlang.org/doc/man/erl_malloc.html#erl_free" "void erl_free(ptr)")
               "erl_malloc:erl_eterm_statistics()"
               ("http://www.erlang.org/doc/man/erl_malloc.html#erl_eterm_statistics" "void erl_eterm_statistics(allocated, freed)")
               "erl_malloc:erl_eterm_release()"
               ("http://www.erlang.org/doc/man/erl_malloc.html#erl_eterm_release" "void erl_eterm_release(void)")
               "erl_malloc:erl_alloc_eterm()"
               ("http://www.erlang.org/doc/man/erl_malloc.html#erl_alloc_eterm" "ETERM *erl_alloc_eterm(etype)")
               "erl_marshal:erl_term_len()"
               ("http://www.erlang.org/doc/man/erl_marshal.html#erl_term_len" "int erl_term_len(t)")
               "erl_marshal:erl_peek_ext()"
               ("http://www.erlang.org/doc/man/erl_marshal.html#erl_peek_ext" "unsigned char *erl_peek_ext(bufp, pos)")
               "erl_marshal:erl_ext_type()"
               ("http://www.erlang.org/doc/man/erl_marshal.html#erl_ext_type" "unsigned char erl_ext_type(bufp)")
               "erl_marshal:erl_ext_size()"
               ("http://www.erlang.org/doc/man/erl_marshal.html#erl_ext_size" "int erl_ext_size(bufp)")
               "erl_marshal:erl_encode_buf()"
               ("http://www.erlang.org/doc/man/erl_marshal.html#erl_encode_buf" "int erl_encode_buf(term, bufpp)")
               "erl_marshal:erl_encode()"
               ("http://www.erlang.org/doc/man/erl_marshal.html#erl_encode" "int erl_encode(term, bufp)")
               "erl_marshal:erl_decode_buf()"
               ("http://www.erlang.org/doc/man/erl_marshal.html#erl_decode_buf" "ETERM *erl_decode_buf(bufpp)")
               "erl_marshal:erl_decode()"
               ("http://www.erlang.org/doc/man/erl_marshal.html#erl_decode" "ETERM *erl_decode(bufp)")
               "erl_marshal:erl_compare_ext()"
               ("http://www.erlang.org/doc/man/erl_marshal.html#erl_compare_ext" "int erl_compare_ext(bufp1, bufp2)")
               "erl_nif:enif_tsd_set()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_tsd_set" "void enif_tsd_set(ErlNifTSDKey key, void *data)")
               "erl_nif:enif_tsd_key_destroy()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_tsd_key_destroy" "void enif_tsd_key_destroy(ErlNifTSDKey key)")
               "erl_nif:enif_tsd_key_create()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_tsd_key_create" "int enif_tsd_key_create(char *name, ErlNifTSDKey *key)")
               "erl_nif:enif_tsd_get()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_tsd_get" "void *enif_tsd_get(ErlNifTSDKey key)")
               "erl_nif:enif_time_offset()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_time_offset" "ErlNifTime enif_time_offset(ErlNifTimeUnit time_unit)")
               "erl_nif:enif_thread_type()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_thread_type" "int enif_thread_type(void)")
               "erl_nif:enif_thread_self()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_thread_self" "ErlNifTid enif_thread_self(void)")
               "erl_nif:enif_thread_opts_destroy()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_thread_opts_destroy" "void enif_thread_opts_destroy(ErlNifThreadOpts *opts)")
               "erl_nif:enif_thread_opts_create()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_thread_opts_create" "ErlNifThreadOpts *enif_thread_opts_create(char *name)")
               "erl_nif:enif_thread_join()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_thread_join" "int enif_thread_join(ErlNifTid, void **respp)")
               "erl_nif:enif_thread_exit()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_thread_exit" "void enif_thread_exit(void *resp)")
               "erl_nif:enif_thread_create()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_thread_create" "int enif_thread_create(char *name,ErlNifTid\n        *tid,void * (*func)(void *),void *args,ErlNifThreadOpts\n        *opts)")
               "erl_nif:enif_term_to_binary()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_term_to_binary" "int enif_term_to_binary(ErlNifEnv *env,\n        ERL_NIF_TERM term, ErlNifBinary *bin)")
               "erl_nif:enif_system_info()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_system_info" "void enif_system_info(ErlNifSysInfo\n        *sys_info_ptr, size_t size)")
               "erl_nif:enif_snprintf()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_snprintf" "int enif_snprintf(char *str, size_t size, const\n        char *format, ...)")
               "erl_nif:enif_sizeof_resource()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_sizeof_resource" "unsigned enif_sizeof_resource(void* obj)")
               "erl_nif:enif_send()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_send" "int enif_send(ErlNifEnv* env, ErlNifPid* to_pid,\n        ErlNifEnv* msg_env, ERL_NIF_TERM msg)")
               "erl_nif:enif_self()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_self" "ErlNifPid *enif_self(ErlNifEnv* caller_env, ErlNifPid* pid)")
               "erl_nif:enif_schedule_nif()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_schedule_nif" "ERL_NIF_TERM enif_schedule_nif(ErlNifEnv* env,\n        const char* fun_name, int flags, ERL_NIF_TERM (*fp)(ErlNifEnv* env, int\n        argc, const ERL_NIF_TERM argv[]), int argc, const ERL_NIF_TERM\n        argv[])")
               "erl_nif:enif_rwlock_tryrwlock()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_rwlock_tryrwlock" "int enif_rwlock_tryrwlock(ErlNifRWLock *rwlck)")
               "erl_nif:enif_rwlock_tryrlock()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_rwlock_tryrlock" "int enif_rwlock_tryrlock(ErlNifRWLock *rwlck)")
               "erl_nif:enif_rwlock_rwunlock()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_rwlock_rwunlock" "void enif_rwlock_rwunlock(ErlNifRWLock *rwlck)")
               "erl_nif:enif_rwlock_rwlock()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_rwlock_rwlock" "void enif_rwlock_rwlock(ErlNifRWLock *rwlck)")
               "erl_nif:enif_rwlock_runlock()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_rwlock_runlock" "void enif_rwlock_runlock(ErlNifRWLock *rwlck)")
               "erl_nif:enif_rwlock_rlock()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_rwlock_rlock" "void enif_rwlock_rlock(ErlNifRWLock *rwlck)")
               "erl_nif:enif_rwlock_destroy()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_rwlock_destroy" "void enif_rwlock_destroy(ErlNifRWLock *rwlck)")
               "erl_nif:enif_rwlock_create()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_rwlock_create" "ErlNifRWLock *enif_rwlock_create(char *name)")
               "erl_nif:enif_release_resource()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_release_resource" "void enif_release_resource(void* obj)")
               "erl_nif:enif_release_binary()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_release_binary" "void enif_release_binary(ErlNifBinary* bin)")
               "erl_nif:enif_realloc_binary()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_realloc_binary" "int enif_realloc_binary(ErlNifBinary* bin, size_t size)")
               "erl_nif:enif_raise_exception()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_raise_exception" "ERL_NIF_TERM enif_raise_exception(ErlNifEnv*\n        env, ERL_NIF_TERM reason)")
               "erl_nif:enif_priv_data()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_priv_data" "void *enif_priv_data(ErlNifEnv* env)")
               "erl_nif:enif_port_command()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_port_command" "int enif_port_command(ErlNifEnv* env, const\n       ErlNifPort* to_port, ErlNifEnv *msg_env, ERL_NIF_TERM msg)")
               "erl_nif:enif_open_resource_type()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_open_resource_type" "ErlNifResourceType *enif_open_resource_type(ErlNifEnv* env, const char*\n        module_str, const char* name, ErlNifResourceDtor* dtor,\n        ErlNifResourceFlags flags, ErlNifResourceFlags* tried)")
               "erl_nif:enif_now_time()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_now_time" "ERL_NIF_TERM enif_now_time(ErlNifEnv *env)")
               "erl_nif:enif_mutex_unlock()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_mutex_unlock" "void enif_mutex_unlock(ErlNifMutex *mtx)")
               "erl_nif:enif_mutex_trylock()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_mutex_trylock" "int enif_mutex_trylock(ErlNifMutex *mtx)")
               "erl_nif:enif_mutex_lock()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_mutex_lock" "void enif_mutex_lock(ErlNifMutex *mtx)")
               "erl_nif:enif_mutex_destroy()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_mutex_destroy" "void enif_mutex_destroy(ErlNifMutex *mtx)")
               "erl_nif:enif_mutex_create()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_mutex_create" "ErlNifMutex *enif_mutex_create(char *name)")
               "erl_nif:enif_monotonic_time()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_monotonic_time" "ErlNifTime enif_monotonic_time(ErlNifTimeUnit time_unit)")
               "erl_nif:enif_map_iterator_prev()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_map_iterator_prev" "int enif_map_iterator_prev(ErlNifEnv *env,\n        ErlNifMapIterator *iter)")
               "erl_nif:enif_map_iterator_next()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_map_iterator_next" "int enif_map_iterator_next(ErlNifEnv *env,\n        ErlNifMapIterator *iter)")
               "erl_nif:enif_map_iterator_is_tail()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_map_iterator_is_tail" "int enif_map_iterator_is_tail(ErlNifEnv *env,\n        ErlNifMapIterator *iter)")
               "erl_nif:enif_map_iterator_is_head()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_map_iterator_is_head" "int enif_map_iterator_is_head(ErlNifEnv *env,\n        ErlNifMapIterator *iter)")
               "erl_nif:enif_map_iterator_get_pair()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_map_iterator_get_pair" "int enif_map_iterator_get_pair(ErlNifEnv *env,\n        ErlNifMapIterator *iter, ERL_NIF_TERM *key, ERL_NIF_TERM\n        *value)")
               "erl_nif:enif_map_iterator_destroy()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_map_iterator_destroy" "void enif_map_iterator_destroy(ErlNifEnv *env,\n        ErlNifMapIterator *iter)")
               "erl_nif:enif_map_iterator_create()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_map_iterator_create" "int enif_map_iterator_create(ErlNifEnv *env,\n        ERL_NIF_TERM map, ErlNifMapIterator *iter, ErlNifMapIteratorEntry\n        entry)")
               "erl_nif:enif_make_unique_integer()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_make_unique_integer" "ERL_NIF_TERM enif_make_unique_integer(ErlNifEnv\n        *env, ErlNifUniqueInteger properties)")
               "erl_nif:enif_make_ulong()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_make_ulong" "ERL_NIF_TERM enif_make_ulong(ErlNifEnv* env, unsigned long i)")
               "erl_nif:enif_make_uint64()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_make_uint64" "ERL_NIF_TERM enif_make_uint64(ErlNifEnv* env, ErlNifUInt64 i)")
               "erl_nif:enif_make_uint()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_make_uint" "ERL_NIF_TERM enif_make_uint(ErlNifEnv* env, unsigned int i)")
               "erl_nif:enif_make_tuple_from_array()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_make_tuple_from_array" "ERL_NIF_TERM enif_make_tuple_from_array(ErlNifEnv* env, const ERL_NIF_TERM\n        arr[], unsigned cnt)")
               "erl_nif:enif_make_tuple9()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_make_tuple9" "ERL_NIF_TERM enif_make_tuple9(ErlNifEnv* env,\n        ERL_NIF_TERM e1, ..., ERL_NIF_TERM e9)")
               "erl_nif:enif_make_tuple8()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_make_tuple8" "ERL_NIF_TERM enif_make_tuple8(ErlNifEnv* env,\n        ERL_NIF_TERM e1, ..., ERL_NIF_TERM e8)")
               "erl_nif:enif_make_tuple7()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_make_tuple7" "ERL_NIF_TERM enif_make_tuple7(ErlNifEnv* env,\n        ERL_NIF_TERM e1, ..., ERL_NIF_TERM e7)")
               "erl_nif:enif_make_tuple6()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_make_tuple6" "ERL_NIF_TERM enif_make_tuple6(ErlNifEnv* env,\n        ERL_NIF_TERM e1, ..., ERL_NIF_TERM e6)")
               "erl_nif:enif_make_tuple5()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_make_tuple5" "ERL_NIF_TERM enif_make_tuple5(ErlNifEnv* env,\n        ERL_NIF_TERM e1, ..., ERL_NIF_TERM e5)")
               "erl_nif:enif_make_tuple4()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_make_tuple4" "ERL_NIF_TERM enif_make_tuple4(ErlNifEnv* env,\n        ERL_NIF_TERM e1, ..., ERL_NIF_TERM e4)")
               "erl_nif:enif_make_tuple3()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_make_tuple3" "ERL_NIF_TERM enif_make_tuple3(ErlNifEnv* env,\n        ERL_NIF_TERM e1, ERL_NIF_TERM e2, ERL_NIF_TERM e3)")
               "erl_nif:enif_make_tuple2()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_make_tuple2" "ERL_NIF_TERM enif_make_tuple2(ErlNifEnv* env,\n        ERL_NIF_TERM e1, ERL_NIF_TERM e2)")
               "erl_nif:enif_make_tuple1()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_make_tuple1" "ERL_NIF_TERM enif_make_tuple1(ErlNifEnv* env,\n        ERL_NIF_TERM e1)")
               "erl_nif:enif_make_tuple()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_make_tuple" "ERL_NIF_TERM enif_make_tuple(ErlNifEnv* env,\n        unsigned cnt, ...)")
               "erl_nif:enif_make_sub_binary()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_make_sub_binary" "ERL_NIF_TERM enif_make_sub_binary(ErlNifEnv*\n        env, ERL_NIF_TERM bin_term, size_t pos, size_t size)")
               "erl_nif:enif_make_string_len()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_make_string_len" "ERL_NIF_TERM enif_make_string_len(ErlNifEnv*\n        env, const char* string, size_t len, ErlNifCharEncoding\n        encoding)")
               "erl_nif:enif_make_string()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_make_string" "ERL_NIF_TERM enif_make_string(ErlNifEnv* env,\n        const char* string, ErlNifCharEncoding encoding)")
               "erl_nif:enif_make_reverse_list()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_make_reverse_list" "int enif_make_reverse_list(ErlNifEnv* env, ERL_NIF_TERM list_in,\n        ERL_NIF_TERM *list_out)")
               "erl_nif:enif_make_resource_binary()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_make_resource_binary" "ERL_NIF_TERM enif_make_resource_binary(ErlNifEnv* env, void* obj, const\n        void* data, size_t size)")
               "erl_nif:enif_make_resource()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_make_resource" "ERL_NIF_TERM enif_make_resource(ErlNifEnv* env, void* obj)")
               "erl_nif:enif_make_ref()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_make_ref" "ERL_NIF_TERM enif_make_ref(ErlNifEnv* env)")
               "erl_nif:enif_make_pid()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_make_pid" "ERL_NIF_TERM enif_make_pid(ErlNifEnv* env, const ErlNifPid* pid)")
               "erl_nif:enif_make_new_map()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_make_new_map" "ERL_NIF_TERM enif_make_new_map(ErlNifEnv* env)")
               "erl_nif:enif_make_new_binary()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_make_new_binary" "unsigned char *enif_make_new_binary(ErlNifEnv*\n        env, size_t size, ERL_NIF_TERM* termp)")
               "erl_nif:enif_make_map_update()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_make_map_update" "int enif_make_map_update(ErlNifEnv* env,\n        ERL_NIF_TERM map_in, ERL_NIF_TERM key, ERL_NIF_TERM new_value,\n        ERL_NIF_TERM* map_out)")
               "erl_nif:enif_make_map_remove()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_make_map_remove" "int enif_make_map_remove(ErlNifEnv* env,\n        ERL_NIF_TERM map_in, ERL_NIF_TERM key, ERL_NIF_TERM* map_out)")
               "erl_nif:enif_make_map_put()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_make_map_put" "int enif_make_map_put(ErlNifEnv* env,\n        ERL_NIF_TERM map_in, ERL_NIF_TERM key, ERL_NIF_TERM value,\n        ERL_NIF_TERM* map_out)")
               "erl_nif:enif_make_long()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_make_long" "ERL_NIF_TERM enif_make_long(ErlNifEnv* env, long int i)")
               "erl_nif:enif_make_list_from_array()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_make_list_from_array" "ERL_NIF_TERM enif_make_list_from_array(ErlNifEnv* env, const ERL_NIF_TERM\n          arr[], unsigned cnt)")
               "erl_nif:enif_make_list_cell()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_make_list_cell" "ERL_NIF_TERM enif_make_list_cell(ErlNifEnv*\n        env, ERL_NIF_TERM head, ERL_NIF_TERM tail)")
               "erl_nif:enif_make_list9()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_make_list9" "ERL_NIF_TERM enif_make_list9(ErlNifEnv* env,\n        ERL_NIF_TERM e1, ..., ERL_NIF_TERM e9)")
               "erl_nif:enif_make_list8()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_make_list8" "ERL_NIF_TERM enif_make_list8(ErlNifEnv* env,\n        ERL_NIF_TERM e1, ..., ERL_NIF_TERM e8)")
               "erl_nif:enif_make_list7()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_make_list7" "ERL_NIF_TERM enif_make_list7(ErlNifEnv* env,\n        ERL_NIF_TERM e1, ..., ERL_NIF_TERM e7)")
               "erl_nif:enif_make_list6()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_make_list6" "ERL_NIF_TERM enif_make_list6(ErlNifEnv* env,\n        ERL_NIF_TERM e1, ..., ERL_NIF_TERM e6)")
               "erl_nif:enif_make_list5()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_make_list5" "ERL_NIF_TERM enif_make_list5(ErlNifEnv* env,\n        ERL_NIF_TERM e1, ..., ERL_NIF_TERM e5)")
               "erl_nif:enif_make_list4()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_make_list4" "ERL_NIF_TERM enif_make_list4(ErlNifEnv* env,\n        ERL_NIF_TERM e1, ..., ERL_NIF_TERM e4)")
               "erl_nif:enif_make_list3()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_make_list3" "ERL_NIF_TERM enif_make_list3(ErlNifEnv* env,\n        ERL_NIF_TERM e1, ERL_NIF_TERM e2, ERL_NIF_TERM e3)")
               "erl_nif:enif_make_list2()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_make_list2" "ERL_NIF_TERM enif_make_list2(ErlNifEnv* env,\n        ERL_NIF_TERM e1, ERL_NIF_TERM e2)")
               "erl_nif:enif_make_list1()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_make_list1" "ERL_NIF_TERM enif_make_list1(ErlNifEnv* env, ERL_NIF_TERM e1)")
               "erl_nif:enif_make_list()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_make_list" "ERL_NIF_TERM enif_make_list(ErlNifEnv* env, unsigned cnt, ...)")
               "erl_nif:enif_make_int64()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_make_int64" "ERL_NIF_TERM enif_make_int64(ErlNifEnv* env, ErlNifSInt64 i)")
               "erl_nif:enif_make_int()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_make_int" "ERL_NIF_TERM enif_make_int(ErlNifEnv* env, int i)")
               "erl_nif:enif_make_existing_atom_len()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_make_existing_atom_len" "int enif_make_existing_atom_len(ErlNifEnv* env,\n        const char* name, size_t len, ERL_NIF_TERM* atom, ErlNifCharEncoding\n        encoding)")
               "erl_nif:enif_make_existing_atom()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_make_existing_atom" "int enif_make_existing_atom(ErlNifEnv* env,\n        const char* name, ERL_NIF_TERM* atom, ErlNifCharEncoding\n        encode)")
               "erl_nif:enif_make_double()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_make_double" "ERL_NIF_TERM enif_make_double(ErlNifEnv* env, double d)")
               "erl_nif:enif_make_copy()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_make_copy" "ERL_NIF_TERM enif_make_copy(ErlNifEnv* dst_env,\n        ERL_NIF_TERM src_term)")
               "erl_nif:enif_make_binary()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_make_binary" "ERL_NIF_TERM enif_make_binary(ErlNifEnv* env, ErlNifBinary* bin)")
               "erl_nif:enif_make_badarg()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_make_badarg" "ERL_NIF_TERM enif_make_badarg(ErlNifEnv* env)")
               "erl_nif:enif_make_atom_len()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_make_atom_len" "ERL_NIF_TERM enif_make_atom_len(ErlNifEnv* env,\n        const char* name, size_t len)")
               "erl_nif:enif_make_atom()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_make_atom" "ERL_NIF_TERM enif_make_atom(ErlNifEnv* env, const char* name)")
               "erl_nif:enif_keep_resource()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_keep_resource" "int enif_keep_resource(void* obj)")
               "erl_nif:enif_is_tuple()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_is_tuple" "int enif_is_tuple(ErlNifEnv* env, ERL_NIF_TERM term)")
               "erl_nif:enif_is_ref()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_is_ref" "int enif_is_ref(ErlNifEnv* env, ERL_NIF_TERM term)")
               "erl_nif:enif_is_process_alive()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_is_process_alive" "int enif_is_process_alive(ErlNifEnv* env,\n        ErlNifPid *pid)")
               "erl_nif:enif_is_port_alive()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_is_port_alive" "int enif_is_port_alive(ErlNifEnv* env,\n        ErlNifPort *port_id)")
               "erl_nif:enif_is_port()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_is_port" "int enif_is_port(ErlNifEnv* env, ERL_NIF_TERM term)")
               "erl_nif:enif_is_pid()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_is_pid" "int enif_is_pid(ErlNifEnv* env, ERL_NIF_TERM term)")
               "erl_nif:enif_is_number()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_is_number" "int enif_is_number(ErlNifEnv* env, ERL_NIF_TERM\n        term)")
               "erl_nif:enif_is_map()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_is_map" "int enif_is_map(ErlNifEnv* env, ERL_NIF_TERM\n        term)")
               "erl_nif:enif_is_list()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_is_list" "int enif_is_list(ErlNifEnv* env, ERL_NIF_TERM term)")
               "erl_nif:enif_is_identical()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_is_identical" "int enif_is_identical(ERL_NIF_TERM lhs,\n        ERL_NIF_TERM rhs)")
               "erl_nif:enif_is_fun()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_is_fun" "int enif_is_fun(ErlNifEnv* env, ERL_NIF_TERM\n        term)")
               "erl_nif:enif_is_exception()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_is_exception" "int enif_is_exception(ErlNifEnv* env,\n        ERL_NIF_TERM term)")
               "erl_nif:enif_is_empty_list()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_is_empty_list" "int enif_is_empty_list(ErlNifEnv* env,\n        ERL_NIF_TERM term)")
               "erl_nif:enif_is_current_process_alive()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_is_current_process_alive" "int enif_is_current_process_alive(ErlNifEnv* env)")
               "erl_nif:enif_is_binary()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_is_binary" "int enif_is_binary(ErlNifEnv* env, ERL_NIF_TERM term)")
               "erl_nif:enif_is_atom()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_is_atom" "int enif_is_atom(ErlNifEnv* env, ERL_NIF_TERM term)")
               "erl_nif:enif_inspect_iolist_as_binary()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_inspect_iolist_as_binary" "int enif_inspect_iolist_as_binary(ErlNifEnv*\n        env, ERL_NIF_TERM term, ErlNifBinary* bin)")
               "erl_nif:enif_inspect_binary()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_inspect_binary" "int enif_inspect_binary(ErlNifEnv* env,\n        ERL_NIF_TERM bin_term, ErlNifBinary* bin)")
               "erl_nif:enif_has_pending_exception()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_has_pending_exception" "int enif_has_pending_exception(ErlNifEnv* env,\n        ERL_NIF_TERM* reason)")
               "erl_nif:enif_getenv()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_getenv" "int enif_getenv(const char* key, char* value,\n        size_t *value_size)")
               "erl_nif:enif_get_ulong()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_get_ulong" "int enif_get_ulong(ErlNifEnv* env, ERL_NIF_TERM\n        term, unsigned long* ip)")
               "erl_nif:enif_get_uint64()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_get_uint64" "int enif_get_uint64(ErlNifEnv* env,\n        ERL_NIF_TERM term, ErlNifUInt64* ip)")
               "erl_nif:enif_get_uint()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_get_uint" "int enif_get_uint(ErlNifEnv* env, ERL_NIF_TERM\n        term, unsigned int* ip)")
               "erl_nif:enif_get_tuple()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_get_tuple" "int enif_get_tuple(ErlNifEnv* env, ERL_NIF_TERM\n        term, int* arity, const ERL_NIF_TERM** array)")
               "erl_nif:enif_get_string()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_get_string" "int enif_get_string(ErlNifEnv* env,\n        ERL_NIF_TERM list, char* buf, unsigned size,\n        ErlNifCharEncoding encode)")
               "erl_nif:enif_get_resource()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_get_resource" "int enif_get_resource(ErlNifEnv* env,\n        ERL_NIF_TERM term, ErlNifResourceType* type, void** objp)")
               "erl_nif:enif_get_map_value()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_get_map_value" "int enif_get_map_value(ErlNifEnv* env,\n        ERL_NIF_TERM map, ERL_NIF_TERM key, ERL_NIF_TERM* value)")
               "erl_nif:enif_get_map_size()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_get_map_size" "int enif_get_map_size(ErlNifEnv* env,\n        ERL_NIF_TERM term, size_t *size)")
               "erl_nif:enif_get_long()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_get_long" "int enif_get_long(ErlNifEnv* env, ERL_NIF_TERM\n        term, long int* ip)")
               "erl_nif:enif_get_list_length()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_get_list_length" "int enif_get_list_length(ErlNifEnv* env,\n        ERL_NIF_TERM term, unsigned* len)")
               "erl_nif:enif_get_list_cell()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_get_list_cell" "int enif_get_list_cell(ErlNifEnv* env,\n        ERL_NIF_TERM list, ERL_NIF_TERM* head, ERL_NIF_TERM* tail)")
               "erl_nif:enif_get_local_port()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_get_local_port" "int enif_get_local_port(ErlNifEnv* env,\n        ERL_NIF_TERM term, ErlNifPort* port_id)")
               "erl_nif:enif_get_local_pid()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_get_local_pid" "int enif_get_local_pid(ErlNifEnv* env,\n        ERL_NIF_TERM term, ErlNifPid* pid)")
               "erl_nif:enif_get_int64()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_get_int64" "int enif_get_int64(ErlNifEnv* env, ERL_NIF_TERM\n        term, ErlNifSInt64* ip)")
               "erl_nif:enif_get_int()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_get_int" "int enif_get_int(ErlNifEnv* env, ERL_NIF_TERM\n        term, int* ip)")
               "erl_nif:enif_get_double()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_get_double" "int enif_get_double(ErlNifEnv* env,\n        ERL_NIF_TERM term, double* dp)")
               "erl_nif:enif_get_atom_length()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_get_atom_length" "int enif_get_atom_length(ErlNifEnv* env,\n        ERL_NIF_TERM term, unsigned* len, ErlNifCharEncoding encode)")
               "erl_nif:enif_get_atom()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_get_atom" "int enif_get_atom(ErlNifEnv* env, ERL_NIF_TERM\n        term, char* buf, unsigned size, ErlNifCharEncoding encode)")
               "erl_nif:enif_free_env()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_free_env" "void enif_free_env(ErlNifEnv* env)")
               "erl_nif:enif_free()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_free" "void enif_free(void* ptr)")
               "erl_nif:enif_equal_tids()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_equal_tids" "int enif_equal_tids(ErlNifTid tid1, ErlNifTid tid2)")
               "erl_nif:enif_cpu_time()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_cpu_time" "ERL_NIF_TERM enif_cpu_time(ErlNifEnv *)")
               "erl_nif:enif_convert_time_unit()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_convert_time_unit" "ErlNifTime enif_convert_time_unit(ErlNifTime\n        val, ErlNifTimeUnit from, ErlNifTimeUnit to)")
               "erl_nif:enif_consume_timeslice()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_consume_timeslice" "int enif_consume_timeslice(ErlNifEnv *env, int percent)")
               "erl_nif:enif_cond_wait()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_cond_wait" "void enif_cond_wait(ErlNifCond *cnd, ErlNifMutex *mtx)")
               "erl_nif:enif_cond_signal()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_cond_signal" "void enif_cond_signal(ErlNifCond *cnd)")
               "erl_nif:enif_cond_destroy()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_cond_destroy" "void enif_cond_destroy(ErlNifCond *cnd)")
               "erl_nif:enif_cond_create()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_cond_create" "ErlNifCond *enif_cond_create(char *name)")
               "erl_nif:enif_cond_broadcast()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_cond_broadcast" "void enif_cond_broadcast(ErlNifCond *cnd)")
               "erl_nif:enif_compare()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_compare" "int enif_compare(ERL_NIF_TERM lhs, ERL_NIF_TERM rhs)")
               "erl_nif:enif_clear_env()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_clear_env" "void enif_clear_env(ErlNifEnv* env)")
               "erl_nif:enif_binary_to_term()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_binary_to_term" "size_t enif_binary_to_term(ErlNifEnv *env,\n        const unsigned char* data, size_t size, ERL_NIF_TERM *term,\n        ErlNifBinaryToTerm opts)")
               "erl_nif:enif_alloc_resource()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_alloc_resource" "void *enif_alloc_resource(ErlNifResourceType*\n        type, unsigned size)")
               "erl_nif:enif_alloc_env()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_alloc_env" "ErlNifEnv *enif_alloc_env()")
               "erl_nif:enif_alloc_binary()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_alloc_binary" "int enif_alloc_binary(size_t size, ErlNifBinary* bin)")
               "erl_nif:enif_alloc()"
               ("http://www.erlang.org/doc/man/erl_nif.html#enif_alloc" "void *enif_alloc(size_t size)")
               "erl_parse:tokens/2"
               ("http://www.erlang.org/doc/man/erl_parse.html#tokens-2" "tokens(AbsTerm, MoreTokens) -> Tokens")
               "erl_parse:tokens/1"
               ("http://www.erlang.org/doc/man/erl_parse.html#tokens-1" "tokens(AbsTerm) -> Tokens")
               "erl_parse:parse_term/1"
               ("http://www.erlang.org/doc/man/erl_parse.html#parse_term-1" "parse_term(Tokens) -> {ok, Term} | {error, ErrorInfo}")
               "erl_parse:parse_form/1"
               ("http://www.erlang.org/doc/man/erl_parse.html#parse_form-1" "parse_form(Tokens) -> {ok, AbsForm} | {error, ErrorInfo}")
               "erl_parse:parse_exprs/1"
               ("http://www.erlang.org/doc/man/erl_parse.html#parse_exprs-1" "parse_exprs(Tokens) -> {ok, ExprList} | {error, ErrorInfo}")
               "erl_parse:normalise/1"
               ("http://www.erlang.org/doc/man/erl_parse.html#normalise-1" "normalise(AbsTerm) -> Data")
               "erl_parse:new_anno/1"
               ("http://www.erlang.org/doc/man/erl_parse.html#new_anno-1" "new_anno(Term) -> Abstr")
               "erl_parse:mapfold_anno/3"
               ("http://www.erlang.org/doc/man/erl_parse.html#mapfold_anno-3" "mapfold_anno(Fun, Acc0, Abstr) -> {NewAbstr, Acc1}")
               "erl_parse:map_anno/2"
               ("http://www.erlang.org/doc/man/erl_parse.html#map_anno-2" "map_anno(Fun, Abstr) -> NewAbstr")
               "erl_parse:format_error/1"
               ("http://www.erlang.org/doc/man/erl_parse.html#format_error-1" "format_error(ErrorDescriptor) -> Chars")
               "erl_parse:fold_anno/3"
               ("http://www.erlang.org/doc/man/erl_parse.html#fold_anno-3" "fold_anno(Fun, Acc0, Abstr) -> Acc1")
               "erl_parse:anno_to_term/1"
               ("http://www.erlang.org/doc/man/erl_parse.html#anno_to_term-1" "anno_to_term(Abstr) -> term()")
               "erl_parse:anno_from_term/1"
               ("http://www.erlang.org/doc/man/erl_parse.html#anno_from_term-1" "anno_from_term(Term) -> erl_parse_tree()")
               "erl_parse:abstract/2"
               ("http://www.erlang.org/doc/man/erl_parse.html#abstract-2" "abstract(Data, Options) -> AbsTerm")
               "erl_parse:abstract/1"
               ("http://www.erlang.org/doc/man/erl_parse.html#abstract-1" "abstract(Data) -> AbsTerm")
               "erl_parse:token()"
               ("http://www.erlang.org/doc/man/erl_parse.html#type-token" "token() = erl_scan:token()")
               "erl_parse:form_info()"
               ("http://www.erlang.org/doc/man/erl_parse.html#type-form_info" "form_info() = {eof, erl_anno:line() } | {error, erl_scan:error_info() | error_info() } | {warning, erl_scan:error_info() | error_info() }")
               "erl_parse:error_info()"
               ("http://www.erlang.org/doc/man/erl_parse.html#type-error_info" "error_info() = { erl_anno:line() , module(), error_description() }")
               "erl_parse:error_description()"
               ("http://www.erlang.org/doc/man/erl_parse.html#type-error_description" "error_description() = term()")
               "erl_parse:erl_parse_tree()"
               ("http://www.erlang.org/doc/man/erl_parse.html#type-erl_parse_tree" "erl_parse_tree() =  abstract_clause() |  abstract_expr() |  abstract_form() |  abstract_type()")
               "erl_parse:"
               ("http://www.erlang.org/doc/man/erl_parse.html#type-abstract_clause" "abstract_clause()")
               "erl_pp:guard/2"
               ("http://www.erlang.org/doc/man/erl_pp.html#guard-2" "guard(Guard, Options) -> io_lib:chars()")
               "erl_pp:guard/1"
               ("http://www.erlang.org/doc/man/erl_pp.html#guard-1" "guard(Guard) -> io_lib:chars()")
               "erl_pp:function/2"
               ("http://www.erlang.org/doc/man/erl_pp.html#function-2" "function(Function, Options) -> io_lib:chars()")
               "erl_pp:function/1"
               ("http://www.erlang.org/doc/man/erl_pp.html#function-1" "function(Function) -> io_lib:chars()")
               "erl_pp:form/2"
               ("http://www.erlang.org/doc/man/erl_pp.html#form-2" "form(Form, Options) -> io_lib:chars()")
               "erl_pp:form/1"
               ("http://www.erlang.org/doc/man/erl_pp.html#form-1" "form(Form) -> io_lib:chars()")
               "erl_pp:exprs/3"
               ("http://www.erlang.org/doc/man/erl_pp.html#exprs-3" "exprs(Expressions, Indent, Options) -> io_lib:chars()")
               "erl_pp:exprs/2"
               ("http://www.erlang.org/doc/man/erl_pp.html#exprs-2" "exprs(Expressions, Options) -> io_lib:chars()")
               "erl_pp:exprs/1"
               ("http://www.erlang.org/doc/man/erl_pp.html#exprs-1" "exprs(Expressions) -> io_lib:chars()")
               "erl_pp:expr/4"
               ("http://www.erlang.org/doc/man/erl_pp.html#expr-4" "expr(Expression, Indent, Precedence, Options) -> io_lib:chars()")
               "erl_pp:expr/3"
               ("http://www.erlang.org/doc/man/erl_pp.html#expr-3" "expr(Expression, Indent, Options) -> io_lib:chars()")
               "erl_pp:expr/2"
               ("http://www.erlang.org/doc/man/erl_pp.html#expr-2" "expr(Expression, Options) -> io_lib:chars()")
               "erl_pp:expr/1"
               ("http://www.erlang.org/doc/man/erl_pp.html#expr-1" "expr(Expression) -> io_lib:chars()")
               "erl_pp:attribute/2"
               ("http://www.erlang.org/doc/man/erl_pp.html#attribute-2" "attribute(Attribute, Options) -> io_lib:chars()")
               "erl_pp:attribute/1"
               ("http://www.erlang.org/doc/man/erl_pp.html#attribute-1" "attribute(Attribute) -> io_lib:chars()")
               "erl_pp:options()"
               ("http://www.erlang.org/doc/man/erl_pp.html#type-options" "options() = hook_function() | [ option() ]")
               "erl_pp:option()"
               ("http://www.erlang.org/doc/man/erl_pp.html#type-option" "option() = {hook, hook_function() } | {encoding, latin1 | unicode | utf8}")
               "erl_pp:hook_function()"
               ("http://www.erlang.org/doc/man/erl_pp.html#type-hook_function" "hook_function() = none | fun((Expr :: erl_parse:abstract_expr() , CurrentIndentation :: integer(), CurrentPrecedence :: integer() >= 0, Options :: options() ) ->  io_lib:chars() )")
               "erl_prettypr:set_ctxt_user/2"
               ("http://www.erlang.org/doc/man/erl_prettypr.html#set_ctxt_user-2" "set_ctxt_user(Ctxt:: context() , X::term()) -> context()")
               "erl_prettypr:set_ctxt_precedence/2"
               ("http://www.erlang.org/doc/man/erl_prettypr.html#set_ctxt_precedence-2" "set_ctxt_precedence(Ctxt:: context() , Prec::integer()) -> context()")
               "erl_prettypr:set_ctxt_paperwidth/2"
               ("http://www.erlang.org/doc/man/erl_prettypr.html#set_ctxt_paperwidth-2" "set_ctxt_paperwidth(Ctxt:: context() , W::integer()) -> context()")
               "erl_prettypr:set_ctxt_linewidth/2"
               ("http://www.erlang.org/doc/man/erl_prettypr.html#set_ctxt_linewidth-2" "set_ctxt_linewidth(Ctxt:: context() , W::integer()) -> context()")
               "erl_prettypr:set_ctxt_hook/2"
               ("http://www.erlang.org/doc/man/erl_prettypr.html#set_ctxt_hook-2" "set_ctxt_hook(Ctxt:: context() , Hook:: hook() ) -> context()")
               "erl_prettypr:layout/2"
               ("http://www.erlang.org/doc/man/erl_prettypr.html#layout-2" "layout(Tree:: syntaxTree() , Options::[term()]) -> prettypr:document()")
               "erl_prettypr:layout/1"
               ("http://www.erlang.org/doc/man/erl_prettypr.html#layout-1" "layout(Tree:: syntaxTree() ) -> prettypr:document()")
               "erl_prettypr:get_ctxt_user/1"
               ("http://www.erlang.org/doc/man/erl_prettypr.html#get_ctxt_user-1" "get_ctxt_user(Ctxt:: context() ) -> term()")
               "erl_prettypr:get_ctxt_precedence/1"
               ("http://www.erlang.org/doc/man/erl_prettypr.html#get_ctxt_precedence-1" "get_ctxt_precedence(Ctxt:: context() ) -> integer()")
               "erl_prettypr:get_ctxt_paperwidth/1"
               ("http://www.erlang.org/doc/man/erl_prettypr.html#get_ctxt_paperwidth-1" "get_ctxt_paperwidth(Ctxt:: context() ) -> integer()")
               "erl_prettypr:get_ctxt_linewidth/1"
               ("http://www.erlang.org/doc/man/erl_prettypr.html#get_ctxt_linewidth-1" "get_ctxt_linewidth(Ctxt:: context() ) -> integer()")
               "erl_prettypr:get_ctxt_hook/1"
               ("http://www.erlang.org/doc/man/erl_prettypr.html#get_ctxt_hook-1" "get_ctxt_hook(Ctxt:: context() ) -> hook()")
               "erl_prettypr:format/2"
               ("http://www.erlang.org/doc/man/erl_prettypr.html#format-2" "format(Tree:: syntaxTree() , Options::[term()]) -> string()")
               "erl_prettypr:format/1"
               ("http://www.erlang.org/doc/man/erl_prettypr.html#format-1" "format(Tree:: syntaxTree() ) -> string()")
               "erl_prettypr:best/2"
               ("http://www.erlang.org/doc/man/erl_prettypr.html#best-2" "best(Tree:: syntaxTree() , Options::[term()]) -> empty | prettypr:document()")
               "erl_prettypr:best/1"
               ("http://www.erlang.org/doc/man/erl_prettypr.html#best-1" "best(Tree:: syntaxTree() ) -> empty | prettypr:document()")
               "erl_prettypr:"
               ("http://www.erlang.org/doc/man/erl_prettypr.html#type-context" "context()")
               "erl_prim_loader:set_path/1"
               ("http://www.erlang.org/doc/man/erl_prim_loader.html#set_path-1" "set_path(Path) -> ok")
               "erl_prim_loader:read_link_info/1"
               ("http://www.erlang.org/doc/man/erl_prim_loader.html#read_link_info-1" "read_link_info(Filename) -> {ok, FileInfo} | error")
               "erl_prim_loader:read_file_info/1"
               ("http://www.erlang.org/doc/man/erl_prim_loader.html#read_file_info-1" "read_file_info(Filename) -> {ok, FileInfo} | error")
               "erl_prim_loader:list_dir/1"
               ("http://www.erlang.org/doc/man/erl_prim_loader.html#list_dir-1" "list_dir(Dir) -> {ok, Filenames} | error")
               "erl_prim_loader:get_path/0"
               ("http://www.erlang.org/doc/man/erl_prim_loader.html#get_path-0" "get_path() -> {ok, Path}")
               "erl_prim_loader:get_file/1"
               ("http://www.erlang.org/doc/man/erl_prim_loader.html#get_file-1" "get_file(Filename) -> {ok, Bin, FullName} | error")
               "erl_recomment:recomment_tree/2"
               ("http://www.erlang.org/doc/man/erl_recomment.html#recomment_tree-2" "recomment_tree(Tree:: syntaxTree() , Comments::[Comment]) -> { syntaxTree() , [Comment]}")
               "erl_recomment:recomment_forms/2"
               ("http://www.erlang.org/doc/man/erl_recomment.html#recomment_forms-2" "recomment_forms(Tree::Forms, Comments::[Comment]) -> syntaxTree()")
               "erl_recomment:quick_recomment_forms/2"
               ("http://www.erlang.org/doc/man/erl_recomment.html#quick_recomment_forms-2" "quick_recomment_forms(Tree::Forms, Comments::[Comment]) -> syntaxTree()")
               "erl_recomment:"
               ("http://www.erlang.org/doc/man/erl_recomment.html#type-syntaxTree" "syntaxTree() = erl_syntax:syntaxTree()")
               "erl_scan:tokens/4"
               ("http://www.erlang.org/doc/man/erl_scan.html#tokens-4" "tokens(Continuation, CharSpec, StartLocation, Options) -> Return")
               "erl_scan:tokens/3"
               ("http://www.erlang.org/doc/man/erl_scan.html#tokens-3" "tokens(Continuation, CharSpec, StartLocation) -> Return")
               "erl_scan:text/1"
               ("http://www.erlang.org/doc/man/erl_scan.html#text-1" "text(Token) -> erl_anno:text() | undefined")
               "erl_scan:symbol/1"
               ("http://www.erlang.org/doc/man/erl_scan.html#symbol-1" "symbol(Token) -> symbol()")
               "erl_scan:string/3"
               ("http://www.erlang.org/doc/man/erl_scan.html#string-3" "string(String, StartLocation, Options) -> Return")
               "erl_scan:string/2"
               ("http://www.erlang.org/doc/man/erl_scan.html#string-2" "string(String, StartLocation) -> Return")
               "erl_scan:string/1"
               ("http://www.erlang.org/doc/man/erl_scan.html#string-1" "string(String) -> Return")
               "erl_scan:reserved_word/1"
               ("http://www.erlang.org/doc/man/erl_scan.html#reserved_word-1" "reserved_word(Atom :: atom()) -> boolean()")
               "erl_scan:location/1"
               ("http://www.erlang.org/doc/man/erl_scan.html#location-1" "location(Token) -> erl_anno:location()")
               "erl_scan:line/1"
               ("http://www.erlang.org/doc/man/erl_scan.html#line-1" "line(Token) -> erl_anno:line()")
               "erl_scan:format_error/1"
               ("http://www.erlang.org/doc/man/erl_scan.html#format_error-1" "format_error(ErrorDescriptor) -> string()")
               "erl_scan:end_location/1"
               ("http://www.erlang.org/doc/man/erl_scan.html#end_location-1" "end_location(Token) -> erl_anno:location() | undefined")
               "erl_scan:column/1"
               ("http://www.erlang.org/doc/man/erl_scan.html#column-1" "column(Token) -> erl_anno:column() | undefined")
               "erl_scan:category/1"
               ("http://www.erlang.org/doc/man/erl_scan.html#category-1" "category(Token) -> category()")
               "erl_scan:tokens_result()"
               ("http://www.erlang.org/doc/man/erl_scan.html#type-tokens_result" "tokens_result() = {ok, Tokens :: tokens() , EndLocation :: erl_anno:location() } | {eof, EndLocation :: erl_anno:location() } | {error, ErrorInfo :: error_info() , EndLocation :: erl_anno:location() }")
               "erl_scan:tokens()"
               ("http://www.erlang.org/doc/man/erl_scan.html#type-tokens" "tokens() = [ token() ]")
               "erl_scan:token()"
               ("http://www.erlang.org/doc/man/erl_scan.html#type-token" "token() = { category() , Anno :: erl_anno:anno() , symbol() } | { category() , Anno :: erl_anno:anno() }")
               "erl_scan:resword_fun()"
               ("http://www.erlang.org/doc/man/erl_scan.html#type-resword_fun" "resword_fun() = fun((atom()) -> boolean())")
               "erl_scan:symbol()"
               ("http://www.erlang.org/doc/man/erl_scan.html#type-symbol" "symbol() = atom() | float() | integer() | string()")
               "erl_scan:options()"
               ("http://www.erlang.org/doc/man/erl_scan.html#type-options" "options() = option() | [ option() ]")
               "erl_scan:option()"
               ("http://www.erlang.org/doc/man/erl_scan.html#type-option" "option() = return | return_white_spaces | return_comments | text | {reserved_word_fun, resword_fun() }")
               "erl_scan:error_info()"
               ("http://www.erlang.org/doc/man/erl_scan.html#type-error_info" "error_info() = { erl_anno:location() , module(), error_description() }")
               "erl_scan:error_description()"
               ("http://www.erlang.org/doc/man/erl_scan.html#type-error_description" "error_description() = term()")
               "erl_scan:category()"
               ("http://www.erlang.org/doc/man/erl_scan.html#type-category" "category() = atom()")
               "erl_syntax:warning_marker_info/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#warning_marker_info-1" "warning_marker_info(Node:: syntaxTree() ) -> term()")
               "erl_syntax:warning_marker/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#warning_marker-1" "warning_marker(Warning::term()) -> syntaxTree()")
               "erl_syntax:variable_name/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#variable_name-1" "variable_name(Node:: syntaxTree() ) -> atom()")
               "erl_syntax:variable_literal/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#variable_literal-1" "variable_literal(Node:: syntaxTree() ) -> string()")
               "erl_syntax:variable/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#variable-1" "variable(Name::atom() | string()) -> syntaxTree()")
               "erl_syntax:user_type_application_name/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#user_type_application_name-1" "user_type_application_name(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:user_type_application_arguments/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#user_type_application_arguments-1" "user_type_application_arguments(Node:: syntaxTree() ) -> [ syntaxTree() ]")
               "erl_syntax:user_type_application/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#user_type_application-2" "user_type_application(TypeName:: syntaxTree() , Arguments::[ syntaxTree() ]) -> syntaxTree()")
               "erl_syntax:update_tree/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#update_tree-2" "update_tree(Node:: syntaxTree() , Groups::[[ syntaxTree() ]]) -> syntaxTree()")
               "erl_syntax:underscore/0"
               ("http://www.erlang.org/doc/man/erl_syntax.html#underscore-0" "underscore() -> syntaxTree()")
               "erl_syntax:typed_record_field_type/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#typed_record_field_type-1" "typed_record_field_type(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:typed_record_field_body/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#typed_record_field_body-1" "typed_record_field_body(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:typed_record_field/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#typed_record_field-2" "typed_record_field(Field:: syntaxTree() , Type:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:type_union_types/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#type_union_types-1" "type_union_types(Node:: syntaxTree() ) -> [ syntaxTree() ]")
               "erl_syntax:type_union/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#type_union-1" "type_union(Types::[ syntaxTree() ]) -> syntaxTree()")
               "erl_syntax:type_application_name/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#type_application_name-1" "type_application_name(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:type_application_arguments/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#type_application_arguments-1" "type_application_arguments(Node:: syntaxTree() ) -> [ syntaxTree() ]")
               "erl_syntax:type_application/3"
               ("http://www.erlang.org/doc/man/erl_syntax.html#type_application-3" "type_application(Module::none | syntaxTree() , TypeName:: syntaxTree() , Arguments::[ syntaxTree() ]) -> syntaxTree()")
               "erl_syntax:type_application/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#type_application-2" "type_application(TypeName:: syntaxTree() , Arguments::[ syntaxTree() ]) -> syntaxTree()")
               "erl_syntax:"
               ("http://www.erlang.org/doc/man/erl_syntax.html#type-encoding" "encoding() = utf8 | unicode | latin1")
               "erl_syntax:type/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#type-1" "type(Tree:: syntaxTree() ) -> atom()")
               "erl_syntax:tuple_type_elements/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#tuple_type_elements-1" "tuple_type_elements(Node:: syntaxTree() ) -> any_size | [ syntaxTree() ]")
               "erl_syntax:tuple_type/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#tuple_type-1" "tuple_type(Elements::any_size | [ syntaxTree() ]) -> syntaxTree()")
               "erl_syntax:tuple_type/0"
               ("http://www.erlang.org/doc/man/erl_syntax.html#tuple_type-0" "tuple_type() -> term()")
               "erl_syntax:tuple_size/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#tuple_size-1" "tuple_size(Node:: syntaxTree() ) -> non_neg_integer()")
               "erl_syntax:tuple_elements/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#tuple_elements-1" "tuple_elements(Node:: syntaxTree() ) -> [ syntaxTree() ]")
               "erl_syntax:tuple/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#tuple-1" "tuple(List::[ syntaxTree() ]) -> syntaxTree()")
               "erl_syntax:try_expr_handlers/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#try_expr_handlers-1" "try_expr_handlers(Node:: syntaxTree() ) -> [ syntaxTree() ]")
               "erl_syntax:try_expr_clauses/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#try_expr_clauses-1" "try_expr_clauses(Node:: syntaxTree() ) -> [ syntaxTree() ]")
               "erl_syntax:try_expr_body/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#try_expr_body-1" "try_expr_body(Node:: syntaxTree() ) -> [ syntaxTree() ]")
               "erl_syntax:try_expr_after/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#try_expr_after-1" "try_expr_after(Node:: syntaxTree() ) -> [ syntaxTree() ]")
               "erl_syntax:try_expr/4"
               ("http://www.erlang.org/doc/man/erl_syntax.html#try_expr-4" "try_expr(Body::[ syntaxTree() ], Clauses::[ syntaxTree() ], Handlers::[ syntaxTree() ], After::[ syntaxTree() ]) -> syntaxTree()")
               "erl_syntax:try_expr/3"
               ("http://www.erlang.org/doc/man/erl_syntax.html#try_expr-3" "try_expr(Body::[ syntaxTree() ], Clauses::[ syntaxTree() ], Handlers::[ syntaxTree() ]) -> syntaxTree()")
               "erl_syntax:try_expr/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#try_expr-2" "try_expr(Body::[ syntaxTree() ], Handlers::[ syntaxTree() ]) -> syntaxTree()")
               "erl_syntax:try_after_expr/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#try_after_expr-2" "try_after_expr(Body::[ syntaxTree() ], After::[ syntaxTree() ]) -> syntaxTree()")
               "erl_syntax:tree/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#tree-2" "tree(Type::atom(), Data::term()) -> #tree{type=atom(), attr=#attr{pos=term(), ann=[term()], com=none | #com{pre=[ syntaxTree() ], post=[ syntaxTree() ]}}, data=term()}")
               "erl_syntax:tree/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#tree-1" "tree(Type::atom()) -> #tree{type=atom(), attr=#attr{pos=term(), ann=[term()], com=none | #com{pre=[ syntaxTree() ], post=[ syntaxTree() ]}}, data=term()}")
               "erl_syntax:text_string/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#text_string-1" "text_string(Node:: syntaxTree() ) -> string()")
               "erl_syntax:text/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#text-1" "text(String::string()) -> syntaxTree()")
               "erl_syntax:subtrees/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#subtrees-1" "subtrees(T:: syntaxTree() ) -> [[ syntaxTree() ]]")
               "erl_syntax:string_value/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#string_value-1" "string_value(Node:: syntaxTree() ) -> string()")
               "erl_syntax:string_literal/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#string_literal-2" "string_literal(Node:: syntaxTree() , X2:: encoding() ) -> nonempty_string()")
               "erl_syntax:string_literal/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#string_literal-1" "string_literal(Node:: syntaxTree() ) -> nonempty_string()")
               "erl_syntax:string/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#string-1" "string(String::string()) -> syntaxTree()")
               "erl_syntax:size_qualifier_body/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#size_qualifier_body-1" "size_qualifier_body(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:size_qualifier_argument/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#size_qualifier_argument-1" "size_qualifier_argument(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:size_qualifier/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#size_qualifier-2" "size_qualifier(Body:: syntaxTree() , Size:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:set_precomments/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#set_precomments-2" "set_precomments(Node:: syntaxTree() , Cs::[ syntaxTree() ]) -> syntaxTree()")
               "erl_syntax:set_postcomments/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#set_postcomments-2" "set_postcomments(Node:: syntaxTree() , Cs::[ syntaxTree() ]) -> syntaxTree()")
               "erl_syntax:set_pos/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#set_pos-2" "set_pos(Node:: syntaxTree() , Pos::term()) -> syntaxTree()")
               "erl_syntax:set_attrs/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#set_attrs-2" "set_attrs(Node:: syntaxTree() , Attr:: syntaxTreeAttributes() ) -> syntaxTree()")
               "erl_syntax:set_ann/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#set_ann-2" "set_ann(Node:: syntaxTree() , As::[term()]) -> syntaxTree()")
               "erl_syntax:revert_forms/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#revert_forms-1" "revert_forms(Forms:: forms() ) -> [ erl_parse() ]")
               "erl_syntax:revert/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#revert-1" "revert(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:remove_comments/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#remove_comments-1" "remove_comments(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:record_type_name/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#record_type_name-1" "record_type_name(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:record_type_fields/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#record_type_fields-1" "record_type_fields(Node:: syntaxTree() ) -> [ syntaxTree() ]")
               "erl_syntax:record_type_field_type/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#record_type_field_type-1" "record_type_field_type(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:record_type_field_name/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#record_type_field_name-1" "record_type_field_name(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:record_type_field/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#record_type_field-2" "record_type_field(Name:: syntaxTree() , Type:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:record_type/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#record_type-2" "record_type(Name:: syntaxTree() , Fields::[ syntaxTree() ]) -> syntaxTree()")
               "erl_syntax:record_index_expr_type/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#record_index_expr_type-1" "record_index_expr_type(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:record_index_expr_field/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#record_index_expr_field-1" "record_index_expr_field(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:record_index_expr/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#record_index_expr-2" "record_index_expr(Type:: syntaxTree() , Field:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:record_field_value/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#record_field_value-1" "record_field_value(Node:: syntaxTree() ) -> none | syntaxTree()")
               "erl_syntax:record_field_name/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#record_field_name-1" "record_field_name(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:record_field/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#record_field-2" "record_field(Name:: syntaxTree() , Value::none | syntaxTree() ) -> syntaxTree()")
               "erl_syntax:record_field/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#record_field-1" "record_field(Name:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:record_expr_type/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#record_expr_type-1" "record_expr_type(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:record_expr_fields/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#record_expr_fields-1" "record_expr_fields(Node:: syntaxTree() ) -> [ syntaxTree() ]")
               "erl_syntax:record_expr_argument/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#record_expr_argument-1" "record_expr_argument(Node:: syntaxTree() ) -> none | syntaxTree()")
               "erl_syntax:record_expr/3"
               ("http://www.erlang.org/doc/man/erl_syntax.html#record_expr-3" "record_expr(Argument::none | syntaxTree() , Type:: syntaxTree() , Fields::[ syntaxTree() ]) -> syntaxTree()")
               "erl_syntax:record_expr/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#record_expr-2" "record_expr(Type:: syntaxTree() , Fields::[ syntaxTree() ]) -> syntaxTree()")
               "erl_syntax:record_access_type/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#record_access_type-1" "record_access_type(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:record_access_field/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#record_access_field-1" "record_access_field(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:record_access_argument/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#record_access_argument-1" "record_access_argument(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:record_access/3"
               ("http://www.erlang.org/doc/man/erl_syntax.html#record_access-3" "record_access(Argument:: syntaxTree() , Type:: syntaxTree() , Field:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:receive_expr_timeout/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#receive_expr_timeout-1" "receive_expr_timeout(Node:: syntaxTree() ) -> none | syntaxTree()")
               "erl_syntax:receive_expr_clauses/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#receive_expr_clauses-1" "receive_expr_clauses(Node:: syntaxTree() ) -> [ syntaxTree() ]")
               "erl_syntax:receive_expr_action/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#receive_expr_action-1" "receive_expr_action(Node:: syntaxTree() ) -> [ syntaxTree() ]")
               "erl_syntax:receive_expr/3"
               ("http://www.erlang.org/doc/man/erl_syntax.html#receive_expr-3" "receive_expr(Clauses::[ syntaxTree() ], Timeout::none | syntaxTree() , Action::[ syntaxTree() ]) -> syntaxTree()")
               "erl_syntax:receive_expr/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#receive_expr-1" "receive_expr(Clauses::[ syntaxTree() ]) -> syntaxTree()")
               "erl_syntax:prefix_expr_operator/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#prefix_expr_operator-1" "prefix_expr_operator(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:prefix_expr_argument/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#prefix_expr_argument-1" "prefix_expr_argument(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:prefix_expr/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#prefix_expr-2" "prefix_expr(Operator:: syntaxTree() , Argument:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:parentheses_body/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#parentheses_body-1" "parentheses_body(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:parentheses/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#parentheses-1" "parentheses(Expr:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:operator_name/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#operator_name-1" "operator_name(Node:: syntaxTree() ) -> atom()")
               "erl_syntax:operator_literal/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#operator_literal-1" "operator_literal(Node:: syntaxTree() ) -> string()")
               "erl_syntax:operator/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#operator-1" "operator(Name::atom() | string()) -> syntaxTree()")
               "erl_syntax:normalize_list/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#normalize_list-1" "normalize_list(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:nil/0"
               ("http://www.erlang.org/doc/man/erl_syntax.html#nil-0" "nil() -> syntaxTree()")
               "erl_syntax:named_fun_expr_name/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#named_fun_expr_name-1" "named_fun_expr_name(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:named_fun_expr_clauses/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#named_fun_expr_clauses-1" "named_fun_expr_clauses(Node:: syntaxTree() ) -> [ syntaxTree() ]")
               "erl_syntax:named_fun_expr_arity/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#named_fun_expr_arity-1" "named_fun_expr_arity(Node:: syntaxTree() ) -> arity()")
               "erl_syntax:named_fun_expr/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#named_fun_expr-2" "named_fun_expr(Name:: syntaxTree() , Clauses::[ syntaxTree() ]) -> syntaxTree()")
               "erl_syntax:module_qualifier_body/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#module_qualifier_body-1" "module_qualifier_body(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:module_qualifier_argument/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#module_qualifier_argument-1" "module_qualifier_argument(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:module_qualifier/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#module_qualifier-2" "module_qualifier(Module:: syntaxTree() , Body:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:meta/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#meta-1" "meta(T:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:match_expr_pattern/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#match_expr_pattern-1" "match_expr_pattern(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:match_expr_body/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#match_expr_body-1" "match_expr_body(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:match_expr/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#match_expr-2" "match_expr(Pattern:: syntaxTree() , Body:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:map_type_fields/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#map_type_fields-1" "map_type_fields(Node:: syntaxTree() ) -> any_size | [ syntaxTree() ]")
               "erl_syntax:map_type_exact_value/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#map_type_exact_value-1" "map_type_exact_value(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:map_type_exact_name/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#map_type_exact_name-1" "map_type_exact_name(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:map_type_exact/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#map_type_exact-2" "map_type_exact(Name:: syntaxTree() , Value:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:map_type_assoc_value/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#map_type_assoc_value-1" "map_type_assoc_value(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:map_type_assoc_name/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#map_type_assoc_name-1" "map_type_assoc_name(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:map_type_assoc/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#map_type_assoc-2" "map_type_assoc(Name:: syntaxTree() , Value:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:map_type/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#map_type-1" "map_type(Fields::any_size | [ syntaxTree() ]) -> syntaxTree()")
               "erl_syntax:map_type/0"
               ("http://www.erlang.org/doc/man/erl_syntax.html#map_type-0" "map_type() -> term()")
               "erl_syntax:map_field_exact_value/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#map_field_exact_value-1" "map_field_exact_value(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:map_field_exact_name/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#map_field_exact_name-1" "map_field_exact_name(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:map_field_exact/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#map_field_exact-2" "map_field_exact(Name:: syntaxTree() , Value:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:map_field_assoc_value/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#map_field_assoc_value-1" "map_field_assoc_value(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:map_field_assoc_name/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#map_field_assoc_name-1" "map_field_assoc_name(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:map_field_assoc/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#map_field_assoc-2" "map_field_assoc(Name:: syntaxTree() , Value:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:map_expr_fields/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#map_expr_fields-1" "map_expr_fields(Node:: syntaxTree() ) -> [ syntaxTree() ]")
               "erl_syntax:map_expr_argument/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#map_expr_argument-1" "map_expr_argument(Node:: syntaxTree() ) -> none | syntaxTree()")
               "erl_syntax:map_expr/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#map_expr-2" "map_expr(Argument::none | syntaxTree() , Fields::[ syntaxTree() ]) -> syntaxTree()")
               "erl_syntax:map_expr/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#map_expr-1" "map_expr(Fields::[ syntaxTree() ]) -> syntaxTree()")
               "erl_syntax:make_tree/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#make_tree-2" "make_tree(X1::atom(), X2::[[ syntaxTree() ]]) -> syntaxTree()")
               "erl_syntax:macro_name/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#macro_name-1" "macro_name(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:macro_arguments/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#macro_arguments-1" "macro_arguments(Node:: syntaxTree() ) -> none | [ syntaxTree() ]")
               "erl_syntax:macro/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#macro-2" "macro(Name:: syntaxTree() , Arguments::none | [ syntaxTree() ]) -> syntaxTree()")
               "erl_syntax:macro/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#macro-1" "macro(Name:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:list_tail/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#list_tail-1" "list_tail(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:list_suffix/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#list_suffix-1" "list_suffix(Node:: syntaxTree() ) -> none | syntaxTree()")
               "erl_syntax:list_prefix/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#list_prefix-1" "list_prefix(Node:: syntaxTree() ) -> [ syntaxTree() ]")
               "erl_syntax:list_length/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#list_length-1" "list_length(Node:: syntaxTree() ) -> non_neg_integer()")
               "erl_syntax:list_head/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#list_head-1" "list_head(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:list_elements/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#list_elements-1" "list_elements(Node:: syntaxTree() ) -> [ syntaxTree() ]")
               "erl_syntax:list_comp_template/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#list_comp_template-1" "list_comp_template(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:list_comp_body/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#list_comp_body-1" "list_comp_body(Node:: syntaxTree() ) -> [ syntaxTree() ]")
               "erl_syntax:list_comp/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#list_comp-2" "list_comp(Template:: syntaxTree() , Body::[ syntaxTree() ]) -> syntaxTree()")
               "erl_syntax:list/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#list-2" "list(Elements::[ syntaxTree() ], Tail::none | syntaxTree() ) -> syntaxTree()")
               "erl_syntax:list/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#list-1" "list(List::[ syntaxTree() ]) -> syntaxTree()")
               "erl_syntax:join_comments/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#join_comments-2" "join_comments(Source:: syntaxTree() , Target:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:is_tree/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#is_tree-1" "is_tree(Tree:: syntaxTree() ) -> boolean()")
               "erl_syntax:is_string/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#is_string-2" "is_string(Node:: syntaxTree() , Value::string()) -> boolean()")
               "erl_syntax:is_proper_list/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#is_proper_list-1" "is_proper_list(Node:: syntaxTree() ) -> boolean()")
               "erl_syntax:is_literal/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#is_literal-1" "is_literal(T:: syntaxTree() ) -> boolean()")
               "erl_syntax:is_list_skeleton/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#is_list_skeleton-1" "is_list_skeleton(Node:: syntaxTree() ) -> boolean()")
               "erl_syntax:is_leaf/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#is_leaf-1" "is_leaf(Node:: syntaxTree() ) -> boolean()")
               "erl_syntax:is_integer/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#is_integer-2" "is_integer(Node:: syntaxTree() , Value::integer()) -> boolean()")
               "erl_syntax:is_form/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#is_form-1" "is_form(Node:: syntaxTree() ) -> boolean()")
               "erl_syntax:is_char/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#is_char-2" "is_char(Node:: syntaxTree() , Value::char()) -> boolean()")
               "erl_syntax:is_atom/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#is_atom-2" "is_atom(Node:: syntaxTree() , Value::atom()) -> boolean()")
               "erl_syntax:integer_value/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#integer_value-1" "integer_value(Node:: syntaxTree() ) -> integer()")
               "erl_syntax:integer_range_type_low/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#integer_range_type_low-1" "integer_range_type_low(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:integer_range_type_high/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#integer_range_type_high-1" "integer_range_type_high(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:integer_range_type/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#integer_range_type-2" "integer_range_type(Low:: syntaxTree() , High:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:integer_literal/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#integer_literal-1" "integer_literal(Node:: syntaxTree() ) -> string()")
               "erl_syntax:integer/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#integer-1" "integer(Value::integer()) -> syntaxTree()")
               "erl_syntax:infix_expr_right/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#infix_expr_right-1" "infix_expr_right(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:infix_expr_operator/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#infix_expr_operator-1" "infix_expr_operator(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:infix_expr_left/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#infix_expr_left-1" "infix_expr_left(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:infix_expr/3"
               ("http://www.erlang.org/doc/man/erl_syntax.html#infix_expr-3" "infix_expr(Left:: syntaxTree() , Operator:: syntaxTree() , Right:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:implicit_fun_name/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#implicit_fun_name-1" "implicit_fun_name(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:implicit_fun/3"
               ("http://www.erlang.org/doc/man/erl_syntax.html#implicit_fun-3" "implicit_fun(Module::none | syntaxTree() , Name:: syntaxTree() , Arity:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:implicit_fun/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#implicit_fun-2" "implicit_fun(Name:: syntaxTree() , Arity::none | syntaxTree() ) -> syntaxTree()")
               "erl_syntax:implicit_fun/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#implicit_fun-1" "implicit_fun(Name:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:if_expr_clauses/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#if_expr_clauses-1" "if_expr_clauses(Node:: syntaxTree() ) -> [ syntaxTree() ]")
               "erl_syntax:if_expr/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#if_expr-1" "if_expr(Clauses::[ syntaxTree() ]) -> syntaxTree()")
               "erl_syntax:has_comments/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#has_comments-1" "has_comments(Tree:: syntaxTree() ) -> boolean()")
               "erl_syntax:get_precomments/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#get_precomments-1" "get_precomments(Tree:: syntaxTree() ) -> [ syntaxTree() ]")
               "erl_syntax:get_postcomments/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#get_postcomments-1" "get_postcomments(Tree:: syntaxTree() ) -> [ syntaxTree() ]")
               "erl_syntax:get_pos/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#get_pos-1" "get_pos(Tree:: syntaxTree() ) -> term()")
               "erl_syntax:get_attrs/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#get_attrs-1" "get_attrs(Tree:: syntaxTree() ) -> syntaxTreeAttributes()")
               "erl_syntax:get_ann/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#get_ann-1" "get_ann(Tree:: syntaxTree() ) -> [term()]")
               "erl_syntax:generator_pattern/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#generator_pattern-1" "generator_pattern(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:generator_body/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#generator_body-1" "generator_body(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:generator/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#generator-2" "generator(Pattern:: syntaxTree() , Body:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:function_type_return/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#function_type_return-1" "function_type_return(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:function_type_arguments/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#function_type_arguments-1" "function_type_arguments(Node:: syntaxTree() ) -> any_arity | [ syntaxTree() ]")
               "erl_syntax:function_type/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#function_type-2" "function_type(Arguments::any_arity | syntaxTree() , Return:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:function_type/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#function_type-1" "function_type(Type) -> term()")
               "erl_syntax:function_name/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#function_name-1" "function_name(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:function_clauses/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#function_clauses-1" "function_clauses(Node:: syntaxTree() ) -> [ syntaxTree() ]")
               "erl_syntax:function_arity/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#function_arity-1" "function_arity(Node:: syntaxTree() ) -> arity()")
               "erl_syntax:function/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#function-2" "function(Name:: syntaxTree() , Clauses::[ syntaxTree() ]) -> syntaxTree()")
               "erl_syntax:fun_type/0"
               ("http://www.erlang.org/doc/man/erl_syntax.html#fun_type-0" "fun_type() -> syntaxTree()")
               "erl_syntax:fun_expr_clauses/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#fun_expr_clauses-1" "fun_expr_clauses(Node:: syntaxTree() ) -> [ syntaxTree() ]")
               "erl_syntax:fun_expr_arity/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#fun_expr_arity-1" "fun_expr_arity(Node:: syntaxTree() ) -> arity()")
               "erl_syntax:fun_expr/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#fun_expr-1" "fun_expr(Clauses::[ syntaxTree() ]) -> syntaxTree()")
               "erl_syntax:form_list_elements/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#form_list_elements-1" "form_list_elements(Node:: syntaxTree() ) -> [ syntaxTree() ]")
               "erl_syntax:form_list/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#form_list-1" "form_list(Forms::[ syntaxTree() ]) -> syntaxTree()")
               "erl_syntax:float_value/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#float_value-1" "float_value(Node:: syntaxTree() ) -> float()")
               "erl_syntax:float_literal/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#float_literal-1" "float_literal(Node:: syntaxTree() ) -> string()")
               "erl_syntax:float/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#float-1" "float(Value::float()) -> syntaxTree()")
               "erl_syntax:flatten_form_list/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#flatten_form_list-1" "flatten_form_list(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:error_marker_info/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#error_marker_info-1" "error_marker_info(Node:: syntaxTree() ) -> term()")
               "erl_syntax:error_marker/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#error_marker-1" "error_marker(Error::term()) -> syntaxTree()")
               "erl_syntax:eof_marker/0"
               ("http://www.erlang.org/doc/man/erl_syntax.html#eof_marker-0" "eof_marker() -> syntaxTree()")
               "erl_syntax:disjunction_body/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#disjunction_body-1" "disjunction_body(Node:: syntaxTree() ) -> [ syntaxTree() ]")
               "erl_syntax:disjunction/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#disjunction-1" "disjunction(Tests::[ syntaxTree() ]) -> syntaxTree()")
               "erl_syntax:data/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#data-1" "data(Tree:: syntaxTree() ) -> term()")
               "erl_syntax:copy_pos/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#copy_pos-2" "copy_pos(Source:: syntaxTree() , Target:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:copy_comments/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#copy_comments-2" "copy_comments(Source:: syntaxTree() , Target:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:copy_attrs/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#copy_attrs-2" "copy_attrs(S:: syntaxTree() , T:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:copy_ann/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#copy_ann-2" "copy_ann(Source:: syntaxTree() , Target:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:constraint_body/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#constraint_body-1" "constraint_body(Node:: syntaxTree() ) -> [ syntaxTree() ]")
               "erl_syntax:constraint_argument/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#constraint_argument-1" "constraint_argument(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:constraint/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#constraint-2" "constraint(Name:: syntaxTree() , Types::[ syntaxTree() ]) -> syntaxTree()")
               "erl_syntax:constrained_function_type_body/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#constrained_function_type_body-1" "constrained_function_type_body(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:constrained_function_type_argument/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#constrained_function_type_argument-1" "constrained_function_type_argument(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:constrained_function_type/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#constrained_function_type-2" "constrained_function_type(FunctionType:: syntaxTree() , FunctionConstraint::[ syntaxTree() ]) -> syntaxTree()")
               "erl_syntax:cons/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#cons-2" "cons(Head:: syntaxTree() , Tail:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:conjunction_body/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#conjunction_body-1" "conjunction_body(Node:: syntaxTree() ) -> [ syntaxTree() ]")
               "erl_syntax:conjunction/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#conjunction-1" "conjunction(Tests::[ syntaxTree() ]) -> syntaxTree()")
               "erl_syntax:cond_expr_clauses/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#cond_expr_clauses-1" "cond_expr_clauses(Node:: syntaxTree() ) -> [ syntaxTree() ]")
               "erl_syntax:cond_expr/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#cond_expr-1" "cond_expr(Clauses::[ syntaxTree() ]) -> syntaxTree()")
               "erl_syntax:concrete/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#concrete-1" "concrete(Node:: syntaxTree() ) -> term()")
               "erl_syntax:compact_list/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#compact_list-1" "compact_list(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:comment_text/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#comment_text-1" "comment_text(Node:: syntaxTree() ) -> [string()]")
               "erl_syntax:comment_padding/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#comment_padding-1" "comment_padding(Node:: syntaxTree() ) -> padding()")
               "erl_syntax:comment/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#comment-2" "comment(Pad:: padding() , Strings::[string()]) -> syntaxTree()")
               "erl_syntax:comment/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#comment-1" "comment(Strings::[string()]) -> syntaxTree()")
               "erl_syntax:clause_patterns/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#clause_patterns-1" "clause_patterns(Node:: syntaxTree() ) -> [ syntaxTree() ]")
               "erl_syntax:clause_guard/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#clause_guard-1" "clause_guard(Node:: syntaxTree() ) -> none | syntaxTree()")
               "erl_syntax:clause_body/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#clause_body-1" "clause_body(Node:: syntaxTree() ) -> [ syntaxTree() ]")
               "erl_syntax:clause/3"
               ("http://www.erlang.org/doc/man/erl_syntax.html#clause-3" "clause(Patterns::[ syntaxTree() ], Guard:: guard() , Body::[ syntaxTree() ]) -> syntaxTree()")
               "erl_syntax:clause/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#clause-2" "clause(Guard:: guard() , Body::[ syntaxTree() ]) -> syntaxTree()")
               "erl_syntax:class_qualifier_body/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#class_qualifier_body-1" "class_qualifier_body(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:class_qualifier_argument/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#class_qualifier_argument-1" "class_qualifier_argument(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:class_qualifier/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#class_qualifier-2" "class_qualifier(Class:: syntaxTree() , Body:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:char_value/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#char_value-1" "char_value(Node:: syntaxTree() ) -> char()")
               "erl_syntax:char_literal/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#char_literal-2" "char_literal(Node:: syntaxTree() , X2:: encoding() ) -> nonempty_string()")
               "erl_syntax:char_literal/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#char_literal-1" "char_literal(Node:: syntaxTree() ) -> nonempty_string()")
               "erl_syntax:char/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#char-1" "char(Char::char()) -> syntaxTree()")
               "erl_syntax:catch_expr_body/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#catch_expr_body-1" "catch_expr_body(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:catch_expr/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#catch_expr-1" "catch_expr(Expr:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:case_expr_clauses/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#case_expr_clauses-1" "case_expr_clauses(Node:: syntaxTree() ) -> [ syntaxTree() ]")
               "erl_syntax:case_expr_argument/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#case_expr_argument-1" "case_expr_argument(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:case_expr/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#case_expr-2" "case_expr(Argument:: syntaxTree() , Clauses::[ syntaxTree() ]) -> syntaxTree()")
               "erl_syntax:block_expr_body/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#block_expr_body-1" "block_expr_body(Node:: syntaxTree() ) -> [ syntaxTree() ]")
               "erl_syntax:block_expr/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#block_expr-1" "block_expr(Body::[ syntaxTree() ]) -> syntaxTree()")
               "erl_syntax:bitstring_type_n/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#bitstring_type_n-1" "bitstring_type_n(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:bitstring_type_m/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#bitstring_type_m-1" "bitstring_type_m(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:bitstring_type/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#bitstring_type-2" "bitstring_type(M:: syntaxTree() , N:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:binary_generator_pattern/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#binary_generator_pattern-1" "binary_generator_pattern(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:binary_generator_body/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#binary_generator_body-1" "binary_generator_body(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:binary_generator/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#binary_generator-2" "binary_generator(Pattern:: syntaxTree() , Body:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:binary_fields/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#binary_fields-1" "binary_fields(Node:: syntaxTree() ) -> [ syntaxTree() ]")
               "erl_syntax:binary_field_types/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#binary_field_types-1" "binary_field_types(Node:: syntaxTree() ) -> [ syntaxTree() ]")
               "erl_syntax:binary_field_size/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#binary_field_size-1" "binary_field_size(Node:: syntaxTree() ) -> none | syntaxTree()")
               "erl_syntax:binary_field_body/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#binary_field_body-1" "binary_field_body(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:binary_field/3"
               ("http://www.erlang.org/doc/man/erl_syntax.html#binary_field-3" "binary_field(Body:: syntaxTree() , Size::none | syntaxTree() , Types::[ syntaxTree() ]) -> syntaxTree()")
               "erl_syntax:binary_field/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#binary_field-2" "binary_field(Body:: syntaxTree() , Types::[ syntaxTree() ]) -> syntaxTree()")
               "erl_syntax:binary_field/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#binary_field-1" "binary_field(Body:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:binary_comp_template/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#binary_comp_template-1" "binary_comp_template(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:binary_comp_body/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#binary_comp_body-1" "binary_comp_body(Node:: syntaxTree() ) -> [ syntaxTree() ]")
               "erl_syntax:binary_comp/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#binary_comp-2" "binary_comp(Template:: syntaxTree() , Body::[ syntaxTree() ]) -> syntaxTree()")
               "erl_syntax:binary/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#binary-1" "binary(List::[ syntaxTree() ]) -> syntaxTree()")
               "erl_syntax:attribute_name/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#attribute_name-1" "attribute_name(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:attribute_arguments/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#attribute_arguments-1" "attribute_arguments(Node:: syntaxTree() ) -> none | [ syntaxTree() ]")
               "erl_syntax:attribute/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#attribute-2" "attribute(Name:: syntaxTree() , Args::none | [ syntaxTree() ]) -> syntaxTree()")
               "erl_syntax:attribute/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#attribute-1" "attribute(Name:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:atom_value/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#atom_value-1" "atom_value(Node:: syntaxTree() ) -> atom()")
               "erl_syntax:atom_name/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#atom_name-1" "atom_name(Node:: syntaxTree() ) -> string()")
               "erl_syntax:atom_literal/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#atom_literal-1" "atom_literal(Node:: syntaxTree() ) -> string()")
               "erl_syntax:atom/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#atom-1" "atom(Name::atom() | string()) -> syntaxTree()")
               "erl_syntax:arity_qualifier_body/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#arity_qualifier_body-1" "arity_qualifier_body(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:arity_qualifier_argument/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#arity_qualifier_argument-1" "arity_qualifier_argument(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:arity_qualifier/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#arity_qualifier-2" "arity_qualifier(Body:: syntaxTree() , Arity:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:application_operator/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#application_operator-1" "application_operator(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:application_arguments/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#application_arguments-1" "application_arguments(Node:: syntaxTree() ) -> [ syntaxTree() ]")
               "erl_syntax:application/3"
               ("http://www.erlang.org/doc/man/erl_syntax.html#application-3" "application(Module::none | syntaxTree() , Name:: syntaxTree() , Arguments::[ syntaxTree() ]) -> syntaxTree()")
               "erl_syntax:application/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#application-2" "application(Operator:: syntaxTree() , Arguments::[ syntaxTree() ]) -> syntaxTree()")
               "erl_syntax:annotated_type_name/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#annotated_type_name-1" "annotated_type_name(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:annotated_type_body/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#annotated_type_body-1" "annotated_type_body(Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:annotated_type/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#annotated_type-2" "annotated_type(Name:: syntaxTree() , Type:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:add_precomments/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#add_precomments-2" "add_precomments(Cs::[ syntaxTree() ], Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:add_postcomments/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#add_postcomments-2" "add_postcomments(Cs::[ syntaxTree() ], Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:add_ann/2"
               ("http://www.erlang.org/doc/man/erl_syntax.html#add_ann-2" "add_ann(A::term(), Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax:abstract/1"
               ("http://www.erlang.org/doc/man/erl_syntax.html#abstract-1" "abstract(T::term()) -> syntaxTree()")
               "erl_syntax_lib:variables/1"
               ("http://www.erlang.org/doc/man/erl_syntax_lib.html#variables-1" "variables(Tree:: syntaxTree() ) -> set(atom())")
               "erl_syntax_lib:to_comment/3"
               ("http://www.erlang.org/doc/man/erl_syntax_lib.html#to_comment-3" "to_comment(Tree:: syntaxTree() , Prefix::string(), F::Printer) -> syntaxTree()")
               "erl_syntax_lib:to_comment/2"
               ("http://www.erlang.org/doc/man/erl_syntax_lib.html#to_comment-2" "to_comment(Tree:: syntaxTree() , Prefix::string()) -> syntaxTree()")
               "erl_syntax_lib:to_comment/1"
               ("http://www.erlang.org/doc/man/erl_syntax_lib.html#to_comment-1" "to_comment(Tree) -> syntaxTree()")
               "erl_syntax_lib:strip_comments/1"
               ("http://www.erlang.org/doc/man/erl_syntax_lib.html#strip_comments-1" "strip_comments(Tree:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax_lib:new_variable_names/3"
               ("http://www.erlang.org/doc/man/erl_syntax_lib.html#new_variable_names-3" "new_variable_names(N::integer(), F::Function, Used:: set(atom()) ) -> [atom()]")
               "erl_syntax_lib:new_variable_names/2"
               ("http://www.erlang.org/doc/man/erl_syntax_lib.html#new_variable_names-2" "new_variable_names(N::integer(), Used:: set(atom()) ) -> [atom()]")
               "erl_syntax_lib:new_variable_name/2"
               ("http://www.erlang.org/doc/man/erl_syntax_lib.html#new_variable_name-2" "new_variable_name(F::Function, Used:: set(atom()) ) -> atom()")
               "erl_syntax_lib:new_variable_name/1"
               ("http://www.erlang.org/doc/man/erl_syntax_lib.html#new_variable_name-1" "new_variable_name(Used:: set(atom()) ) -> atom()")
               "erl_syntax_lib:mapfoldl_listlist/3"
               ("http://www.erlang.org/doc/man/erl_syntax_lib.html#mapfoldl_listlist-3" "mapfoldl_listlist(F::Function, S::State, Ls::[[term()]]) -> {[[term()]], term()}")
               "erl_syntax_lib:mapfold_subtrees/3"
               ("http://www.erlang.org/doc/man/erl_syntax_lib.html#mapfold_subtrees-3" "mapfold_subtrees(F::Function, Start::term(), Tree:: syntaxTree() ) -> { syntaxTree() , term()}")
               "erl_syntax_lib:mapfold/3"
               ("http://www.erlang.org/doc/man/erl_syntax_lib.html#mapfold-3" "mapfold(F::Function, Start::term(), Tree:: syntaxTree() ) -> { syntaxTree() , term()}")
               "erl_syntax_lib:map_subtrees/2"
               ("http://www.erlang.org/doc/man/erl_syntax_lib.html#map_subtrees-2" "map_subtrees(F::Function, Tree:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax_lib:map/2"
               ("http://www.erlang.org/doc/man/erl_syntax_lib.html#map-2" "map(F::Function, Tree:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax_lib:limit/3"
               ("http://www.erlang.org/doc/man/erl_syntax_lib.html#limit-3" "limit(Tree:: syntaxTree() , Depth::integer(), Node:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax_lib:limit/2"
               ("http://www.erlang.org/doc/man/erl_syntax_lib.html#limit-2" "limit(Tree, Depth) -> syntaxTree()")
               "erl_syntax_lib:is_fail_expr/1"
               ("http://www.erlang.org/doc/man/erl_syntax_lib.html#is_fail_expr-1" "is_fail_expr(Tree:: syntaxTree() ) -> boolean()")
               "erl_syntax_lib:function_name_expansions/1"
               ("http://www.erlang.org/doc/man/erl_syntax_lib.html#function_name_expansions-1" "function_name_expansions(Names::[Name]) -> [{ShortName, Name}]")
               "erl_syntax_lib:foldl_listlist/3"
               ("http://www.erlang.org/doc/man/erl_syntax_lib.html#foldl_listlist-3" "foldl_listlist(F::Function, Start::term(), Ls::[[term()]]) -> term()")
               "erl_syntax_lib:fold_subtrees/3"
               ("http://www.erlang.org/doc/man/erl_syntax_lib.html#fold_subtrees-3" "fold_subtrees(F::Function, Start::term(), Tree:: syntaxTree() ) -> term()")
               "erl_syntax_lib:fold/3"
               ("http://www.erlang.org/doc/man/erl_syntax_lib.html#fold-3" "fold(F::Function, Start::term(), Tree:: syntaxTree() ) -> term()")
               "erl_syntax_lib:annotate_bindings/2"
               ("http://www.erlang.org/doc/man/erl_syntax_lib.html#annotate_bindings-2" "annotate_bindings(Tree:: syntaxTree() , Bindings:: ordset(atom()) ) -> syntaxTree()")
               "erl_syntax_lib:annotate_bindings/1"
               ("http://www.erlang.org/doc/man/erl_syntax_lib.html#annotate_bindings-1" "annotate_bindings(Tree:: syntaxTree() ) -> syntaxTree()")
               "erl_syntax_lib:analyze_wild_attribute/1"
               ("http://www.erlang.org/doc/man/erl_syntax_lib.html#analyze_wild_attribute-1" "analyze_wild_attribute(Node:: syntaxTree() ) -> {atom(), term()}")
               "erl_syntax_lib:analyze_type_name/1"
               ("http://www.erlang.org/doc/man/erl_syntax_lib.html#analyze_type_name-1" "analyze_type_name(Node:: syntaxTree() ) -> TypeName")
               "erl_syntax_lib:analyze_type_application/1"
               ("http://www.erlang.org/doc/man/erl_syntax_lib.html#analyze_type_application-1" "analyze_type_application(Node:: syntaxTree() ) -> TypeName")
               "erl_syntax_lib:analyze_record_field/1"
               ("http://www.erlang.org/doc/man/erl_syntax_lib.html#analyze_record_field-1" "analyze_record_field(Node:: syntaxTree() ) -> {atom(), {Default, Type}}")
               "erl_syntax_lib:analyze_record_expr/1"
               ("http://www.erlang.org/doc/man/erl_syntax_lib.html#analyze_record_expr-1" "analyze_record_expr(Node:: syntaxTree() ) -> {atom(), Info} | atom()")
               "erl_syntax_lib:analyze_record_attribute/1"
               ("http://www.erlang.org/doc/man/erl_syntax_lib.html#analyze_record_attribute-1" "analyze_record_attribute(Node:: syntaxTree() ) -> {atom(), Fields}")
               "erl_syntax_lib:analyze_module_attribute/1"
               ("http://www.erlang.org/doc/man/erl_syntax_lib.html#analyze_module_attribute-1" "analyze_module_attribute(Node:: syntaxTree() ) -> Name::atom() | {Name::atom(), Variables::[atom()]}")
               "erl_syntax_lib:analyze_import_attribute/1"
               ("http://www.erlang.org/doc/man/erl_syntax_lib.html#analyze_import_attribute-1" "analyze_import_attribute(Node:: syntaxTree() ) -> {atom(), [FunctionName]} | atom()")
               "erl_syntax_lib:analyze_implicit_fun/1"
               ("http://www.erlang.org/doc/man/erl_syntax_lib.html#analyze_implicit_fun-1" "analyze_implicit_fun(Node:: syntaxTree() ) -> FunctionName")
               "erl_syntax_lib:analyze_function_name/1"
               ("http://www.erlang.org/doc/man/erl_syntax_lib.html#analyze_function_name-1" "analyze_function_name(Node:: syntaxTree() ) -> FunctionName")
               "erl_syntax_lib:analyze_function/1"
               ("http://www.erlang.org/doc/man/erl_syntax_lib.html#analyze_function-1" "analyze_function(Node:: syntaxTree() ) -> {atom(), integer()}")
               "erl_syntax_lib:analyze_forms/1"
               ("http://www.erlang.org/doc/man/erl_syntax_lib.html#analyze_forms-1" "analyze_forms(Forms) -> [{Key, term()}]")
               "erl_syntax_lib:analyze_form/1"
               ("http://www.erlang.org/doc/man/erl_syntax_lib.html#analyze_form-1" "analyze_form(Node:: syntaxTree() ) -> {atom(), term()} | atom()")
               "erl_syntax_lib:analyze_file_attribute/1"
               ("http://www.erlang.org/doc/man/erl_syntax_lib.html#analyze_file_attribute-1" "analyze_file_attribute(Node:: syntaxTree() ) -> {string(), integer()}")
               "erl_syntax_lib:analyze_export_attribute/1"
               ("http://www.erlang.org/doc/man/erl_syntax_lib.html#analyze_export_attribute-1" "analyze_export_attribute(Node:: syntaxTree() ) -> [FunctionName]")
               "erl_syntax_lib:analyze_attribute/1"
               ("http://www.erlang.org/doc/man/erl_syntax_lib.html#analyze_attribute-1" "analyze_attribute(Node:: syntaxTree() ) -> preprocessor | {atom(), atom()}")
               "erl_syntax_lib:analyze_application/1"
               ("http://www.erlang.org/doc/man/erl_syntax_lib.html#analyze_application-1" "analyze_application(Node:: syntaxTree() ) -> FunctionName | Arity")
               "erl_syntax_lib:"
               ("http://www.erlang.org/doc/man/erl_syntax_lib.html#type-info_pair" "info_pair() = { key() , term()}")
               "erl_tar:tt/1"
               ("http://www.erlang.org/doc/man/erl_tar.html#tt-1" "tt(Name)")
               "erl_tar:t/1"
               ("http://www.erlang.org/doc/man/erl_tar.html#t-1" "t(Name)")
               "erl_tar:table/2"
               ("http://www.erlang.org/doc/man/erl_tar.html#table-2" "table(Name, Options)")
               "erl_tar:table/1"
               ("http://www.erlang.org/doc/man/erl_tar.html#table-1" "table(Name) -> RetValue")
               "erl_tar:open/2"
               ("http://www.erlang.org/doc/man/erl_tar.html#open-2" "open(Name, OpenModeList) -> RetValue")
               "erl_tar:init/3"
               ("http://www.erlang.org/doc/man/erl_tar.html#init-3" "init(UserPrivate, AccessMode, Fun) ->\n        {ok,TarDescriptor} | {error,Reason}")
               "erl_tar:format_error/1"
               ("http://www.erlang.org/doc/man/erl_tar.html#format_error-1" "format_error(Reason) -> string()")
               "erl_tar:extract/2"
               ("http://www.erlang.org/doc/man/erl_tar.html#extract-2" "extract(Name, OptionList)")
               "erl_tar:extract/1"
               ("http://www.erlang.org/doc/man/erl_tar.html#extract-1" "extract(Name) -> RetValue")
               "erl_tar:create/3"
               ("http://www.erlang.org/doc/man/erl_tar.html#create-3" "create(Name, FileList, OptionList)")
               "erl_tar:create/2"
               ("http://www.erlang.org/doc/man/erl_tar.html#create-2" "create(Name, FileList) ->RetValue")
               "erl_tar:close/1"
               ("http://www.erlang.org/doc/man/erl_tar.html#close-1" "close(TarDescriptor)")
               "erl_tar:add/4"
               ("http://www.erlang.org/doc/man/erl_tar.html#add-4" "add(TarDescriptor, FilenameOrBin, NameInArchive, Options) ->\n        RetValue")
               "erl_tar:add/3"
               ("http://www.erlang.org/doc/man/erl_tar.html#add-3" "add(TarDescriptor, Filename, Options) -> RetValue")
               "erl_tidy:module/2"
               ("http://www.erlang.org/doc/man/erl_tidy.html#module-2" "module(Forms, Options::[term()]) -> syntaxTree()")
               "erl_tidy:module/1"
               ("http://www.erlang.org/doc/man/erl_tidy.html#module-1" "module(Forms) -> syntaxTree()")
               "erl_tidy:file/2"
               ("http://www.erlang.org/doc/man/erl_tidy.html#file-2" "file(Name:: filename() , Options::[term()]) -> ok")
               "erl_tidy:file/1"
               ("http://www.erlang.org/doc/man/erl_tidy.html#file-1" "file(Name) -> ok")
               "erl_tidy:dir/2"
               ("http://www.erlang.org/doc/man/erl_tidy.html#dir-2" "dir(Directory:: filename() , Options::[term()]) -> ok")
               "erl_tidy:dir/1"
               ("http://www.erlang.org/doc/man/erl_tidy.html#dir-1" "dir(Dir) -> ok")
               "erl_tidy:dir/0"
               ("http://www.erlang.org/doc/man/erl_tidy.html#dir-0" "dir() -> ok")
               "erl_tidy:"
               ("http://www.erlang.org/doc/man/erl_tidy.html#type-filename" "filename() = file:filename()")
               "erl_tracer:Module:trace_send/5"
               ("http://www.erlang.org/doc/man/erl_tracer.html#Module:trace_send-5" "Module:trace_send(TraceTag, TracerState, Tracee, TraceTerm,\n        Opts) -> Result")
               "erl_tracer:Module:trace_running_procs/5"
               ("http://www.erlang.org/doc/man/erl_tracer.html#Module:trace_running_procs-5" "Module:trace_running_procs(TraceTag, TracerState, Tracee,\n        TraceTerm, Opts) -> Result")
               "erl_tracer:Module:trace_running_ports/5"
               ("http://www.erlang.org/doc/man/erl_tracer.html#Module:trace_running_ports-5" "Module:trace_running_ports(TraceTag, TracerState, Tracee,\n        TraceTerm, Opts) -> Result")
               "erl_tracer:Module:trace_receive/5"
               ("http://www.erlang.org/doc/man/erl_tracer.html#Module:trace_receive-5" "Module:trace_receive(TraceTag, TracerState, Tracee, TraceTerm,\n        Opts) -> Result")
               "erl_tracer:Module:trace_procs/5"
               ("http://www.erlang.org/doc/man/erl_tracer.html#Module:trace_procs-5" "Module:trace_procs(TraceTag, TracerState, Tracee, TraceTerm,\n        Opts) -> Result")
               "erl_tracer:Module:trace_ports/5"
               ("http://www.erlang.org/doc/man/erl_tracer.html#Module:trace_ports-5" "Module:trace_ports(TraceTag, TracerState, Tracee, TraceTerm,\n        Opts) -> Result")
               "erl_tracer:Module:trace_garbage_collection/5"
               ("http://www.erlang.org/doc/man/erl_tracer.html#Module:trace_garbage_collection-5" "Module:trace_garbage_collection(TraceTag, TracerState, Tracee,\n        TraceTerm, Opts) -> Result")
               "erl_tracer:Module:trace_call/5"
               ("http://www.erlang.org/doc/man/erl_tracer.html#Module:trace_call-5" "Module:trace_call(TraceTag, TracerState, Tracee, TraceTerm,\n          Opts) -> Result")
               "erl_tracer:Module:trace/5"
               ("http://www.erlang.org/doc/man/erl_tracer.html#Module:trace-5" "Module:trace(TraceTag, TracerState, Tracee, TraceTerm,\n        Opts) -> Result")
               "erl_tracer:Module:enabled_send/3"
               ("http://www.erlang.org/doc/man/erl_tracer.html#Module:enabled_send-3" "Module:enabled_send(TraceTag, TracerState, Tracee) -> Result")
               "erl_tracer:Module:enabled_running_procs/3"
               ("http://www.erlang.org/doc/man/erl_tracer.html#Module:enabled_running_procs-3" "Module:enabled_running_procs(TraceTag, TracerState, Tracee) ->\n        Result")
               "erl_tracer:Module:enabled_running_ports/3"
               ("http://www.erlang.org/doc/man/erl_tracer.html#Module:enabled_running_ports-3" "Module:enabled_running_ports(TraceTag, TracerState, Tracee) ->\n        Result")
               "erl_tracer:Module:enabled_receive/3"
               ("http://www.erlang.org/doc/man/erl_tracer.html#Module:enabled_receive-3" "Module:enabled_receive(TraceTag, TracerState, Tracee) -> Result")
               "erl_tracer:Module:enabled_procs/3"
               ("http://www.erlang.org/doc/man/erl_tracer.html#Module:enabled_procs-3" "Module:enabled_procs(TraceTag, TracerState, Tracee) -> Result")
               "erl_tracer:Module:enabled_ports/3"
               ("http://www.erlang.org/doc/man/erl_tracer.html#Module:enabled_ports-3" "Module:enabled_ports(TraceTag, TracerState, Tracee) -> Result")
               "erl_tracer:Module:enabled_garbage_collection/3"
               ("http://www.erlang.org/doc/man/erl_tracer.html#Module:enabled_garbage_collection-3" "Module:enabled_garbage_collection(TraceTag, TracerState, Tracee) -> Result")
               "erl_tracer:Module:enabled_call/3"
               ("http://www.erlang.org/doc/man/erl_tracer.html#Module:enabled_call-3" "Module:enabled_call(TraceTag, TracerState, Tracee) -> Result")
               "erl_tracer:Module:enabled/3"
               ("http://www.erlang.org/doc/man/erl_tracer.html#Module:enabled-3" "Module:enabled(TraceTag, TracerState, Tracee) -> Result")
               "erl_tracer:tracer_state()"
               ("http://www.erlang.org/doc/man/erl_tracer.html#type-tracer_state" "tracer_state() = term()")
               "erl_tracer:trace_opts()"
               ("http://www.erlang.org/doc/man/erl_tracer.html#type-trace_opts" "trace_opts() = #{extra => term(), match_spec_result => term(), scheduler_id => integer() >= 0, timestamp => timestamp | cpu_timestamp | monotonic | strict_monotonic}")
               "erl_tracer:tracee()"
               ("http://www.erlang.org/doc/man/erl_tracer.html#type-tracee" "tracee() = port() | pid() | undefined")
               "erl_tracer:trace_tag()"
               ("http://www.erlang.org/doc/man/erl_tracer.html#type-trace_tag" "trace_tag() =  trace_tag_send() |  trace_tag_receive() |  trace_tag_call() |  trace_tag_procs() |  trace_tag_ports() |  trace_tag_running_procs() |  trace_tag_running_ports() |  trace_tag_gc()")
               "erl_tracer:trace_tag_send()"
               ("http://www.erlang.org/doc/man/erl_tracer.html#type-trace_tag_send" "trace_tag_send() = send | send_to_non_existing_process")
               "erl_tracer:trace_tag_running_procs()"
               ("http://www.erlang.org/doc/man/erl_tracer.html#type-trace_tag_running_procs" "trace_tag_running_procs() = in | out | in_exiting | out_exiting | out_exited")
               "erl_tracer:trace_tag_running_ports()"
               ("http://www.erlang.org/doc/man/erl_tracer.html#type-trace_tag_running_ports" "trace_tag_running_ports() = in | out | in_exiting | out_exiting | out_exited")
               "erl_tracer:trace_tag_receive()"
               ("http://www.erlang.org/doc/man/erl_tracer.html#type-trace_tag_receive" "trace_tag_receive() = 'receive'")
               "erl_tracer:trace_tag_procs()"
               ("http://www.erlang.org/doc/man/erl_tracer.html#type-trace_tag_procs" "trace_tag_procs() = spawn | spawned | exit | link | unlink | getting_linked | getting_unlinked | register | unregister")
               "erl_tracer:trace_tag_ports()"
               ("http://www.erlang.org/doc/man/erl_tracer.html#type-trace_tag_ports" "trace_tag_ports() = open | closed | link | unlink | getting_linked | getting_unlinked")
               "erl_tracer:trace_tag_gc()"
               ("http://www.erlang.org/doc/man/erl_tracer.html#type-trace_tag_gc" "trace_tag_gc() = gc_minor_start | gc_minor_end | gc_major_start | gc_major_end")
               "erl_tracer:trace_tag_call()"
               ("http://www.erlang.org/doc/man/erl_tracer.html#type-trace_tag_call" "trace_tag_call() = call | return_to | return_from | exception_from")
               "erlang:yield/0"
               ("http://www.erlang.org/doc/man/erlang.html#yield-0" "erlang:yield() -> true")
               "erlang:whereis/1"
               ("http://www.erlang.org/doc/man/erlang.html#whereis-1" "whereis(RegName) -> pid() | port() | undefined")
               "erlang:unregister/1"
               ("http://www.erlang.org/doc/man/erlang.html#unregister-1" "unregister(RegName) -> true")
               "erlang:unlink/1"
               ("http://www.erlang.org/doc/man/erlang.html#unlink-1" "unlink(Id) -> true")
               "erlang:universaltime_to_localtime/1"
               ("http://www.erlang.org/doc/man/erlang.html#universaltime_to_localtime-1" "erlang:universaltime_to_localtime(Universaltime) -> Localtime")
               "erlang:universaltime/0"
               ("http://www.erlang.org/doc/man/erlang.html#universaltime-0" "erlang:universaltime() -> DateTime")
               "erlang:unique_integer/1"
               ("http://www.erlang.org/doc/man/erlang.html#unique_integer-1" "erlang:unique_integer(ModifierList) -> integer()")
               "erlang:unique_integer/0"
               ("http://www.erlang.org/doc/man/erlang.html#unique_integer-0" "erlang:unique_integer() -> integer()")
               "erlang:tuple_to_list/1"
               ("http://www.erlang.org/doc/man/erlang.html#tuple_to_list-1" "tuple_to_list(Tuple) -> [term()]")
               "erlang:tuple_size/1"
               ("http://www.erlang.org/doc/man/erlang.html#tuple_size-1" "tuple_size(Tuple) -> integer() >= 0")
               "erlang:trunc/1"
               ("http://www.erlang.org/doc/man/erlang.html#trunc-1" "trunc(Number) -> integer()")
               "erlang:trace_pattern/3"
               ("http://www.erlang.org/doc/man/erlang.html#trace_pattern-3" "erlang:trace_pattern(MFA :: send, MatchSpec, FlagList :: []) -> integer() >= 0")
               "erlang:trace_pattern/2"
               ("http://www.erlang.org/doc/man/erlang.html#trace_pattern-2" "erlang:trace_pattern(MFA, MatchSpec) -> integer() >= 0")
               "erlang:trace_info/2"
               ("http://www.erlang.org/doc/man/erlang.html#trace_info-2" "erlang:trace_info(PidPortFuncEvent, Item) -> Res")
               "erlang:trace_delivered/1"
               ("http://www.erlang.org/doc/man/erlang.html#trace_delivered-1" "erlang:trace_delivered(Tracee) -> Ref")
               "erlang:trace/3"
               ("http://www.erlang.org/doc/man/erlang.html#trace-3" "erlang:trace(PidPortSpec, How, FlagList) -> integer()")
               "erlang:tl/1"
               ("http://www.erlang.org/doc/man/erlang.html#tl-1" "tl(List) -> term()")
               "erlang:timestamp/0"
               ("http://www.erlang.org/doc/man/erlang.html#timestamp-0" "erlang:timestamp() -> Timestamp")
               "erlang:time_offset/1"
               ("http://www.erlang.org/doc/man/erlang.html#time_offset-1" "erlang:time_offset(Unit) -> integer()")
               "erlang:time_offset/0"
               ("http://www.erlang.org/doc/man/erlang.html#time_offset-0" "erlang:time_offset() -> integer()")
               "erlang:time/0"
               ("http://www.erlang.org/doc/man/erlang.html#time-0" "time() -> Time")
               "erlang:throw/1"
               ("http://www.erlang.org/doc/man/erlang.html#throw-1" "throw(Any) -> no_return()")
               "erlang:term_to_binary/2"
               ("http://www.erlang.org/doc/man/erlang.html#term_to_binary-2" "term_to_binary(Term, Options) -> ext_binary()")
               "erlang:term_to_binary/1"
               ("http://www.erlang.org/doc/man/erlang.html#term_to_binary-1" "term_to_binary(Term) -> ext_binary()")
               "erlang:system_time/1"
               ("http://www.erlang.org/doc/man/erlang.html#system_time-1" "erlang:system_time(Unit) -> integer()")
               "erlang:system_time/0"
               ("http://www.erlang.org/doc/man/erlang.html#system_time-0" "erlang:system_time() -> integer()")
               "erlang:system_profile/2"
               ("http://www.erlang.org/doc/man/erlang.html#system_profile-2" "erlang:system_profile(ProfilerPid, Options) -> ProfilerSettings")
               "erlang:system_profile/0"
               ("http://www.erlang.org/doc/man/erlang.html#system_profile-0" "erlang:system_profile() -> ProfilerSettings")
               "erlang:system_monitor/2"
               ("http://www.erlang.org/doc/man/erlang.html#system_monitor-2" "erlang:system_monitor(MonitorPid, Options) -> MonSettings")
               "erlang:system_monitor/1"
               ("http://www.erlang.org/doc/man/erlang.html#system_monitor-1" "erlang:system_monitor(Arg) -> MonSettings")
               "erlang:system_monitor/0"
               ("http://www.erlang.org/doc/man/erlang.html#system_monitor-0" "erlang:system_monitor() -> MonSettings")
               "erlang:system_info/1"
               ("http://www.erlang.org/doc/man/erlang.html#system_info-1" "erlang:system_info(Item :: allocated_areas) -> [tuple()]")
               "erlang:system_flag/2"
               ("http://www.erlang.org/doc/man/erlang.html#system_flag-2" "erlang:system_flag(Flag :: backtrace_depth, Depth) -> OldDepth")
               "erlang:suspend_process/2"
               ("http://www.erlang.org/doc/man/erlang.html#suspend_process-2" "erlang:suspend_process(Suspendee, OptList) -> boolean()")
               "erlang:suspend_process/1"
               ("http://www.erlang.org/doc/man/erlang.html#suspend_process-1" "erlang:suspend_process(Suspendee) -> true")
               "erlang:statistics/1"
               ("http://www.erlang.org/doc/man/erlang.html#statistics-1" "statistics(Item :: active_tasks) -> [ActiveTasks]")
               "erlang:start_timer/4"
               ("http://www.erlang.org/doc/man/erlang.html#start_timer-4" "erlang:start_timer(Time, Dest, Msg, Options) -> TimerRef")
               "erlang:start_timer/3"
               ("http://www.erlang.org/doc/man/erlang.html#start_timer-3" "erlang:start_timer(Time, Dest, Msg) -> TimerRef")
               "erlang:split_binary/2"
               ("http://www.erlang.org/doc/man/erlang.html#split_binary-2" "split_binary(Bin, Pos) -> {binary(), binary()}")
               "erlang:spawn_opt/5"
               ("http://www.erlang.org/doc/man/erlang.html#spawn_opt-5" "spawn_opt(Node, Module, Function, Args, Options) -> pid() | {pid(), reference()}")
               "erlang:spawn_opt/4"
               ("http://www.erlang.org/doc/man/erlang.html#spawn_opt-4" "spawn_opt(Module, Function, Args, Options) -> pid() | {pid(), reference()}")
               "erlang:spawn_opt/3"
               ("http://www.erlang.org/doc/man/erlang.html#spawn_opt-3" "spawn_opt(Node, Fun, Options) -> pid() | {pid(), reference()}")
               "erlang:spawn_opt/2"
               ("http://www.erlang.org/doc/man/erlang.html#spawn_opt-2" "spawn_opt(Fun, Options) -> pid() | {pid(), reference()}")
               "erlang:spawn_monitor/3"
               ("http://www.erlang.org/doc/man/erlang.html#spawn_monitor-3" "spawn_monitor(Module, Function, Args) -> {pid(), reference()}")
               "erlang:spawn_monitor/1"
               ("http://www.erlang.org/doc/man/erlang.html#spawn_monitor-1" "spawn_monitor(Fun) -> {pid(), reference()}")
               "erlang:spawn_link/4"
               ("http://www.erlang.org/doc/man/erlang.html#spawn_link-4" "spawn_link(Node, Module, Function, Args) -> pid()")
               "erlang:spawn_link/3"
               ("http://www.erlang.org/doc/man/erlang.html#spawn_link-3" "spawn_link(Module, Function, Args) -> pid()")
               "erlang:spawn_link/2"
               ("http://www.erlang.org/doc/man/erlang.html#spawn_link-2" "spawn_link(Node, Fun) -> pid()")
               "erlang:spawn_link/1"
               ("http://www.erlang.org/doc/man/erlang.html#spawn_link-1" "spawn_link(Fun) -> pid()")
               "erlang:spawn/4"
               ("http://www.erlang.org/doc/man/erlang.html#spawn-4" "spawn(Node, Module, Function, Args) -> pid()")
               "erlang:spawn/3"
               ("http://www.erlang.org/doc/man/erlang.html#spawn-3" "spawn(Module, Function, Args) -> pid()")
               "erlang:spawn/2"
               ("http://www.erlang.org/doc/man/erlang.html#spawn-2" "spawn(Node, Fun) -> pid()")
               "erlang:spawn/1"
               ("http://www.erlang.org/doc/man/erlang.html#spawn-1" "spawn(Fun) -> pid()")
               "erlang:size/1"
               ("http://www.erlang.org/doc/man/erlang.html#size-1" "size(Item) -> integer() >= 0")
               "erlang:setelement/3"
               ("http://www.erlang.org/doc/man/erlang.html#setelement-3" "setelement(Index, Tuple1, Value) -> Tuple2")
               "erlang:set_cookie/2"
               ("http://www.erlang.org/doc/man/erlang.html#set_cookie-2" "erlang:set_cookie(Node, Cookie) -> true")
               "erlang:send_nosuspend/3"
               ("http://www.erlang.org/doc/man/erlang.html#send_nosuspend-3" "erlang:send_nosuspend(Dest, Msg, Options) -> boolean()")
               "erlang:send_nosuspend/2"
               ("http://www.erlang.org/doc/man/erlang.html#send_nosuspend-2" "erlang:send_nosuspend(Dest, Msg) -> boolean()")
               "erlang:send_after/4"
               ("http://www.erlang.org/doc/man/erlang.html#send_after-4" "erlang:send_after(Time, Dest, Msg, Options) -> TimerRef")
               "erlang:send_after/3"
               ("http://www.erlang.org/doc/man/erlang.html#send_after-3" "erlang:send_after(Time, Dest, Msg) -> TimerRef")
               "erlang:send/3"
               ("http://www.erlang.org/doc/man/erlang.html#send-3" "erlang:send(Dest, Msg, Options) -> Res")
               "erlang:send/2"
               ("http://www.erlang.org/doc/man/erlang.html#send-2" "erlang:send(Dest, Msg) -> Msg")
               "erlang:self/0"
               ("http://www.erlang.org/doc/man/erlang.html#self-0" "self() -> pid()")
               "erlang:round/1"
               ("http://www.erlang.org/doc/man/erlang.html#round-1" "round(Number) -> integer()")
               "erlang:resume_process/1"
               ("http://www.erlang.org/doc/man/erlang.html#resume_process-1" "erlang:resume_process(Suspendee) -> true")
               "erlang:registered/0"
               ("http://www.erlang.org/doc/man/erlang.html#registered-0" "registered() -> [RegName]")
               "erlang:register/2"
               ("http://www.erlang.org/doc/man/erlang.html#register-2" "register(RegName, PidOrPort) -> true")
               "erlang:ref_to_list/1"
               ("http://www.erlang.org/doc/man/erlang.html#ref_to_list-1" "erlang:ref_to_list(Ref) -> string()")
               "erlang:read_timer/2"
               ("http://www.erlang.org/doc/man/erlang.html#read_timer-2" "erlang:read_timer(TimerRef, Options) -> Result | ok")
               "erlang:read_timer/1"
               ("http://www.erlang.org/doc/man/erlang.html#read_timer-1" "erlang:read_timer(TimerRef) -> Result")
               "erlang:raise/3"
               ("http://www.erlang.org/doc/man/erlang.html#raise-3" "erlang:raise(Class, Reason, Stacktrace) -> no_return()")
               "erlang:put/2"
               ("http://www.erlang.org/doc/man/erlang.html#put-2" "put(Key, Val) -> term()")
               "erlang:purge_module/1"
               ("http://www.erlang.org/doc/man/erlang.html#purge_module-1" "purge_module(Module) -> true")
               "erlang:processes/0"
               ("http://www.erlang.org/doc/man/erlang.html#processes-0" "processes() -> [pid()]")
               "erlang:process_info/2"
               ("http://www.erlang.org/doc/man/erlang.html#process_info-2" "process_info(Pid, Item) -> InfoTuple | [] | undefined")
               "erlang:process_info/1"
               ("http://www.erlang.org/doc/man/erlang.html#process_info-1" "process_info(Pid) -> Info")
               "erlang:process_flag/3"
               ("http://www.erlang.org/doc/man/erlang.html#process_flag-3" "process_flag(Pid, Flag, Value) -> OldValue")
               "erlang:process_flag/2"
               ("http://www.erlang.org/doc/man/erlang.html#process_flag-2" "process_flag(Flag :: trap_exit, Boolean) -> OldBoolean")
               "erlang:process_display/2"
               ("http://www.erlang.org/doc/man/erlang.html#process_display-2" "erlang:process_display(Pid, Type) -> true")
               "erlang:pre_loaded/0"
               ("http://www.erlang.org/doc/man/erlang.html#pre_loaded-0" "pre_loaded() -> [module()]")
               "erlang:ports/0"
               ("http://www.erlang.org/doc/man/erlang.html#ports-0" "erlang:ports() -> [port()]")
               "erlang:port_to_list/1"
               ("http://www.erlang.org/doc/man/erlang.html#port_to_list-1" "erlang:port_to_list(Port) -> string()")
               "erlang:port_info/2"
               ("http://www.erlang.org/doc/man/erlang.html#port_info-2" "erlang:port_info(Port, Item :: connected) -> {connected, Pid} | undefined")
               "erlang:port_info/1"
               ("http://www.erlang.org/doc/man/erlang.html#port_info-1" "erlang:port_info(Port) -> Result")
               "erlang:port_control/3"
               ("http://www.erlang.org/doc/man/erlang.html#port_control-3" "port_control(Port, Operation, Data) -> iodata() | binary()")
               "erlang:port_connect/2"
               ("http://www.erlang.org/doc/man/erlang.html#port_connect-2" "port_connect(Port, Pid) -> true")
               "erlang:port_command/3"
               ("http://www.erlang.org/doc/man/erlang.html#port_command-3" "port_command(Port, Data, OptionList) -> boolean()")
               "erlang:port_command/2"
               ("http://www.erlang.org/doc/man/erlang.html#port_command-2" "port_command(Port, Data) -> true")
               "erlang:port_close/1"
               ("http://www.erlang.org/doc/man/erlang.html#port_close-1" "port_close(Port) -> true")
               "erlang:port_call/3"
               ("http://www.erlang.org/doc/man/erlang.html#port_call-3" "erlang:port_call(Port, Operation, Data) -> term()")
               "erlang:pid_to_list/1"
               ("http://www.erlang.org/doc/man/erlang.html#pid_to_list-1" "pid_to_list(Pid) -> string()")
               "erlang:phash2/2"
               ("http://www.erlang.org/doc/man/erlang.html#phash2-2" "erlang:phash2(Term, Range) -> Hash")
               "erlang:phash2/1"
               ("http://www.erlang.org/doc/man/erlang.html#phash2-1" "erlang:phash2(Term) -> Hash")
               "erlang:phash/2"
               ("http://www.erlang.org/doc/man/erlang.html#phash-2" "erlang:phash(Term, Range) -> Hash")
               "erlang:open_port/2"
               ("http://www.erlang.org/doc/man/erlang.html#open_port-2" "open_port(PortName, PortSettings) -> port()")
               "erlang:now/0"
               ("http://www.erlang.org/doc/man/erlang.html#now-0" "now() -> Timestamp")
               "erlang:nodes/1"
               ("http://www.erlang.org/doc/man/erlang.html#nodes-1" "nodes(Arg) -> Nodes")
               "erlang:nodes/0"
               ("http://www.erlang.org/doc/man/erlang.html#nodes-0" "nodes() -> Nodes")
               "erlang:node/1"
               ("http://www.erlang.org/doc/man/erlang.html#node-1" "node(Arg) -> Node")
               "erlang:node/0"
               ("http://www.erlang.org/doc/man/erlang.html#node-0" "node() -> Node")
               "erlang:nif_error/2"
               ("http://www.erlang.org/doc/man/erlang.html#nif_error-2" "erlang:nif_error(Reason, Args) -> no_return()")
               "erlang:nif_error/1"
               ("http://www.erlang.org/doc/man/erlang.html#nif_error-1" "erlang:nif_error(Reason) -> no_return()")
               "erlang:monotonic_time/1"
               ("http://www.erlang.org/doc/man/erlang.html#monotonic_time-1" "erlang:monotonic_time(Unit) -> integer()")
               "erlang:monotonic_time/0"
               ("http://www.erlang.org/doc/man/erlang.html#monotonic_time-0" "erlang:monotonic_time() -> integer()")
               "erlang:monitor_node/3"
               ("http://www.erlang.org/doc/man/erlang.html#monitor_node-3" "erlang:monitor_node(Node, Flag, Options) -> true")
               "erlang:monitor_node/2"
               ("http://www.erlang.org/doc/man/erlang.html#monitor_node-2" "monitor_node(Node, Flag) -> true")
               "erlang:monitor/2"
               ("http://www.erlang.org/doc/man/erlang.html#monitor-2" "monitor(Type :: process, Item :: monitor_process_identifier()) -> MonitorRef")
               "erlang:module_loaded/1"
               ("http://www.erlang.org/doc/man/erlang.html#module_loaded-1" "module_loaded(Module) -> boolean()")
               "erlang:min/2"
               ("http://www.erlang.org/doc/man/erlang.html#min-2" "min(Term1, Term2) -> Minimum")
               "erlang:memory/1"
               ("http://www.erlang.org/doc/man/erlang.html#memory-1" "erlang:memory(Type :: memory_type()) -> integer() >= 0")
               "erlang:memory/0"
               ("http://www.erlang.org/doc/man/erlang.html#memory-0" "erlang:memory() -> [{Type, Size}]")
               "erlang:md5_update/2"
               ("http://www.erlang.org/doc/man/erlang.html#md5_update-2" "erlang:md5_update(Context, Data) -> NewContext")
               "erlang:md5_init/0"
               ("http://www.erlang.org/doc/man/erlang.html#md5_init-0" "erlang:md5_init() -> Context")
               "erlang:md5_final/1"
               ("http://www.erlang.org/doc/man/erlang.html#md5_final-1" "erlang:md5_final(Context) -> Digest")
               "erlang:md5/1"
               ("http://www.erlang.org/doc/man/erlang.html#md5-1" "erlang:md5(Data) -> Digest")
               "erlang:max/2"
               ("http://www.erlang.org/doc/man/erlang.html#max-2" "max(Term1, Term2) -> Maximum")
               "erlang:match_spec_test/3"
               ("http://www.erlang.org/doc/man/erlang.html#match_spec_test-3" "erlang:match_spec_test(MatchAgainst, MatchSpec, Type) -> TestResult")
               "erlang:map_size/1"
               ("http://www.erlang.org/doc/man/erlang.html#map_size-1" "map_size(Map) -> integer() >= 0")
               "erlang:make_tuple/3"
               ("http://www.erlang.org/doc/man/erlang.html#make_tuple-3" "erlang:make_tuple(Arity, DefaultValue, InitList) -> tuple()")
               "erlang:make_tuple/2"
               ("http://www.erlang.org/doc/man/erlang.html#make_tuple-2" "erlang:make_tuple(Arity, InitialValue) -> tuple()")
               "erlang:make_ref/0"
               ("http://www.erlang.org/doc/man/erlang.html#make_ref-0" "make_ref() -> reference()")
               "erlang:localtime_to_universaltime/2"
               ("http://www.erlang.org/doc/man/erlang.html#localtime_to_universaltime-2" "erlang:localtime_to_universaltime(Localtime, IsDst) -> Universaltime")
               "erlang:localtime_to_universaltime/1"
               ("http://www.erlang.org/doc/man/erlang.html#localtime_to_universaltime-1" "erlang:localtime_to_universaltime(Localtime) -> Universaltime")
               "erlang:localtime/0"
               ("http://www.erlang.org/doc/man/erlang.html#localtime-0" "erlang:localtime() -> DateTime")
               "erlang:loaded/0"
               ("http://www.erlang.org/doc/man/erlang.html#loaded-0" "erlang:loaded() -> [Module]")
               "erlang:load_nif/2"
               ("http://www.erlang.org/doc/man/erlang.html#load_nif-2" "erlang:load_nif(Path, LoadInfo) -> ok | Error")
               "erlang:load_module/2"
               ("http://www.erlang.org/doc/man/erlang.html#load_module-2" "load_module(Module, Binary) -> {module, Module} | {error, Reason}")
               "erlang:list_to_tuple/1"
               ("http://www.erlang.org/doc/man/erlang.html#list_to_tuple-1" "list_to_tuple(List) -> tuple()")
               "erlang:list_to_pid/1"
               ("http://www.erlang.org/doc/man/erlang.html#list_to_pid-1" "list_to_pid(String) -> pid()")
               "erlang:list_to_integer/2"
               ("http://www.erlang.org/doc/man/erlang.html#list_to_integer-2" "list_to_integer(String, Base) -> integer()")
               "erlang:list_to_integer/1"
               ("http://www.erlang.org/doc/man/erlang.html#list_to_integer-1" "list_to_integer(String) -> integer()")
               "erlang:list_to_float/1"
               ("http://www.erlang.org/doc/man/erlang.html#list_to_float-1" "list_to_float(String) -> float()")
               "erlang:list_to_existing_atom/1"
               ("http://www.erlang.org/doc/man/erlang.html#list_to_existing_atom-1" "list_to_existing_atom(String) -> atom()")
               "erlang:list_to_bitstring/1"
               ("http://www.erlang.org/doc/man/erlang.html#list_to_bitstring-1" "list_to_bitstring(BitstringList) -> bitstring()")
               "erlang:list_to_binary/1"
               ("http://www.erlang.org/doc/man/erlang.html#list_to_binary-1" "list_to_binary(IoList) -> binary()")
               "erlang:list_to_atom/1"
               ("http://www.erlang.org/doc/man/erlang.html#list_to_atom-1" "list_to_atom(String) -> atom()")
               "erlang:link/1"
               ("http://www.erlang.org/doc/man/erlang.html#link-1" "link(PidOrPort) -> true")
               "erlang:length/1"
               ("http://www.erlang.org/doc/man/erlang.html#length-1" "length(List) -> integer() >= 0")
               "erlang:is_tuple/1"
               ("http://www.erlang.org/doc/man/erlang.html#is_tuple-1" "is_tuple(Term) -> boolean()")
               "erlang:is_reference/1"
               ("http://www.erlang.org/doc/man/erlang.html#is_reference-1" "is_reference(Term) -> boolean()")
               "erlang:is_record/3"
               ("http://www.erlang.org/doc/man/erlang.html#is_record-3" "is_record(Term, RecordTag, Size) -> boolean()")
               "erlang:is_record/2"
               ("http://www.erlang.org/doc/man/erlang.html#is_record-2" "is_record(Term, RecordTag) -> boolean()")
               "erlang:is_process_alive/1"
               ("http://www.erlang.org/doc/man/erlang.html#is_process_alive-1" "is_process_alive(Pid) -> boolean()")
               "erlang:is_port/1"
               ("http://www.erlang.org/doc/man/erlang.html#is_port-1" "is_port(Term) -> boolean()")
               "erlang:is_pid/1"
               ("http://www.erlang.org/doc/man/erlang.html#is_pid-1" "is_pid(Term) -> boolean()")
               "erlang:is_number/1"
               ("http://www.erlang.org/doc/man/erlang.html#is_number-1" "is_number(Term) -> boolean()")
               "erlang:is_map/1"
               ("http://www.erlang.org/doc/man/erlang.html#is_map-1" "is_map(Term) -> boolean()")
               "erlang:is_list/1"
               ("http://www.erlang.org/doc/man/erlang.html#is_list-1" "is_list(Term) -> boolean()")
               "erlang:is_integer/1"
               ("http://www.erlang.org/doc/man/erlang.html#is_integer-1" "is_integer(Term) -> boolean()")
               "erlang:is_function/2"
               ("http://www.erlang.org/doc/man/erlang.html#is_function-2" "is_function(Term, Arity) -> boolean()")
               "erlang:is_function/1"
               ("http://www.erlang.org/doc/man/erlang.html#is_function-1" "is_function(Term) -> boolean()")
               "erlang:is_float/1"
               ("http://www.erlang.org/doc/man/erlang.html#is_float-1" "is_float(Term) -> boolean()")
               "erlang:is_builtin/3"
               ("http://www.erlang.org/doc/man/erlang.html#is_builtin-3" "erlang:is_builtin(Module, Function, Arity) -> boolean()")
               "erlang:is_boolean/1"
               ("http://www.erlang.org/doc/man/erlang.html#is_boolean-1" "is_boolean(Term) -> boolean()")
               "erlang:is_bitstring/1"
               ("http://www.erlang.org/doc/man/erlang.html#is_bitstring-1" "is_bitstring(Term) -> boolean()")
               "erlang:is_binary/1"
               ("http://www.erlang.org/doc/man/erlang.html#is_binary-1" "is_binary(Term) -> boolean()")
               "erlang:is_atom/1"
               ("http://www.erlang.org/doc/man/erlang.html#is_atom-1" "is_atom(Term) -> boolean()")
               "erlang:is_alive/0"
               ("http://www.erlang.org/doc/man/erlang.html#is_alive-0" "is_alive() -> boolean()")
               "erlang:iolist_to_binary/1"
               ("http://www.erlang.org/doc/man/erlang.html#iolist_to_binary-1" "iolist_to_binary(IoListOrBinary) -> binary()")
               "erlang:iolist_size/1"
               ("http://www.erlang.org/doc/man/erlang.html#iolist_size-1" "iolist_size(Item) -> integer() >= 0")
               "erlang:integer_to_list/2"
               ("http://www.erlang.org/doc/man/erlang.html#integer_to_list-2" "integer_to_list(Integer, Base) -> string()")
               "erlang:integer_to_list/1"
               ("http://www.erlang.org/doc/man/erlang.html#integer_to_list-1" "integer_to_list(Integer) -> string()")
               "erlang:integer_to_binary/2"
               ("http://www.erlang.org/doc/man/erlang.html#integer_to_binary-2" "integer_to_binary(Integer, Base) -> binary()")
               "erlang:integer_to_binary/1"
               ("http://www.erlang.org/doc/man/erlang.html#integer_to_binary-1" "integer_to_binary(Integer) -> binary()")
               "erlang:insert_element/3"
               ("http://www.erlang.org/doc/man/erlang.html#insert_element-3" "erlang:insert_element(Index, Tuple1, Term) -> Tuple2")
               "erlang:hibernate/3"
               ("http://www.erlang.org/doc/man/erlang.html#hibernate-3" "erlang:hibernate(Module, Function, Args) -> no_return()")
               "erlang:hd/1"
               ("http://www.erlang.org/doc/man/erlang.html#hd-1" "hd(List) -> term()")
               "erlang:hash/2"
               ("http://www.erlang.org/doc/man/erlang.html#hash-2" "erlang:hash(Term, Range) -> integer() >= 1")
               "erlang:halt/2"
               ("http://www.erlang.org/doc/man/erlang.html#halt-2" "halt(Status, Options) -> no_return()")
               "erlang:halt/1"
               ("http://www.erlang.org/doc/man/erlang.html#halt-1" "halt(Status) -> no_return()")
               "erlang:halt/0"
               ("http://www.erlang.org/doc/man/erlang.html#halt-0" "halt() -> no_return()")
               "erlang:group_leader/2"
               ("http://www.erlang.org/doc/man/erlang.html#group_leader-2" "group_leader(GroupLeader, Pid) -> true")
               "erlang:group_leader/0"
               ("http://www.erlang.org/doc/man/erlang.html#group_leader-0" "group_leader() -> pid()")
               "erlang:get_stacktrace/0"
               ("http://www.erlang.org/doc/man/erlang.html#get_stacktrace-0" "erlang:get_stacktrace() -> [stack_item()]")
               "erlang:get_keys/1"
               ("http://www.erlang.org/doc/man/erlang.html#get_keys-1" "get_keys(Val) -> [Key]")
               "erlang:get_keys/0"
               ("http://www.erlang.org/doc/man/erlang.html#get_keys-0" "get_keys() -> [Key]")
               "erlang:get_cookie/0"
               ("http://www.erlang.org/doc/man/erlang.html#get_cookie-0" "erlang:get_cookie() -> Cookie | nocookie")
               "erlang:get/1"
               ("http://www.erlang.org/doc/man/erlang.html#get-1" "get(Key) -> Val | undefined")
               "erlang:get/0"
               ("http://www.erlang.org/doc/man/erlang.html#get-0" "get() -> [{Key, Val}]")
               "erlang:garbage_collect/2"
               ("http://www.erlang.org/doc/man/erlang.html#garbage_collect-2" "garbage_collect(Pid, OptionList) -> GCResult | async")
               "erlang:garbage_collect/1"
               ("http://www.erlang.org/doc/man/erlang.html#garbage_collect-1" "garbage_collect(Pid) -> GCResult")
               "erlang:garbage_collect/0"
               ("http://www.erlang.org/doc/man/erlang.html#garbage_collect-0" "garbage_collect() -> true")
               "erlang:function_exported/3"
               ("http://www.erlang.org/doc/man/erlang.html#function_exported-3" "erlang:function_exported(Module, Function, Arity) -> boolean()")
               "erlang:fun_to_list/1"
               ("http://www.erlang.org/doc/man/erlang.html#fun_to_list-1" "erlang:fun_to_list(Fun) -> string()")
               "erlang:fun_info/2"
               ("http://www.erlang.org/doc/man/erlang.html#fun_info-2" "erlang:fun_info(Fun, Item) -> {Item, Info}")
               "erlang:fun_info/1"
               ("http://www.erlang.org/doc/man/erlang.html#fun_info-1" "erlang:fun_info(Fun) -> [{Item, Info}]")
               "erlang:float_to_list/2"
               ("http://www.erlang.org/doc/man/erlang.html#float_to_list-2" "float_to_list(Float, Options) -> string()")
               "erlang:float_to_list/1"
               ("http://www.erlang.org/doc/man/erlang.html#float_to_list-1" "float_to_list(Float) -> string()")
               "erlang:float_to_binary/2"
               ("http://www.erlang.org/doc/man/erlang.html#float_to_binary-2" "float_to_binary(Float, Options) -> binary()")
               "erlang:float_to_binary/1"
               ("http://www.erlang.org/doc/man/erlang.html#float_to_binary-1" "float_to_binary(Float) -> binary()")
               "erlang:float/1"
               ("http://www.erlang.org/doc/man/erlang.html#float-1" "float(Number) -> float()")
               "erlang:external_size/2"
               ("http://www.erlang.org/doc/man/erlang.html#external_size-2" "erlang:external_size(Term, Options) -> integer() >= 0")
               "erlang:external_size/1"
               ("http://www.erlang.org/doc/man/erlang.html#external_size-1" "erlang:external_size(Term) -> integer() >= 0")
               "erlang:exit/2"
               ("http://www.erlang.org/doc/man/erlang.html#exit-2" "exit(Pid, Reason) -> true")
               "erlang:exit/1"
               ("http://www.erlang.org/doc/man/erlang.html#exit-1" "exit(Reason) -> no_return()")
               "erlang:error/2"
               ("http://www.erlang.org/doc/man/erlang.html#error-2" "error(Reason, Args) -> no_return()")
               "erlang:error/1"
               ("http://www.erlang.org/doc/man/erlang.html#error-1" "error(Reason) -> no_return()")
               "erlang:erase/1"
               ("http://www.erlang.org/doc/man/erlang.html#erase-1" "erase(Key) -> Val | undefined")
               "erlang:erase/0"
               ("http://www.erlang.org/doc/man/erlang.html#erase-0" "erase() -> [{Key, Val}]")
               "erlang:element/2"
               ("http://www.erlang.org/doc/man/erlang.html#element-2" "element(N, Tuple) -> term()")
               "erlang:display/1"
               ("http://www.erlang.org/doc/man/erlang.html#display-1" "erlang:display(Term) -> true")
               "erlang:disconnect_node/1"
               ("http://www.erlang.org/doc/man/erlang.html#disconnect_node-1" "disconnect_node(Node) -> boolean() | ignored")
               "erlang:demonitor/2"
               ("http://www.erlang.org/doc/man/erlang.html#demonitor-2" "demonitor(MonitorRef, OptionList) -> boolean()")
               "erlang:demonitor/1"
               ("http://www.erlang.org/doc/man/erlang.html#demonitor-1" "demonitor(MonitorRef) -> true")
               "erlang:delete_module/1"
               ("http://www.erlang.org/doc/man/erlang.html#delete_module-1" "delete_module(Module) -> true | undefined")
               "erlang:delete_element/2"
               ("http://www.erlang.org/doc/man/erlang.html#delete_element-2" "erlang:delete_element(Index, Tuple1) -> Tuple2")
               "erlang:decode_packet/3"
               ("http://www.erlang.org/doc/man/erlang.html#decode_packet-3" "erlang:decode_packet(Type, Bin, Options) -> {ok, Packet, Rest} | {more, Length} | {error, Reason}")
               "erlang:date/0"
               ("http://www.erlang.org/doc/man/erlang.html#date-0" "date() -> Date")
               "erlang:crc32_combine/3"
               ("http://www.erlang.org/doc/man/erlang.html#crc32_combine-3" "erlang:crc32_combine(FirstCrc, SecondCrc, SecondSize) -> integer() >= 0")
               "erlang:crc32/2"
               ("http://www.erlang.org/doc/man/erlang.html#crc32-2" "erlang:crc32(OldCrc, Data) -> integer() >= 0")
               "erlang:crc32/1"
               ("http://www.erlang.org/doc/man/erlang.html#crc32-1" "erlang:crc32(Data) -> integer() >= 0")
               "erlang:convert_time_unit/3"
               ("http://www.erlang.org/doc/man/erlang.html#convert_time_unit-3" "erlang:convert_time_unit(Time, FromUnit, ToUnit) -> ConvertedTime")
               "erlang:check_process_code/3"
               ("http://www.erlang.org/doc/man/erlang.html#check_process_code-3" "check_process_code(Pid, Module, OptionList) -> CheckResult | async")
               "erlang:check_process_code/2"
               ("http://www.erlang.org/doc/man/erlang.html#check_process_code-2" "check_process_code(Pid, Module) -> CheckResult")
               "erlang:check_old_code/1"
               ("http://www.erlang.org/doc/man/erlang.html#check_old_code-1" "check_old_code(Module) -> boolean()")
               "erlang:cancel_timer/2"
               ("http://www.erlang.org/doc/man/erlang.html#cancel_timer-2" "erlang:cancel_timer(TimerRef, Options) -> Result | ok")
               "erlang:cancel_timer/1"
               ("http://www.erlang.org/doc/man/erlang.html#cancel_timer-1" "erlang:cancel_timer(TimerRef) -> Result")
               "erlang:byte_size/1"
               ("http://www.erlang.org/doc/man/erlang.html#byte_size-1" "byte_size(Bitstring) -> integer() >= 0")
               "erlang:bump_reductions/1"
               ("http://www.erlang.org/doc/man/erlang.html#bump_reductions-1" "erlang:bump_reductions(Reductions) -> true")
               "erlang:bitstring_to_list/1"
               ("http://www.erlang.org/doc/man/erlang.html#bitstring_to_list-1" "bitstring_to_list(Bitstring) -> [byte() | bitstring()]")
               "erlang:bit_size/1"
               ("http://www.erlang.org/doc/man/erlang.html#bit_size-1" "bit_size(Bitstring) -> integer() >= 0")
               "erlang:binary_to_term/2"
               ("http://www.erlang.org/doc/man/erlang.html#binary_to_term-2" "binary_to_term(Binary, Opts) -> term()")
               "erlang:binary_to_term/1"
               ("http://www.erlang.org/doc/man/erlang.html#binary_to_term-1" "binary_to_term(Binary) -> term()")
               "erlang:binary_to_list/3"
               ("http://www.erlang.org/doc/man/erlang.html#binary_to_list-3" "binary_to_list(Binary, Start, Stop) -> [byte()]")
               "erlang:binary_to_list/1"
               ("http://www.erlang.org/doc/man/erlang.html#binary_to_list-1" "binary_to_list(Binary) -> [byte()]")
               "erlang:binary_to_integer/2"
               ("http://www.erlang.org/doc/man/erlang.html#binary_to_integer-2" "binary_to_integer(Binary, Base) -> integer()")
               "erlang:binary_to_integer/1"
               ("http://www.erlang.org/doc/man/erlang.html#binary_to_integer-1" "binary_to_integer(Binary) -> integer()")
               "erlang:binary_to_float/1"
               ("http://www.erlang.org/doc/man/erlang.html#binary_to_float-1" "binary_to_float(Binary) -> float()")
               "erlang:binary_to_existing_atom/2"
               ("http://www.erlang.org/doc/man/erlang.html#binary_to_existing_atom-2" "binary_to_existing_atom(Binary, Encoding) -> atom()")
               "erlang:binary_to_atom/2"
               ("http://www.erlang.org/doc/man/erlang.html#binary_to_atom-2" "binary_to_atom(Binary, Encoding) -> atom()")
               "erlang:binary_part/3"
               ("http://www.erlang.org/doc/man/erlang.html#binary_part-3" "binary_part(Subject, Start, Length) -> binary()")
               "erlang:binary_part/2"
               ("http://www.erlang.org/doc/man/erlang.html#binary_part-2" "binary_part(Subject, PosLen) -> binary()")
               "erlang:atom_to_list/1"
               ("http://www.erlang.org/doc/man/erlang.html#atom_to_list-1" "atom_to_list(Atom) -> string()")
               "erlang:atom_to_binary/2"
               ("http://www.erlang.org/doc/man/erlang.html#atom_to_binary-2" "atom_to_binary(Atom, Encoding) -> binary()")
               "erlang:apply/3"
               ("http://www.erlang.org/doc/man/erlang.html#apply-3" "apply(Module, Function, Args) -> term()")
               "erlang:apply/2"
               ("http://www.erlang.org/doc/man/erlang.html#apply-2" "apply(Fun, Args) -> term()")
               "erlang:append_element/2"
               ("http://www.erlang.org/doc/man/erlang.html#append_element-2" "erlang:append_element(Tuple1, Term) -> Tuple2")
               "erlang:adler32_combine/3"
               ("http://www.erlang.org/doc/man/erlang.html#adler32_combine-3" "erlang:adler32_combine(FirstAdler, SecondAdler, SecondSize) -> integer() >= 0")
               "erlang:adler32/2"
               ("http://www.erlang.org/doc/man/erlang.html#adler32-2" "erlang:adler32(OldAdler, Data) -> integer() >= 0")
               "erlang:adler32/1"
               ("http://www.erlang.org/doc/man/erlang.html#adler32-1" "erlang:adler32(Data) -> integer() >= 0")
               "erlang:abs/1"
               ("http://www.erlang.org/doc/man/erlang.html#abs-1" "abs(Float) -> float()")
               "erlang:deprecated_time_unit()"
               ("http://www.erlang.org/doc/man/erlang.html#type-deprecated_time_unit" "deprecated_time_unit() = seconds | milli_seconds | micro_seconds | nano_seconds")
               "erlang:time_unit()"
               ("http://www.erlang.org/doc/man/erlang.html#type-time_unit" "time_unit() = integer() >= 1 | second | millisecond | microsecond | nanosecond | native | perf_counter |  deprecated_time_unit()")
               "erlang:timestamp()"
               ("http://www.erlang.org/doc/man/erlang.html#type-timestamp" "timestamp() = {MegaSecs :: integer() >= 0, Secs :: integer() >= 0, MicroSecs :: integer() >= 0}")
               "erlang:message_queue_data()"
               ("http://www.erlang.org/doc/man/erlang.html#type-message_queue_data" "message_queue_data() = off_heap | on_heap")
               "erlang:"
               ("http://www.erlang.org/doc/man/erlang.html#type-ext_binary" "ext_binary()")
               "error_handler:undefined_lambda/3"
               ("http://www.erlang.org/doc/man/error_handler.html#undefined_lambda-3" "undefined_lambda(Module, Fun, Args) -> term()")
               "error_handler:undefined_function/3"
               ("http://www.erlang.org/doc/man/error_handler.html#undefined_function-3" "undefined_function(Module, Function, Args) -> any()")
               "error_handler:raise_undef_exception/3"
               ("http://www.erlang.org/doc/man/error_handler.html#raise_undef_exception-3" "raise_undef_exception(Module, Function, Args) -> no_return()")
               "error_logger:warning_report/2"
               ("http://www.erlang.org/doc/man/error_logger.html#warning_report-2" "warning_report(Type, Report) -> ok")
               "error_logger:warning_report/1"
               ("http://www.erlang.org/doc/man/error_logger.html#warning_report-1" "warning_report(Report) -> ok")
               "error_logger:warning_msg/2"
               ("http://www.erlang.org/doc/man/error_logger.html#warning_msg-2" "warning_msg(Format, Data) -> ok")
               "error_logger:warning_msg/1"
               ("http://www.erlang.org/doc/man/error_logger.html#warning_msg-1" "warning_msg(Format) -> ok")
               "error_logger:warning_map/0"
               ("http://www.erlang.org/doc/man/error_logger.html#warning_map-0" "warning_map() -> Tag")
               "error_logger:tty/1"
               ("http://www.erlang.org/doc/man/error_logger.html#tty-1" "tty(Flag) -> ok")
               "error_logger:logfile/1"
               ("http://www.erlang.org/doc/man/error_logger.html#logfile-1" "logfile(Request :: {open, Filename}) -> ok | {error, OpenReason}")
               "error_logger:info_report/2"
               ("http://www.erlang.org/doc/man/error_logger.html#info_report-2" "info_report(Type, Report) -> ok")
               "error_logger:info_report/1"
               ("http://www.erlang.org/doc/man/error_logger.html#info_report-1" "info_report(Report) -> ok")
               "error_logger:info_msg/2"
               ("http://www.erlang.org/doc/man/error_logger.html#info_msg-2" "info_msg(Format, Data) -> ok")
               "error_logger:info_msg/1"
               ("http://www.erlang.org/doc/man/error_logger.html#info_msg-1" "info_msg(Format) -> ok")
               "error_logger:error_report/2"
               ("http://www.erlang.org/doc/man/error_logger.html#error_report-2" "error_report(Type, Report) -> ok")
               "error_logger:error_report/1"
               ("http://www.erlang.org/doc/man/error_logger.html#error_report-1" "error_report(Report) -> ok")
               "error_logger:format/2"
               ("http://www.erlang.org/doc/man/error_logger.html#format-2" "format(Format, Data) -> ok")
               "error_logger:error_msg/2"
               ("http://www.erlang.org/doc/man/error_logger.html#error_msg-2" "error_msg(Format, Data) -> ok")
               "error_logger:error_msg/1"
               ("http://www.erlang.org/doc/man/error_logger.html#error_msg-1" "error_msg(Format) -> ok")
               "error_logger:delete_report_handler/1"
               ("http://www.erlang.org/doc/man/error_logger.html#delete_report_handler-1" "delete_report_handler(Handler) -> Result")
               "error_logger:add_report_handler/2"
               ("http://www.erlang.org/doc/man/error_logger.html#add_report_handler-2" "add_report_handler(Handler, Args) -> Result")
               "error_logger:add_report_handler/1"
               ("http://www.erlang.org/doc/man/error_logger.html#add_report_handler-1" "add_report_handler(Handler) -> any()")
               "error_logger:report()"
               ("http://www.erlang.org/doc/man/error_logger.html#type-report" "report() = [{Tag :: term(), Data :: term()} | term()] | string() | term()")
               "erts_alloc_config:stop/0"
               ("http://www.erlang.org/doc/man/erts_alloc_config.html#stop-0" "stop() -> ok | {error, Error}")
               "erts_alloc_config:make_config/1"
               ("http://www.erlang.org/doc/man/erts_alloc_config.html#make_config-1" "make_config(FileNameOrIODev) -> ok | {error, Error}")
               "erts_alloc_config:make_config/0"
               ("http://www.erlang.org/doc/man/erts_alloc_config.html#make_config-0" "make_config() -> ok | {error, Error}")
               "erts_alloc_config:save_scenario/0"
               ("http://www.erlang.org/doc/man/erts_alloc_config.html#save_scenario-0" "save_scenario() -> ok | {error, Error}")
               "et:report_event/5"
               ("http://www.erlang.org/doc/man/et.html#report_event-5" "report_event(DetailLevel, From, To, Label, Contents) -> hopefully_traced")
               "et:report_event/4"
               ("http://www.erlang.org/doc/man/et.html#report_event-4" "report_event(DetailLevel, FromTo, Label, Contents) -> hopefully_traced")
               "et:phone_home/5"
               ("http://www.erlang.org/doc/man/et.html#phone_home-5" "phone_home(DetailLevel, From, To, Label, Contents) -> hopefully_traced")
               "et:phone_home/4"
               ("http://www.erlang.org/doc/man/et.html#phone_home-4" "phone_home(DetailLevel, FromTo, Label, Contents) -> hopefully_traced")
               "et:trace_me/4"
               ("http://www.erlang.org/doc/man/et.html#trace_me-4" "trace_me(DetailLevel, FromTo, Label, Contents) -> hopefully_traced")
               "et:trace_me/5"
               ("http://www.erlang.org/doc/man/et.html#trace_me-5" "trace_me(DetailLevel, From, To, Label, Contents) -> hopefully_traced")
               "et_collector:clear_table/1"
               ("http://www.erlang.org/doc/man/et_collector.html#clear_table-1" "clear_table(Handle) -> ok")
               "et_collector:iterate/5"
               ("http://www.erlang.org/doc/man/et_collector.html#iterate-5" "iterate(Handle, Prev, Limit, Fun, Acc) -> NewAcc")
               "et_collector:iterate/3"
               ("http://www.erlang.org/doc/man/et_collector.html#iterate-3" "iterate(Handle, Prev, Limit) -> NewAcc")
               "et_collector:start_trace_client/3"
               ("http://www.erlang.org/doc/man/et_collector.html#start_trace_client-3" "start_trace_client(CollectorPid, Type, Parameters) -> file_loaded | {trace_client_pid, pid()} | exit(Reason)")
               "et_collector:multicast/2"
               ("http://www.erlang.org/doc/man/et_collector.html#multicast-2" "multicast(_CollectorPid, Msg) -> ok")
               "et_collector:dict_match/2"
               ("http://www.erlang.org/doc/man/et_collector.html#dict_match-2" "dict_match(CollectorPid, Pattern) -> [Match]")
               "et_collector:dict_delete/2"
               ("http://www.erlang.org/doc/man/et_collector.html#dict_delete-2" "dict_delete(CollectorPid, Key) -> ok")
               "et_collector:dict_lookup/2"
               ("http://www.erlang.org/doc/man/et_collector.html#dict_lookup-2" "dict_lookup(CollectorPid, Key) -> [Val]")
               "et_collector:dict_insert/3"
               ("http://www.erlang.org/doc/man/et_collector.html#dict_insert-3" "dict_insert(CollectorPid, {filter, collector}, FilterFun) -> ok")
               "et_collector:change_pattern/2"
               ("http://www.erlang.org/doc/man/et_collector.html#change_pattern-2" "change_pattern(CollectorPid, RawPattern) -> {old_pattern, TracePattern}")
               "et_collector:get_global_pid/0"
               ("http://www.erlang.org/doc/man/et_collector.html#get_global_pid-0" "get_global_pid() -> CollectorPid | exit(Reason)")
               "et_collector:get_table_handle/1"
               ("http://www.erlang.org/doc/man/et_collector.html#get_table_handle-1" "get_table_handle(CollectorPid) -> Handle")
               "et_collector:make_key/2"
               ("http://www.erlang.org/doc/man/et_collector.html#make_key-2" "make_key(Type, Stuff) -> Key")
               "et_collector:report_event/6"
               ("http://www.erlang.org/doc/man/et_collector.html#report_event-6" "report_event(Handle, DetailLevel, From, To, Label, Contents) -> {ok, Continuation} | exit(Reason)")
               "et_collector:report_event/5"
               ("http://www.erlang.org/doc/man/et_collector.html#report_event-5" "report_event(Handle, DetailLevel, FromTo, Label, Contents) -> {ok, Continuation} | exit(Reason)")
               "et_collector:report/2"
               ("http://www.erlang.org/doc/man/et_collector.html#report-2" "report(Handle, TraceOrEvent) -> {ok, Continuation} | exit(Reason)")
               "et_collector:load_event_file/2"
               ("http://www.erlang.org/doc/man/et_collector.html#load_event_file-2" "load_event_file(CollectorPid, FileName) -> {ok, BadBytes} | exit(Reason)")
               "et_collector:save_event_file/3"
               ("http://www.erlang.org/doc/man/et_collector.html#save_event_file-3" "save_event_file(CollectorPid, FileName, Options) -> ok | {error, Reason}")
               "et_collector:stop/1"
               ("http://www.erlang.org/doc/man/et_collector.html#stop-1" "stop(CollectorPid) -> ok")
               "et_collector:start_link/1"
               ("http://www.erlang.org/doc/man/et_collector.html#start_link-1" "start_link(Options) -> {ok, CollectorPid} | {error, Reason}")
               "et_selector:parse_event/2"
               ("http://www.erlang.org/doc/man/et_selector.html#parse_event-2" "parse_event(Mod, ValidTraceData) -> false | true | {true, Event}")
               "et_selector:change_pattern/1"
               ("http://www.erlang.org/doc/man/et_selector.html#change_pattern-1" "change_pattern(Pattern) -> ok")
               "et_selector:make_pattern/1"
               ("http://www.erlang.org/doc/man/et_selector.html#make_pattern-1" "make_pattern(RawPattern) -> TracePattern")
               "et_viewer:stop/1"
               ("http://www.erlang.org/doc/man/et_viewer.html#stop-1" "stop(ViewerPid) -> ok")
               "et_viewer:get_collector_pid/1"
               ("http://www.erlang.org/doc/man/et_viewer.html#get_collector_pid-1" "get_collector_pid(ViewerPid) -> CollectorPid")
               "et_viewer:start_link/1"
               ("http://www.erlang.org/doc/man/et_viewer.html#start_link-1" "start_link(Options) -> {ok, ViewerPid} | {error, Reason}")
               "et_viewer:start/1"
               ("http://www.erlang.org/doc/man/et_viewer.html#start-1" "start(Options) -> ok")
               "et_viewer:start/0"
               ("http://www.erlang.org/doc/man/et_viewer.html#start-0" "start() -> ok")
               "et_viewer:file/1"
               ("http://www.erlang.org/doc/man/et_viewer.html#file-1" "file(FileName) -> {ok, ViewerPid} | {error, Reason}")
               "etop:stop/0"
               ("http://www.erlang.org/doc/man/etop.html#stop-0" "stop() -> stop")
               "etop:dump/1"
               ("http://www.erlang.org/doc/man/etop.html#dump-1" "dump(File) -> Result")
               "etop:config/2"
               ("http://www.erlang.org/doc/man/etop.html#config-2" "config(Key,Value) -> Result")
               "etop:help/0"
               ("http://www.erlang.org/doc/man/etop.html#help-0" "help() -> ok")
               "etop:start/1"
               ("http://www.erlang.org/doc/man/etop.html#start-1" "start(Options) -> ok")
               "etop:start/0"
               ("http://www.erlang.org/doc/man/etop.html#start-0" "start() -> ok")
               "ets:update_element/3"
               ("http://www.erlang.org/doc/man/ets.html#update_element-3" "update_element(Tab, Key, ElementSpec :: {Pos, Value}) -> boolean()")
               "ets:update_counter/4"
               ("http://www.erlang.org/doc/man/ets.html#update_counter-4" "update_counter(Tab, Key, UpdateOp, Default) -> Result")
               "ets:update_counter/3"
               ("http://www.erlang.org/doc/man/ets.html#update_counter-3" "update_counter(Tab, Key, UpdateOp) -> Result")
               "ets:to_dets/2"
               ("http://www.erlang.org/doc/man/ets.html#to_dets-2" "to_dets(Tab, DetsTab) -> DetsTab")
               "ets:test_ms/2"
               ("http://www.erlang.org/doc/man/ets.html#test_ms-2" "test_ms(Tuple, MatchSpec) -> {ok, Result} | {error, Errors}")
               "ets:take/2"
               ("http://www.erlang.org/doc/man/ets.html#take-2" "take(Tab, Key) -> [Object]")
               "ets:table/2"
               ("http://www.erlang.org/doc/man/ets.html#table-2" "table(Tab, Options) -> QueryHandle")
               "ets:table/1"
               ("http://www.erlang.org/doc/man/ets.html#table-1" "table(Tab) -> QueryHandle")
               "ets:tabfile_info/1"
               ("http://www.erlang.org/doc/man/ets.html#tabfile_info-1" "tabfile_info(Filename) -> {ok, TableInfo} | {error, Reason}")
               "ets:tab2list/1"
               ("http://www.erlang.org/doc/man/ets.html#tab2list-1" "tab2list(Tab) -> [Object]")
               "ets:tab2file/3"
               ("http://www.erlang.org/doc/man/ets.html#tab2file-3" "tab2file(Tab, Filename, Options) -> ok | {error, Reason}")
               "ets:tab2file/2"
               ("http://www.erlang.org/doc/man/ets.html#tab2file-2" "tab2file(Tab, Filename) -> ok | {error, Reason}")
               "ets:slot/2"
               ("http://www.erlang.org/doc/man/ets.html#slot-2" "slot(Tab, I) -> [Object] | '$end_of_table'")
               "ets:setopts/2"
               ("http://www.erlang.org/doc/man/ets.html#setopts-2" "setopts(Tab, Opts) -> true")
               "ets:select_reverse/3"
               ("http://www.erlang.org/doc/man/ets.html#select_reverse-3" "select_reverse(Tab, MatchSpec, Limit) -> {[Match], Continuation} | '$end_of_table'")
               "ets:select_reverse/2"
               ("http://www.erlang.org/doc/man/ets.html#select_reverse-2" "select_reverse(Tab, MatchSpec) -> [Match]")
               "ets:select_reverse/1"
               ("http://www.erlang.org/doc/man/ets.html#select_reverse-1" "select_reverse(Continuation) -> {[Match], Continuation} | '$end_of_table'")
               "ets:select_delete/2"
               ("http://www.erlang.org/doc/man/ets.html#select_delete-2" "select_delete(Tab, MatchSpec) -> NumDeleted")
               "ets:select_count/2"
               ("http://www.erlang.org/doc/man/ets.html#select_count-2" "select_count(Tab, MatchSpec) -> NumMatched")
               "ets:select/3"
               ("http://www.erlang.org/doc/man/ets.html#select-3" "select(Tab, MatchSpec, Limit) -> {[Match], Continuation} | '$end_of_table'")
               "ets:select/2"
               ("http://www.erlang.org/doc/man/ets.html#select-2" "select(Tab, MatchSpec) -> [Match]")
               "ets:select/1"
               ("http://www.erlang.org/doc/man/ets.html#select-1" "select(Continuation) -> {[Match], Continuation} | '$end_of_table'")
               "ets:safe_fixtable/2"
               ("http://www.erlang.org/doc/man/ets.html#safe_fixtable-2" "safe_fixtable(Tab, Fix) -> true")
               "ets:repair_continuation/2"
               ("http://www.erlang.org/doc/man/ets.html#repair_continuation-2" "repair_continuation(Continuation, MatchSpec) -> Continuation")
               "ets:rename/2"
               ("http://www.erlang.org/doc/man/ets.html#rename-2" "rename(Tab, Name) -> Name")
               "ets:prev/2"
               ("http://www.erlang.org/doc/man/ets.html#prev-2" "prev(Tab, Key1) -> Key2 | '$end_of_table'")
               "ets:next/2"
               ("http://www.erlang.org/doc/man/ets.html#next-2" "next(Tab, Key1) -> Key2 | '$end_of_table'")
               "ets:new/2"
               ("http://www.erlang.org/doc/man/ets.html#new-2" "new(Name, Options) -> tid() | atom()")
               "ets:member/2"
               ("http://www.erlang.org/doc/man/ets.html#member-2" "member(Tab, Key) -> boolean()")
               "ets:match_spec_run/2"
               ("http://www.erlang.org/doc/man/ets.html#match_spec_run-2" "match_spec_run(List, CompiledMatchSpec) -> list()")
               "ets:match_spec_compile/1"
               ("http://www.erlang.org/doc/man/ets.html#match_spec_compile-1" "match_spec_compile(MatchSpec) -> CompiledMatchSpec")
               "ets:match_object/3"
               ("http://www.erlang.org/doc/man/ets.html#match_object-3" "match_object(Tab, Pattern, Limit) -> {[Object], Continuation} | '$end_of_table'")
               "ets:match_object/2"
               ("http://www.erlang.org/doc/man/ets.html#match_object-2" "match_object(Tab, Pattern) -> [Object]")
               "ets:match_object/1"
               ("http://www.erlang.org/doc/man/ets.html#match_object-1" "match_object(Continuation) -> {[Object], Continuation} | '$end_of_table'")
               "ets:match_delete/2"
               ("http://www.erlang.org/doc/man/ets.html#match_delete-2" "match_delete(Tab, Pattern) -> true")
               "ets:match/3"
               ("http://www.erlang.org/doc/man/ets.html#match-3" "match(Tab, Pattern, Limit) -> {[Match], Continuation} | '$end_of_table'")
               "ets:match/2"
               ("http://www.erlang.org/doc/man/ets.html#match-2" "match(Tab, Pattern) -> [Match]")
               "ets:match/1"
               ("http://www.erlang.org/doc/man/ets.html#match-1" "match(Continuation) -> {[Match], Continuation} | '$end_of_table'")
               "ets:lookup_element/3"
               ("http://www.erlang.org/doc/man/ets.html#lookup_element-3" "lookup_element(Tab, Key, Pos) -> Elem")
               "ets:lookup/2"
               ("http://www.erlang.org/doc/man/ets.html#lookup-2" "lookup(Tab, Key) -> [Object]")
               "ets:last/1"
               ("http://www.erlang.org/doc/man/ets.html#last-1" "last(Tab) -> Key | '$end_of_table'")
               "ets:is_compiled_ms/1"
               ("http://www.erlang.org/doc/man/ets.html#is_compiled_ms-1" "is_compiled_ms(Term) -> boolean()")
               "ets:insert_new/2"
               ("http://www.erlang.org/doc/man/ets.html#insert_new-2" "insert_new(Tab, ObjectOrObjects) -> boolean()")
               "ets:insert/2"
               ("http://www.erlang.org/doc/man/ets.html#insert-2" "insert(Tab, ObjectOrObjects) -> true")
               "ets:init_table/2"
               ("http://www.erlang.org/doc/man/ets.html#init_table-2" "init_table(Tab, InitFun) -> true")
               "ets:info/2"
               ("http://www.erlang.org/doc/man/ets.html#info-2" "info(Tab, Item) -> Value | undefined")
               "ets:info/1"
               ("http://www.erlang.org/doc/man/ets.html#info-1" "info(Tab) -> InfoList | undefined")
               "ets:i/1"
               ("http://www.erlang.org/doc/man/ets.html#i-1" "i(Tab) -> ok")
               "ets:i/0"
               ("http://www.erlang.org/doc/man/ets.html#i-0" "i() -> ok")
               "ets:give_away/3"
               ("http://www.erlang.org/doc/man/ets.html#give_away-3" "give_away(Tab, Pid, GiftData) -> true")
               "ets:fun2ms/1"
               ("http://www.erlang.org/doc/man/ets.html#fun2ms-1" "fun2ms(LiteralFun) -> MatchSpec")
               "ets:from_dets/2"
               ("http://www.erlang.org/doc/man/ets.html#from_dets-2" "from_dets(Tab, DetsTab) -> true")
               "ets:foldr/3"
               ("http://www.erlang.org/doc/man/ets.html#foldr-3" "foldr(Function, Acc0, Tab) -> Acc1")
               "ets:foldl/3"
               ("http://www.erlang.org/doc/man/ets.html#foldl-3" "foldl(Function, Acc0, Tab) -> Acc1")
               "ets:first/1"
               ("http://www.erlang.org/doc/man/ets.html#first-1" "first(Tab) -> Key | '$end_of_table'")
               "ets:file2tab/2"
               ("http://www.erlang.org/doc/man/ets.html#file2tab-2" "file2tab(Filename, Options) -> {ok, Tab} | {error, Reason}")
               "ets:file2tab/1"
               ("http://www.erlang.org/doc/man/ets.html#file2tab-1" "file2tab(Filename) -> {ok, Tab} | {error, Reason}")
               "ets:delete_object/2"
               ("http://www.erlang.org/doc/man/ets.html#delete_object-2" "delete_object(Tab, Object) -> true")
               "ets:delete_all_objects/1"
               ("http://www.erlang.org/doc/man/ets.html#delete_all_objects-1" "delete_all_objects(Tab) -> true")
               "ets:delete/2"
               ("http://www.erlang.org/doc/man/ets.html#delete-2" "delete(Tab, Key) -> true")
               "ets:delete/1"
               ("http://www.erlang.org/doc/man/ets.html#delete-1" "delete(Tab) -> true")
               "ets:all/0"
               ("http://www.erlang.org/doc/man/ets.html#all-0" "all() -> [Tab]")
               "ets:type()"
               ("http://www.erlang.org/doc/man/ets.html#type-type" "type() = set | ordered_set | bag | duplicate_bag")
               "ets:tid()"
               ("http://www.erlang.org/doc/man/ets.html#type-tid" "tid()")
               "ets:tab()"
               ("http://www.erlang.org/doc/man/ets.html#type-tab" "tab() = atom() | tid()")
               "ets:match_pattern()"
               ("http://www.erlang.org/doc/man/ets.html#type-match_pattern" "match_pattern() = atom() | tuple()")
               "ets:comp_match_spec()"
               ("http://www.erlang.org/doc/man/ets.html#type-comp_match_spec" "comp_match_spec()")
               "ets:match_spec()"
               ("http://www.erlang.org/doc/man/ets.html#type-match_spec" "match_spec() = [{ match_pattern() , [term()], [term()]}]")
               "ets:"
               ("http://www.erlang.org/doc/man/ets.html#type-continuation" "continuation()")
               "ets:access()"
               ("http://www.erlang.org/doc/man/ets.html#type-access" "access() = public | protected | private")
               "eunit:test/2"
               ("http://www.erlang.org/doc/man/eunit.html#test-2" "test(Tests::term(), Options::[term()]) -> ok | {error, term()}")
               "eunit:test/1"
               ("http://www.erlang.org/doc/man/eunit.html#test-1" "test(Tests) -> term()")
               "eunit:stop/0"
               ("http://www.erlang.org/doc/man/eunit.html#stop-0" "stop() -> term()")
               "eunit:start/0"
               ("http://www.erlang.org/doc/man/eunit.html#start-0" "start() -> term()")
               "eunit_surefire:terminate/2"
               ("http://www.erlang.org/doc/man/eunit_surefire.html#terminate-2" "terminate(X1, St) -> term()")
               "eunit_surefire:start/1"
               ("http://www.erlang.org/doc/man/eunit_surefire.html#start-1" "start(Options) -> term()")
               "eunit_surefire:start/0"
               ("http://www.erlang.org/doc/man/eunit_surefire.html#start-0" "start() -> term()")
               "eunit_surefire:init/1"
               ("http://www.erlang.org/doc/man/eunit_surefire.html#init-1" "init(Options) -> term()")
               "eunit_surefire:handle_end/3"
               ("http://www.erlang.org/doc/man/eunit_surefire.html#handle_end-3" "handle_end(X1, Data, St) -> term()")
               "eunit_surefire:handle_cancel/3"
               ("http://www.erlang.org/doc/man/eunit_surefire.html#handle_cancel-3" "handle_cancel(X1, Data, St) -> term()")
               "eunit_surefire:handle_begin/3"
               ("http://www.erlang.org/doc/man/eunit_surefire.html#handle_begin-3" "handle_begin(Kind, Data, St) -> term()")
               "file:write_file_info/3"
               ("http://www.erlang.org/doc/man/file.html#write_file_info-3" "write_file_info(Filename, FileInfo, Opts) -> ok | {error, Reason}")
               "file:write_file_info/2"
               ("http://www.erlang.org/doc/man/file.html#write_file_info-2" "write_file_info(Filename, FileInfo) -> ok | {error, Reason}")
               "file:write_file/3"
               ("http://www.erlang.org/doc/man/file.html#write_file-3" "write_file(Filename, Bytes, Modes) -> ok | {error, Reason}")
               "file:write_file/2"
               ("http://www.erlang.org/doc/man/file.html#write_file-2" "write_file(Filename, Bytes) -> ok | {error, Reason}")
               "file:write/2"
               ("http://www.erlang.org/doc/man/file.html#write-2" "write(IoDevice, Bytes) -> ok | {error, Reason}")
               "file:truncate/1"
               ("http://www.erlang.org/doc/man/file.html#truncate-1" "truncate(IoDevice) -> ok | {error, Reason}")
               "file:sync/1"
               ("http://www.erlang.org/doc/man/file.html#sync-1" "sync(IoDevice) -> ok | {error, Reason}")
               "file:set_cwd/1"
               ("http://www.erlang.org/doc/man/file.html#set_cwd-1" "set_cwd(Dir) -> ok | {error, Reason}")
               "file:sendfile/5"
               ("http://www.erlang.org/doc/man/file.html#sendfile-5" "sendfile(RawFile, Socket, Offset, Bytes, Opts) -> {ok, integer() >= 0} | {error, inet:posix() | closed | badarg | not_owner}")
               "file:sendfile/2"
               ("http://www.erlang.org/doc/man/file.html#sendfile-2" "sendfile(Filename, Socket) -> {ok, integer() >= 0} | {error, inet:posix() | closed | badarg | not_owner}")
               "file:script/2"
               ("http://www.erlang.org/doc/man/file.html#script-2" "script(Filename, Bindings) -> {ok, Value} | {error, Reason}")
               "file:script/1"
               ("http://www.erlang.org/doc/man/file.html#script-1" "script(Filename) -> {ok, Value} | {error, Reason}")
               "file:rename/2"
               ("http://www.erlang.org/doc/man/file.html#rename-2" "rename(Source, Destination) -> ok | {error, Reason}")
               "file:read_link_info/2"
               ("http://www.erlang.org/doc/man/file.html#read_link_info-2" "read_link_info(Name, Opts) -> {ok, FileInfo} | {error, Reason}")
               "file:read_link_info/1"
               ("http://www.erlang.org/doc/man/file.html#read_link_info-1" "read_link_info(Name) -> {ok, FileInfo} | {error, Reason}")
               "file:read_link_all/1"
               ("http://www.erlang.org/doc/man/file.html#read_link_all-1" "read_link_all(Name) -> {ok, Filename} | {error, Reason}")
               "file:read_link/1"
               ("http://www.erlang.org/doc/man/file.html#read_link-1" "read_link(Name) -> {ok, Filename} | {error, Reason}")
               "file:read_line/1"
               ("http://www.erlang.org/doc/man/file.html#read_line-1" "read_line(IoDevice) -> {ok, Data} | eof | {error, Reason}")
               "file:read_file_info/2"
               ("http://www.erlang.org/doc/man/file.html#read_file_info-2" "read_file_info(Filename, Opts) -> {ok, FileInfo} | {error, Reason}")
               "file:read_file_info/1"
               ("http://www.erlang.org/doc/man/file.html#read_file_info-1" "read_file_info(Filename) -> {ok, FileInfo} | {error, Reason}")
               "file:read_file/1"
               ("http://www.erlang.org/doc/man/file.html#read_file-1" "read_file(Filename) -> {ok, Binary} | {error, Reason}")
               "file:read/2"
               ("http://www.erlang.org/doc/man/file.html#read-2" "read(IoDevice, Number) -> {ok, Data} | eof | {error, Reason}")
               "file:pwrite/3"
               ("http://www.erlang.org/doc/man/file.html#pwrite-3" "pwrite(IoDevice, Location, Bytes) -> ok | {error, Reason}")
               "file:pwrite/2"
               ("http://www.erlang.org/doc/man/file.html#pwrite-2" "pwrite(IoDevice, LocBytes) -> ok | {error, {N, Reason}}")
               "file:pread/3"
               ("http://www.erlang.org/doc/man/file.html#pread-3" "pread(IoDevice, Location, Number) -> {ok, Data} | eof | {error, Reason}")
               "file:pread/2"
               ("http://www.erlang.org/doc/man/file.html#pread-2" "pread(IoDevice, LocNums) -> {ok, DataL} | eof | {error, Reason}")
               "file:position/2"
               ("http://www.erlang.org/doc/man/file.html#position-2" "position(IoDevice, Location) -> {ok, NewPosition} | {error, Reason}")
               "file:pid2name/1"
               ("http://www.erlang.org/doc/man/file.html#pid2name-1" "pid2name(Pid) -> {ok, Filename} | undefined")
               "file:path_script/3"
               ("http://www.erlang.org/doc/man/file.html#path_script-3" "path_script(Path, Filename, Bindings) -> {ok, Value, FullName} | {error, Reason}")
               "file:path_script/2"
               ("http://www.erlang.org/doc/man/file.html#path_script-2" "path_script(Path, Filename) -> {ok, Value, FullName} | {error, Reason}")
               "file:path_open/3"
               ("http://www.erlang.org/doc/man/file.html#path_open-3" "path_open(Path, Filename, Modes) -> {ok, IoDevice, FullName} | {error, Reason}")
               "file:path_eval/2"
               ("http://www.erlang.org/doc/man/file.html#path_eval-2" "path_eval(Path, Filename) -> {ok, FullName} | {error, Reason}")
               "file:path_consult/2"
               ("http://www.erlang.org/doc/man/file.html#path_consult-2" "path_consult(Path, Filename) -> {ok, Terms, FullName} | {error, Reason}")
               "file:open/2"
               ("http://www.erlang.org/doc/man/file.html#open-2" "open(File, Modes) -> {ok, IoDevice} | {error, Reason}")
               "file:native_name_encoding/0"
               ("http://www.erlang.org/doc/man/file.html#native_name_encoding-0" "native_name_encoding() -> latin1 | utf8")
               "file:make_symlink/2"
               ("http://www.erlang.org/doc/man/file.html#make_symlink-2" "make_symlink(Existing, New) -> ok | {error, Reason}")
               "file:make_link/2"
               ("http://www.erlang.org/doc/man/file.html#make_link-2" "make_link(Existing, New) -> ok | {error, Reason}")
               "file:make_dir/1"
               ("http://www.erlang.org/doc/man/file.html#make_dir-1" "make_dir(Dir) -> ok | {error, Reason}")
               "file:list_dir_all/1"
               ("http://www.erlang.org/doc/man/file.html#list_dir_all-1" "list_dir_all(Dir) -> {ok, Filenames} | {error, Reason}")
               "file:list_dir/1"
               ("http://www.erlang.org/doc/man/file.html#list_dir-1" "list_dir(Dir) -> {ok, Filenames} | {error, Reason}")
               "file:get_cwd/1"
               ("http://www.erlang.org/doc/man/file.html#get_cwd-1" "get_cwd(Drive) -> {ok, Dir} | {error, Reason}")
               "file:get_cwd/0"
               ("http://www.erlang.org/doc/man/file.html#get_cwd-0" "get_cwd() -> {ok, Dir} | {error, Reason}")
               "file:format_error/1"
               ("http://www.erlang.org/doc/man/file.html#format_error-1" "format_error(Reason) -> Chars")
               "file:eval/2"
               ("http://www.erlang.org/doc/man/file.html#eval-2" "eval(Filename, Bindings) -> ok | {error, Reason}")
               "file:eval/1"
               ("http://www.erlang.org/doc/man/file.html#eval-1" "eval(Filename) -> ok | {error, Reason}")
               "file:delete/1"
               ("http://www.erlang.org/doc/man/file.html#delete-1" "delete(Filename) -> ok | {error, Reason}")
               "file:del_dir/1"
               ("http://www.erlang.org/doc/man/file.html#del_dir-1" "del_dir(Dir) -> ok | {error, Reason}")
               "file:datasync/1"
               ("http://www.erlang.org/doc/man/file.html#datasync-1" "datasync(IoDevice) -> ok | {error, Reason}")
               "file:copy/3"
               ("http://www.erlang.org/doc/man/file.html#copy-3" "copy(Source, Destination, ByteCount) -> {ok, BytesCopied} | {error, Reason}")
               "file:copy/2"
               ("http://www.erlang.org/doc/man/file.html#copy-2" "copy(Source, Destination) -> {ok, BytesCopied} | {error, Reason}")
               "file:consult/1"
               ("http://www.erlang.org/doc/man/file.html#consult-1" "consult(Filename) -> {ok, Terms} | {error, Reason}")
               "file:close/1"
               ("http://www.erlang.org/doc/man/file.html#close-1" "close(IoDevice) -> ok | {error, Reason}")
               "file:change_time/3"
               ("http://www.erlang.org/doc/man/file.html#change_time-3" "change_time(Filename, Atime, Mtime) -> ok | {error, Reason}")
               "file:change_time/2"
               ("http://www.erlang.org/doc/man/file.html#change_time-2" "change_time(Filename, Mtime) -> ok | {error, Reason}")
               "file:change_owner/3"
               ("http://www.erlang.org/doc/man/file.html#change_owner-3" "change_owner(Filename, Uid, Gid) -> ok | {error, Reason}")
               "file:change_owner/2"
               ("http://www.erlang.org/doc/man/file.html#change_owner-2" "change_owner(Filename, Uid) -> ok | {error, Reason}")
               "file:change_mode/2"
               ("http://www.erlang.org/doc/man/file.html#change_mode-2" "change_mode(Filename, Mode) -> ok | {error, Reason}")
               "file:change_group/2"
               ("http://www.erlang.org/doc/man/file.html#change_group-2" "change_group(Filename, Gid) -> ok | {error, Reason}")
               "file:allocate/3"
               ("http://www.erlang.org/doc/man/file.html#allocate-3" "allocate(File, Offset, Length) -> ok | {error, posix() }")
               "file:advise/4"
               ("http://www.erlang.org/doc/man/file.html#advise-4" "advise(IoDevice, Offset, Length, Advise) -> ok | {error, Reason}")
               "file:file_info_option()"
               ("http://www.erlang.org/doc/man/file.html#type-file_info_option" "file_info_option() = {time, local} | {time, universal} | {time, posix} | raw")
               "file:mode()"
               ("http://www.erlang.org/doc/man/file.html#type-mode" "mode() = read | write | append | exclusive | raw | binary | {delayed_write, Size :: integer() >= 0, Delay :: integer() >= 0} | delayed_write | {read_ahead, Size :: integer() >= 1} | read_ahead | compressed | {encoding, unicode:encoding() } | sync")
               "file:location()"
               ("http://www.erlang.org/doc/man/file.html#type-location" "location() = integer() | {bof, Offset :: integer()} | {cur, Offset :: integer()} | {eof, Offset :: integer()} | bof | cur | eof")
               "file:file_info()"
               ("http://www.erlang.org/doc/man/file.html#type-file_info" "file_info() = #file_info{size = integer() >= 0 | undefined, type = device | directory | other | regular | symlink | undefined, access = read | write | read_write | none | undefined, atime =  file:date_time() | integer() >= 0 | undefined, mtime =  file:date_time() | integer() >= 0 | undefined, ctime =  file:date_time() | integer() >= 0 | undefined, mode = integer() >= 0 | undefined, links = integer() >= 0 | undefined, major_device = integer() >= 0 | undefined, minor_device = integer() >= 0 | undefined, inode = integer() >= 0 | undefined, uid = integer() >= 0 | undefined, gid = integer() >= 0 | undefined}")
               "file:date_time()"
               ("http://www.erlang.org/doc/man/file.html#type-date_time" "date_time() = calendar:datetime()")
               "file:posix()"
               ("http://www.erlang.org/doc/man/file.html#type-posix" "posix() = eacces | eagain | ebadf | ebusy | edquot | eexist | efault | efbig | eintr | einval | eio | eisdir | eloop | emfile | emlink | enametoolong | enfile | enodev | enoent | enomem | enospc | enotblk | enotdir | enotsup | enxio | eperm | epipe | erofs | espipe | esrch | estale | exdev")
               "file:name_all()"
               ("http://www.erlang.org/doc/man/file.html#type-name_all" "name_all() = string() | atom() | deep_list() | (RawFilename :: binary())")
               "file:name()"
               ("http://www.erlang.org/doc/man/file.html#type-name" "name() = string() | atom() | deep_list()")
               "file:io_device()"
               ("http://www.erlang.org/doc/man/file.html#type-io_device" "io_device() = pid() | fd()")
               "file:filename_all()"
               ("http://www.erlang.org/doc/man/file.html#type-filename_all" "filename_all() = string() | binary()")
               "file:filename()"
               ("http://www.erlang.org/doc/man/file.html#type-filename" "filename() = string()")
               "file:"
               ("http://www.erlang.org/doc/man/file.html#type-fd" "fd()")
               "file:deep_list()"
               ("http://www.erlang.org/doc/man/file.html#type-deep_list" "deep_list() = [char() | atom() | deep_list() ]")
               "file_sorter:sort/3"
               ("http://www.erlang.org/doc/man/file_sorter.html#sort-3" "sort(Input, Output, Options) -> Reply")
               "file_sorter:sort/2"
               ("http://www.erlang.org/doc/man/file_sorter.html#sort-2" "sort(Input, Output) -> Reply")
               "file_sorter:sort/1"
               ("http://www.erlang.org/doc/man/file_sorter.html#sort-1" "sort(FileName) -> Reply")
               "file_sorter:merge/3"
               ("http://www.erlang.org/doc/man/file_sorter.html#merge-3" "merge(FileNames, Output, Options) -> Reply")
               "file_sorter:merge/2"
               ("http://www.erlang.org/doc/man/file_sorter.html#merge-2" "merge(FileNames, Output) -> Reply")
               "file_sorter:keysort/4"
               ("http://www.erlang.org/doc/man/file_sorter.html#keysort-4" "keysort(KeyPos, Input, Output, Options) -> Reply")
               "file_sorter:keysort/3"
               ("http://www.erlang.org/doc/man/file_sorter.html#keysort-3" "keysort(KeyPos, Input, Output) -> Reply")
               "file_sorter:keysort/2"
               ("http://www.erlang.org/doc/man/file_sorter.html#keysort-2" "keysort(KeyPos, FileName) -> Reply")
               "file_sorter:keymerge/4"
               ("http://www.erlang.org/doc/man/file_sorter.html#keymerge-4" "keymerge(KeyPos, FileNames, Output, Options) -> Reply")
               "file_sorter:keymerge/3"
               ("http://www.erlang.org/doc/man/file_sorter.html#keymerge-3" "keymerge(KeyPos, FileNames, Output) -> Reply")
               "file_sorter:keycheck/3"
               ("http://www.erlang.org/doc/man/file_sorter.html#keycheck-3" "keycheck(KeyPos, FileNames, Options) -> Reply")
               "file_sorter:keycheck/2"
               ("http://www.erlang.org/doc/man/file_sorter.html#keycheck-2" "keycheck(KeyPos, FileName) -> Reply")
               "file_sorter:check/2"
               ("http://www.erlang.org/doc/man/file_sorter.html#check-2" "check(FileNames, Options) -> Reply")
               "file_sorter:check/1"
               ("http://www.erlang.org/doc/man/file_sorter.html#check-1" "check(FileName) -> Reply")
               "file_sorter:reason()"
               ("http://www.erlang.org/doc/man/file_sorter.html#type-reason" "reason() = bad_object | {bad_object, file_name() } | {bad_term, file_name() } | {file_error,  file_name() ,  file:posix() | badarg | system_limit} | {premature_eof, file_name() }")
               "file_sorter:tmp_directory()"
               ("http://www.erlang.org/doc/man/file_sorter.html#type-tmp_directory" "tmp_directory() = [] | file:name()")
               "file_sorter:size()"
               ("http://www.erlang.org/doc/man/file_sorter.html#type-size" "size() = integer() >= 0")
               "file_sorter:order_fun()"
               ("http://www.erlang.org/doc/man/file_sorter.html#type-order_fun" "order_fun() = fun((term(), term()) -> boolean())")
               "file_sorter:order()"
               ("http://www.erlang.org/doc/man/file_sorter.html#type-order" "order() = ascending | descending | order_fun()")
               "file_sorter:no_files()"
               ("http://www.erlang.org/doc/man/file_sorter.html#type-no_files" "no_files() = integer() >= 1")
               "file_sorter:key_pos()"
               ("http://www.erlang.org/doc/man/file_sorter.html#type-key_pos" "key_pos() = integer() >= 1 | [integer() >= 1]")
               "file_sorter:header_length()"
               ("http://www.erlang.org/doc/man/file_sorter.html#type-header_length" "header_length() = integer() >= 1")
               "file_sorter:format_fun()"
               ("http://www.erlang.org/doc/man/file_sorter.html#type-format_fun" "format_fun() = fun((binary()) -> term())")
               "file_sorter:format()"
               ("http://www.erlang.org/doc/man/file_sorter.html#type-format" "format() = binary_term | term | binary | format_fun()")
               "file_sorter:option()"
               ("http://www.erlang.org/doc/man/file_sorter.html#type-option" "option() = {compressed, boolean()} | {header, header_length() } | {format, format() } | {no_files, no_files() } | {order, order() } | {size, size() } | {tmpdir, tmp_directory() } | {unique, boolean()}")
               "file_sorter:options()"
               ("http://www.erlang.org/doc/man/file_sorter.html#type-options" "options() = [ option() ] | option()")
               "file_sorter:value()"
               ("http://www.erlang.org/doc/man/file_sorter.html#type-value" "value() = term()")
               "file_sorter:output_reply()"
               ("http://www.erlang.org/doc/man/file_sorter.html#type-output_reply" "output_reply() = term()")
               "file_sorter:output()"
               ("http://www.erlang.org/doc/man/file_sorter.html#type-output" "output() = file_name() | outfun()")
               "file_sorter:outfun()"
               ("http://www.erlang.org/doc/man/file_sorter.html#type-outfun" "outfun() = fun(( o_command() ) -> o_reply() )")
               "file_sorter:object()"
               ("http://www.erlang.org/doc/man/file_sorter.html#type-object" "object() = term() | binary()")
               "file_sorter:o_reply()"
               ("http://www.erlang.org/doc/man/file_sorter.html#type-o_reply" "o_reply() = outfun() | output_reply()")
               "file_sorter:o_command()"
               ("http://www.erlang.org/doc/man/file_sorter.html#type-o_command" "o_command() = {value, value() } | [ object() ] | close")
               "file_sorter:input_reply()"
               ("http://www.erlang.org/doc/man/file_sorter.html#type-input_reply" "input_reply() = term()")
               "file_sorter:input()"
               ("http://www.erlang.org/doc/man/file_sorter.html#type-input" "input() = file_names() | infun()")
               "file_sorter:infun()"
               ("http://www.erlang.org/doc/man/file_sorter.html#type-infun" "infun() = fun(( i_command() ) -> i_reply() )")
               "file_sorter:i_reply()"
               ("http://www.erlang.org/doc/man/file_sorter.html#type-i_reply" "i_reply() = end_of_input | {end_of_input, value() } | {[ object() ], infun() } |  input_reply()")
               "file_sorter:i_command()"
               ("http://www.erlang.org/doc/man/file_sorter.html#type-i_command" "i_command() = read | close")
               "file_sorter:file_names()"
               ("http://www.erlang.org/doc/man/file_sorter.html#type-file_names" "file_names() = [ file:name() ]")
               "file_sorter:file_name()"
               ("http://www.erlang.org/doc/man/file_sorter.html#type-file_name" "file_name() = file:name()")
               "filelib:wildcard/2"
               ("http://www.erlang.org/doc/man/filelib.html#wildcard-2" "wildcard(Wildcard, Cwd) -> [ file:filename() ]")
               "filelib:wildcard/1"
               ("http://www.erlang.org/doc/man/filelib.html#wildcard-1" "wildcard(Wildcard) -> [ file:filename() ]")
               "filelib:last_modified/1"
               ("http://www.erlang.org/doc/man/filelib.html#last_modified-1" "last_modified(Name) -> file:date_time() | 0")
               "filelib:is_regular/1"
               ("http://www.erlang.org/doc/man/filelib.html#is_regular-1" "is_regular(Name) -> boolean()")
               "filelib:is_file/1"
               ("http://www.erlang.org/doc/man/filelib.html#is_file-1" "is_file(Name) -> boolean()")
               "filelib:is_dir/1"
               ("http://www.erlang.org/doc/man/filelib.html#is_dir-1" "is_dir(Name) -> boolean()")
               "filelib:fold_files/5"
               ("http://www.erlang.org/doc/man/filelib.html#fold_files-5" "fold_files(Dir, RegExp, Recursive, Fun, AccIn) -> AccOut")
               "filelib:file_size/1"
               ("http://www.erlang.org/doc/man/filelib.html#file_size-1" "file_size(Filename) -> integer() >= 0")
               "filelib:ensure_dir/1"
               ("http://www.erlang.org/doc/man/filelib.html#ensure_dir-1" "ensure_dir(Name) -> ok | {error, Reason}")
               "filelib:filename_all()"
               ("http://www.erlang.org/doc/man/filelib.html#type-filename_all" "filename_all() = file:name_all()")
               "filelib:dirname_all()"
               ("http://www.erlang.org/doc/man/filelib.html#type-dirname_all" "dirname_all() = filename_all()")
               "filelib:dirname()"
               ("http://www.erlang.org/doc/man/filelib.html#type-dirname" "dirname() = filename()")
               "filelib:filename()"
               ("http://www.erlang.org/doc/man/filelib.html#type-filename" "filename() = file:name()")
               "filename:split/1"
               ("http://www.erlang.org/doc/man/filename.html#split-1" "split(Filename) -> Components")
               "filename:rootname/2"
               ("http://www.erlang.org/doc/man/filename.html#rootname-2" "rootname(Filename, Ext) -> file:filename_all()")
               "filename:rootname/1"
               ("http://www.erlang.org/doc/man/filename.html#rootname-1" "rootname(Filename) -> file:filename_all()")
               "filename:pathtype/1"
               ("http://www.erlang.org/doc/man/filename.html#pathtype-1" "pathtype(Path) -> absolute | relative | volumerelative")
               "filename:nativename/1"
               ("http://www.erlang.org/doc/man/filename.html#nativename-1" "nativename(Path) -> file:filename_all()")
               "filename:join/2"
               ("http://www.erlang.org/doc/man/filename.html#join-2" "join(Name1, Name2) -> file:filename_all()")
               "filename:join/1"
               ("http://www.erlang.org/doc/man/filename.html#join-1" "join(Components) -> file:filename_all()")
               "filename:flatten/1"
               ("http://www.erlang.org/doc/man/filename.html#flatten-1" "flatten(Filename) -> file:filename_all()")
               "filename:find_src/2"
               ("http://www.erlang.org/doc/man/filename.html#find_src-2" "find_src(Beam, Rules) -> {SourceFile, Options} | {error, {ErrorReason, Module}}")
               "filename:find_src/1"
               ("http://www.erlang.org/doc/man/filename.html#find_src-1" "find_src(Beam) -> {SourceFile, Options} | {error, {ErrorReason, Module}}")
               "filename:extension/1"
               ("http://www.erlang.org/doc/man/filename.html#extension-1" "extension(Filename) -> file:filename_all()")
               "filename:dirname/1"
               ("http://www.erlang.org/doc/man/filename.html#dirname-1" "dirname(Filename) -> file:filename_all()")
               "filename:basename/2"
               ("http://www.erlang.org/doc/man/filename.html#basename-2" "basename(Filename, Ext) -> file:filename_all()")
               "filename:basename/1"
               ("http://www.erlang.org/doc/man/filename.html#basename-1" "basename(Filename) -> file:filename_all()")
               "filename:basedir/3"
               ("http://www.erlang.org/doc/man/filename.html#basedir-3" "basedir(Type, Application, Opts) -> file:filename_all()")
               "filename:basedir/2"
               ("http://www.erlang.org/doc/man/filename.html#basedir-2" "basedir(Type, Application) -> file:filename_all()")
               "filename:absname_join/2"
               ("http://www.erlang.org/doc/man/filename.html#absname_join-2" "absname_join(Dir, Filename) -> file:filename_all()")
               "filename:absname/2"
               ("http://www.erlang.org/doc/man/filename.html#absname-2" "absname(Filename, Dir) -> file:filename_all()")
               "filename:absname/1"
               ("http://www.erlang.org/doc/man/filename.html#absname-1" "absname(Filename) -> file:filename_all()")
               "filename:basedir_type()"
               ("http://www.erlang.org/doc/man/filename.html#type-basedir_type" "basedir_type() = user_cache | user_config | user_data | user_log | site_config | site_data")
               "fixed:unary_minus/1"
               ("http://www.erlang.org/doc/man/fixed.html#unary_minus-1" "unary_minus(Fixed) -> Result")
               "fixed:divide/2"
               ("http://www.erlang.org/doc/man/fixed.html#divide-2" "divide(Fixed1, Fixed2) -> Result")
               "fixed:multiply/2"
               ("http://www.erlang.org/doc/man/fixed.html#multiply-2" "multiply(Fixed1, Fixed2) -> Result")
               "fixed:subtract/2"
               ("http://www.erlang.org/doc/man/fixed.html#subtract-2" "subtract(Fixed1, Fixed2) -> Result")
               "fixed:add/2"
               ("http://www.erlang.org/doc/man/fixed.html#add-2" "add(Fixed1, Fixed2) -> Result")
               "fixed:get_typecode/1"
               ("http://www.erlang.org/doc/man/fixed.html#get_typecode-1" "get_typecode(Fixed) -> Result")
               "fixed:create/3"
               ("http://www.erlang.org/doc/man/fixed.html#create-3" "create(Digits, Scale, Value) -> Result")
               "fprof:analyse/1"
               ("http://www.erlang.org/doc/man/fprof.html#analyse-1" "analyse(OptionName) -> ok | {error, Reason} |  {'EXIT', ServerPid, Reason}")
               "fprof:analyse/2"
               ("http://www.erlang.org/doc/man/fprof.html#analyse-2" "analyse(OptionName, OptionValue) -> ok | {error, Reason} |  {'EXIT', ServerPid, Reason}")
               "fprof:analyse/0"
               ("http://www.erlang.org/doc/man/fprof.html#analyse-0" "analyse() -> ok | {error, Reason} |  {'EXIT', ServerPid, Reason}")
               "fprof:profile/1"
               ("http://www.erlang.org/doc/man/fprof.html#profile-1" "profile(OptionName) -> ok | {error, Reason} |  {'EXIT', ServerPid, Reason}")
               "fprof:profile/2"
               ("http://www.erlang.org/doc/man/fprof.html#profile-2" "profile(OptionName, OptionValue) -> ok | {error, Reason} |  {'EXIT', ServerPid, Reason}")
               "fprof:profile/0"
               ("http://www.erlang.org/doc/man/fprof.html#profile-0" "profile() -> ok | {error, Reason} |  {'EXIT', ServerPid, Reason}")
               "fprof:trace/1"
               ("http://www.erlang.org/doc/man/fprof.html#trace-1" "trace(verbose) -> ok | {error, Reason} |  {'EXIT', ServerPid, Reason}")
               "fprof:trace/2"
               ("http://www.erlang.org/doc/man/fprof.html#trace-2" "trace(start, Filename) -> ok | {error, Reason} |  {'EXIT', ServerPid, Reason}")
               "fprof:apply/4"
               ("http://www.erlang.org/doc/man/fprof.html#apply-4" "apply(Module, Function, Args, OptionList) -> term()")
               "fprof:apply/3"
               ("http://www.erlang.org/doc/man/fprof.html#apply-3" "apply(Module, Function, Args) -> term()")
               "fprof:apply/2"
               ("http://www.erlang.org/doc/man/fprof.html#apply-2" "apply(Func, Args) -> term()")
               "fprof:stop/1"
               ("http://www.erlang.org/doc/man/fprof.html#stop-1" "stop(Reason) -> ok")
               "fprof:stop/0"
               ("http://www.erlang.org/doc/man/fprof.html#stop-0" "stop() -> ok")
               "fprof:start/0"
               ("http://www.erlang.org/doc/man/fprof.html#start-0" "start() -> {ok, Pid} | {error, {already_started, Pid}}")
               "ftp:quote/2"
               ("http://www.erlang.org/doc/man/ftp.html#quote-2" "quote(Pid, Command) -> [FTPLine]")
               "ftp:user/4"
               ("http://www.erlang.org/doc/man/ftp.html#user-4" "user(Pid, User, Password, Account) -> ok | {error, Reason}")
               "ftp:user/3"
               ("http://www.erlang.org/doc/man/ftp.html#user-3" "user(Pid, User, Password) -> ok | {error, Reason}")
               "ftp:"
               ("http://www.erlang.org/doc/man/ftp.html#type-2" "type(Pid, Type) -> ok | {error, Reason}")
               "ftp:type/2"
               ("http://www.erlang.org/doc/man/ftp.html#type-2" "type(Pid, Type) -> ok | {error, Reason}")
               "ftp:send_chunk_end/1"
               ("http://www.erlang.org/doc/man/ftp.html#send_chunk_end-1" "send_chunk_end(Pid) -> ok | {error, Reason}")
               "ftp:send_chunk_start/2"
               ("http://www.erlang.org/doc/man/ftp.html#send_chunk_start-2" "send_chunk_start(Pid, File) -> ok | {error, Reason}")
               "ftp:send_chunk/2"
               ("http://www.erlang.org/doc/man/ftp.html#send_chunk-2" "send_chunk(Pid, Bin) -> ok | {error, Reason}")
               "ftp:send_bin/3"
               ("http://www.erlang.org/doc/man/ftp.html#send_bin-3" "send_bin(Pid, Bin, RemoteFile) -> ok | {error, Reason}")
               "ftp:send/3"
               ("http://www.erlang.org/doc/man/ftp.html#send-3" "send(Pid, LocalFile, RemoteFile) -> ok | {error, Reason}")
               "ftp:send/2"
               ("http://www.erlang.org/doc/man/ftp.html#send-2" "send(Pid, LocalFile) ->")
               "ftp:rmdir/2"
               ("http://www.erlang.org/doc/man/ftp.html#rmdir-2" "rmdir(Pid, Dir) -> ok | {error, Reason}")
               "ftp:rename/3"
               ("http://www.erlang.org/doc/man/ftp.html#rename-3" "rename(Pid, Old, New) -> ok | {error, Reason}")
               "ftp:recv_chunk/1"
               ("http://www.erlang.org/doc/man/ftp.html#recv_chunk-1" "recv_chunk(Pid) -> ok | {ok, Bin} | {error, Reason}")
               "ftp:recv_chunk_start/2"
               ("http://www.erlang.org/doc/man/ftp.html#recv_chunk_start-2" "recv_chunk_start(Pid, RemoteFile) -> ok | {error, Reason}")
               "ftp:recv_bin/2"
               ("http://www.erlang.org/doc/man/ftp.html#recv_bin-2" "recv_bin(Pid, RemoteFile) -> {ok, Bin} | {error, Reason}")
               "ftp:recv/3"
               ("http://www.erlang.org/doc/man/ftp.html#recv-3" "recv(Pid, RemoteFile, LocalFile) -> ok | {error, Reason}")
               "ftp:recv/2"
               ("http://www.erlang.org/doc/man/ftp.html#recv-2" "recv(Pid, RemoteFile) ->")
               "ftp:pwd/1"
               ("http://www.erlang.org/doc/man/ftp.html#pwd-1" "pwd(Pid) -> {ok, Dir} | {error, Reason}")
               "ftp:open/2"
               ("http://www.erlang.org/doc/man/ftp.html#open-2" "open(Host, Opts) -> {ok, Pid} | {error, Reason}")
               "ftp:open/1"
               ("http://www.erlang.org/doc/man/ftp.html#open-1" "open(Host) -> {ok, Pid} | {error, Reason}")
               "ftp:nlist/2"
               ("http://www.erlang.org/doc/man/ftp.html#nlist-2" "nlist(Pid, Pathname) -> {ok, Listing} | {error, Reason}")
               "ftp:nlist/1"
               ("http://www.erlang.org/doc/man/ftp.html#nlist-1" "nlist(Pid) ->")
               "ftp:mkdir/2"
               ("http://www.erlang.org/doc/man/ftp.html#mkdir-2" "mkdir(Pid, Dir) -> ok | {error, Reason}")
               "ftp:ls/2"
               ("http://www.erlang.org/doc/man/ftp.html#ls-2" "ls(Pid, Pathname) -> {ok, Listing} | {error, Reason}")
               "ftp:ls/1"
               ("http://www.erlang.org/doc/man/ftp.html#ls-1" "ls(Pid) ->")
               "ftp:lpwd/1"
               ("http://www.erlang.org/doc/man/ftp.html#lpwd-1" "lpwd(Pid) -> {ok, Dir}")
               "ftp:lcd/2"
               ("http://www.erlang.org/doc/man/ftp.html#lcd-2" "lcd(Pid, Dir) -> ok | {error, Reason}")
               "ftp:formaterror/1"
               ("http://www.erlang.org/doc/man/ftp.html#formaterror-1" "formaterror(Tag) -> string()")
               "ftp:delete/2"
               ("http://www.erlang.org/doc/man/ftp.html#delete-2" "delete(Pid, File) -> ok | {error, Reason}")
               "ftp:close/1"
               ("http://www.erlang.org/doc/man/ftp.html#close-1" "close(Pid) -> ok")
               "ftp:cd/2"
               ("http://www.erlang.org/doc/man/ftp.html#cd-2" "cd(Pid, Dir) -> ok | {error, Reason}")
               "ftp:append_chunk_end/1"
               ("http://www.erlang.org/doc/man/ftp.html#append_chunk_end-1" "append_chunk_end(Pid) -> ok | {error, Reason}")
               "ftp:append_chunk_start/2"
               ("http://www.erlang.org/doc/man/ftp.html#append_chunk_start-2" "append_chunk_start(Pid, File) -> ok | {error, Reason}")
               "ftp:append_chunk/2"
               ("http://www.erlang.org/doc/man/ftp.html#append_chunk-2" "append_chunk(Pid, Bin) -> ok | {error, Reason}")
               "ftp:append_bin/3"
               ("http://www.erlang.org/doc/man/ftp.html#append_bin-3" "append_bin(Pid, Bin, RemoteFile) -> ok | {error, Reason}")
               "ftp:append/3"
               ("http://www.erlang.org/doc/man/ftp.html#append-3" "append(Pid, LocalFile, RemoteFile) -> ok | {error, Reason}")
               "ftp:append/2"
               ("http://www.erlang.org/doc/man/ftp.html#append-2" "append(Pid, LocalFile) ->")
               "ftp:account/2"
               ("http://www.erlang.org/doc/man/ftp.html#account-2" "account(Pid, Account) -> ok | {error, Reason}")
               "gb_sets:union/2"
               ("http://www.erlang.org/doc/man/gb_sets.html#union-2" "union(Set1, Set2) -> Set3")
               "gb_sets:union/1"
               ("http://www.erlang.org/doc/man/gb_sets.html#union-1" "union(SetList) -> Set")
               "gb_sets:to_list/1"
               ("http://www.erlang.org/doc/man/gb_sets.html#to_list-1" "to_list(Set) -> List")
               "gb_sets:take_smallest/1"
               ("http://www.erlang.org/doc/man/gb_sets.html#take_smallest-1" "take_smallest(Set1) -> {Element, Set2}")
               "gb_sets:take_largest/1"
               ("http://www.erlang.org/doc/man/gb_sets.html#take_largest-1" "take_largest(Set1) -> {Element, Set2}")
               "gb_sets:subtract/2"
               ("http://www.erlang.org/doc/man/gb_sets.html#subtract-2" "subtract(Set1, Set2) -> Set3")
               "gb_sets:smallest/1"
               ("http://www.erlang.org/doc/man/gb_sets.html#smallest-1" "smallest(Set) -> Element")
               "gb_sets:size/1"
               ("http://www.erlang.org/doc/man/gb_sets.html#size-1" "size(Set) -> integer() >= 0")
               "gb_sets:singleton/1"
               ("http://www.erlang.org/doc/man/gb_sets.html#singleton-1" "singleton(Element) -> set (Element)")
               "gb_sets:next/1"
               ("http://www.erlang.org/doc/man/gb_sets.html#next-1" "next(Iter1) -> {Element, Iter2} | none")
               "gb_sets:new/0"
               ("http://www.erlang.org/doc/man/gb_sets.html#new-0" "new() -> Set")
               "gb_sets:largest/1"
               ("http://www.erlang.org/doc/man/gb_sets.html#largest-1" "largest(Set) -> Element")
               "gb_sets:iterator_from/2"
               ("http://www.erlang.org/doc/man/gb_sets.html#iterator_from-2" "iterator_from(Element, Set) -> Iter")
               "gb_sets:iterator/1"
               ("http://www.erlang.org/doc/man/gb_sets.html#iterator-1" "iterator(Set) -> Iter")
               "gb_sets:is_subset/2"
               ("http://www.erlang.org/doc/man/gb_sets.html#is_subset-2" "is_subset(Set1, Set2) -> boolean()")
               "gb_sets:is_set/1"
               ("http://www.erlang.org/doc/man/gb_sets.html#is_set-1" "is_set(Term) -> boolean()")
               "gb_sets:is_member/2"
               ("http://www.erlang.org/doc/man/gb_sets.html#is_member-2" "is_member(Element, Set) -> boolean()")
               "gb_sets:is_empty/1"
               ("http://www.erlang.org/doc/man/gb_sets.html#is_empty-1" "is_empty(Set) -> boolean()")
               "gb_sets:is_element/2"
               ("http://www.erlang.org/doc/man/gb_sets.html#is_element-2" "is_element(Element, Set) -> boolean()")
               "gb_sets:is_disjoint/2"
               ("http://www.erlang.org/doc/man/gb_sets.html#is_disjoint-2" "is_disjoint(Set1, Set2) -> boolean()")
               "gb_sets:intersection/2"
               ("http://www.erlang.org/doc/man/gb_sets.html#intersection-2" "intersection(Set1, Set2) -> Set3")
               "gb_sets:intersection/1"
               ("http://www.erlang.org/doc/man/gb_sets.html#intersection-1" "intersection(SetList) -> Set")
               "gb_sets:insert/2"
               ("http://www.erlang.org/doc/man/gb_sets.html#insert-2" "insert(Element, Set1) -> Set2")
               "gb_sets:from_ordset/1"
               ("http://www.erlang.org/doc/man/gb_sets.html#from_ordset-1" "from_ordset(List) -> Set")
               "gb_sets:from_list/1"
               ("http://www.erlang.org/doc/man/gb_sets.html#from_list-1" "from_list(List) -> Set")
               "gb_sets:fold/3"
               ("http://www.erlang.org/doc/man/gb_sets.html#fold-3" "fold(Function, Acc0, Set) -> Acc1")
               "gb_sets:filter/2"
               ("http://www.erlang.org/doc/man/gb_sets.html#filter-2" "filter(Pred, Set1) -> Set2")
               "gb_sets:empty/0"
               ("http://www.erlang.org/doc/man/gb_sets.html#empty-0" "empty() -> Set")
               "gb_sets:difference/2"
               ("http://www.erlang.org/doc/man/gb_sets.html#difference-2" "difference(Set1, Set2) -> Set3")
               "gb_sets:delete_any/2"
               ("http://www.erlang.org/doc/man/gb_sets.html#delete_any-2" "delete_any(Element, Set1) -> Set2")
               "gb_sets:delete/2"
               ("http://www.erlang.org/doc/man/gb_sets.html#delete-2" "delete(Element, Set1) -> Set2")
               "gb_sets:del_element/2"
               ("http://www.erlang.org/doc/man/gb_sets.html#del_element-2" "del_element(Element, Set1) -> Set2")
               "gb_sets:balance/1"
               ("http://www.erlang.org/doc/man/gb_sets.html#balance-1" "balance(Set1) -> Set2")
               "gb_sets:add_element/2"
               ("http://www.erlang.org/doc/man/gb_sets.html#add_element-2" "add_element(Element, Set1) -> Set2")
               "gb_sets:add/2"
               ("http://www.erlang.org/doc/man/gb_sets.html#add-2" "add(Element, Set1) -> Set2")
               "gb_sets:iter()"
               ("http://www.erlang.org/doc/man/gb_sets.html#type-iter" "iter() = iter (term())")
               "gb_sets:iter(Element)"
               ("http://www.erlang.org/doc/man/gb_sets.html#type-iter" "iter(Element)")
               "gb_sets:set()"
               ("http://www.erlang.org/doc/man/gb_sets.html#type-set" "set() = set (term())")
               "gb_sets:set(Element)"
               ("http://www.erlang.org/doc/man/gb_sets.html#type-set" "set(Element)")
               "gb_trees:values/1"
               ("http://www.erlang.org/doc/man/gb_trees.html#values-1" "values(Tree) -> [Value]")
               "gb_trees:update/3"
               ("http://www.erlang.org/doc/man/gb_trees.html#update-3" "update(Key, Value, Tree1) -> Tree2")
               "gb_trees:to_list/1"
               ("http://www.erlang.org/doc/man/gb_trees.html#to_list-1" "to_list(Tree) -> [{Key, Value}]")
               "gb_trees:take_smallest/1"
               ("http://www.erlang.org/doc/man/gb_trees.html#take_smallest-1" "take_smallest(Tree1) -> {Key, Value, Tree2}")
               "gb_trees:take_largest/1"
               ("http://www.erlang.org/doc/man/gb_trees.html#take_largest-1" "take_largest(Tree1) -> {Key, Value, Tree2}")
               "gb_trees:smallest/1"
               ("http://www.erlang.org/doc/man/gb_trees.html#smallest-1" "smallest(Tree) -> {Key, Value}")
               "gb_trees:size/1"
               ("http://www.erlang.org/doc/man/gb_trees.html#size-1" "size(Tree) -> integer() >= 0")
               "gb_trees:next/1"
               ("http://www.erlang.org/doc/man/gb_trees.html#next-1" "next(Iter1) -> none | {Key, Value, Iter2}")
               "gb_trees:map/2"
               ("http://www.erlang.org/doc/man/gb_trees.html#map-2" "map(Function, Tree1) -> Tree2")
               "gb_trees:lookup/2"
               ("http://www.erlang.org/doc/man/gb_trees.html#lookup-2" "lookup(Key, Tree) -> none | {value, Value}")
               "gb_trees:largest/1"
               ("http://www.erlang.org/doc/man/gb_trees.html#largest-1" "largest(Tree) -> {Key, Value}")
               "gb_trees:keys/1"
               ("http://www.erlang.org/doc/man/gb_trees.html#keys-1" "keys(Tree) -> [Key]")
               "gb_trees:iterator_from/2"
               ("http://www.erlang.org/doc/man/gb_trees.html#iterator_from-2" "iterator_from(Key, Tree) -> Iter")
               "gb_trees:iterator/1"
               ("http://www.erlang.org/doc/man/gb_trees.html#iterator-1" "iterator(Tree) -> Iter")
               "gb_trees:is_empty/1"
               ("http://www.erlang.org/doc/man/gb_trees.html#is_empty-1" "is_empty(Tree) -> boolean()")
               "gb_trees:is_defined/2"
               ("http://www.erlang.org/doc/man/gb_trees.html#is_defined-2" "is_defined(Key, Tree) -> boolean()")
               "gb_trees:insert/3"
               ("http://www.erlang.org/doc/man/gb_trees.html#insert-3" "insert(Key, Value, Tree1) -> Tree2")
               "gb_trees:get/2"
               ("http://www.erlang.org/doc/man/gb_trees.html#get-2" "get(Key, Tree) -> Value")
               "gb_trees:from_orddict/1"
               ("http://www.erlang.org/doc/man/gb_trees.html#from_orddict-1" "from_orddict(List) -> Tree")
               "gb_trees:enter/3"
               ("http://www.erlang.org/doc/man/gb_trees.html#enter-3" "enter(Key, Value, Tree1) -> Tree2")
               "gb_trees:empty/0"
               ("http://www.erlang.org/doc/man/gb_trees.html#empty-0" "empty() -> tree()")
               "gb_trees:delete_any/2"
               ("http://www.erlang.org/doc/man/gb_trees.html#delete_any-2" "delete_any(Key, Tree1) -> Tree2")
               "gb_trees:delete/2"
               ("http://www.erlang.org/doc/man/gb_trees.html#delete-2" "delete(Key, Tree1) -> Tree2")
               "gb_trees:balance/1"
               ("http://www.erlang.org/doc/man/gb_trees.html#balance-1" "balance(Tree1) -> Tree2")
               "gb_trees:iter()"
               ("http://www.erlang.org/doc/man/gb_trees.html#type-iter" "iter() = iter (term(), term())")
               "gb_trees:iter(Key, Value)"
               ("http://www.erlang.org/doc/man/gb_trees.html#type-iter" "iter(Key, Value)")
               "gb_trees:tree()"
               ("http://www.erlang.org/doc/man/gb_trees.html#type-tree" "tree() = tree (term(), term())")
               "gb_trees:tree(Key, Value)"
               ("http://www.erlang.org/doc/man/gb_trees.html#type-tree" "tree(Key, Value)")
               "gen_event:Module:terminate/2"
               ("http://www.erlang.org/doc/man/gen_event.html#Module:terminate-2" "Module:terminate(Arg, State) -> term()")
               "gen_event:Module:init/1"
               ("http://www.erlang.org/doc/man/gen_event.html#Module:init-1" "Module:init(InitArgs) -> {ok,State} | {ok,State,hibernate} | {error,Reason}")
               "gen_event:Module:handle_info/2"
               ("http://www.erlang.org/doc/man/gen_event.html#Module:handle_info-2" "Module:handle_info(Info, State) -> Result")
               "gen_event:Module:handle_event/2"
               ("http://www.erlang.org/doc/man/gen_event.html#Module:handle_event-2" "Module:handle_event(Event, State) -> Result")
               "gen_event:Module:handle_call/2"
               ("http://www.erlang.org/doc/man/gen_event.html#Module:handle_call-2" "Module:handle_call(Request, State) -> Result")
               "gen_event:Module:format_status/2"
               ("http://www.erlang.org/doc/man/gen_event.html#Module:format_status-2" "Module:format_status(Opt, [PDict, State]) -> Status")
               "gen_event:Module:code_change/3"
               ("http://www.erlang.org/doc/man/gen_event.html#Module:code_change-3" "Module:code_change(OldVsn, State, Extra) -> {ok, NewState}")
               "gen_event:which_handlers/1"
               ("http://www.erlang.org/doc/man/gen_event.html#which_handlers-1" "which_handlers(EventMgrRef) -> [Handler]")
               "gen_event:swap_sup_handler/3"
               ("http://www.erlang.org/doc/man/gen_event.html#swap_sup_handler-3" "swap_sup_handler(EventMgrRef, {Handler1,Args1}, {Handler2,Args2}) -> Result")
               "gen_event:swap_handler/3"
               ("http://www.erlang.org/doc/man/gen_event.html#swap_handler-3" "swap_handler(EventMgrRef, {Handler1,Args1}, {Handler2,Args2}) -> Result")
               "gen_event:stop/3"
               ("http://www.erlang.org/doc/man/gen_event.html#stop-3" "stop(EventMgrRef, Reason, Timeout) -> ok")
               "gen_event:stop/1"
               ("http://www.erlang.org/doc/man/gen_event.html#stop-1" "stop(EventMgrRef) -> ok")
               "gen_event:start_link/1"
               ("http://www.erlang.org/doc/man/gen_event.html#start_link-1" "start_link(EventMgrName) -> Result")
               "gen_event:start_link/0"
               ("http://www.erlang.org/doc/man/gen_event.html#start_link-0" "start_link() -> Result")
               "gen_event:start/1"
               ("http://www.erlang.org/doc/man/gen_event.html#start-1" "start(EventMgrName) -> Result")
               "gen_event:start/0"
               ("http://www.erlang.org/doc/man/gen_event.html#start-0" "start() -> Result")
               "gen_event:sync_notify/2"
               ("http://www.erlang.org/doc/man/gen_event.html#sync_notify-2" "sync_notify(EventMgrRef, Event) -> ok")
               "gen_event:notify/2"
               ("http://www.erlang.org/doc/man/gen_event.html#notify-2" "notify(EventMgrRef, Event) -> ok")
               "gen_event:delete_handler/3"
               ("http://www.erlang.org/doc/man/gen_event.html#delete_handler-3" "delete_handler(EventMgrRef, Handler, Args) -> Result")
               "gen_event:call/4"
               ("http://www.erlang.org/doc/man/gen_event.html#call-4" "call(EventMgrRef, Handler, Request, Timeout) -> Result")
               "gen_event:call/3"
               ("http://www.erlang.org/doc/man/gen_event.html#call-3" "call(EventMgrRef, Handler, Request) -> Result")
               "gen_event:add_sup_handler/3"
               ("http://www.erlang.org/doc/man/gen_event.html#add_sup_handler-3" "add_sup_handler(EventMgrRef, Handler, Args) -> Result")
               "gen_event:add_handler/3"
               ("http://www.erlang.org/doc/man/gen_event.html#add_handler-3" "add_handler(EventMgrRef, Handler, Args) -> Result")
               "gen_event:del_handler_ret()"
               ("http://www.erlang.org/doc/man/gen_event.html#type-del_handler_ret" "del_handler_ret() = ok | term() | {'EXIT', term()}")
               "gen_event:add_handler_ret()"
               ("http://www.erlang.org/doc/man/gen_event.html#type-add_handler_ret" "add_handler_ret() = ok | term() | {'EXIT', term()}")
               "gen_event:handler_args()"
               ("http://www.erlang.org/doc/man/gen_event.html#type-handler_args" "handler_args() = term()")
               "gen_event:handler()"
               ("http://www.erlang.org/doc/man/gen_event.html#type-handler" "handler() = atom() | {atom(), term()}")
               "gen_fsm:Module:terminate/3"
               ("http://www.erlang.org/doc/man/gen_fsm.html#Module:terminate-3" "Module:terminate(Reason, StateName, StateData)")
               "gen_fsm:Module:StateName/3"
               ("http://www.erlang.org/doc/man/gen_fsm.html#Module:StateName-3" "Module:StateName(Event, From, StateData) -> Result")
               "gen_fsm:Module:StateName/2"
               ("http://www.erlang.org/doc/man/gen_fsm.html#Module:StateName-2" "Module:StateName(Event, StateData) -> Result")
               "gen_fsm:Module:init/1"
               ("http://www.erlang.org/doc/man/gen_fsm.html#Module:init-1" "Module:init(Args) -> Result")
               "gen_fsm:Module:handle_sync_event/4"
               ("http://www.erlang.org/doc/man/gen_fsm.html#Module:handle_sync_event-4" "Module:handle_sync_event(Event, From, StateName, StateData) -> Result")
               "gen_fsm:Module:handle_info/3"
               ("http://www.erlang.org/doc/man/gen_fsm.html#Module:handle_info-3" "Module:handle_info(Info, StateName, StateData) -> Result")
               "gen_fsm:Module:handle_event/3"
               ("http://www.erlang.org/doc/man/gen_fsm.html#Module:handle_event-3" "Module:handle_event(Event, StateName, StateData) -> Result")
               "gen_fsm:Module:format_status/2"
               ("http://www.erlang.org/doc/man/gen_fsm.html#Module:format_status-2" "Module:format_status(Opt, [PDict, StateData]) -> Status")
               "gen_fsm:Module:code_change/4"
               ("http://www.erlang.org/doc/man/gen_fsm.html#Module:code_change-4" "Module:code_change(OldVsn, StateName, StateData, Extra) -> {ok, NextStateName, NewStateData}")
               "gen_fsm:sync_send_event/3"
               ("http://www.erlang.org/doc/man/gen_fsm.html#sync_send_event-3" "sync_send_event(FsmRef, Event, Timeout) -> Reply")
               "gen_fsm:sync_send_event/2"
               ("http://www.erlang.org/doc/man/gen_fsm.html#sync_send_event-2" "sync_send_event(FsmRef, Event) -> Reply")
               "gen_fsm:sync_send_all_state_event/3"
               ("http://www.erlang.org/doc/man/gen_fsm.html#sync_send_all_state_event-3" "sync_send_all_state_event(FsmRef, Event, Timeout) -> Reply")
               "gen_fsm:sync_send_all_state_event/2"
               ("http://www.erlang.org/doc/man/gen_fsm.html#sync_send_all_state_event-2" "sync_send_all_state_event(FsmRef, Event) -> Reply")
               "gen_fsm:stop/3"
               ("http://www.erlang.org/doc/man/gen_fsm.html#stop-3" "stop(FsmRef, Reason, Timeout) -> ok")
               "gen_fsm:stop/1"
               ("http://www.erlang.org/doc/man/gen_fsm.html#stop-1" "stop(FsmRef) -> ok")
               "gen_fsm:start_timer/2"
               ("http://www.erlang.org/doc/man/gen_fsm.html#start_timer-2" "start_timer(Time, Msg) -> Ref")
               "gen_fsm:start_link/4"
               ("http://www.erlang.org/doc/man/gen_fsm.html#start_link-4" "start_link(FsmName, Module, Args, Options) -> Result")
               "gen_fsm:start_link/3"
               ("http://www.erlang.org/doc/man/gen_fsm.html#start_link-3" "start_link(Module, Args, Options) -> Result")
               "gen_fsm:start/4"
               ("http://www.erlang.org/doc/man/gen_fsm.html#start-4" "start(FsmName, Module, Args, Options) -> Result")
               "gen_fsm:start/3"
               ("http://www.erlang.org/doc/man/gen_fsm.html#start-3" "start(Module, Args, Options) -> Result")
               "gen_fsm:send_event_after/2"
               ("http://www.erlang.org/doc/man/gen_fsm.html#send_event_after-2" "send_event_after(Time, Event) -> Ref")
               "gen_fsm:send_event/2"
               ("http://www.erlang.org/doc/man/gen_fsm.html#send_event-2" "send_event(FsmRef, Event) -> ok")
               "gen_fsm:send_all_state_event/2"
               ("http://www.erlang.org/doc/man/gen_fsm.html#send_all_state_event-2" "send_all_state_event(FsmRef, Event) -> ok")
               "gen_fsm:reply/2"
               ("http://www.erlang.org/doc/man/gen_fsm.html#reply-2" "reply(Caller, Reply) -> Result")
               "gen_fsm:enter_loop/6"
               ("http://www.erlang.org/doc/man/gen_fsm.html#enter_loop-6" "enter_loop(Module, Options, StateName, StateData, FsmName, Timeout)")
               "gen_fsm:enter_loop/5"
               ("http://www.erlang.org/doc/man/gen_fsm.html#enter_loop-5" "enter_loop(Module, Options, StateName, StateData, FsmName)")
               "gen_fsm:enter_loop/4"
               ("http://www.erlang.org/doc/man/gen_fsm.html#enter_loop-4" "enter_loop(Module, Options, StateName, StateData)")
               "gen_fsm:cancel_timer/1"
               ("http://www.erlang.org/doc/man/gen_fsm.html#cancel_timer-1" "cancel_timer(Ref) -> RemainingTime | false")
               "gen_sctp:send/4"
               ("http://www.erlang.org/doc/man/gen_sctp.html#send-4" "send(Socket, Assoc, Stream, Data) -> ok | {error, Reason}")
               "gen_sctp:send/3"
               ("http://www.erlang.org/doc/man/gen_sctp.html#send-3" "send(Socket, SndRcvInfo, Data) -> ok | {error, Reason}")
               "gen_sctp:recv/2"
               ("http://www.erlang.org/doc/man/gen_sctp.html#recv-2" "recv(Socket, Timeout) -> {ok, {FromIP, FromPort, AncData, Data}} | {error, Reason}")
               "gen_sctp:recv/1"
               ("http://www.erlang.org/doc/man/gen_sctp.html#recv-1" "recv(Socket) -> {ok, {FromIP, FromPort, AncData, Data}} | {error, Reason}")
               "gen_sctp:peeloff/2"
               ("http://www.erlang.org/doc/man/gen_sctp.html#peeloff-2" "peeloff(Socket, Assoc) -> {ok, NewSocket} | {error, Reason}")
               "gen_sctp:open/2"
               ("http://www.erlang.org/doc/man/gen_sctp.html#open-2" "open(Port, Opts) -> {ok, Socket} | {error, inet:posix() }")
               "gen_sctp:open/1"
               ("http://www.erlang.org/doc/man/gen_sctp.html#open-1" "open(Port) -> {ok, Socket} | {error, inet:posix() }")
               "gen_sctp:open/0"
               ("http://www.erlang.org/doc/man/gen_sctp.html#open-0" "open() -> {ok, Socket} | {error, inet:posix() }")
               "gen_sctp:listen/2"
               ("http://www.erlang.org/doc/man/gen_sctp.html#listen-2" "listen(Socket, IsServer) -> ok | {error, Reason}")
               "gen_sctp:error_string/1"
               ("http://www.erlang.org/doc/man/gen_sctp.html#error_string-1" "error_string(ErrorNumber) -> ok | string() | unknown_error")
               "gen_sctp:eof/2"
               ("http://www.erlang.org/doc/man/gen_sctp.html#eof-2" "eof(Socket, Assoc) -> ok | {error, Reason}")
               "gen_sctp:controlling_process/2"
               ("http://www.erlang.org/doc/man/gen_sctp.html#controlling_process-2" "controlling_process(Socket, Pid) -> ok | {error, Reason}")
               "gen_sctp:connect_init/5"
               ("http://www.erlang.org/doc/man/gen_sctp.html#connect_init-5" "connect_init(Socket, Addr, Port, Opts, Timeout) -> ok | {error, inet:posix() }")
               "gen_sctp:connect_init/4"
               ("http://www.erlang.org/doc/man/gen_sctp.html#connect_init-4" "connect_init(Socket, Addr, Port, Opts) -> ok | {error, inet:posix() }")
               "gen_sctp:connect/5"
               ("http://www.erlang.org/doc/man/gen_sctp.html#connect-5" "connect(Socket, Addr, Port, Opts, Timeout) -> {ok, Assoc} | {error, inet:posix() }")
               "gen_sctp:connect/4"
               ("http://www.erlang.org/doc/man/gen_sctp.html#connect-4" "connect(Socket, Addr, Port, Opts) -> {ok, Assoc} | {error, inet:posix() }")
               "gen_sctp:close/1"
               ("http://www.erlang.org/doc/man/gen_sctp.html#close-1" "close(Socket) -> ok | {error, inet:posix() }")
               "gen_sctp:abort/2"
               ("http://www.erlang.org/doc/man/gen_sctp.html#abort-2" "abort(Socket, Assoc) -> ok | {error, inet:posix() }")
               "gen_sctp:"
               ("http://www.erlang.org/doc/man/gen_sctp.html#type-assoc_id" "assoc_id()")
               "gen_sctp:option_name()"
               ("http://www.erlang.org/doc/man/gen_sctp.html#type-option_name" "option_name() = active | buffer | dontroute | high_msgq_watermark | linger | low_msgq_watermark | mode | priority | recbuf | reuseaddr | ipv6_v6only | sctp_adaptation_layer | sctp_associnfo | sctp_autoclose | sctp_default_send_param | sctp_delayed_ack_time | sctp_disable_fragments | sctp_events | sctp_get_peer_addr_info | sctp_i_want_mapped_v4_addr | sctp_initmsg | sctp_maxseg | sctp_nodelay | sctp_peer_addr_params | sctp_primary_addr | sctp_rtoinfo | sctp_set_peer_primary_addr | sctp_status | sndbuf | tos")
               "gen_sctp:option()"
               ("http://www.erlang.org/doc/man/gen_sctp.html#type-option" "option() = {active, true | false | once | -32768..32767} | {buffer, integer() >= 0} | {dontroute, boolean()} | {high_msgq_watermark, integer() >= 1} | {linger, {boolean(), integer() >= 0}} | {low_msgq_watermark, integer() >= 1} | {mode, list | binary} | list | binary | {priority, integer() >= 0} | {recbuf, integer() >= 0} | {reuseaddr, boolean()} | {ipv6_v6only, boolean()} | {sctp_adaptation_layer, #sctp_setadaptation{}} | {sctp_associnfo, #sctp_assocparams{}} | {sctp_autoclose, integer() >= 0} | {sctp_default_send_param, #sctp_sndrcvinfo{}} | {sctp_delayed_ack_time, #sctp_assoc_value{}} | {sctp_disable_fragments, boolean()} | {sctp_events, #sctp_event_subscribe{}} | {sctp_get_peer_addr_info, #sctp_paddrinfo{}} | {sctp_i_want_mapped_v4_addr, boolean()} | {sctp_initmsg, #sctp_initmsg{}} | {sctp_maxseg, integer() >= 0} | {sctp_nodelay, boolean()} | {sctp_peer_addr_params, #sctp_paddrparams{}} | {sctp_primary_addr, #sctp_prim{}} | {sctp_rtoinfo, #sctp_rtoinfo{}} | {sctp_set_peer_primary_addr, #sctp_setpeerprim{}} | {sctp_status, #sctp_status{}} | {sndbuf, integer() >= 0} | {tos, integer() >= 0}")
               "gen_server:Module:terminate/2"
               ("http://www.erlang.org/doc/man/gen_server.html#Module:terminate-2" "Module:terminate(Reason, State)")
               "gen_server:Module:init/1"
               ("http://www.erlang.org/doc/man/gen_server.html#Module:init-1" "Module:init(Args) -> Result")
               "gen_server:Module:handle_info/2"
               ("http://www.erlang.org/doc/man/gen_server.html#Module:handle_info-2" "Module:handle_info(Info, State) -> Result")
               "gen_server:Module:handle_cast/2"
               ("http://www.erlang.org/doc/man/gen_server.html#Module:handle_cast-2" "Module:handle_cast(Request, State) -> Result")
               "gen_server:Module:handle_call/3"
               ("http://www.erlang.org/doc/man/gen_server.html#Module:handle_call-3" "Module:handle_call(Request, From, State) -> Result")
               "gen_server:Module:format_status/2"
               ("http://www.erlang.org/doc/man/gen_server.html#Module:format_status-2" "Module:format_status(Opt, [PDict, State]) -> Status")
               "gen_server:Module:code_change/3"
               ("http://www.erlang.org/doc/man/gen_server.html#Module:code_change-3" "Module:code_change(OldVsn, State, Extra) -> {ok, NewState} | {error, Reason}")
               "gen_server:stop/3"
               ("http://www.erlang.org/doc/man/gen_server.html#stop-3" "stop(ServerRef, Reason, Timeout) -> ok")
               "gen_server:stop/1"
               ("http://www.erlang.org/doc/man/gen_server.html#stop-1" "stop(ServerRef) -> ok")
               "gen_server:start_link/4"
               ("http://www.erlang.org/doc/man/gen_server.html#start_link-4" "start_link(ServerName, Module, Args, Options) -> Result")
               "gen_server:start_link/3"
               ("http://www.erlang.org/doc/man/gen_server.html#start_link-3" "start_link(Module, Args, Options) -> Result")
               "gen_server:start/4"
               ("http://www.erlang.org/doc/man/gen_server.html#start-4" "start(ServerName, Module, Args, Options) -> Result")
               "gen_server:start/3"
               ("http://www.erlang.org/doc/man/gen_server.html#start-3" "start(Module, Args, Options) -> Result")
               "gen_server:reply/2"
               ("http://www.erlang.org/doc/man/gen_server.html#reply-2" "reply(Client, Reply) -> Result")
               "gen_server:multi_call/4"
               ("http://www.erlang.org/doc/man/gen_server.html#multi_call-4" "multi_call(Nodes, Name, Request, Timeout) -> Result")
               "gen_server:multi_call/3"
               ("http://www.erlang.org/doc/man/gen_server.html#multi_call-3" "multi_call(Nodes, Name, Request) -> Result")
               "gen_server:multi_call/2"
               ("http://www.erlang.org/doc/man/gen_server.html#multi_call-2" "multi_call(Name, Request) -> Result")
               "gen_server:enter_loop/5"
               ("http://www.erlang.org/doc/man/gen_server.html#enter_loop-5" "enter_loop(Module, Options, State, ServerName, Timeout)")
               "gen_server:enter_loop/4"
               ("http://www.erlang.org/doc/man/gen_server.html#enter_loop-4" "enter_loop(Module, Options, State, ServerName)")
               "gen_server:enter_loop/3"
               ("http://www.erlang.org/doc/man/gen_server.html#enter_loop-3" "enter_loop(Module, Options, State)")
               "gen_server:cast/2"
               ("http://www.erlang.org/doc/man/gen_server.html#cast-2" "cast(ServerRef, Request) -> ok")
               "gen_server:call/3"
               ("http://www.erlang.org/doc/man/gen_server.html#call-3" "call(ServerRef, Request, Timeout) -> Reply")
               "gen_server:call/2"
               ("http://www.erlang.org/doc/man/gen_server.html#call-2" "call(ServerRef, Request) -> Reply")
               "gen_server:abcast/3"
               ("http://www.erlang.org/doc/man/gen_server.html#abcast-3" "abcast(Nodes, Name, Request) -> abcast")
               "gen_server:abcast/2"
               ("http://www.erlang.org/doc/man/gen_server.html#abcast-2" "abcast(Name, Request) -> abcast")
               "gen_statem:Module:terminate/3"
               ("http://www.erlang.org/doc/man/gen_statem.html#Module:terminate-3" "Module:terminate(Reason, State, Data) -> Ignored")
               "gen_statem:Module:handle_event/4"
               ("http://www.erlang.org/doc/man/gen_statem.html#Module:handle_event-4" "Module:handle_event(enter, OldState, State, Data) ->\n	StateEnterResult(State)")
               "gen_statem:Module:StateName/3"
               ("http://www.erlang.org/doc/man/gen_statem.html#Module:StateName-3" "Module:StateName(enter, OldState, Data) ->\n        StateEnterResult(StateName)")
               "gen_statem:Module:format_status/2"
               ("http://www.erlang.org/doc/man/gen_statem.html#Module:format_status-2" "Module:format_status(Opt, [PDict,State,Data]) ->\n        Status")
               "gen_statem:Module:init/1"
               ("http://www.erlang.org/doc/man/gen_statem.html#Module:init-1" "Module:init(Args) -> Result")
               "gen_statem:Module:code_change/4"
               ("http://www.erlang.org/doc/man/gen_statem.html#Module:code_change-4" "Module:code_change(OldVsn, OldState, OldData, Extra) ->\n        Result")
               "gen_statem:Module:callback_mode/0"
               ("http://www.erlang.org/doc/man/gen_statem.html#Module:callback_mode-0" "Module:callback_mode() -> CallbackMode")
               "gen_statem:stop/3"
               ("http://www.erlang.org/doc/man/gen_statem.html#stop-3" "stop(ServerRef :: server_ref() , Reason :: term(), Timeout :: timeout()) -> ok")
               "gen_statem:stop/1"
               ("http://www.erlang.org/doc/man/gen_statem.html#stop-1" "stop(ServerRef :: server_ref() ) -> ok")
               "gen_statem:start_link/4"
               ("http://www.erlang.org/doc/man/gen_statem.html#start_link-4" "start_link(ServerName :: server_name() , Module :: module(), Args :: term(), Opts :: [ start_opt() ]) ->  start_ret()")
               "gen_statem:start_link/3"
               ("http://www.erlang.org/doc/man/gen_statem.html#start_link-3" "start_link(Module :: module(), Args :: term(), Opts :: [ start_opt() ]) ->  start_ret()")
               "gen_statem:start/4"
               ("http://www.erlang.org/doc/man/gen_statem.html#start-4" "start(ServerName :: server_name() , Module :: module(), Args :: term(), Opts :: [ start_opt() ]) ->  start_ret()")
               "gen_statem:start/3"
               ("http://www.erlang.org/doc/man/gen_statem.html#start-3" "start(Module :: module(), Args :: term(), Opts :: [ start_opt() ]) ->  start_ret()")
               "gen_statem:reply/2"
               ("http://www.erlang.org/doc/man/gen_statem.html#reply-2" "reply(From :: from() , Reply :: term()) -> ok")
               "gen_statem:reply/1"
               ("http://www.erlang.org/doc/man/gen_statem.html#reply-1" "reply(Replies :: [ reply_action() ] | reply_action() ) -> ok")
               "gen_statem:enter_loop/6"
               ("http://www.erlang.org/doc/man/gen_statem.html#enter_loop-6" "enter_loop(Module :: module(), Opts :: [ debug_opt() ], State :: state() , Data :: data() , Server :: server_name() | pid(), Actions :: [ action() ] | action() ) -> no_return()")
               "gen_statem:enter_loop/5"
               ("http://www.erlang.org/doc/man/gen_statem.html#enter_loop-5" "enter_loop(Module :: module(), Opts :: [ debug_opt() ], State :: state() , Data :: data() , Server_or_Actions :: server_name() | pid() | [ action() ]) -> no_return()")
               "gen_statem:enter_loop/4"
               ("http://www.erlang.org/doc/man/gen_statem.html#enter_loop-4" "enter_loop(Module :: module(), Opts :: [ debug_opt() ], State :: state() , Data :: data() ) -> no_return()")
               "gen_statem:cast/2"
               ("http://www.erlang.org/doc/man/gen_statem.html#cast-2" "cast(ServerRef :: server_ref() , Msg :: term()) -> ok")
               "gen_statem:call/3"
               ("http://www.erlang.org/doc/man/gen_statem.html#call-3" "call(ServerRef :: server_ref() , Request :: term(), Timeout :: timeout() | {clean_timeout, T :: timeout()} | {dirty_timeout, T :: timeout()}) -> Reply :: term()")
               "gen_statem:call/2"
               ("http://www.erlang.org/doc/man/gen_statem.html#call-2" "call(ServerRef :: server_ref() , Request :: term()) -> Reply :: term()")
               "gen_statem:state_callback_result(ActionType)"
               ("http://www.erlang.org/doc/man/gen_statem.html#type-state_callback_result" "state_callback_result(ActionType) = {keep_state, NewData :: data() } | {keep_state, NewData :: data() , Actions :: [ActionType] | ActionType} | keep_state_and_data | {keep_state_and_data, Actions :: [ActionType] | ActionType} | stop | {stop, Reason :: term()} | {stop, Reason :: term(), NewData :: data() } | {stop_and_reply, Reason :: term(), Replies :: [ reply_action() ] | reply_action() } | {stop_and_reply, Reason :: term(), Replies :: [ reply_action() ] | reply_action() , NewData :: data() }")
               "gen_statem:event_handler_result(StateType)"
               ("http://www.erlang.org/doc/man/gen_statem.html#type-event_handler_result" "event_handler_result(StateType) = {next_state, NextState :: StateType, NewData :: data() } | {next_state, NextState :: StateType, NewData :: data() , Actions :: [ action() ] | action() } |  state_callback_result ( action() )")
               "gen_statem:state_enter_result(State)"
               ("http://www.erlang.org/doc/man/gen_statem.html#type-state_enter_result" "state_enter_result(State) = {next_state, State, NewData :: data() } | {next_state, State, NewData :: data() , Actions :: [ enter_action() ] | enter_action() } |  state_callback_result ( enter_action() )")
               "gen_statem:reply_action()"
               ("http://www.erlang.org/doc/man/gen_statem.html#type-reply_action" "reply_action() = {reply, From :: from() , Reply :: term()}")
               "gen_statem:enter_action()"
               ("http://www.erlang.org/doc/man/gen_statem.html#type-enter_action" "enter_action() = hibernate | {hibernate, Hibernate :: hibernate() } | (Timeout :: event_timeout() ) | {timeout, Time :: event_timeout() , EventContent :: term()} | {state_timeout, Time :: state_timeout() , EventContent :: term()} |  reply_action()")
               "gen_statem:action()"
               ("http://www.erlang.org/doc/man/gen_statem.html#type-action" "action() = postpone | {postpone, Postpone :: postpone() } | {next_event, EventType :: event_type() , EventContent :: term()} |  enter_action()")
               "gen_statem:state_timeout()"
               ("http://www.erlang.org/doc/man/gen_statem.html#type-state_timeout" "state_timeout() = timeout()")
               "gen_statem:event_timeout()"
               ("http://www.erlang.org/doc/man/gen_statem.html#type-event_timeout" "event_timeout() = timeout()")
               "gen_statem:hibernate()"
               ("http://www.erlang.org/doc/man/gen_statem.html#type-hibernate" "hibernate() = boolean()")
               "gen_statem:postpone()"
               ("http://www.erlang.org/doc/man/gen_statem.html#type-postpone" "postpone() = boolean()")
               "gen_statem:transition_option()"
               ("http://www.erlang.org/doc/man/gen_statem.html#type-transition_option" "transition_option() =  postpone() | hibernate() | event_timeout() | state_timeout()")
               "gen_statem:state_enter()"
               ("http://www.erlang.org/doc/man/gen_statem.html#type-state_enter" "state_enter() = state_enter")
               "gen_statem:callback_mode()"
               ("http://www.erlang.org/doc/man/gen_statem.html#type-callback_mode" "callback_mode() = state_functions | handle_event_function")
               "gen_statem:callback_mode_result()"
               ("http://www.erlang.org/doc/man/gen_statem.html#type-callback_mode_result" "callback_mode_result() =  callback_mode() | [ callback_mode() | state_enter() ]")
               "gen_statem:event_type()"
               ("http://www.erlang.org/doc/man/gen_statem.html#type-event_type" "event_type() = {call, From :: from() } | cast | info | timeout | state_timeout | internal")
               "gen_statem:data()"
               ("http://www.erlang.org/doc/man/gen_statem.html#type-data" "data() = term()")
               "gen_statem:state_name()"
               ("http://www.erlang.org/doc/man/gen_statem.html#type-state_name" "state_name() = atom()")
               "gen_statem:state()"
               ("http://www.erlang.org/doc/man/gen_statem.html#type-state" "state() = state_name() | term()")
               "gen_statem:from()"
               ("http://www.erlang.org/doc/man/gen_statem.html#type-from" "from() = {To :: pid(), Tag :: term()}")
               "gen_statem:start_ret()"
               ("http://www.erlang.org/doc/man/gen_statem.html#type-start_ret" "start_ret() = {ok, pid()} | ignore | {error, term()}")
               "gen_statem:start_opt()"
               ("http://www.erlang.org/doc/man/gen_statem.html#type-start_opt" "start_opt() =  debug_opt() | {timeout, Time :: timeout()} | {spawn_opt, [ proc_lib:spawn_option() ]}")
               "gen_statem:debug_opt()"
               ("http://www.erlang.org/doc/man/gen_statem.html#type-debug_opt" "debug_opt() = {debug, Dbgs :: [trace | log | statistics | debug | {logfile, string()}]}")
               "gen_statem:server_ref()"
               ("http://www.erlang.org/doc/man/gen_statem.html#type-server_ref" "server_ref() = pid() | (LocalName :: atom()) | {Name :: atom(), Node :: atom()} | {global, GlobalName :: term()} | {via, RegMod :: module(), ViaName :: term()}")
               "gen_statem:server_name()"
               ("http://www.erlang.org/doc/man/gen_statem.html#type-server_name" "server_name() = {global, GlobalName :: term()} | {via, RegMod :: module(), Name :: term()} | {local, atom()}")
               "gen_tcp:shutdown/2"
               ("http://www.erlang.org/doc/man/gen_tcp.html#shutdown-2" "shutdown(Socket, How) -> ok | {error, Reason}")
               "gen_tcp:send/2"
               ("http://www.erlang.org/doc/man/gen_tcp.html#send-2" "send(Socket, Packet) -> ok | {error, Reason}")
               "gen_tcp:recv/3"
               ("http://www.erlang.org/doc/man/gen_tcp.html#recv-3" "recv(Socket, Length, Timeout) -> {ok, Packet} | {error, Reason}")
               "gen_tcp:recv/2"
               ("http://www.erlang.org/doc/man/gen_tcp.html#recv-2" "recv(Socket, Length) -> {ok, Packet} | {error, Reason}")
               "gen_tcp:listen/2"
               ("http://www.erlang.org/doc/man/gen_tcp.html#listen-2" "listen(Port, Options) -> {ok, ListenSocket} | {error, Reason}")
               "gen_tcp:controlling_process/2"
               ("http://www.erlang.org/doc/man/gen_tcp.html#controlling_process-2" "controlling_process(Socket, Pid) -> ok | {error, Reason}")
               "gen_tcp:connect/4"
               ("http://www.erlang.org/doc/man/gen_tcp.html#connect-4" "connect(Address, Port, Options, Timeout) -> {ok, Socket} | {error, Reason}")
               "gen_tcp:connect/3"
               ("http://www.erlang.org/doc/man/gen_tcp.html#connect-3" "connect(Address, Port, Options) -> {ok, Socket} | {error, Reason}")
               "gen_tcp:close/1"
               ("http://www.erlang.org/doc/man/gen_tcp.html#close-1" "close(Socket) -> ok")
               "gen_tcp:accept/2"
               ("http://www.erlang.org/doc/man/gen_tcp.html#accept-2" "accept(ListenSocket, Timeout) -> {ok, Socket} | {error, Reason}")
               "gen_tcp:accept/1"
               ("http://www.erlang.org/doc/man/gen_tcp.html#accept-1" "accept(ListenSocket) -> {ok, Socket} | {error, Reason}")
               "gen_tcp:"
               ("http://www.erlang.org/doc/man/gen_tcp.html#type-socket" "socket()")
               "gen_tcp:listen_option()"
               ("http://www.erlang.org/doc/man/gen_tcp.html#type-listen_option" "listen_option() = {ip, inet:socket_address() } | {fd, Fd :: integer() >= 0} | {ifaddr, inet:socket_address() } |  inet:address_family() | {port, inet:port_number() } | {backlog, B :: integer() >= 0} | {tcp_module, module()} |  option()")
               "gen_tcp:connect_option()"
               ("http://www.erlang.org/doc/man/gen_tcp.html#type-connect_option" "connect_option() = {ip, inet:socket_address() } | {fd, Fd :: integer() >= 0} | {ifaddr, inet:socket_address() } |  inet:address_family() | {port, inet:port_number() } | {tcp_module, module()} |  option()")
               "gen_tcp:option_name()"
               ("http://www.erlang.org/doc/man/gen_tcp.html#type-option_name" "option_name() = active | buffer | delay_send | deliver | dontroute | exit_on_close | header | high_msgq_watermark | high_watermark | keepalive | linger | low_msgq_watermark | low_watermark | mode | nodelay | packet | packet_size | priority | {raw, Protocol :: integer() >= 0, OptionNum :: integer() >= 0, ValueSpec :: (ValueSize :: integer() >= 0) | (ValueBin :: binary())} | recbuf | reuseaddr | send_timeout | send_timeout_close | show_econnreset | sndbuf | tos | ipv6_v6only")
               "gen_tcp:option()"
               ("http://www.erlang.org/doc/man/gen_tcp.html#type-option" "option() = {active, true | false | once | -32768..32767} | {buffer, integer() >= 0} | {delay_send, boolean()} | {deliver, port | term} | {dontroute, boolean()} | {exit_on_close, boolean()} | {header, integer() >= 0} | {high_msgq_watermark, integer() >= 1} | {high_watermark, integer() >= 0} | {keepalive, boolean()} | {linger, {boolean(), integer() >= 0}} | {low_msgq_watermark, integer() >= 1} | {low_watermark, integer() >= 0} | {mode, list | binary} | list | binary | {nodelay, boolean()} | {packet, 0 | 1 | 2 | 4 | raw | sunrm | asn1 | cdr | fcgi | line | tpkt | http | httph | http_bin | httph_bin} | {packet_size, integer() >= 0} | {priority, integer() >= 0} | {raw, Protocol :: integer() >= 0, OptionNum :: integer() >= 0, ValueBin :: binary()} | {recbuf, integer() >= 0} | {reuseaddr, boolean()} | {send_timeout, integer() >= 0 | infinity} | {send_timeout_close, boolean()} | {show_econnreset, boolean()} | {sndbuf, integer() >= 0} | {tos, integer() >= 0} | {ipv6_v6only, boolean()}")
               "gen_udp:send/4"
               ("http://www.erlang.org/doc/man/gen_udp.html#send-4" "send(Socket, Address, Port, Packet) -> ok | {error, Reason}")
               "gen_udp:recv/3"
               ("http://www.erlang.org/doc/man/gen_udp.html#recv-3" "recv(Socket, Length, Timeout) -> {ok, {Address, Port, Packet}} | {error, Reason}")
               "gen_udp:recv/2"
               ("http://www.erlang.org/doc/man/gen_udp.html#recv-2" "recv(Socket, Length) -> {ok, {Address, Port, Packet}} | {error, Reason}")
               "gen_udp:open/2"
               ("http://www.erlang.org/doc/man/gen_udp.html#open-2" "open(Port, Opts) -> {ok, Socket} | {error, Reason}")
               "gen_udp:open/1"
               ("http://www.erlang.org/doc/man/gen_udp.html#open-1" "open(Port) -> {ok, Socket} | {error, Reason}")
               "gen_udp:controlling_process/2"
               ("http://www.erlang.org/doc/man/gen_udp.html#controlling_process-2" "controlling_process(Socket, Pid) -> ok | {error, Reason}")
               "gen_udp:close/1"
               ("http://www.erlang.org/doc/man/gen_udp.html#close-1" "close(Socket) -> ok")
               "gen_udp:"
               ("http://www.erlang.org/doc/man/gen_udp.html#type-socket" "socket()")
               "gen_udp:option_name()"
               ("http://www.erlang.org/doc/man/gen_udp.html#type-option_name" "option_name() = active | broadcast | buffer | deliver | dontroute | header | high_msgq_watermark | low_msgq_watermark | mode | multicast_if | multicast_loop | multicast_ttl | priority | {raw, Protocol :: integer() >= 0, OptionNum :: integer() >= 0, ValueSpec :: (ValueSize :: integer() >= 0) | (ValueBin :: binary())} | read_packets | recbuf | reuseaddr | sndbuf | tos | ipv6_v6only")
               "gen_udp:option()"
               ("http://www.erlang.org/doc/man/gen_udp.html#type-option" "option() = {active, true | false | once | -32768..32767} | {add_membership, { inet:ip_address() , inet:ip_address() }} | {broadcast, boolean()} | {buffer, integer() >= 0} | {deliver, port | term} | {dontroute, boolean()} | {drop_membership, { inet:ip_address() , inet:ip_address() }} | {header, integer() >= 0} | {high_msgq_watermark, integer() >= 1} | {low_msgq_watermark, integer() >= 1} | {mode, list | binary} | list | binary | {multicast_if, inet:ip_address() } | {multicast_loop, boolean()} | {multicast_ttl, integer() >= 0} | {priority, integer() >= 0} | {raw, Protocol :: integer() >= 0, OptionNum :: integer() >= 0, ValueBin :: binary()} | {read_packets, integer() >= 0} | {recbuf, integer() >= 0} | {reuseaddr, boolean()} | {sndbuf, integer() >= 0} | {tos, integer() >= 0} | {ipv6_v6only, boolean()}")
               "gl:stencilClearTagEXT/2"
               ("http://www.erlang.org/doc/man/gl.html#stencilClearTagEXT-2" "stencilClearTagEXT(StencilTagBits, StencilClearTag) -> ok")
               "gl:depthBoundsEXT/2"
               ("http://www.erlang.org/doc/man/gl.html#depthBoundsEXT-2" "depthBoundsEXT(Zmin, Zmax) -> ok")
               "gl:texStorage3D/6"
               ("http://www.erlang.org/doc/man/gl.html#texStorage3D-6" "texStorage3D(Target, Levels, Internalformat, Width, Height, Depth) -> ok")
               "gl:texStorage2D/5"
               ("http://www.erlang.org/doc/man/gl.html#texStorage2D-5" "texStorage2D(Target, Levels, Internalformat, Width, Height) -> ok")
               "gl:texStorage1D/4"
               ("http://www.erlang.org/doc/man/gl.html#texStorage1D-4" "texStorage1D(Target, Levels, Internalformat, Width) -> ok")
               "gl:memoryBarrier/1"
               ("http://www.erlang.org/doc/man/gl.html#memoryBarrier-1" "memoryBarrier(Barriers) -> ok")
               "gl:bindImageTexture/7"
               ("http://www.erlang.org/doc/man/gl.html#bindImageTexture-7" "bindImageTexture(Unit, Texture, Level, Layered, Layer, Access, Format) -> ok")
               "gl:getInternalformativ/4"
               ("http://www.erlang.org/doc/man/gl.html#getInternalformativ-4" "getInternalformativ(Target, Internalformat, Pname, BufSize) -> [integer()]")
               "gl:drawTransformFeedbackStreamInstanced/4"
               ("http://www.erlang.org/doc/man/gl.html#drawTransformFeedbackStreamInstanced-4" "drawTransformFeedbackStreamInstanced(Mode, Id, Stream, Primcount) -> ok")
               "gl:drawTransformFeedbackInstanced/3"
               ("http://www.erlang.org/doc/man/gl.html#drawTransformFeedbackInstanced-3" "drawTransformFeedbackInstanced(Mode, Id, Primcount) -> ok")
               "gl:drawElementsInstancedBaseVertexBaseInstance/7"
               ("http://www.erlang.org/doc/man/gl.html#drawElementsInstancedBaseVertexBaseInstance-7" "drawElementsInstancedBaseVertexBaseInstance(Mode, Count, Type, Indices, Primcount, Basevertex, Baseinstance) -> ok")
               "gl:drawElementsInstancedBaseInstance/6"
               ("http://www.erlang.org/doc/man/gl.html#drawElementsInstancedBaseInstance-6" "drawElementsInstancedBaseInstance(Mode, Count, Type, Indices, Primcount, Baseinstance) -> ok")
               "gl:drawArraysInstancedBaseInstance/5"
               ("http://www.erlang.org/doc/man/gl.html#drawArraysInstancedBaseInstance-5" "drawArraysInstancedBaseInstance(Mode, First, Count, Primcount, Baseinstance) -> ok")
               "gl:getGraphicsResetStatusARB/0"
               ("http://www.erlang.org/doc/man/gl.html#getGraphicsResetStatusARB-0" "getGraphicsResetStatusARB() -> enum()")
               "gl:getDebugMessageLogARB/2"
               ("http://www.erlang.org/doc/man/gl.html#getDebugMessageLogARB-2" "getDebugMessageLogARB(Count, Bufsize) -> {integer(), Sources::[ enum() ], Types::[ enum() ], Ids::[integer()], Severities::[ enum() ], MessageLog::[string()]}")
               "gl:debugMessageInsertARB/5"
               ("http://www.erlang.org/doc/man/gl.html#debugMessageInsertARB-5" "debugMessageInsertARB(Source, Type, Id, Severity, Buf) -> ok")
               "gl:debugMessageControlARB/5"
               ("http://www.erlang.org/doc/man/gl.html#debugMessageControlARB-5" "debugMessageControlARB(Source, Type, Severity, Ids, Enabled) -> ok")
               "gl:getDoublei_v/2"
               ("http://www.erlang.org/doc/man/gl.html#getDoublei_v-2" "getDoublei_v(Target, Index) -> [float()]")
               "gl:getFloati_v/2"
               ("http://www.erlang.org/doc/man/gl.html#getFloati_v-2" "getFloati_v(Target, Index) -> [float()]")
               "gl:depthRangeIndexed/3"
               ("http://www.erlang.org/doc/man/gl.html#depthRangeIndexed-3" "depthRangeIndexed(Index, N, F) -> ok")
               "gl:depthRangeArrayv/2"
               ("http://www.erlang.org/doc/man/gl.html#depthRangeArrayv-2" "depthRangeArrayv(First, V) -> ok")
               "gl:scissorIndexedv/2"
               ("http://www.erlang.org/doc/man/gl.html#scissorIndexedv-2" "scissorIndexedv(Index, V) -> ok")
               "gl:scissorIndexed/5"
               ("http://www.erlang.org/doc/man/gl.html#scissorIndexed-5" "scissorIndexed(Index, Left, Bottom, Width, Height) -> ok")
               "gl:scissorArrayv/2"
               ("http://www.erlang.org/doc/man/gl.html#scissorArrayv-2" "scissorArrayv(First, V) -> ok")
               "gl:viewportIndexedfv/2"
               ("http://www.erlang.org/doc/man/gl.html#viewportIndexedfv-2" "viewportIndexedfv(Index, V) -> ok")
               "gl:viewportIndexedf/5"
               ("http://www.erlang.org/doc/man/gl.html#viewportIndexedf-5" "viewportIndexedf(Index, X, Y, W, H) -> ok")
               "gl:viewportArrayv/2"
               ("http://www.erlang.org/doc/man/gl.html#viewportArrayv-2" "viewportArrayv(First, V) -> ok")
               "gl:getVertexAttribLdv/2"
               ("http://www.erlang.org/doc/man/gl.html#getVertexAttribLdv-2" "getVertexAttribLdv(Index, Pname) -> {float(), float(), float(), float()}")
               "gl:vertexAttribLPointer/5"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttribLPointer-5" "vertexAttribLPointer(Index, Size, Type, Stride, Pointer) -> ok")
               "gl:vertexAttribL4dv/2"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttribL4dv-2" "vertexAttribL4dv(Index::integer(), V) -> ok")
               "gl:vertexAttribL3dv/2"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttribL3dv-2" "vertexAttribL3dv(Index::integer(), V) -> ok")
               "gl:vertexAttribL2dv/2"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttribL2dv-2" "vertexAttribL2dv(Index::integer(), V) -> ok")
               "gl:vertexAttribL1dv/2"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttribL1dv-2" "vertexAttribL1dv(Index::integer(), V) -> ok")
               "gl:vertexAttribL4d/5"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttribL4d-5" "vertexAttribL4d(Index, X, Y, Z, W) -> ok")
               "gl:vertexAttribL3d/4"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttribL3d-4" "vertexAttribL3d(Index, X, Y, Z) -> ok")
               "gl:vertexAttribL2d/3"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttribL2d-3" "vertexAttribL2d(Index, X, Y) -> ok")
               "gl:vertexAttribL1d/2"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttribL1d-2" "vertexAttribL1d(Index, X) -> ok")
               "gl:getProgramPipelineInfoLog/2"
               ("http://www.erlang.org/doc/man/gl.html#getProgramPipelineInfoLog-2" "getProgramPipelineInfoLog(Pipeline, BufSize) -> string()")
               "gl:validateProgramPipeline/1"
               ("http://www.erlang.org/doc/man/gl.html#validateProgramPipeline-1" "validateProgramPipeline(Pipeline) -> ok")
               "gl:programUniformMatrix4x3dv/4"
               ("http://www.erlang.org/doc/man/gl.html#programUniformMatrix4x3dv-4" "programUniformMatrix4x3dv(Program, Location, Transpose, Value) -> ok")
               "gl:programUniformMatrix3x4dv/4"
               ("http://www.erlang.org/doc/man/gl.html#programUniformMatrix3x4dv-4" "programUniformMatrix3x4dv(Program, Location, Transpose, Value) -> ok")
               "gl:programUniformMatrix4x2dv/4"
               ("http://www.erlang.org/doc/man/gl.html#programUniformMatrix4x2dv-4" "programUniformMatrix4x2dv(Program, Location, Transpose, Value) -> ok")
               "gl:programUniformMatrix2x4dv/4"
               ("http://www.erlang.org/doc/man/gl.html#programUniformMatrix2x4dv-4" "programUniformMatrix2x4dv(Program, Location, Transpose, Value) -> ok")
               "gl:programUniformMatrix3x2dv/4"
               ("http://www.erlang.org/doc/man/gl.html#programUniformMatrix3x2dv-4" "programUniformMatrix3x2dv(Program, Location, Transpose, Value) -> ok")
               "gl:programUniformMatrix2x3dv/4"
               ("http://www.erlang.org/doc/man/gl.html#programUniformMatrix2x3dv-4" "programUniformMatrix2x3dv(Program, Location, Transpose, Value) -> ok")
               "gl:programUniformMatrix4x3fv/4"
               ("http://www.erlang.org/doc/man/gl.html#programUniformMatrix4x3fv-4" "programUniformMatrix4x3fv(Program, Location, Transpose, Value) -> ok")
               "gl:programUniformMatrix3x4fv/4"
               ("http://www.erlang.org/doc/man/gl.html#programUniformMatrix3x4fv-4" "programUniformMatrix3x4fv(Program, Location, Transpose, Value) -> ok")
               "gl:programUniformMatrix4x2fv/4"
               ("http://www.erlang.org/doc/man/gl.html#programUniformMatrix4x2fv-4" "programUniformMatrix4x2fv(Program, Location, Transpose, Value) -> ok")
               "gl:programUniformMatrix2x4fv/4"
               ("http://www.erlang.org/doc/man/gl.html#programUniformMatrix2x4fv-4" "programUniformMatrix2x4fv(Program, Location, Transpose, Value) -> ok")
               "gl:programUniformMatrix3x2fv/4"
               ("http://www.erlang.org/doc/man/gl.html#programUniformMatrix3x2fv-4" "programUniformMatrix3x2fv(Program, Location, Transpose, Value) -> ok")
               "gl:programUniformMatrix2x3fv/4"
               ("http://www.erlang.org/doc/man/gl.html#programUniformMatrix2x3fv-4" "programUniformMatrix2x3fv(Program, Location, Transpose, Value) -> ok")
               "gl:programUniformMatrix4dv/4"
               ("http://www.erlang.org/doc/man/gl.html#programUniformMatrix4dv-4" "programUniformMatrix4dv(Program, Location, Transpose, Value) -> ok")
               "gl:programUniformMatrix3dv/4"
               ("http://www.erlang.org/doc/man/gl.html#programUniformMatrix3dv-4" "programUniformMatrix3dv(Program, Location, Transpose, Value) -> ok")
               "gl:programUniformMatrix2dv/4"
               ("http://www.erlang.org/doc/man/gl.html#programUniformMatrix2dv-4" "programUniformMatrix2dv(Program, Location, Transpose, Value) -> ok")
               "gl:programUniformMatrix4fv/4"
               ("http://www.erlang.org/doc/man/gl.html#programUniformMatrix4fv-4" "programUniformMatrix4fv(Program, Location, Transpose, Value) -> ok")
               "gl:programUniformMatrix3fv/4"
               ("http://www.erlang.org/doc/man/gl.html#programUniformMatrix3fv-4" "programUniformMatrix3fv(Program, Location, Transpose, Value) -> ok")
               "gl:programUniformMatrix2fv/4"
               ("http://www.erlang.org/doc/man/gl.html#programUniformMatrix2fv-4" "programUniformMatrix2fv(Program, Location, Transpose, Value) -> ok")
               "gl:programUniform4uiv/3"
               ("http://www.erlang.org/doc/man/gl.html#programUniform4uiv-3" "programUniform4uiv(Program, Location, Value) -> ok")
               "gl:programUniform4ui/6"
               ("http://www.erlang.org/doc/man/gl.html#programUniform4ui-6" "programUniform4ui(Program, Location, V0, V1, V2, V3) -> ok")
               "gl:programUniform4dv/3"
               ("http://www.erlang.org/doc/man/gl.html#programUniform4dv-3" "programUniform4dv(Program, Location, Value) -> ok")
               "gl:programUniform4d/6"
               ("http://www.erlang.org/doc/man/gl.html#programUniform4d-6" "programUniform4d(Program, Location, V0, V1, V2, V3) -> ok")
               "gl:programUniform4fv/3"
               ("http://www.erlang.org/doc/man/gl.html#programUniform4fv-3" "programUniform4fv(Program, Location, Value) -> ok")
               "gl:programUniform4f/6"
               ("http://www.erlang.org/doc/man/gl.html#programUniform4f-6" "programUniform4f(Program, Location, V0, V1, V2, V3) -> ok")
               "gl:programUniform4iv/3"
               ("http://www.erlang.org/doc/man/gl.html#programUniform4iv-3" "programUniform4iv(Program, Location, Value) -> ok")
               "gl:programUniform4i/6"
               ("http://www.erlang.org/doc/man/gl.html#programUniform4i-6" "programUniform4i(Program, Location, V0, V1, V2, V3) -> ok")
               "gl:programUniform3uiv/3"
               ("http://www.erlang.org/doc/man/gl.html#programUniform3uiv-3" "programUniform3uiv(Program, Location, Value) -> ok")
               "gl:programUniform3ui/5"
               ("http://www.erlang.org/doc/man/gl.html#programUniform3ui-5" "programUniform3ui(Program, Location, V0, V1, V2) -> ok")
               "gl:programUniform3dv/3"
               ("http://www.erlang.org/doc/man/gl.html#programUniform3dv-3" "programUniform3dv(Program, Location, Value) -> ok")
               "gl:programUniform3d/5"
               ("http://www.erlang.org/doc/man/gl.html#programUniform3d-5" "programUniform3d(Program, Location, V0, V1, V2) -> ok")
               "gl:programUniform3fv/3"
               ("http://www.erlang.org/doc/man/gl.html#programUniform3fv-3" "programUniform3fv(Program, Location, Value) -> ok")
               "gl:programUniform3f/5"
               ("http://www.erlang.org/doc/man/gl.html#programUniform3f-5" "programUniform3f(Program, Location, V0, V1, V2) -> ok")
               "gl:programUniform3iv/3"
               ("http://www.erlang.org/doc/man/gl.html#programUniform3iv-3" "programUniform3iv(Program, Location, Value) -> ok")
               "gl:programUniform3i/5"
               ("http://www.erlang.org/doc/man/gl.html#programUniform3i-5" "programUniform3i(Program, Location, V0, V1, V2) -> ok")
               "gl:programUniform2uiv/3"
               ("http://www.erlang.org/doc/man/gl.html#programUniform2uiv-3" "programUniform2uiv(Program, Location, Value) -> ok")
               "gl:programUniform2ui/4"
               ("http://www.erlang.org/doc/man/gl.html#programUniform2ui-4" "programUniform2ui(Program, Location, V0, V1) -> ok")
               "gl:programUniform2dv/3"
               ("http://www.erlang.org/doc/man/gl.html#programUniform2dv-3" "programUniform2dv(Program, Location, Value) -> ok")
               "gl:programUniform2d/4"
               ("http://www.erlang.org/doc/man/gl.html#programUniform2d-4" "programUniform2d(Program, Location, V0, V1) -> ok")
               "gl:programUniform2fv/3"
               ("http://www.erlang.org/doc/man/gl.html#programUniform2fv-3" "programUniform2fv(Program, Location, Value) -> ok")
               "gl:programUniform2f/4"
               ("http://www.erlang.org/doc/man/gl.html#programUniform2f-4" "programUniform2f(Program, Location, V0, V1) -> ok")
               "gl:programUniform2iv/3"
               ("http://www.erlang.org/doc/man/gl.html#programUniform2iv-3" "programUniform2iv(Program, Location, Value) -> ok")
               "gl:programUniform2i/4"
               ("http://www.erlang.org/doc/man/gl.html#programUniform2i-4" "programUniform2i(Program, Location, V0, V1) -> ok")
               "gl:programUniform1uiv/3"
               ("http://www.erlang.org/doc/man/gl.html#programUniform1uiv-3" "programUniform1uiv(Program, Location, Value) -> ok")
               "gl:programUniform1ui/3"
               ("http://www.erlang.org/doc/man/gl.html#programUniform1ui-3" "programUniform1ui(Program, Location, V0) -> ok")
               "gl:programUniform1dv/3"
               ("http://www.erlang.org/doc/man/gl.html#programUniform1dv-3" "programUniform1dv(Program, Location, Value) -> ok")
               "gl:programUniform1d/3"
               ("http://www.erlang.org/doc/man/gl.html#programUniform1d-3" "programUniform1d(Program, Location, V0) -> ok")
               "gl:programUniform1fv/3"
               ("http://www.erlang.org/doc/man/gl.html#programUniform1fv-3" "programUniform1fv(Program, Location, Value) -> ok")
               "gl:programUniform1f/3"
               ("http://www.erlang.org/doc/man/gl.html#programUniform1f-3" "programUniform1f(Program, Location, V0) -> ok")
               "gl:programUniform1iv/3"
               ("http://www.erlang.org/doc/man/gl.html#programUniform1iv-3" "programUniform1iv(Program, Location, Value) -> ok")
               "gl:programUniform1i/3"
               ("http://www.erlang.org/doc/man/gl.html#programUniform1i-3" "programUniform1i(Program, Location, V0) -> ok")
               "gl:getProgramPipelineiv/2"
               ("http://www.erlang.org/doc/man/gl.html#getProgramPipelineiv-2" "getProgramPipelineiv(Pipeline, Pname) -> integer()")
               "gl:isProgramPipeline/1"
               ("http://www.erlang.org/doc/man/gl.html#isProgramPipeline-1" "isProgramPipeline(Pipeline) -> 0 | 1")
               "gl:genProgramPipelines/1"
               ("http://www.erlang.org/doc/man/gl.html#genProgramPipelines-1" "genProgramPipelines(N) -> [integer()]")
               "gl:deleteProgramPipelines/1"
               ("http://www.erlang.org/doc/man/gl.html#deleteProgramPipelines-1" "deleteProgramPipelines(Pipelines) -> ok")
               "gl:bindProgramPipeline/1"
               ("http://www.erlang.org/doc/man/gl.html#bindProgramPipeline-1" "bindProgramPipeline(Pipeline) -> ok")
               "gl:createShaderProgramv/2"
               ("http://www.erlang.org/doc/man/gl.html#createShaderProgramv-2" "createShaderProgramv(Type, Strings) -> integer()")
               "gl:activeShaderProgram/2"
               ("http://www.erlang.org/doc/man/gl.html#activeShaderProgram-2" "activeShaderProgram(Pipeline, Program) -> ok")
               "gl:useProgramStages/3"
               ("http://www.erlang.org/doc/man/gl.html#useProgramStages-3" "useProgramStages(Pipeline, Stages, Program) -> ok")
               "gl:programParameteri/3"
               ("http://www.erlang.org/doc/man/gl.html#programParameteri-3" "programParameteri(Program, Pname, Value) -> ok")
               "gl:programBinary/3"
               ("http://www.erlang.org/doc/man/gl.html#programBinary-3" "programBinary(Program, BinaryFormat, Binary) -> ok")
               "gl:getProgramBinary/2"
               ("http://www.erlang.org/doc/man/gl.html#getProgramBinary-2" "getProgramBinary(Program, BufSize) -> {BinaryFormat:: enum() , Binary::binary()}")
               "gl:clearDepthf/1"
               ("http://www.erlang.org/doc/man/gl.html#clearDepthf-1" "clearDepthf(D) -> ok")
               "gl:depthRangef/2"
               ("http://www.erlang.org/doc/man/gl.html#depthRangef-2" "depthRangef(N, F) -> ok")
               "gl:getShaderPrecisionFormat/2"
               ("http://www.erlang.org/doc/man/gl.html#getShaderPrecisionFormat-2" "getShaderPrecisionFormat(Shadertype, Precisiontype) -> {Range::{integer(), integer()}, Precision::integer()}")
               "gl:shaderBinary/3"
               ("http://www.erlang.org/doc/man/gl.html#shaderBinary-3" "shaderBinary(Shaders, Binaryformat, Binary) -> ok")
               "gl:releaseShaderCompiler/0"
               ("http://www.erlang.org/doc/man/gl.html#releaseShaderCompiler-0" "releaseShaderCompiler() -> ok")
               "gl:getQueryIndexediv/3"
               ("http://www.erlang.org/doc/man/gl.html#getQueryIndexediv-3" "getQueryIndexediv(Target, Index, Pname) -> integer()")
               "gl:endQueryIndexed/2"
               ("http://www.erlang.org/doc/man/gl.html#endQueryIndexed-2" "endQueryIndexed(Target, Index) -> ok")
               "gl:beginQueryIndexed/3"
               ("http://www.erlang.org/doc/man/gl.html#beginQueryIndexed-3" "beginQueryIndexed(Target, Index, Id) -> ok")
               "gl:drawTransformFeedbackStream/3"
               ("http://www.erlang.org/doc/man/gl.html#drawTransformFeedbackStream-3" "drawTransformFeedbackStream(Mode, Id, Stream) -> ok")
               "gl:drawTransformFeedback/2"
               ("http://www.erlang.org/doc/man/gl.html#drawTransformFeedback-2" "drawTransformFeedback(Mode, Id) -> ok")
               "gl:resumeTransformFeedback/0"
               ("http://www.erlang.org/doc/man/gl.html#resumeTransformFeedback-0" "resumeTransformFeedback() -> ok")
               "gl:pauseTransformFeedback/0"
               ("http://www.erlang.org/doc/man/gl.html#pauseTransformFeedback-0" "pauseTransformFeedback() -> ok")
               "gl:isTransformFeedback/1"
               ("http://www.erlang.org/doc/man/gl.html#isTransformFeedback-1" "isTransformFeedback(Id) -> 0 | 1")
               "gl:genTransformFeedbacks/1"
               ("http://www.erlang.org/doc/man/gl.html#genTransformFeedbacks-1" "genTransformFeedbacks(N) -> [integer()]")
               "gl:deleteTransformFeedbacks/1"
               ("http://www.erlang.org/doc/man/gl.html#deleteTransformFeedbacks-1" "deleteTransformFeedbacks(Ids) -> ok")
               "gl:bindTransformFeedback/2"
               ("http://www.erlang.org/doc/man/gl.html#bindTransformFeedback-2" "bindTransformFeedback(Target, Id) -> ok")
               "gl:patchParameterfv/2"
               ("http://www.erlang.org/doc/man/gl.html#patchParameterfv-2" "patchParameterfv(Pname, Values) -> ok")
               "gl:patchParameteri/2"
               ("http://www.erlang.org/doc/man/gl.html#patchParameteri-2" "patchParameteri(Pname, Value) -> ok")
               "gl:getProgramStageiv/3"
               ("http://www.erlang.org/doc/man/gl.html#getProgramStageiv-3" "getProgramStageiv(Program, Shadertype, Pname) -> integer()")
               "gl:getUniformSubroutineuiv/2"
               ("http://www.erlang.org/doc/man/gl.html#getUniformSubroutineuiv-2" "getUniformSubroutineuiv(Shadertype, Location) -> {integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer()}")
               "gl:uniformSubroutinesuiv/2"
               ("http://www.erlang.org/doc/man/gl.html#uniformSubroutinesuiv-2" "uniformSubroutinesuiv(Shadertype, Indices) -> ok")
               "gl:getActiveSubroutineName/4"
               ("http://www.erlang.org/doc/man/gl.html#getActiveSubroutineName-4" "getActiveSubroutineName(Program, Shadertype, Index, Bufsize) -> string()")
               "gl:getActiveSubroutineUniformName/4"
               ("http://www.erlang.org/doc/man/gl.html#getActiveSubroutineUniformName-4" "getActiveSubroutineUniformName(Program, Shadertype, Index, Bufsize) -> string()")
               "gl:getSubroutineIndex/3"
               ("http://www.erlang.org/doc/man/gl.html#getSubroutineIndex-3" "getSubroutineIndex(Program, Shadertype, Name) -> integer()")
               "gl:getSubroutineUniformLocation/3"
               ("http://www.erlang.org/doc/man/gl.html#getSubroutineUniformLocation-3" "getSubroutineUniformLocation(Program, Shadertype, Name) -> integer()")
               "gl:getUniformdv/2"
               ("http://www.erlang.org/doc/man/gl.html#getUniformdv-2" "getUniformdv(Program, Location) -> matrix()")
               "gl:uniformMatrix4x3dv/3"
               ("http://www.erlang.org/doc/man/gl.html#uniformMatrix4x3dv-3" "uniformMatrix4x3dv(Location, Transpose, Value) -> ok")
               "gl:uniformMatrix4x2dv/3"
               ("http://www.erlang.org/doc/man/gl.html#uniformMatrix4x2dv-3" "uniformMatrix4x2dv(Location, Transpose, Value) -> ok")
               "gl:uniformMatrix3x4dv/3"
               ("http://www.erlang.org/doc/man/gl.html#uniformMatrix3x4dv-3" "uniformMatrix3x4dv(Location, Transpose, Value) -> ok")
               "gl:uniformMatrix3x2dv/3"
               ("http://www.erlang.org/doc/man/gl.html#uniformMatrix3x2dv-3" "uniformMatrix3x2dv(Location, Transpose, Value) -> ok")
               "gl:uniformMatrix2x4dv/3"
               ("http://www.erlang.org/doc/man/gl.html#uniformMatrix2x4dv-3" "uniformMatrix2x4dv(Location, Transpose, Value) -> ok")
               "gl:uniformMatrix2x3dv/3"
               ("http://www.erlang.org/doc/man/gl.html#uniformMatrix2x3dv-3" "uniformMatrix2x3dv(Location, Transpose, Value) -> ok")
               "gl:uniformMatrix4dv/3"
               ("http://www.erlang.org/doc/man/gl.html#uniformMatrix4dv-3" "uniformMatrix4dv(Location, Transpose, Value) -> ok")
               "gl:uniformMatrix3dv/3"
               ("http://www.erlang.org/doc/man/gl.html#uniformMatrix3dv-3" "uniformMatrix3dv(Location, Transpose, Value) -> ok")
               "gl:uniformMatrix2dv/3"
               ("http://www.erlang.org/doc/man/gl.html#uniformMatrix2dv-3" "uniformMatrix2dv(Location, Transpose, Value) -> ok")
               "gl:uniform4dv/2"
               ("http://www.erlang.org/doc/man/gl.html#uniform4dv-2" "uniform4dv(Location, Value) -> ok")
               "gl:uniform3dv/2"
               ("http://www.erlang.org/doc/man/gl.html#uniform3dv-2" "uniform3dv(Location, Value) -> ok")
               "gl:uniform2dv/2"
               ("http://www.erlang.org/doc/man/gl.html#uniform2dv-2" "uniform2dv(Location, Value) -> ok")
               "gl:uniform1dv/2"
               ("http://www.erlang.org/doc/man/gl.html#uniform1dv-2" "uniform1dv(Location, Value) -> ok")
               "gl:uniform4d/5"
               ("http://www.erlang.org/doc/man/gl.html#uniform4d-5" "uniform4d(Location, X, Y, Z, W) -> ok")
               "gl:uniform3d/4"
               ("http://www.erlang.org/doc/man/gl.html#uniform3d-4" "uniform3d(Location, X, Y, Z) -> ok")
               "gl:uniform2d/3"
               ("http://www.erlang.org/doc/man/gl.html#uniform2d-3" "uniform2d(Location, X, Y) -> ok")
               "gl:uniform1d/2"
               ("http://www.erlang.org/doc/man/gl.html#uniform1d-2" "uniform1d(Location, X) -> ok")
               "gl:drawElementsIndirect/3"
               ("http://www.erlang.org/doc/man/gl.html#drawElementsIndirect-3" "drawElementsIndirect(Mode, Type, Indirect) -> ok")
               "gl:drawArraysIndirect/2"
               ("http://www.erlang.org/doc/man/gl.html#drawArraysIndirect-2" "drawArraysIndirect(Mode, Indirect) -> ok")
               "gl:getQueryObjectui64v/2"
               ("http://www.erlang.org/doc/man/gl.html#getQueryObjectui64v-2" "getQueryObjectui64v(Id, Pname) -> integer()")
               "gl:getQueryObjecti64v/2"
               ("http://www.erlang.org/doc/man/gl.html#getQueryObjecti64v-2" "getQueryObjecti64v(Id, Pname) -> integer()")
               "gl:queryCounter/2"
               ("http://www.erlang.org/doc/man/gl.html#queryCounter-2" "queryCounter(Id, Target) -> ok")
               "gl:getSamplerParameterIuiv/2"
               ("http://www.erlang.org/doc/man/gl.html#getSamplerParameterIuiv-2" "getSamplerParameterIuiv(Sampler, Pname) -> [integer()]")
               "gl:getSamplerParameterfv/2"
               ("http://www.erlang.org/doc/man/gl.html#getSamplerParameterfv-2" "getSamplerParameterfv(Sampler, Pname) -> [float()]")
               "gl:getSamplerParameterIiv/2"
               ("http://www.erlang.org/doc/man/gl.html#getSamplerParameterIiv-2" "getSamplerParameterIiv(Sampler, Pname) -> [integer()]")
               "gl:getSamplerParameteriv/2"
               ("http://www.erlang.org/doc/man/gl.html#getSamplerParameteriv-2" "getSamplerParameteriv(Sampler, Pname) -> [integer()]")
               "gl:samplerParameterIuiv/3"
               ("http://www.erlang.org/doc/man/gl.html#samplerParameterIuiv-3" "samplerParameterIuiv(Sampler, Pname, Param) -> ok")
               "gl:samplerParameterIiv/3"
               ("http://www.erlang.org/doc/man/gl.html#samplerParameterIiv-3" "samplerParameterIiv(Sampler, Pname, Param) -> ok")
               "gl:samplerParameterfv/3"
               ("http://www.erlang.org/doc/man/gl.html#samplerParameterfv-3" "samplerParameterfv(Sampler, Pname, Param) -> ok")
               "gl:samplerParameterf/3"
               ("http://www.erlang.org/doc/man/gl.html#samplerParameterf-3" "samplerParameterf(Sampler, Pname, Param) -> ok")
               "gl:samplerParameteriv/3"
               ("http://www.erlang.org/doc/man/gl.html#samplerParameteriv-3" "samplerParameteriv(Sampler, Pname, Param) -> ok")
               "gl:samplerParameteri/3"
               ("http://www.erlang.org/doc/man/gl.html#samplerParameteri-3" "samplerParameteri(Sampler, Pname, Param) -> ok")
               "gl:bindSampler/2"
               ("http://www.erlang.org/doc/man/gl.html#bindSampler-2" "bindSampler(Unit, Sampler) -> ok")
               "gl:isSampler/1"
               ("http://www.erlang.org/doc/man/gl.html#isSampler-1" "isSampler(Sampler) -> 0 | 1")
               "gl:deleteSamplers/1"
               ("http://www.erlang.org/doc/man/gl.html#deleteSamplers-1" "deleteSamplers(Samplers) -> ok")
               "gl:genSamplers/1"
               ("http://www.erlang.org/doc/man/gl.html#genSamplers-1" "genSamplers(Count) -> [integer()]")
               "gl:getFragDataIndex/2"
               ("http://www.erlang.org/doc/man/gl.html#getFragDataIndex-2" "getFragDataIndex(Program, Name) -> integer()")
               "gl:bindFragDataLocationIndexed/4"
               ("http://www.erlang.org/doc/man/gl.html#bindFragDataLocationIndexed-4" "bindFragDataLocationIndexed(Program, ColorNumber, Index, Name) -> ok")
               "gl:getNamedStringivARB/2"
               ("http://www.erlang.org/doc/man/gl.html#getNamedStringivARB-2" "getNamedStringivARB(Name, Pname) -> integer()")
               "gl:getNamedStringARB/2"
               ("http://www.erlang.org/doc/man/gl.html#getNamedStringARB-2" "getNamedStringARB(Name, BufSize) -> string()")
               "gl:isNamedStringARB/1"
               ("http://www.erlang.org/doc/man/gl.html#isNamedStringARB-1" "isNamedStringARB(Name) -> 0 | 1")
               "gl:compileShaderIncludeARB/2"
               ("http://www.erlang.org/doc/man/gl.html#compileShaderIncludeARB-2" "compileShaderIncludeARB(Shader, Path) -> ok")
               "gl:deleteNamedStringARB/1"
               ("http://www.erlang.org/doc/man/gl.html#deleteNamedStringARB-1" "deleteNamedStringARB(Name) -> ok")
               "gl:namedStringARB/3"
               ("http://www.erlang.org/doc/man/gl.html#namedStringARB-3" "namedStringARB(Type, Name, String) -> ok")
               "gl:sampleMaski/2"
               ("http://www.erlang.org/doc/man/gl.html#sampleMaski-2" "sampleMaski(Index, Mask) -> ok")
               "gl:getMultisamplefv/2"
               ("http://www.erlang.org/doc/man/gl.html#getMultisamplefv-2" "getMultisamplefv(Pname, Index) -> {float(), float()}")
               "gl:texImage3DMultisample/7"
               ("http://www.erlang.org/doc/man/gl.html#texImage3DMultisample-7" "texImage3DMultisample(Target, Samples, Internalformat, Width, Height, Depth, Fixedsamplelocations) -> ok")
               "gl:texImage2DMultisample/6"
               ("http://www.erlang.org/doc/man/gl.html#texImage2DMultisample-6" "texImage2DMultisample(Target, Samples, Internalformat, Width, Height, Fixedsamplelocations) -> ok")
               "gl:getSynciv/3"
               ("http://www.erlang.org/doc/man/gl.html#getSynciv-3" "getSynciv(Sync, Pname, BufSize) -> [integer()]")
               "gl:getInteger64v/1"
               ("http://www.erlang.org/doc/man/gl.html#getInteger64v-1" "getInteger64v(Pname) -> [integer()]")
               "gl:waitSync/3"
               ("http://www.erlang.org/doc/man/gl.html#waitSync-3" "waitSync(Sync, Flags, Timeout) -> ok")
               "gl:clientWaitSync/3"
               ("http://www.erlang.org/doc/man/gl.html#clientWaitSync-3" "clientWaitSync(Sync, Flags, Timeout) -> enum()")
               "gl:deleteSync/1"
               ("http://www.erlang.org/doc/man/gl.html#deleteSync-1" "deleteSync(Sync) -> ok")
               "gl:isSync/1"
               ("http://www.erlang.org/doc/man/gl.html#isSync-1" "isSync(Sync) -> 0 | 1")
               "gl:fenceSync/2"
               ("http://www.erlang.org/doc/man/gl.html#fenceSync-2" "fenceSync(Condition, Flags) -> integer()")
               "gl:provokingVertex/1"
               ("http://www.erlang.org/doc/man/gl.html#provokingVertex-1" "provokingVertex(Mode) -> ok")
               "gl:drawElementsInstancedBaseVertex/6"
               ("http://www.erlang.org/doc/man/gl.html#drawElementsInstancedBaseVertex-6" "drawElementsInstancedBaseVertex(Mode, Count, Type, Indices, Primcount, Basevertex) -> ok")
               "gl:drawRangeElementsBaseVertex/7"
               ("http://www.erlang.org/doc/man/gl.html#drawRangeElementsBaseVertex-7" "drawRangeElementsBaseVertex(Mode, Start, End, Count, Type, Indices, Basevertex) -> ok")
               "gl:drawElementsBaseVertex/5"
               ("http://www.erlang.org/doc/man/gl.html#drawElementsBaseVertex-5" "drawElementsBaseVertex(Mode, Count, Type, Indices, Basevertex) -> ok")
               "gl:copyBufferSubData/5"
               ("http://www.erlang.org/doc/man/gl.html#copyBufferSubData-5" "copyBufferSubData(ReadTarget, WriteTarget, ReadOffset, WriteOffset, Size) -> ok")
               "gl:uniformBlockBinding/3"
               ("http://www.erlang.org/doc/man/gl.html#uniformBlockBinding-3" "uniformBlockBinding(Program, UniformBlockIndex, UniformBlockBinding) -> ok")
               "gl:getActiveUniformBlockName/3"
               ("http://www.erlang.org/doc/man/gl.html#getActiveUniformBlockName-3" "getActiveUniformBlockName(Program, UniformBlockIndex, BufSize) -> string()")
               "gl:getActiveUniformBlockiv/4"
               ("http://www.erlang.org/doc/man/gl.html#getActiveUniformBlockiv-4" "getActiveUniformBlockiv(Program, UniformBlockIndex, Pname, Params) -> ok")
               "gl:getUniformBlockIndex/2"
               ("http://www.erlang.org/doc/man/gl.html#getUniformBlockIndex-2" "getUniformBlockIndex(Program, UniformBlockName) -> integer()")
               "gl:getActiveUniformName/3"
               ("http://www.erlang.org/doc/man/gl.html#getActiveUniformName-3" "getActiveUniformName(Program, UniformIndex, BufSize) -> string()")
               "gl:getActiveUniformsiv/3"
               ("http://www.erlang.org/doc/man/gl.html#getActiveUniformsiv-3" "getActiveUniformsiv(Program, UniformIndices, Pname) -> [integer()]")
               "gl:getUniformIndices/2"
               ("http://www.erlang.org/doc/man/gl.html#getUniformIndices-2" "getUniformIndices(Program, UniformNames) -> [integer()]")
               "gl:isVertexArray/1"
               ("http://www.erlang.org/doc/man/gl.html#isVertexArray-1" "isVertexArray(Array) -> 0 | 1")
               "gl:genVertexArrays/1"
               ("http://www.erlang.org/doc/man/gl.html#genVertexArrays-1" "genVertexArrays(N) -> [integer()]")
               "gl:deleteVertexArrays/1"
               ("http://www.erlang.org/doc/man/gl.html#deleteVertexArrays-1" "deleteVertexArrays(Arrays) -> ok")
               "gl:bindVertexArray/1"
               ("http://www.erlang.org/doc/man/gl.html#bindVertexArray-1" "bindVertexArray(Array) -> ok")
               "gl:flushMappedBufferRange/3"
               ("http://www.erlang.org/doc/man/gl.html#flushMappedBufferRange-3" "flushMappedBufferRange(Target, Offset, Length) -> ok")
               "gl:framebufferTextureFaceARB/5"
               ("http://www.erlang.org/doc/man/gl.html#framebufferTextureFaceARB-5" "framebufferTextureFaceARB(Target, Attachment, Texture, Level, Face) -> ok")
               "gl:framebufferTextureLayer/5"
               ("http://www.erlang.org/doc/man/gl.html#framebufferTextureLayer-5" "framebufferTextureLayer(Target, Attachment, Texture, Level, Layer) -> ok")
               "gl:renderbufferStorageMultisample/5"
               ("http://www.erlang.org/doc/man/gl.html#renderbufferStorageMultisample-5" "renderbufferStorageMultisample(Target, Samples, Internalformat, Width, Height) -> ok")
               "gl:blitFramebuffer/10"
               ("http://www.erlang.org/doc/man/gl.html#blitFramebuffer-10" "blitFramebuffer(SrcX0, SrcY0, SrcX1, SrcY1, DstX0, DstY0, DstX1, DstY1, Mask, Filter) -> ok")
               "gl:generateMipmap/1"
               ("http://www.erlang.org/doc/man/gl.html#generateMipmap-1" "generateMipmap(Target) -> ok")
               "gl:getFramebufferAttachmentParameteriv/3"
               ("http://www.erlang.org/doc/man/gl.html#getFramebufferAttachmentParameteriv-3" "getFramebufferAttachmentParameteriv(Target, Attachment, Pname) -> integer()")
               "gl:framebufferRenderbuffer/4"
               ("http://www.erlang.org/doc/man/gl.html#framebufferRenderbuffer-4" "framebufferRenderbuffer(Target, Attachment, Renderbuffertarget, Renderbuffer) -> ok")
               "gl:framebufferTexture3D/6"
               ("http://www.erlang.org/doc/man/gl.html#framebufferTexture3D-6" "framebufferTexture3D(Target, Attachment, Textarget, Texture, Level, Zoffset) -> ok")
               "gl:framebufferTexture2D/5"
               ("http://www.erlang.org/doc/man/gl.html#framebufferTexture2D-5" "framebufferTexture2D(Target, Attachment, Textarget, Texture, Level) -> ok")
               "gl:framebufferTexture1D/5"
               ("http://www.erlang.org/doc/man/gl.html#framebufferTexture1D-5" "framebufferTexture1D(Target, Attachment, Textarget, Texture, Level) -> ok")
               "gl:checkFramebufferStatus/1"
               ("http://www.erlang.org/doc/man/gl.html#checkFramebufferStatus-1" "checkFramebufferStatus(Target) -> enum()")
               "gl:genFramebuffers/1"
               ("http://www.erlang.org/doc/man/gl.html#genFramebuffers-1" "genFramebuffers(N) -> [integer()]")
               "gl:deleteFramebuffers/1"
               ("http://www.erlang.org/doc/man/gl.html#deleteFramebuffers-1" "deleteFramebuffers(Framebuffers) -> ok")
               "gl:bindFramebuffer/2"
               ("http://www.erlang.org/doc/man/gl.html#bindFramebuffer-2" "bindFramebuffer(Target, Framebuffer) -> ok")
               "gl:isFramebuffer/1"
               ("http://www.erlang.org/doc/man/gl.html#isFramebuffer-1" "isFramebuffer(Framebuffer) -> 0 | 1")
               "gl:getRenderbufferParameteriv/2"
               ("http://www.erlang.org/doc/man/gl.html#getRenderbufferParameteriv-2" "getRenderbufferParameteriv(Target, Pname) -> integer()")
               "gl:renderbufferStorage/4"
               ("http://www.erlang.org/doc/man/gl.html#renderbufferStorage-4" "renderbufferStorage(Target, Internalformat, Width, Height) -> ok")
               "gl:genRenderbuffers/1"
               ("http://www.erlang.org/doc/man/gl.html#genRenderbuffers-1" "genRenderbuffers(N) -> [integer()]")
               "gl:deleteRenderbuffers/1"
               ("http://www.erlang.org/doc/man/gl.html#deleteRenderbuffers-1" "deleteRenderbuffers(Renderbuffers) -> ok")
               "gl:bindRenderbuffer/2"
               ("http://www.erlang.org/doc/man/gl.html#bindRenderbuffer-2" "bindRenderbuffer(Target, Renderbuffer) -> ok")
               "gl:isRenderbuffer/1"
               ("http://www.erlang.org/doc/man/gl.html#isRenderbuffer-1" "isRenderbuffer(Renderbuffer) -> 0 | 1")
               "gl:getAttribLocationARB/2"
               ("http://www.erlang.org/doc/man/gl.html#getAttribLocationARB-2" "getAttribLocationARB(ProgramObj, Name) -> integer()")
               "gl:getActiveAttribARB/3"
               ("http://www.erlang.org/doc/man/gl.html#getActiveAttribARB-3" "getActiveAttribARB(ProgramObj, Index, MaxLength) -> {Size::integer(), Type:: enum() , Name::string()}")
               "gl:bindAttribLocationARB/3"
               ("http://www.erlang.org/doc/man/gl.html#bindAttribLocationARB-3" "bindAttribLocationARB(ProgramObj, Index, Name) -> ok")
               "gl:getShaderSourceARB/2"
               ("http://www.erlang.org/doc/man/gl.html#getShaderSourceARB-2" "getShaderSourceARB(Obj, MaxLength) -> string()")
               "gl:getUniformivARB/2"
               ("http://www.erlang.org/doc/man/gl.html#getUniformivARB-2" "getUniformivARB(ProgramObj, Location) -> {integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer()}")
               "gl:getUniformfvARB/2"
               ("http://www.erlang.org/doc/man/gl.html#getUniformfvARB-2" "getUniformfvARB(ProgramObj, Location) -> matrix()")
               "gl:getActiveUniformARB/3"
               ("http://www.erlang.org/doc/man/gl.html#getActiveUniformARB-3" "getActiveUniformARB(ProgramObj, Index, MaxLength) -> {Size::integer(), Type:: enum() , Name::string()}")
               "gl:getUniformLocationARB/2"
               ("http://www.erlang.org/doc/man/gl.html#getUniformLocationARB-2" "getUniformLocationARB(ProgramObj, Name) -> integer()")
               "gl:getAttachedObjectsARB/2"
               ("http://www.erlang.org/doc/man/gl.html#getAttachedObjectsARB-2" "getAttachedObjectsARB(ContainerObj, MaxCount) -> [integer()]")
               "gl:getInfoLogARB/2"
               ("http://www.erlang.org/doc/man/gl.html#getInfoLogARB-2" "getInfoLogARB(Obj, MaxLength) -> string()")
               "gl:getObjectParameterivARB/2"
               ("http://www.erlang.org/doc/man/gl.html#getObjectParameterivARB-2" "getObjectParameterivARB(Obj, Pname) -> integer()")
               "gl:getObjectParameterfvARB/2"
               ("http://www.erlang.org/doc/man/gl.html#getObjectParameterfvARB-2" "getObjectParameterfvARB(Obj, Pname) -> float()")
               "gl:validateProgramARB/1"
               ("http://www.erlang.org/doc/man/gl.html#validateProgramARB-1" "validateProgramARB(ProgramObj) -> ok")
               "gl:useProgramObjectARB/1"
               ("http://www.erlang.org/doc/man/gl.html#useProgramObjectARB-1" "useProgramObjectARB(ProgramObj) -> ok")
               "gl:linkProgramARB/1"
               ("http://www.erlang.org/doc/man/gl.html#linkProgramARB-1" "linkProgramARB(ProgramObj) -> ok")
               "gl:attachObjectARB/2"
               ("http://www.erlang.org/doc/man/gl.html#attachObjectARB-2" "attachObjectARB(ContainerObj, Obj) -> ok")
               "gl:createProgramObjectARB/0"
               ("http://www.erlang.org/doc/man/gl.html#createProgramObjectARB-0" "createProgramObjectARB() -> integer()")
               "gl:compileShaderARB/1"
               ("http://www.erlang.org/doc/man/gl.html#compileShaderARB-1" "compileShaderARB(ShaderObj) -> ok")
               "gl:shaderSourceARB/2"
               ("http://www.erlang.org/doc/man/gl.html#shaderSourceARB-2" "shaderSourceARB(ShaderObj, String) -> ok")
               "gl:createShaderObjectARB/1"
               ("http://www.erlang.org/doc/man/gl.html#createShaderObjectARB-1" "createShaderObjectARB(ShaderType) -> integer()")
               "gl:detachObjectARB/2"
               ("http://www.erlang.org/doc/man/gl.html#detachObjectARB-2" "detachObjectARB(ContainerObj, AttachedObj) -> ok")
               "gl:getHandleARB/1"
               ("http://www.erlang.org/doc/man/gl.html#getHandleARB-1" "getHandleARB(Pname) -> integer()")
               "gl:deleteObjectARB/1"
               ("http://www.erlang.org/doc/man/gl.html#deleteObjectARB-1" "deleteObjectARB(Obj) -> ok")
               "gl:getBufferParameterivARB/2"
               ("http://www.erlang.org/doc/man/gl.html#getBufferParameterivARB-2" "getBufferParameterivARB(Target, Pname) -> [integer()]")
               "gl:getProgramStringARB/3"
               ("http://www.erlang.org/doc/man/gl.html#getProgramStringARB-3" "getProgramStringARB(Target, Pname, String) -> ok")
               "gl:getProgramLocalParameterfvARB/2"
               ("http://www.erlang.org/doc/man/gl.html#getProgramLocalParameterfvARB-2" "getProgramLocalParameterfvARB(Target, Index) -> {float(), float(), float(), float()}")
               "gl:getProgramLocalParameterdvARB/2"
               ("http://www.erlang.org/doc/man/gl.html#getProgramLocalParameterdvARB-2" "getProgramLocalParameterdvARB(Target, Index) -> {float(), float(), float(), float()}")
               "gl:getProgramEnvParameterfvARB/2"
               ("http://www.erlang.org/doc/man/gl.html#getProgramEnvParameterfvARB-2" "getProgramEnvParameterfvARB(Target, Index) -> {float(), float(), float(), float()}")
               "gl:getProgramEnvParameterdvARB/2"
               ("http://www.erlang.org/doc/man/gl.html#getProgramEnvParameterdvARB-2" "getProgramEnvParameterdvARB(Target, Index) -> {float(), float(), float(), float()}")
               "gl:programLocalParameter4fvARB/3"
               ("http://www.erlang.org/doc/man/gl.html#programLocalParameter4fvARB-3" "programLocalParameter4fvARB(Target, Index, Params) -> ok")
               "gl:programLocalParameter4fARB/6"
               ("http://www.erlang.org/doc/man/gl.html#programLocalParameter4fARB-6" "programLocalParameter4fARB(Target, Index, X, Y, Z, W) -> ok")
               "gl:programLocalParameter4dvARB/3"
               ("http://www.erlang.org/doc/man/gl.html#programLocalParameter4dvARB-3" "programLocalParameter4dvARB(Target, Index, Params) -> ok")
               "gl:programLocalParameter4dARB/6"
               ("http://www.erlang.org/doc/man/gl.html#programLocalParameter4dARB-6" "programLocalParameter4dARB(Target, Index, X, Y, Z, W) -> ok")
               "gl:programEnvParameter4fvARB/3"
               ("http://www.erlang.org/doc/man/gl.html#programEnvParameter4fvARB-3" "programEnvParameter4fvARB(Target, Index, Params) -> ok")
               "gl:programEnvParameter4fARB/6"
               ("http://www.erlang.org/doc/man/gl.html#programEnvParameter4fARB-6" "programEnvParameter4fARB(Target, Index, X, Y, Z, W) -> ok")
               "gl:programEnvParameter4dvARB/3"
               ("http://www.erlang.org/doc/man/gl.html#programEnvParameter4dvARB-3" "programEnvParameter4dvARB(Target, Index, Params) -> ok")
               "gl:programEnvParameter4dARB/6"
               ("http://www.erlang.org/doc/man/gl.html#programEnvParameter4dARB-6" "programEnvParameter4dARB(Target, Index, X, Y, Z, W) -> ok")
               "gl:genProgramsARB/1"
               ("http://www.erlang.org/doc/man/gl.html#genProgramsARB-1" "genProgramsARB(N) -> [integer()]")
               "gl:deleteProgramsARB/1"
               ("http://www.erlang.org/doc/man/gl.html#deleteProgramsARB-1" "deleteProgramsARB(Programs) -> ok")
               "gl:bindProgramARB/2"
               ("http://www.erlang.org/doc/man/gl.html#bindProgramARB-2" "bindProgramARB(Target, Program) -> ok")
               "gl:programStringARB/3"
               ("http://www.erlang.org/doc/man/gl.html#programStringARB-3" "programStringARB(Target, Format, String) -> ok")
               "gl:matrixIndexuivARB/1"
               ("http://www.erlang.org/doc/man/gl.html#matrixIndexuivARB-1" "matrixIndexuivARB(Indices) -> ok")
               "gl:matrixIndexusvARB/1"
               ("http://www.erlang.org/doc/man/gl.html#matrixIndexusvARB-1" "matrixIndexusvARB(Indices) -> ok")
               "gl:matrixIndexubvARB/1"
               ("http://www.erlang.org/doc/man/gl.html#matrixIndexubvARB-1" "matrixIndexubvARB(Indices) -> ok")
               "gl:currentPaletteMatrixARB/1"
               ("http://www.erlang.org/doc/man/gl.html#currentPaletteMatrixARB-1" "currentPaletteMatrixARB(Index) -> ok")
               "gl:vertexBlendARB/1"
               ("http://www.erlang.org/doc/man/gl.html#vertexBlendARB-1" "vertexBlendARB(Count) -> ok")
               "gl:weightuivARB/1"
               ("http://www.erlang.org/doc/man/gl.html#weightuivARB-1" "weightuivARB(Weights) -> ok")
               "gl:weightusvARB/1"
               ("http://www.erlang.org/doc/man/gl.html#weightusvARB-1" "weightusvARB(Weights) -> ok")
               "gl:weightubvARB/1"
               ("http://www.erlang.org/doc/man/gl.html#weightubvARB-1" "weightubvARB(Weights) -> ok")
               "gl:weightdvARB/1"
               ("http://www.erlang.org/doc/man/gl.html#weightdvARB-1" "weightdvARB(Weights) -> ok")
               "gl:weightfvARB/1"
               ("http://www.erlang.org/doc/man/gl.html#weightfvARB-1" "weightfvARB(Weights) -> ok")
               "gl:weightivARB/1"
               ("http://www.erlang.org/doc/man/gl.html#weightivARB-1" "weightivARB(Weights) -> ok")
               "gl:weightsvARB/1"
               ("http://www.erlang.org/doc/man/gl.html#weightsvARB-1" "weightsvARB(Weights) -> ok")
               "gl:weightbvARB/1"
               ("http://www.erlang.org/doc/man/gl.html#weightbvARB-1" "weightbvARB(Weights) -> ok")
               "gl:multTransposeMatrixdARB/1"
               ("http://www.erlang.org/doc/man/gl.html#multTransposeMatrixdARB-1" "multTransposeMatrixdARB(M) -> ok")
               "gl:multTransposeMatrixfARB/1"
               ("http://www.erlang.org/doc/man/gl.html#multTransposeMatrixfARB-1" "multTransposeMatrixfARB(M) -> ok")
               "gl:loadTransposeMatrixdARB/1"
               ("http://www.erlang.org/doc/man/gl.html#loadTransposeMatrixdARB-1" "loadTransposeMatrixdARB(M) -> ok")
               "gl:loadTransposeMatrixfARB/1"
               ("http://www.erlang.org/doc/man/gl.html#loadTransposeMatrixfARB-1" "loadTransposeMatrixfARB(M) -> ok")
               "gl:blendFuncSeparatei/5"
               ("http://www.erlang.org/doc/man/gl.html#blendFuncSeparatei-5" "blendFuncSeparatei(Buf, SrcRGB, DstRGB, SrcAlpha, DstAlpha) -> ok")
               "gl:blendFunci/3"
               ("http://www.erlang.org/doc/man/gl.html#blendFunci-3" "blendFunci(Buf, Src, Dst) -> ok")
               "gl:blendEquationSeparatei/3"
               ("http://www.erlang.org/doc/man/gl.html#blendEquationSeparatei-3" "blendEquationSeparatei(Buf, ModeRGB, ModeAlpha) -> ok")
               "gl:blendEquationi/2"
               ("http://www.erlang.org/doc/man/gl.html#blendEquationi-2" "blendEquationi(Buf, Mode) -> ok")
               "gl:minSampleShading/1"
               ("http://www.erlang.org/doc/man/gl.html#minSampleShading-1" "minSampleShading(Value) -> ok")
               "gl:vertexAttribDivisor/2"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttribDivisor-2" "vertexAttribDivisor(Index, Divisor) -> ok")
               "gl:framebufferTexture/4"
               ("http://www.erlang.org/doc/man/gl.html#framebufferTexture-4" "framebufferTexture(Target, Attachment, Texture, Level) -> ok")
               "gl:getBufferParameteri64v/2"
               ("http://www.erlang.org/doc/man/gl.html#getBufferParameteri64v-2" "getBufferParameteri64v(Target, Pname) -> [integer()]")
               "gl:getInteger64i_v/2"
               ("http://www.erlang.org/doc/man/gl.html#getInteger64i_v-2" "getInteger64i_v(Target, Index) -> [integer()]")
               "gl:primitiveRestartIndex/1"
               ("http://www.erlang.org/doc/man/gl.html#primitiveRestartIndex-1" "primitiveRestartIndex(Index) -> ok")
               "gl:texBuffer/3"
               ("http://www.erlang.org/doc/man/gl.html#texBuffer-3" "texBuffer(Target, Internalformat, Buffer) -> ok")
               "gl:drawElementsInstanced/5"
               ("http://www.erlang.org/doc/man/gl.html#drawElementsInstanced-5" "drawElementsInstanced(Mode, Count, Type, Indices, Primcount) -> ok")
               "gl:drawArraysInstanced/4"
               ("http://www.erlang.org/doc/man/gl.html#drawArraysInstanced-4" "drawArraysInstanced(Mode, First, Count, Primcount) -> ok")
               "gl:getStringi/2"
               ("http://www.erlang.org/doc/man/gl.html#getStringi-2" "getStringi(Name, Index) -> string()")
               "gl:clearBufferfi/4"
               ("http://www.erlang.org/doc/man/gl.html#clearBufferfi-4" "clearBufferfi(Buffer, Drawbuffer, Depth, Stencil) -> ok")
               "gl:clearBufferfv/3"
               ("http://www.erlang.org/doc/man/gl.html#clearBufferfv-3" "clearBufferfv(Buffer, Drawbuffer, Value) -> ok")
               "gl:clearBufferuiv/3"
               ("http://www.erlang.org/doc/man/gl.html#clearBufferuiv-3" "clearBufferuiv(Buffer, Drawbuffer, Value) -> ok")
               "gl:clearBufferiv/3"
               ("http://www.erlang.org/doc/man/gl.html#clearBufferiv-3" "clearBufferiv(Buffer, Drawbuffer, Value) -> ok")
               "gl:getTexParameterIuiv/2"
               ("http://www.erlang.org/doc/man/gl.html#getTexParameterIuiv-2" "getTexParameterIuiv(Target, Pname) -> {integer(), integer(), integer(), integer()}")
               "gl:getTexParameterIiv/2"
               ("http://www.erlang.org/doc/man/gl.html#getTexParameterIiv-2" "getTexParameterIiv(Target, Pname) -> {integer(), integer(), integer(), integer()}")
               "gl:texParameterIuiv/3"
               ("http://www.erlang.org/doc/man/gl.html#texParameterIuiv-3" "texParameterIuiv(Target, Pname, Params) -> ok")
               "gl:texParameterIiv/3"
               ("http://www.erlang.org/doc/man/gl.html#texParameterIiv-3" "texParameterIiv(Target, Pname, Params) -> ok")
               "gl:uniform4uiv/2"
               ("http://www.erlang.org/doc/man/gl.html#uniform4uiv-2" "uniform4uiv(Location, Value) -> ok")
               "gl:uniform3uiv/2"
               ("http://www.erlang.org/doc/man/gl.html#uniform3uiv-2" "uniform3uiv(Location, Value) -> ok")
               "gl:uniform2uiv/2"
               ("http://www.erlang.org/doc/man/gl.html#uniform2uiv-2" "uniform2uiv(Location, Value) -> ok")
               "gl:uniform1uiv/2"
               ("http://www.erlang.org/doc/man/gl.html#uniform1uiv-2" "uniform1uiv(Location, Value) -> ok")
               "gl:uniform4ui/5"
               ("http://www.erlang.org/doc/man/gl.html#uniform4ui-5" "uniform4ui(Location, V0, V1, V2, V3) -> ok")
               "gl:uniform3ui/4"
               ("http://www.erlang.org/doc/man/gl.html#uniform3ui-4" "uniform3ui(Location, V0, V1, V2) -> ok")
               "gl:uniform2ui/3"
               ("http://www.erlang.org/doc/man/gl.html#uniform2ui-3" "uniform2ui(Location, V0, V1) -> ok")
               "gl:uniform1ui/2"
               ("http://www.erlang.org/doc/man/gl.html#uniform1ui-2" "uniform1ui(Location, V0) -> ok")
               "gl:getFragDataLocation/2"
               ("http://www.erlang.org/doc/man/gl.html#getFragDataLocation-2" "getFragDataLocation(Program, Name) -> integer()")
               "gl:bindFragDataLocation/3"
               ("http://www.erlang.org/doc/man/gl.html#bindFragDataLocation-3" "bindFragDataLocation(Program, Color, Name) -> ok")
               "gl:getUniformuiv/2"
               ("http://www.erlang.org/doc/man/gl.html#getUniformuiv-2" "getUniformuiv(Program, Location) -> {integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer()}")
               "gl:vertexAttribI4usv/2"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttribI4usv-2" "vertexAttribI4usv(Index, V) -> ok")
               "gl:vertexAttribI4ubv/2"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttribI4ubv-2" "vertexAttribI4ubv(Index, V) -> ok")
               "gl:vertexAttribI4sv/2"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttribI4sv-2" "vertexAttribI4sv(Index, V) -> ok")
               "gl:vertexAttribI4bv/2"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttribI4bv-2" "vertexAttribI4bv(Index, V) -> ok")
               "gl:vertexAttribI4uiv/2"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttribI4uiv-2" "vertexAttribI4uiv(Index::integer(), V) -> ok")
               "gl:vertexAttribI3uiv/2"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttribI3uiv-2" "vertexAttribI3uiv(Index::integer(), V) -> ok")
               "gl:vertexAttribI2uiv/2"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttribI2uiv-2" "vertexAttribI2uiv(Index::integer(), V) -> ok")
               "gl:vertexAttribI1uiv/2"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttribI1uiv-2" "vertexAttribI1uiv(Index::integer(), V) -> ok")
               "gl:vertexAttribI4iv/2"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttribI4iv-2" "vertexAttribI4iv(Index::integer(), V) -> ok")
               "gl:vertexAttribI3iv/2"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttribI3iv-2" "vertexAttribI3iv(Index::integer(), V) -> ok")
               "gl:vertexAttribI2iv/2"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttribI2iv-2" "vertexAttribI2iv(Index::integer(), V) -> ok")
               "gl:vertexAttribI1iv/2"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttribI1iv-2" "vertexAttribI1iv(Index::integer(), V) -> ok")
               "gl:vertexAttribI4ui/5"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttribI4ui-5" "vertexAttribI4ui(Index, X, Y, Z, W) -> ok")
               "gl:vertexAttribI3ui/4"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttribI3ui-4" "vertexAttribI3ui(Index, X, Y, Z) -> ok")
               "gl:vertexAttribI2ui/3"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttribI2ui-3" "vertexAttribI2ui(Index, X, Y) -> ok")
               "gl:vertexAttribI1ui/2"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttribI1ui-2" "vertexAttribI1ui(Index, X) -> ok")
               "gl:vertexAttribI4i/5"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttribI4i-5" "vertexAttribI4i(Index, X, Y, Z, W) -> ok")
               "gl:vertexAttribI3i/4"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttribI3i-4" "vertexAttribI3i(Index, X, Y, Z) -> ok")
               "gl:vertexAttribI2i/3"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttribI2i-3" "vertexAttribI2i(Index, X, Y) -> ok")
               "gl:vertexAttribI1i/2"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttribI1i-2" "vertexAttribI1i(Index, X) -> ok")
               "gl:getVertexAttribIuiv/2"
               ("http://www.erlang.org/doc/man/gl.html#getVertexAttribIuiv-2" "getVertexAttribIuiv(Index, Pname) -> {integer(), integer(), integer(), integer()}")
               "gl:getVertexAttribIiv/2"
               ("http://www.erlang.org/doc/man/gl.html#getVertexAttribIiv-2" "getVertexAttribIiv(Index, Pname) -> {integer(), integer(), integer(), integer()}")
               "gl:vertexAttribIPointer/5"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttribIPointer-5" "vertexAttribIPointer(Index, Size, Type, Stride, Pointer) -> ok")
               "gl:endConditionalRender/0"
               ("http://www.erlang.org/doc/man/gl.html#endConditionalRender-0" "endConditionalRender() -> ok")
               "gl:beginConditionalRender/2"
               ("http://www.erlang.org/doc/man/gl.html#beginConditionalRender-2" "beginConditionalRender(Id, Mode) -> ok")
               "gl:clampColor/2"
               ("http://www.erlang.org/doc/man/gl.html#clampColor-2" "clampColor(Target, Clamp) -> ok")
               "gl:getTransformFeedbackVarying/3"
               ("http://www.erlang.org/doc/man/gl.html#getTransformFeedbackVarying-3" "getTransformFeedbackVarying(Program, Index, BufSize) -> {Size::integer(), Type:: enum() , Name::string()}")
               "gl:transformFeedbackVaryings/3"
               ("http://www.erlang.org/doc/man/gl.html#transformFeedbackVaryings-3" "transformFeedbackVaryings(Program, Varyings, BufferMode) -> ok")
               "gl:bindBufferBase/3"
               ("http://www.erlang.org/doc/man/gl.html#bindBufferBase-3" "bindBufferBase(Target, Index, Buffer) -> ok")
               "gl:bindBufferRange/5"
               ("http://www.erlang.org/doc/man/gl.html#bindBufferRange-5" "bindBufferRange(Target, Index, Buffer, Offset, Size) -> ok")
               "gl:endTransformFeedback/0"
               ("http://www.erlang.org/doc/man/gl.html#endTransformFeedback-0" "endTransformFeedback() -> ok")
               "gl:beginTransformFeedback/1"
               ("http://www.erlang.org/doc/man/gl.html#beginTransformFeedback-1" "beginTransformFeedback(PrimitiveMode) -> ok")
               "gl:isEnabledi/2"
               ("http://www.erlang.org/doc/man/gl.html#isEnabledi-2" "isEnabledi(Target, Index) -> 0 | 1")
               "gl:disablei/2"
               ("http://www.erlang.org/doc/man/gl.html#disablei-2" "disablei(Target, Index) -> ok")
               "gl:enablei/2"
               ("http://www.erlang.org/doc/man/gl.html#enablei-2" "enablei(Target, Index) -> ok")
               "gl:getIntegeri_v/2"
               ("http://www.erlang.org/doc/man/gl.html#getIntegeri_v-2" "getIntegeri_v(Target, Index) -> [integer()]")
               "gl:getBooleani_v/2"
               ("http://www.erlang.org/doc/man/gl.html#getBooleani_v-2" "getBooleani_v(Target, Index) -> [0 | 1]")
               "gl:colorMaski/5"
               ("http://www.erlang.org/doc/man/gl.html#colorMaski-5" "colorMaski(Index, R, G, B, A) -> ok")
               "gl:uniformMatrix4x3fv/3"
               ("http://www.erlang.org/doc/man/gl.html#uniformMatrix4x3fv-3" "uniformMatrix4x3fv(Location, Transpose, Value) -> ok")
               "gl:uniformMatrix3x4fv/3"
               ("http://www.erlang.org/doc/man/gl.html#uniformMatrix3x4fv-3" "uniformMatrix3x4fv(Location, Transpose, Value) -> ok")
               "gl:uniformMatrix4x2fv/3"
               ("http://www.erlang.org/doc/man/gl.html#uniformMatrix4x2fv-3" "uniformMatrix4x2fv(Location, Transpose, Value) -> ok")
               "gl:uniformMatrix2x4fv/3"
               ("http://www.erlang.org/doc/man/gl.html#uniformMatrix2x4fv-3" "uniformMatrix2x4fv(Location, Transpose, Value) -> ok")
               "gl:uniformMatrix3x2fv/3"
               ("http://www.erlang.org/doc/man/gl.html#uniformMatrix3x2fv-3" "uniformMatrix3x2fv(Location, Transpose, Value) -> ok")
               "gl:uniformMatrix2x3fv/3"
               ("http://www.erlang.org/doc/man/gl.html#uniformMatrix2x3fv-3" "uniformMatrix2x3fv(Location, Transpose, Value) -> ok")
               "gl:vertexAttribPointer/6"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttribPointer-6" "vertexAttribPointer(Index, Size, Type, Normalized, Stride, Pointer) -> ok")
               "gl:vertexAttrib4usv/2"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttrib4usv-2" "vertexAttrib4usv(Index, V) -> ok")
               "gl:vertexAttrib4uiv/2"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttrib4uiv-2" "vertexAttrib4uiv(Index, V) -> ok")
               "gl:vertexAttrib4ubv/2"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttrib4ubv-2" "vertexAttrib4ubv(Index, V) -> ok")
               "gl:vertexAttrib4sv/2"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttrib4sv-2" "vertexAttrib4sv(Index::integer(), V) -> ok")
               "gl:vertexAttrib4s/5"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttrib4s-5" "vertexAttrib4s(Index, X, Y, Z, W) -> ok")
               "gl:vertexAttrib4iv/2"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttrib4iv-2" "vertexAttrib4iv(Index, V) -> ok")
               "gl:vertexAttrib4fv/2"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttrib4fv-2" "vertexAttrib4fv(Index::integer(), V) -> ok")
               "gl:vertexAttrib4f/5"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttrib4f-5" "vertexAttrib4f(Index, X, Y, Z, W) -> ok")
               "gl:vertexAttrib4dv/2"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttrib4dv-2" "vertexAttrib4dv(Index::integer(), V) -> ok")
               "gl:vertexAttrib4d/5"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttrib4d-5" "vertexAttrib4d(Index, X, Y, Z, W) -> ok")
               "gl:vertexAttrib4bv/2"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttrib4bv-2" "vertexAttrib4bv(Index, V) -> ok")
               "gl:vertexAttrib4Nusv/2"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttrib4Nusv-2" "vertexAttrib4Nusv(Index, V) -> ok")
               "gl:vertexAttrib4Nuiv/2"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttrib4Nuiv-2" "vertexAttrib4Nuiv(Index, V) -> ok")
               "gl:vertexAttrib4Nubv/2"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttrib4Nubv-2" "vertexAttrib4Nubv(Index::integer(), V) -> ok")
               "gl:vertexAttrib4Nub/5"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttrib4Nub-5" "vertexAttrib4Nub(Index, X, Y, Z, W) -> ok")
               "gl:vertexAttrib4Nsv/2"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttrib4Nsv-2" "vertexAttrib4Nsv(Index, V) -> ok")
               "gl:vertexAttrib4Niv/2"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttrib4Niv-2" "vertexAttrib4Niv(Index, V) -> ok")
               "gl:vertexAttrib4Nbv/2"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttrib4Nbv-2" "vertexAttrib4Nbv(Index, V) -> ok")
               "gl:vertexAttrib3sv/2"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttrib3sv-2" "vertexAttrib3sv(Index::integer(), V) -> ok")
               "gl:vertexAttrib3s/4"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttrib3s-4" "vertexAttrib3s(Index, X, Y, Z) -> ok")
               "gl:vertexAttrib3fv/2"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttrib3fv-2" "vertexAttrib3fv(Index::integer(), V) -> ok")
               "gl:vertexAttrib3f/4"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttrib3f-4" "vertexAttrib3f(Index, X, Y, Z) -> ok")
               "gl:vertexAttrib3dv/2"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttrib3dv-2" "vertexAttrib3dv(Index::integer(), V) -> ok")
               "gl:vertexAttrib3d/4"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttrib3d-4" "vertexAttrib3d(Index, X, Y, Z) -> ok")
               "gl:vertexAttrib2sv/2"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttrib2sv-2" "vertexAttrib2sv(Index::integer(), V) -> ok")
               "gl:vertexAttrib2s/3"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttrib2s-3" "vertexAttrib2s(Index, X, Y) -> ok")
               "gl:vertexAttrib2fv/2"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttrib2fv-2" "vertexAttrib2fv(Index::integer(), V) -> ok")
               "gl:vertexAttrib2f/3"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttrib2f-3" "vertexAttrib2f(Index, X, Y) -> ok")
               "gl:vertexAttrib2dv/2"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttrib2dv-2" "vertexAttrib2dv(Index::integer(), V) -> ok")
               "gl:vertexAttrib2d/3"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttrib2d-3" "vertexAttrib2d(Index, X, Y) -> ok")
               "gl:vertexAttrib1sv/2"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttrib1sv-2" "vertexAttrib1sv(Index::integer(), V) -> ok")
               "gl:vertexAttrib1s/2"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttrib1s-2" "vertexAttrib1s(Index, X) -> ok")
               "gl:vertexAttrib1fv/2"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttrib1fv-2" "vertexAttrib1fv(Index::integer(), V) -> ok")
               "gl:vertexAttrib1f/2"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttrib1f-2" "vertexAttrib1f(Index, X) -> ok")
               "gl:vertexAttrib1dv/2"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttrib1dv-2" "vertexAttrib1dv(Index::integer(), V) -> ok")
               "gl:vertexAttrib1d/2"
               ("http://www.erlang.org/doc/man/gl.html#vertexAttrib1d-2" "vertexAttrib1d(Index, X) -> ok")
               "gl:validateProgram/1"
               ("http://www.erlang.org/doc/man/gl.html#validateProgram-1" "validateProgram(Program) -> ok")
               "gl:uniformMatrix4fv/3"
               ("http://www.erlang.org/doc/man/gl.html#uniformMatrix4fv-3" "uniformMatrix4fv(Location, Transpose, Value) -> ok")
               "gl:uniformMatrix3fv/3"
               ("http://www.erlang.org/doc/man/gl.html#uniformMatrix3fv-3" "uniformMatrix3fv(Location, Transpose, Value) -> ok")
               "gl:uniformMatrix2fv/3"
               ("http://www.erlang.org/doc/man/gl.html#uniformMatrix2fv-3" "uniformMatrix2fv(Location, Transpose, Value) -> ok")
               "gl:uniform4iv/2"
               ("http://www.erlang.org/doc/man/gl.html#uniform4iv-2" "uniform4iv(Location, Value) -> ok")
               "gl:uniform3iv/2"
               ("http://www.erlang.org/doc/man/gl.html#uniform3iv-2" "uniform3iv(Location, Value) -> ok")
               "gl:uniform2iv/2"
               ("http://www.erlang.org/doc/man/gl.html#uniform2iv-2" "uniform2iv(Location, Value) -> ok")
               "gl:uniform1iv/2"
               ("http://www.erlang.org/doc/man/gl.html#uniform1iv-2" "uniform1iv(Location, Value) -> ok")
               "gl:uniform4fv/2"
               ("http://www.erlang.org/doc/man/gl.html#uniform4fv-2" "uniform4fv(Location, Value) -> ok")
               "gl:uniform3fv/2"
               ("http://www.erlang.org/doc/man/gl.html#uniform3fv-2" "uniform3fv(Location, Value) -> ok")
               "gl:uniform2fv/2"
               ("http://www.erlang.org/doc/man/gl.html#uniform2fv-2" "uniform2fv(Location, Value) -> ok")
               "gl:uniform1fv/2"
               ("http://www.erlang.org/doc/man/gl.html#uniform1fv-2" "uniform1fv(Location, Value) -> ok")
               "gl:uniform4i/5"
               ("http://www.erlang.org/doc/man/gl.html#uniform4i-5" "uniform4i(Location, V0, V1, V2, V3) -> ok")
               "gl:uniform3i/4"
               ("http://www.erlang.org/doc/man/gl.html#uniform3i-4" "uniform3i(Location, V0, V1, V2) -> ok")
               "gl:uniform2i/3"
               ("http://www.erlang.org/doc/man/gl.html#uniform2i-3" "uniform2i(Location, V0, V1) -> ok")
               "gl:uniform1i/2"
               ("http://www.erlang.org/doc/man/gl.html#uniform1i-2" "uniform1i(Location, V0) -> ok")
               "gl:uniform4f/5"
               ("http://www.erlang.org/doc/man/gl.html#uniform4f-5" "uniform4f(Location, V0, V1, V2, V3) -> ok")
               "gl:uniform3f/4"
               ("http://www.erlang.org/doc/man/gl.html#uniform3f-4" "uniform3f(Location, V0, V1, V2) -> ok")
               "gl:uniform2f/3"
               ("http://www.erlang.org/doc/man/gl.html#uniform2f-3" "uniform2f(Location, V0, V1) -> ok")
               "gl:uniform1f/2"
               ("http://www.erlang.org/doc/man/gl.html#uniform1f-2" "uniform1f(Location, V0) -> ok")
               "gl:useProgram/1"
               ("http://www.erlang.org/doc/man/gl.html#useProgram-1" "useProgram(Program) -> ok")
               "gl:shaderSource/2"
               ("http://www.erlang.org/doc/man/gl.html#shaderSource-2" "shaderSource(Shader, String) -> ok")
               "gl:linkProgram/1"
               ("http://www.erlang.org/doc/man/gl.html#linkProgram-1" "linkProgram(Program) -> ok")
               "gl:isShader/1"
               ("http://www.erlang.org/doc/man/gl.html#isShader-1" "isShader(Shader) -> 0 | 1")
               "gl:isProgram/1"
               ("http://www.erlang.org/doc/man/gl.html#isProgram-1" "isProgram(Program) -> 0 | 1")
               "gl:getVertexAttribiv/2"
               ("http://www.erlang.org/doc/man/gl.html#getVertexAttribiv-2" "getVertexAttribiv(Index, Pname) -> {integer(), integer(), integer(), integer()}")
               "gl:getVertexAttribfv/2"
               ("http://www.erlang.org/doc/man/gl.html#getVertexAttribfv-2" "getVertexAttribfv(Index, Pname) -> {float(), float(), float(), float()}")
               "gl:getVertexAttribdv/2"
               ("http://www.erlang.org/doc/man/gl.html#getVertexAttribdv-2" "getVertexAttribdv(Index, Pname) -> {float(), float(), float(), float()}")
               "gl:getUniformiv/2"
               ("http://www.erlang.org/doc/man/gl.html#getUniformiv-2" "getUniformiv(Program, Location) -> {integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer(), integer()}")
               "gl:getUniformfv/2"
               ("http://www.erlang.org/doc/man/gl.html#getUniformfv-2" "getUniformfv(Program, Location) -> matrix()")
               "gl:getUniformLocation/2"
               ("http://www.erlang.org/doc/man/gl.html#getUniformLocation-2" "getUniformLocation(Program, Name) -> integer()")
               "gl:getShaderSource/2"
               ("http://www.erlang.org/doc/man/gl.html#getShaderSource-2" "getShaderSource(Shader, BufSize) -> string()")
               "gl:getShaderInfoLog/2"
               ("http://www.erlang.org/doc/man/gl.html#getShaderInfoLog-2" "getShaderInfoLog(Shader, BufSize) -> string()")
               "gl:getShaderiv/2"
               ("http://www.erlang.org/doc/man/gl.html#getShaderiv-2" "getShaderiv(Shader, Pname) -> integer()")
               "gl:getProgramInfoLog/2"
               ("http://www.erlang.org/doc/man/gl.html#getProgramInfoLog-2" "getProgramInfoLog(Program, BufSize) -> string()")
               "gl:getProgramiv/2"
               ("http://www.erlang.org/doc/man/gl.html#getProgramiv-2" "getProgramiv(Program, Pname) -> integer()")
               "gl:getAttribLocation/2"
               ("http://www.erlang.org/doc/man/gl.html#getAttribLocation-2" "getAttribLocation(Program, Name) -> integer()")
               "gl:getAttachedShaders/2"
               ("http://www.erlang.org/doc/man/gl.html#getAttachedShaders-2" "getAttachedShaders(Program, MaxCount) -> [integer()]")
               "gl:getActiveUniform/3"
               ("http://www.erlang.org/doc/man/gl.html#getActiveUniform-3" "getActiveUniform(Program, Index, BufSize) -> {Size::integer(), Type:: enum() , Name::string()}")
               "gl:getActiveAttrib/3"
               ("http://www.erlang.org/doc/man/gl.html#getActiveAttrib-3" "getActiveAttrib(Program, Index, BufSize) -> {Size::integer(), Type:: enum() , Name::string()}")
               "gl:enableVertexAttribArray/1"
               ("http://www.erlang.org/doc/man/gl.html#enableVertexAttribArray-1" "enableVertexAttribArray(Index) -> ok")
               "gl:disableVertexAttribArray/1"
               ("http://www.erlang.org/doc/man/gl.html#disableVertexAttribArray-1" "disableVertexAttribArray(Index) -> ok")
               "gl:detachShader/2"
               ("http://www.erlang.org/doc/man/gl.html#detachShader-2" "detachShader(Program, Shader) -> ok")
               "gl:deleteShader/1"
               ("http://www.erlang.org/doc/man/gl.html#deleteShader-1" "deleteShader(Shader) -> ok")
               "gl:deleteProgram/1"
               ("http://www.erlang.org/doc/man/gl.html#deleteProgram-1" "deleteProgram(Program) -> ok")
               "gl:createShader/1"
               ("http://www.erlang.org/doc/man/gl.html#createShader-1" "createShader(Type) -> integer()")
               "gl:createProgram/0"
               ("http://www.erlang.org/doc/man/gl.html#createProgram-0" "createProgram() -> integer()")
               "gl:compileShader/1"
               ("http://www.erlang.org/doc/man/gl.html#compileShader-1" "compileShader(Shader) -> ok")
               "gl:bindAttribLocation/3"
               ("http://www.erlang.org/doc/man/gl.html#bindAttribLocation-3" "bindAttribLocation(Program, Index, Name) -> ok")
               "gl:attachShader/2"
               ("http://www.erlang.org/doc/man/gl.html#attachShader-2" "attachShader(Program, Shader) -> ok")
               "gl:stencilMaskSeparate/2"
               ("http://www.erlang.org/doc/man/gl.html#stencilMaskSeparate-2" "stencilMaskSeparate(Face, Mask) -> ok")
               "gl:stencilFuncSeparate/4"
               ("http://www.erlang.org/doc/man/gl.html#stencilFuncSeparate-4" "stencilFuncSeparate(Face, Func, Ref, Mask) -> ok")
               "gl:stencilOpSeparate/4"
               ("http://www.erlang.org/doc/man/gl.html#stencilOpSeparate-4" "stencilOpSeparate(Face, Sfail, Dpfail, Dppass) -> ok")
               "gl:drawBuffers/1"
               ("http://www.erlang.org/doc/man/gl.html#drawBuffers-1" "drawBuffers(Bufs) -> ok")
               "gl:blendEquationSeparate/2"
               ("http://www.erlang.org/doc/man/gl.html#blendEquationSeparate-2" "blendEquationSeparate(ModeRGB, ModeAlpha) -> ok")
               "gl:getBufferParameteriv/2"
               ("http://www.erlang.org/doc/man/gl.html#getBufferParameteriv-2" "getBufferParameteriv(Target, Pname) -> integer()")
               "gl:getBufferSubData/4"
               ("http://www.erlang.org/doc/man/gl.html#getBufferSubData-4" "getBufferSubData(Target, Offset, Size, Data) -> ok")
               "gl:bufferSubData/4"
               ("http://www.erlang.org/doc/man/gl.html#bufferSubData-4" "bufferSubData(Target, Offset, Size, Data) -> ok")
               "gl:bufferData/4"
               ("http://www.erlang.org/doc/man/gl.html#bufferData-4" "bufferData(Target, Size, Data, Usage) -> ok")
               "gl:isBuffer/1"
               ("http://www.erlang.org/doc/man/gl.html#isBuffer-1" "isBuffer(Buffer) -> 0 | 1")
               "gl:genBuffers/1"
               ("http://www.erlang.org/doc/man/gl.html#genBuffers-1" "genBuffers(N) -> [integer()]")
               "gl:deleteBuffers/1"
               ("http://www.erlang.org/doc/man/gl.html#deleteBuffers-1" "deleteBuffers(Buffers) -> ok")
               "gl:bindBuffer/2"
               ("http://www.erlang.org/doc/man/gl.html#bindBuffer-2" "bindBuffer(Target, Buffer) -> ok")
               "gl:getQueryObjectuiv/2"
               ("http://www.erlang.org/doc/man/gl.html#getQueryObjectuiv-2" "getQueryObjectuiv(Id, Pname) -> integer()")
               "gl:getQueryObjectiv/2"
               ("http://www.erlang.org/doc/man/gl.html#getQueryObjectiv-2" "getQueryObjectiv(Id, Pname) -> integer()")
               "gl:getQueryiv/2"
               ("http://www.erlang.org/doc/man/gl.html#getQueryiv-2" "getQueryiv(Target, Pname) -> integer()")
               "gl:endQuery/1"
               ("http://www.erlang.org/doc/man/gl.html#endQuery-1" "endQuery(Target) -> ok")
               "gl:beginQuery/2"
               ("http://www.erlang.org/doc/man/gl.html#beginQuery-2" "beginQuery(Target, Id) -> ok")
               "gl:isQuery/1"
               ("http://www.erlang.org/doc/man/gl.html#isQuery-1" "isQuery(Id) -> 0 | 1")
               "gl:deleteQueries/1"
               ("http://www.erlang.org/doc/man/gl.html#deleteQueries-1" "deleteQueries(Ids) -> ok")
               "gl:genQueries/1"
               ("http://www.erlang.org/doc/man/gl.html#genQueries-1" "genQueries(N) -> [integer()]")
               "gl:windowPos3sv/1"
               ("http://www.erlang.org/doc/man/gl.html#windowPos3sv-1" "windowPos3sv(V) -> ok")
               "gl:windowPos3s/3"
               ("http://www.erlang.org/doc/man/gl.html#windowPos3s-3" "windowPos3s(X, Y, Z) -> ok")
               "gl:windowPos3iv/1"
               ("http://www.erlang.org/doc/man/gl.html#windowPos3iv-1" "windowPos3iv(V) -> ok")
               "gl:windowPos3i/3"
               ("http://www.erlang.org/doc/man/gl.html#windowPos3i-3" "windowPos3i(X, Y, Z) -> ok")
               "gl:windowPos3fv/1"
               ("http://www.erlang.org/doc/man/gl.html#windowPos3fv-1" "windowPos3fv(V) -> ok")
               "gl:windowPos3f/3"
               ("http://www.erlang.org/doc/man/gl.html#windowPos3f-3" "windowPos3f(X, Y, Z) -> ok")
               "gl:windowPos3dv/1"
               ("http://www.erlang.org/doc/man/gl.html#windowPos3dv-1" "windowPos3dv(V) -> ok")
               "gl:windowPos3d/3"
               ("http://www.erlang.org/doc/man/gl.html#windowPos3d-3" "windowPos3d(X, Y, Z) -> ok")
               "gl:windowPos2sv/1"
               ("http://www.erlang.org/doc/man/gl.html#windowPos2sv-1" "windowPos2sv(V) -> ok")
               "gl:windowPos2s/2"
               ("http://www.erlang.org/doc/man/gl.html#windowPos2s-2" "windowPos2s(X, Y) -> ok")
               "gl:windowPos2iv/1"
               ("http://www.erlang.org/doc/man/gl.html#windowPos2iv-1" "windowPos2iv(V) -> ok")
               "gl:windowPos2i/2"
               ("http://www.erlang.org/doc/man/gl.html#windowPos2i-2" "windowPos2i(X, Y) -> ok")
               "gl:windowPos2fv/1"
               ("http://www.erlang.org/doc/man/gl.html#windowPos2fv-1" "windowPos2fv(V) -> ok")
               "gl:windowPos2f/2"
               ("http://www.erlang.org/doc/man/gl.html#windowPos2f-2" "windowPos2f(X, Y) -> ok")
               "gl:windowPos2dv/1"
               ("http://www.erlang.org/doc/man/gl.html#windowPos2dv-1" "windowPos2dv(V) -> ok")
               "gl:windowPos2d/2"
               ("http://www.erlang.org/doc/man/gl.html#windowPos2d-2" "windowPos2d(X, Y) -> ok")
               "gl:secondaryColorPointer/4"
               ("http://www.erlang.org/doc/man/gl.html#secondaryColorPointer-4" "secondaryColorPointer(Size, Type, Stride, Pointer) -> ok")
               "gl:secondaryColor3usv/1"
               ("http://www.erlang.org/doc/man/gl.html#secondaryColor3usv-1" "secondaryColor3usv(V) -> ok")
               "gl:secondaryColor3us/3"
               ("http://www.erlang.org/doc/man/gl.html#secondaryColor3us-3" "secondaryColor3us(Red, Green, Blue) -> ok")
               "gl:secondaryColor3uiv/1"
               ("http://www.erlang.org/doc/man/gl.html#secondaryColor3uiv-1" "secondaryColor3uiv(V) -> ok")
               "gl:secondaryColor3ui/3"
               ("http://www.erlang.org/doc/man/gl.html#secondaryColor3ui-3" "secondaryColor3ui(Red, Green, Blue) -> ok")
               "gl:secondaryColor3ubv/1"
               ("http://www.erlang.org/doc/man/gl.html#secondaryColor3ubv-1" "secondaryColor3ubv(V) -> ok")
               "gl:secondaryColor3ub/3"
               ("http://www.erlang.org/doc/man/gl.html#secondaryColor3ub-3" "secondaryColor3ub(Red, Green, Blue) -> ok")
               "gl:secondaryColor3sv/1"
               ("http://www.erlang.org/doc/man/gl.html#secondaryColor3sv-1" "secondaryColor3sv(V) -> ok")
               "gl:secondaryColor3s/3"
               ("http://www.erlang.org/doc/man/gl.html#secondaryColor3s-3" "secondaryColor3s(Red, Green, Blue) -> ok")
               "gl:secondaryColor3iv/1"
               ("http://www.erlang.org/doc/man/gl.html#secondaryColor3iv-1" "secondaryColor3iv(V) -> ok")
               "gl:secondaryColor3i/3"
               ("http://www.erlang.org/doc/man/gl.html#secondaryColor3i-3" "secondaryColor3i(Red, Green, Blue) -> ok")
               "gl:secondaryColor3fv/1"
               ("http://www.erlang.org/doc/man/gl.html#secondaryColor3fv-1" "secondaryColor3fv(V) -> ok")
               "gl:secondaryColor3f/3"
               ("http://www.erlang.org/doc/man/gl.html#secondaryColor3f-3" "secondaryColor3f(Red, Green, Blue) -> ok")
               "gl:secondaryColor3dv/1"
               ("http://www.erlang.org/doc/man/gl.html#secondaryColor3dv-1" "secondaryColor3dv(V) -> ok")
               "gl:secondaryColor3d/3"
               ("http://www.erlang.org/doc/man/gl.html#secondaryColor3d-3" "secondaryColor3d(Red, Green, Blue) -> ok")
               "gl:secondaryColor3bv/1"
               ("http://www.erlang.org/doc/man/gl.html#secondaryColor3bv-1" "secondaryColor3bv(V) -> ok")
               "gl:secondaryColor3b/3"
               ("http://www.erlang.org/doc/man/gl.html#secondaryColor3b-3" "secondaryColor3b(Red, Green, Blue) -> ok")
               "gl:fogCoordPointer/3"
               ("http://www.erlang.org/doc/man/gl.html#fogCoordPointer-3" "fogCoordPointer(Type, Stride, Pointer) -> ok")
               "gl:fogCoorddv/1"
               ("http://www.erlang.org/doc/man/gl.html#fogCoorddv-1" "fogCoorddv(Coord) -> ok")
               "gl:fogCoordd/1"
               ("http://www.erlang.org/doc/man/gl.html#fogCoordd-1" "fogCoordd(Coord) -> ok")
               "gl:fogCoordfv/1"
               ("http://www.erlang.org/doc/man/gl.html#fogCoordfv-1" "fogCoordfv(Coord) -> ok")
               "gl:fogCoordf/1"
               ("http://www.erlang.org/doc/man/gl.html#fogCoordf-1" "fogCoordf(Coord) -> ok")
               "gl:pointParameteriv/2"
               ("http://www.erlang.org/doc/man/gl.html#pointParameteriv-2" "pointParameteriv(Pname, Params) -> ok")
               "gl:pointParameteri/2"
               ("http://www.erlang.org/doc/man/gl.html#pointParameteri-2" "pointParameteri(Pname, Param) -> ok")
               "gl:pointParameterfv/2"
               ("http://www.erlang.org/doc/man/gl.html#pointParameterfv-2" "pointParameterfv(Pname, Params) -> ok")
               "gl:pointParameterf/2"
               ("http://www.erlang.org/doc/man/gl.html#pointParameterf-2" "pointParameterf(Pname, Param) -> ok")
               "gl:multiDrawArrays/3"
               ("http://www.erlang.org/doc/man/gl.html#multiDrawArrays-3" "multiDrawArrays(Mode, First, Count) -> ok")
               "gl:blendFuncSeparate/4"
               ("http://www.erlang.org/doc/man/gl.html#blendFuncSeparate-4" "blendFuncSeparate(SfactorRGB, DfactorRGB, SfactorAlpha, DfactorAlpha) -> ok")
               "gl:multTransposeMatrixd/1"
               ("http://www.erlang.org/doc/man/gl.html#multTransposeMatrixd-1" "multTransposeMatrixd(M) -> ok")
               "gl:multTransposeMatrixf/1"
               ("http://www.erlang.org/doc/man/gl.html#multTransposeMatrixf-1" "multTransposeMatrixf(M) -> ok")
               "gl:loadTransposeMatrixd/1"
               ("http://www.erlang.org/doc/man/gl.html#loadTransposeMatrixd-1" "loadTransposeMatrixd(M) -> ok")
               "gl:loadTransposeMatrixf/1"
               ("http://www.erlang.org/doc/man/gl.html#loadTransposeMatrixf-1" "loadTransposeMatrixf(M) -> ok")
               "gl:multiTexCoord4sv/2"
               ("http://www.erlang.org/doc/man/gl.html#multiTexCoord4sv-2" "multiTexCoord4sv(Target:: enum() , V) -> ok")
               "gl:multiTexCoord4s/5"
               ("http://www.erlang.org/doc/man/gl.html#multiTexCoord4s-5" "multiTexCoord4s(Target, S, T, R, Q) -> ok")
               "gl:multiTexCoord4iv/2"
               ("http://www.erlang.org/doc/man/gl.html#multiTexCoord4iv-2" "multiTexCoord4iv(Target:: enum() , V) -> ok")
               "gl:multiTexCoord4i/5"
               ("http://www.erlang.org/doc/man/gl.html#multiTexCoord4i-5" "multiTexCoord4i(Target, S, T, R, Q) -> ok")
               "gl:multiTexCoord4fv/2"
               ("http://www.erlang.org/doc/man/gl.html#multiTexCoord4fv-2" "multiTexCoord4fv(Target:: enum() , V) -> ok")
               "gl:multiTexCoord4f/5"
               ("http://www.erlang.org/doc/man/gl.html#multiTexCoord4f-5" "multiTexCoord4f(Target, S, T, R, Q) -> ok")
               "gl:multiTexCoord4dv/2"
               ("http://www.erlang.org/doc/man/gl.html#multiTexCoord4dv-2" "multiTexCoord4dv(Target:: enum() , V) -> ok")
               "gl:multiTexCoord4d/5"
               ("http://www.erlang.org/doc/man/gl.html#multiTexCoord4d-5" "multiTexCoord4d(Target, S, T, R, Q) -> ok")
               "gl:multiTexCoord3sv/2"
               ("http://www.erlang.org/doc/man/gl.html#multiTexCoord3sv-2" "multiTexCoord3sv(Target:: enum() , V) -> ok")
               "gl:multiTexCoord3s/4"
               ("http://www.erlang.org/doc/man/gl.html#multiTexCoord3s-4" "multiTexCoord3s(Target, S, T, R) -> ok")
               "gl:multiTexCoord3iv/2"
               ("http://www.erlang.org/doc/man/gl.html#multiTexCoord3iv-2" "multiTexCoord3iv(Target:: enum() , V) -> ok")
               "gl:multiTexCoord3i/4"
               ("http://www.erlang.org/doc/man/gl.html#multiTexCoord3i-4" "multiTexCoord3i(Target, S, T, R) -> ok")
               "gl:multiTexCoord3fv/2"
               ("http://www.erlang.org/doc/man/gl.html#multiTexCoord3fv-2" "multiTexCoord3fv(Target:: enum() , V) -> ok")
               "gl:multiTexCoord3f/4"
               ("http://www.erlang.org/doc/man/gl.html#multiTexCoord3f-4" "multiTexCoord3f(Target, S, T, R) -> ok")
               "gl:multiTexCoord3dv/2"
               ("http://www.erlang.org/doc/man/gl.html#multiTexCoord3dv-2" "multiTexCoord3dv(Target:: enum() , V) -> ok")
               "gl:multiTexCoord3d/4"
               ("http://www.erlang.org/doc/man/gl.html#multiTexCoord3d-4" "multiTexCoord3d(Target, S, T, R) -> ok")
               "gl:multiTexCoord2sv/2"
               ("http://www.erlang.org/doc/man/gl.html#multiTexCoord2sv-2" "multiTexCoord2sv(Target:: enum() , V) -> ok")
               "gl:multiTexCoord2s/3"
               ("http://www.erlang.org/doc/man/gl.html#multiTexCoord2s-3" "multiTexCoord2s(Target, S, T) -> ok")
               "gl:multiTexCoord2iv/2"
               ("http://www.erlang.org/doc/man/gl.html#multiTexCoord2iv-2" "multiTexCoord2iv(Target:: enum() , V) -> ok")
               "gl:multiTexCoord2i/3"
               ("http://www.erlang.org/doc/man/gl.html#multiTexCoord2i-3" "multiTexCoord2i(Target, S, T) -> ok")
               "gl:multiTexCoord2fv/2"
               ("http://www.erlang.org/doc/man/gl.html#multiTexCoord2fv-2" "multiTexCoord2fv(Target:: enum() , V) -> ok")
               "gl:multiTexCoord2f/3"
               ("http://www.erlang.org/doc/man/gl.html#multiTexCoord2f-3" "multiTexCoord2f(Target, S, T) -> ok")
               "gl:multiTexCoord2dv/2"
               ("http://www.erlang.org/doc/man/gl.html#multiTexCoord2dv-2" "multiTexCoord2dv(Target:: enum() , V) -> ok")
               "gl:multiTexCoord2d/3"
               ("http://www.erlang.org/doc/man/gl.html#multiTexCoord2d-3" "multiTexCoord2d(Target, S, T) -> ok")
               "gl:multiTexCoord1sv/2"
               ("http://www.erlang.org/doc/man/gl.html#multiTexCoord1sv-2" "multiTexCoord1sv(Target:: enum() , V) -> ok")
               "gl:multiTexCoord1s/2"
               ("http://www.erlang.org/doc/man/gl.html#multiTexCoord1s-2" "multiTexCoord1s(Target, S) -> ok")
               "gl:multiTexCoord1iv/2"
               ("http://www.erlang.org/doc/man/gl.html#multiTexCoord1iv-2" "multiTexCoord1iv(Target:: enum() , V) -> ok")
               "gl:multiTexCoord1i/2"
               ("http://www.erlang.org/doc/man/gl.html#multiTexCoord1i-2" "multiTexCoord1i(Target, S) -> ok")
               "gl:multiTexCoord1fv/2"
               ("http://www.erlang.org/doc/man/gl.html#multiTexCoord1fv-2" "multiTexCoord1fv(Target:: enum() , V) -> ok")
               "gl:multiTexCoord1f/2"
               ("http://www.erlang.org/doc/man/gl.html#multiTexCoord1f-2" "multiTexCoord1f(Target, S) -> ok")
               "gl:multiTexCoord1dv/2"
               ("http://www.erlang.org/doc/man/gl.html#multiTexCoord1dv-2" "multiTexCoord1dv(Target:: enum() , V) -> ok")
               "gl:multiTexCoord1d/2"
               ("http://www.erlang.org/doc/man/gl.html#multiTexCoord1d-2" "multiTexCoord1d(Target, S) -> ok")
               "gl:clientActiveTexture/1"
               ("http://www.erlang.org/doc/man/gl.html#clientActiveTexture-1" "clientActiveTexture(Texture) -> ok")
               "gl:getCompressedTexImage/3"
               ("http://www.erlang.org/doc/man/gl.html#getCompressedTexImage-3" "getCompressedTexImage(Target, Lod, Img) -> ok")
               "gl:compressedTexSubImage1D/7"
               ("http://www.erlang.org/doc/man/gl.html#compressedTexSubImage1D-7" "compressedTexSubImage1D(Target, Level, Xoffset, Width, Format, ImageSize, Data) -> ok")
               "gl:compressedTexSubImage2D/9"
               ("http://www.erlang.org/doc/man/gl.html#compressedTexSubImage2D-9" "compressedTexSubImage2D(Target, Level, Xoffset, Yoffset, Width, Height, Format, ImageSize, Data) -> ok")
               "gl:compressedTexSubImage3D/11"
               ("http://www.erlang.org/doc/man/gl.html#compressedTexSubImage3D-11" "compressedTexSubImage3D(Target, Level, Xoffset, Yoffset, Zoffset, Width, Height, Depth, Format, ImageSize, Data) -> ok")
               "gl:compressedTexImage1D/7"
               ("http://www.erlang.org/doc/man/gl.html#compressedTexImage1D-7" "compressedTexImage1D(Target, Level, Internalformat, Width, Border, ImageSize, Data) -> ok")
               "gl:compressedTexImage2D/8"
               ("http://www.erlang.org/doc/man/gl.html#compressedTexImage2D-8" "compressedTexImage2D(Target, Level, Internalformat, Width, Height, Border, ImageSize, Data) -> ok")
               "gl:compressedTexImage3D/9"
               ("http://www.erlang.org/doc/man/gl.html#compressedTexImage3D-9" "compressedTexImage3D(Target, Level, Internalformat, Width, Height, Depth, Border, ImageSize, Data) -> ok")
               "gl:sampleCoverage/2"
               ("http://www.erlang.org/doc/man/gl.html#sampleCoverage-2" "sampleCoverage(Value, Invert) -> ok")
               "gl:activeTexture/1"
               ("http://www.erlang.org/doc/man/gl.html#activeTexture-1" "activeTexture(Texture) -> ok")
               "gl:resetMinmax/1"
               ("http://www.erlang.org/doc/man/gl.html#resetMinmax-1" "resetMinmax(Target) -> ok")
               "gl:resetHistogram/1"
               ("http://www.erlang.org/doc/man/gl.html#resetHistogram-1" "resetHistogram(Target) -> ok")
               "gl:minmax/3"
               ("http://www.erlang.org/doc/man/gl.html#minmax-3" "minmax(Target, Internalformat, Sink) -> ok")
               "gl:histogram/4"
               ("http://www.erlang.org/doc/man/gl.html#histogram-4" "histogram(Target, Width, Internalformat, Sink) -> ok")
               "gl:getMinmaxParameteriv/2"
               ("http://www.erlang.org/doc/man/gl.html#getMinmaxParameteriv-2" "getMinmaxParameteriv(Target, Pname) -> {integer()}")
               "gl:getMinmaxParameterfv/2"
               ("http://www.erlang.org/doc/man/gl.html#getMinmaxParameterfv-2" "getMinmaxParameterfv(Target, Pname) -> {float()}")
               "gl:getMinmax/5"
               ("http://www.erlang.org/doc/man/gl.html#getMinmax-5" "getMinmax(Target, Reset, Format, Types, Values) -> ok")
               "gl:getHistogramParameteriv/2"
               ("http://www.erlang.org/doc/man/gl.html#getHistogramParameteriv-2" "getHistogramParameteriv(Target, Pname) -> {integer()}")
               "gl:getHistogramParameterfv/2"
               ("http://www.erlang.org/doc/man/gl.html#getHistogramParameterfv-2" "getHistogramParameterfv(Target, Pname) -> {float()}")
               "gl:getHistogram/5"
               ("http://www.erlang.org/doc/man/gl.html#getHistogram-5" "getHistogram(Target, Reset, Format, Type, Values) -> ok")
               "gl:separableFilter2D/8"
               ("http://www.erlang.org/doc/man/gl.html#separableFilter2D-8" "separableFilter2D(Target, Internalformat, Width, Height, Format, Type, Row, Column) -> ok")
               "gl:getConvolutionParameteriv/2"
               ("http://www.erlang.org/doc/man/gl.html#getConvolutionParameteriv-2" "getConvolutionParameteriv(Target, Pname) -> {integer(), integer(), integer(), integer()}")
               "gl:getConvolutionParameterfv/2"
               ("http://www.erlang.org/doc/man/gl.html#getConvolutionParameterfv-2" "getConvolutionParameterfv(Target, Pname) -> {float(), float(), float(), float()}")
               "gl:getConvolutionFilter/4"
               ("http://www.erlang.org/doc/man/gl.html#getConvolutionFilter-4" "getConvolutionFilter(Target, Format, Type, Image) -> ok")
               "gl:copyConvolutionFilter2D/6"
               ("http://www.erlang.org/doc/man/gl.html#copyConvolutionFilter2D-6" "copyConvolutionFilter2D(Target, Internalformat, X, Y, Width, Height) -> ok")
               "gl:copyConvolutionFilter1D/5"
               ("http://www.erlang.org/doc/man/gl.html#copyConvolutionFilter1D-5" "copyConvolutionFilter1D(Target, Internalformat, X, Y, Width) -> ok")
               "gl:convolutionParameteriv/3"
               ("http://www.erlang.org/doc/man/gl.html#convolutionParameteriv-3" "convolutionParameteriv(Target:: enum() , Pname:: enum() , Params) -> ok")
               "gl:convolutionParameteri/3"
               ("http://www.erlang.org/doc/man/gl.html#convolutionParameteri-3" "convolutionParameteri(Target, Pname, Params) -> ok")
               "gl:convolutionParameterfv/3"
               ("http://www.erlang.org/doc/man/gl.html#convolutionParameterfv-3" "convolutionParameterfv(Target:: enum() , Pname:: enum() , Params) -> ok")
               "gl:convolutionParameterf/3"
               ("http://www.erlang.org/doc/man/gl.html#convolutionParameterf-3" "convolutionParameterf(Target, Pname, Params) -> ok")
               "gl:convolutionFilter2D/7"
               ("http://www.erlang.org/doc/man/gl.html#convolutionFilter2D-7" "convolutionFilter2D(Target, Internalformat, Width, Height, Format, Type, Image) -> ok")
               "gl:convolutionFilter1D/6"
               ("http://www.erlang.org/doc/man/gl.html#convolutionFilter1D-6" "convolutionFilter1D(Target, Internalformat, Width, Format, Type, Image) -> ok")
               "gl:copyColorSubTable/5"
               ("http://www.erlang.org/doc/man/gl.html#copyColorSubTable-5" "copyColorSubTable(Target, Start, X, Y, Width) -> ok")
               "gl:colorSubTable/6"
               ("http://www.erlang.org/doc/man/gl.html#colorSubTable-6" "colorSubTable(Target, Start, Count, Format, Type, Data) -> ok")
               "gl:getColorTableParameteriv/2"
               ("http://www.erlang.org/doc/man/gl.html#getColorTableParameteriv-2" "getColorTableParameteriv(Target, Pname) -> {integer(), integer(), integer(), integer()}")
               "gl:getColorTableParameterfv/2"
               ("http://www.erlang.org/doc/man/gl.html#getColorTableParameterfv-2" "getColorTableParameterfv(Target, Pname) -> {float(), float(), float(), float()}")
               "gl:getColorTable/4"
               ("http://www.erlang.org/doc/man/gl.html#getColorTable-4" "getColorTable(Target, Format, Type, Table) -> ok")
               "gl:copyColorTable/5"
               ("http://www.erlang.org/doc/man/gl.html#copyColorTable-5" "copyColorTable(Target, Internalformat, X, Y, Width) -> ok")
               "gl:colorTableParameteriv/3"
               ("http://www.erlang.org/doc/man/gl.html#colorTableParameteriv-3" "colorTableParameteriv(Target, Pname, Params) -> ok")
               "gl:colorTableParameterfv/3"
               ("http://www.erlang.org/doc/man/gl.html#colorTableParameterfv-3" "colorTableParameterfv(Target, Pname, Params) -> ok")
               "gl:colorTable/6"
               ("http://www.erlang.org/doc/man/gl.html#colorTable-6" "colorTable(Target, Internalformat, Width, Format, Type, Table) -> ok")
               "gl:copyTexSubImage3D/9"
               ("http://www.erlang.org/doc/man/gl.html#copyTexSubImage3D-9" "copyTexSubImage3D(Target, Level, Xoffset, Yoffset, Zoffset, X, Y, Width, Height) -> ok")
               "gl:texSubImage3D/11"
               ("http://www.erlang.org/doc/man/gl.html#texSubImage3D-11" "texSubImage3D(Target, Level, Xoffset, Yoffset, Zoffset, Width, Height, Depth, Format, Type, Pixels) -> ok")
               "gl:texImage3D/10"
               ("http://www.erlang.org/doc/man/gl.html#texImage3D-10" "texImage3D(Target, Level, InternalFormat, Width, Height, Depth, Border, Format, Type, Pixels) -> ok")
               "gl:drawRangeElements/6"
               ("http://www.erlang.org/doc/man/gl.html#drawRangeElements-6" "drawRangeElements(Mode, Start, End, Count, Type, Indices) -> ok")
               "gl:blendEquation/1"
               ("http://www.erlang.org/doc/man/gl.html#blendEquation-1" "blendEquation(Mode) -> ok")
               "gl:blendColor/4"
               ("http://www.erlang.org/doc/man/gl.html#blendColor-4" "blendColor(Red, Green, Blue, Alpha) -> ok")
               "gl:popName/0"
               ("http://www.erlang.org/doc/man/gl.html#popName-0" "popName() -> ok")
               "gl:pushName/1"
               ("http://www.erlang.org/doc/man/gl.html#pushName-1" "pushName(Name) -> ok")
               "gl:loadName/1"
               ("http://www.erlang.org/doc/man/gl.html#loadName-1" "loadName(Name) -> ok")
               "gl:initNames/0"
               ("http://www.erlang.org/doc/man/gl.html#initNames-0" "initNames() -> ok")
               "gl:selectBuffer/2"
               ("http://www.erlang.org/doc/man/gl.html#selectBuffer-2" "selectBuffer(Size, Buffer) -> ok")
               "gl:passThrough/1"
               ("http://www.erlang.org/doc/man/gl.html#passThrough-1" "passThrough(Token) -> ok")
               "gl:feedbackBuffer/3"
               ("http://www.erlang.org/doc/man/gl.html#feedbackBuffer-3" "feedbackBuffer(Size, Type, Buffer) -> ok")
               "gl:fogiv/2"
               ("http://www.erlang.org/doc/man/gl.html#fogiv-2" "fogiv(Pname, Params) -> ok")
               "gl:fogfv/2"
               ("http://www.erlang.org/doc/man/gl.html#fogfv-2" "fogfv(Pname, Params) -> ok")
               "gl:fogi/2"
               ("http://www.erlang.org/doc/man/gl.html#fogi-2" "fogi(Pname, Param) -> ok")
               "gl:fogf/2"
               ("http://www.erlang.org/doc/man/gl.html#fogf-2" "fogf(Pname, Param) -> ok")
               "gl:evalMesh2/5"
               ("http://www.erlang.org/doc/man/gl.html#evalMesh2-5" "evalMesh2(Mode, I1, I2, J1, J2) -> ok")
               "gl:evalMesh1/3"
               ("http://www.erlang.org/doc/man/gl.html#evalMesh1-3" "evalMesh1(Mode, I1, I2) -> ok")
               "gl:evalPoint2/2"
               ("http://www.erlang.org/doc/man/gl.html#evalPoint2-2" "evalPoint2(I, J) -> ok")
               "gl:evalPoint1/1"
               ("http://www.erlang.org/doc/man/gl.html#evalPoint1-1" "evalPoint1(I) -> ok")
               "gl:mapGrid2f/6"
               ("http://www.erlang.org/doc/man/gl.html#mapGrid2f-6" "mapGrid2f(Un, U1, U2, Vn, V1, V2) -> ok")
               "gl:mapGrid2d/6"
               ("http://www.erlang.org/doc/man/gl.html#mapGrid2d-6" "mapGrid2d(Un, U1, U2, Vn, V1, V2) -> ok")
               "gl:mapGrid1f/3"
               ("http://www.erlang.org/doc/man/gl.html#mapGrid1f-3" "mapGrid1f(Un, U1, U2) -> ok")
               "gl:mapGrid1d/3"
               ("http://www.erlang.org/doc/man/gl.html#mapGrid1d-3" "mapGrid1d(Un, U1, U2) -> ok")
               "gl:evalCoord2fv/1"
               ("http://www.erlang.org/doc/man/gl.html#evalCoord2fv-1" "evalCoord2fv(U) -> ok")
               "gl:evalCoord2dv/1"
               ("http://www.erlang.org/doc/man/gl.html#evalCoord2dv-1" "evalCoord2dv(U) -> ok")
               "gl:evalCoord2f/2"
               ("http://www.erlang.org/doc/man/gl.html#evalCoord2f-2" "evalCoord2f(U, V) -> ok")
               "gl:evalCoord2d/2"
               ("http://www.erlang.org/doc/man/gl.html#evalCoord2d-2" "evalCoord2d(U, V) -> ok")
               "gl:evalCoord1fv/1"
               ("http://www.erlang.org/doc/man/gl.html#evalCoord1fv-1" "evalCoord1fv(U) -> ok")
               "gl:evalCoord1dv/1"
               ("http://www.erlang.org/doc/man/gl.html#evalCoord1dv-1" "evalCoord1dv(U) -> ok")
               "gl:evalCoord1f/1"
               ("http://www.erlang.org/doc/man/gl.html#evalCoord1f-1" "evalCoord1f(U) -> ok")
               "gl:evalCoord1d/1"
               ("http://www.erlang.org/doc/man/gl.html#evalCoord1d-1" "evalCoord1d(U) -> ok")
               "gl:getMapiv/3"
               ("http://www.erlang.org/doc/man/gl.html#getMapiv-3" "getMapiv(Target, Query, V) -> ok")
               "gl:getMapfv/3"
               ("http://www.erlang.org/doc/man/gl.html#getMapfv-3" "getMapfv(Target, Query, V) -> ok")
               "gl:getMapdv/3"
               ("http://www.erlang.org/doc/man/gl.html#getMapdv-3" "getMapdv(Target, Query, V) -> ok")
               "gl:map2f/10"
               ("http://www.erlang.org/doc/man/gl.html#map2f-10" "map2f(Target, U1, U2, Ustride, Uorder, V1, V2, Vstride, Vorder, Points) -> ok")
               "gl:map2d/10"
               ("http://www.erlang.org/doc/man/gl.html#map2d-10" "map2d(Target, U1, U2, Ustride, Uorder, V1, V2, Vstride, Vorder, Points) -> ok")
               "gl:map1f/6"
               ("http://www.erlang.org/doc/man/gl.html#map1f-6" "map1f(Target, U1, U2, Stride, Order, Points) -> ok")
               "gl:map1d/6"
               ("http://www.erlang.org/doc/man/gl.html#map1d-6" "map1d(Target, U1, U2, Stride, Order, Points) -> ok")
               "gl:copyTexSubImage2D/8"
               ("http://www.erlang.org/doc/man/gl.html#copyTexSubImage2D-8" "copyTexSubImage2D(Target, Level, Xoffset, Yoffset, X, Y, Width, Height) -> ok")
               "gl:copyTexSubImage1D/6"
               ("http://www.erlang.org/doc/man/gl.html#copyTexSubImage1D-6" "copyTexSubImage1D(Target, Level, Xoffset, X, Y, Width) -> ok")
               "gl:copyTexImage2D/8"
               ("http://www.erlang.org/doc/man/gl.html#copyTexImage2D-8" "copyTexImage2D(Target, Level, Internalformat, X, Y, Width, Height, Border) -> ok")
               "gl:copyTexImage1D/7"
               ("http://www.erlang.org/doc/man/gl.html#copyTexImage1D-7" "copyTexImage1D(Target, Level, Internalformat, X, Y, Width, Border) -> ok")
               "gl:texSubImage2D/9"
               ("http://www.erlang.org/doc/man/gl.html#texSubImage2D-9" "texSubImage2D(Target, Level, Xoffset, Yoffset, Width, Height, Format, Type, Pixels) -> ok")
               "gl:texSubImage1D/7"
               ("http://www.erlang.org/doc/man/gl.html#texSubImage1D-7" "texSubImage1D(Target, Level, Xoffset, Width, Format, Type, Pixels) -> ok")
               "gl:isTexture/1"
               ("http://www.erlang.org/doc/man/gl.html#isTexture-1" "isTexture(Texture) -> 0 | 1")
               "gl:areTexturesResident/1"
               ("http://www.erlang.org/doc/man/gl.html#areTexturesResident-1" "areTexturesResident(Textures) -> {0 | 1, Residences::[0 | 1]}")
               "gl:prioritizeTextures/2"
               ("http://www.erlang.org/doc/man/gl.html#prioritizeTextures-2" "prioritizeTextures(Textures, Priorities) -> ok")
               "gl:bindTexture/2"
               ("http://www.erlang.org/doc/man/gl.html#bindTexture-2" "bindTexture(Target, Texture) -> ok")
               "gl:deleteTextures/1"
               ("http://www.erlang.org/doc/man/gl.html#deleteTextures-1" "deleteTextures(Textures) -> ok")
               "gl:genTextures/1"
               ("http://www.erlang.org/doc/man/gl.html#genTextures-1" "genTextures(N) -> [integer()]")
               "gl:getTexImage/5"
               ("http://www.erlang.org/doc/man/gl.html#getTexImage-5" "getTexImage(Target, Level, Format, Type, Pixels) -> ok")
               "gl:texImage2D/9"
               ("http://www.erlang.org/doc/man/gl.html#texImage2D-9" "texImage2D(Target, Level, InternalFormat, Width, Height, Border, Format, Type, Pixels) -> ok")
               "gl:texImage1D/8"
               ("http://www.erlang.org/doc/man/gl.html#texImage1D-8" "texImage1D(Target, Level, InternalFormat, Width, Border, Format, Type, Pixels) -> ok")
               "gl:getTexLevelParameteriv/3"
               ("http://www.erlang.org/doc/man/gl.html#getTexLevelParameteriv-3" "getTexLevelParameteriv(Target, Level, Pname) -> {integer()}")
               "gl:getTexLevelParameterfv/3"
               ("http://www.erlang.org/doc/man/gl.html#getTexLevelParameterfv-3" "getTexLevelParameterfv(Target, Level, Pname) -> {float()}")
               "gl:getTexParameteriv/2"
               ("http://www.erlang.org/doc/man/gl.html#getTexParameteriv-2" "getTexParameteriv(Target, Pname) -> {integer(), integer(), integer(), integer()}")
               "gl:getTexParameterfv/2"
               ("http://www.erlang.org/doc/man/gl.html#getTexParameterfv-2" "getTexParameterfv(Target, Pname) -> {float(), float(), float(), float()}")
               "gl:texParameteriv/3"
               ("http://www.erlang.org/doc/man/gl.html#texParameteriv-3" "texParameteriv(Target, Pname, Params) -> ok")
               "gl:texParameterfv/3"
               ("http://www.erlang.org/doc/man/gl.html#texParameterfv-3" "texParameterfv(Target, Pname, Params) -> ok")
               "gl:texParameteri/3"
               ("http://www.erlang.org/doc/man/gl.html#texParameteri-3" "texParameteri(Target, Pname, Param) -> ok")
               "gl:texParameterf/3"
               ("http://www.erlang.org/doc/man/gl.html#texParameterf-3" "texParameterf(Target, Pname, Param) -> ok")
               "gl:getTexEnviv/2"
               ("http://www.erlang.org/doc/man/gl.html#getTexEnviv-2" "getTexEnviv(Target, Pname) -> {integer(), integer(), integer(), integer()}")
               "gl:getTexEnvfv/2"
               ("http://www.erlang.org/doc/man/gl.html#getTexEnvfv-2" "getTexEnvfv(Target, Pname) -> {float(), float(), float(), float()}")
               "gl:texEnviv/3"
               ("http://www.erlang.org/doc/man/gl.html#texEnviv-3" "texEnviv(Target, Pname, Params) -> ok")
               "gl:texEnvfv/3"
               ("http://www.erlang.org/doc/man/gl.html#texEnvfv-3" "texEnvfv(Target, Pname, Params) -> ok")
               "gl:texEnvi/3"
               ("http://www.erlang.org/doc/man/gl.html#texEnvi-3" "texEnvi(Target, Pname, Param) -> ok")
               "gl:texEnvf/3"
               ("http://www.erlang.org/doc/man/gl.html#texEnvf-3" "texEnvf(Target, Pname, Param) -> ok")
               "gl:getTexGeniv/2"
               ("http://www.erlang.org/doc/man/gl.html#getTexGeniv-2" "getTexGeniv(Coord, Pname) -> {integer(), integer(), integer(), integer()}")
               "gl:getTexGenfv/2"
               ("http://www.erlang.org/doc/man/gl.html#getTexGenfv-2" "getTexGenfv(Coord, Pname) -> {float(), float(), float(), float()}")
               "gl:getTexGendv/2"
               ("http://www.erlang.org/doc/man/gl.html#getTexGendv-2" "getTexGendv(Coord, Pname) -> {float(), float(), float(), float()}")
               "gl:texGeniv/3"
               ("http://www.erlang.org/doc/man/gl.html#texGeniv-3" "texGeniv(Coord, Pname, Params) -> ok")
               "gl:texGenfv/3"
               ("http://www.erlang.org/doc/man/gl.html#texGenfv-3" "texGenfv(Coord, Pname, Params) -> ok")
               "gl:texGendv/3"
               ("http://www.erlang.org/doc/man/gl.html#texGendv-3" "texGendv(Coord, Pname, Params) -> ok")
               "gl:texGeni/3"
               ("http://www.erlang.org/doc/man/gl.html#texGeni-3" "texGeni(Coord, Pname, Param) -> ok")
               "gl:texGenf/3"
               ("http://www.erlang.org/doc/man/gl.html#texGenf-3" "texGenf(Coord, Pname, Param) -> ok")
               "gl:texGend/3"
               ("http://www.erlang.org/doc/man/gl.html#texGend-3" "texGend(Coord, Pname, Param) -> ok")
               "gl:clearStencil/1"
               ("http://www.erlang.org/doc/man/gl.html#clearStencil-1" "clearStencil(S) -> ok")
               "gl:stencilOp/3"
               ("http://www.erlang.org/doc/man/gl.html#stencilOp-3" "stencilOp(Fail, Zfail, Zpass) -> ok")
               "gl:stencilMask/1"
               ("http://www.erlang.org/doc/man/gl.html#stencilMask-1" "stencilMask(Mask) -> ok")
               "gl:stencilFunc/3"
               ("http://www.erlang.org/doc/man/gl.html#stencilFunc-3" "stencilFunc(Func, Ref, Mask) -> ok")
               "gl:copyPixels/5"
               ("http://www.erlang.org/doc/man/gl.html#copyPixels-5" "copyPixels(X, Y, Width, Height, Type) -> ok")
               "gl:drawPixels/5"
               ("http://www.erlang.org/doc/man/gl.html#drawPixels-5" "drawPixels(Width, Height, Format, Type, Pixels) -> ok")
               "gl:readPixels/7"
               ("http://www.erlang.org/doc/man/gl.html#readPixels-7" "readPixels(X, Y, Width, Height, Format, Type, Pixels) -> ok")
               "gl:bitmap/7"
               ("http://www.erlang.org/doc/man/gl.html#bitmap-7" "bitmap(Width, Height, Xorig, Yorig, Xmove, Ymove, Bitmap) -> ok")
               "gl:getPixelMapusv/2"
               ("http://www.erlang.org/doc/man/gl.html#getPixelMapusv-2" "getPixelMapusv(Map, Values) -> ok")
               "gl:getPixelMapuiv/2"
               ("http://www.erlang.org/doc/man/gl.html#getPixelMapuiv-2" "getPixelMapuiv(Map, Values) -> ok")
               "gl:getPixelMapfv/2"
               ("http://www.erlang.org/doc/man/gl.html#getPixelMapfv-2" "getPixelMapfv(Map, Values) -> ok")
               "gl:pixelMapusv/3"
               ("http://www.erlang.org/doc/man/gl.html#pixelMapusv-3" "pixelMapusv(Map, Mapsize, Values) -> ok")
               "gl:pixelMapuiv/3"
               ("http://www.erlang.org/doc/man/gl.html#pixelMapuiv-3" "pixelMapuiv(Map, Mapsize, Values) -> ok")
               "gl:pixelMapfv/3"
               ("http://www.erlang.org/doc/man/gl.html#pixelMapfv-3" "pixelMapfv(Map, Mapsize, Values) -> ok")
               "gl:pixelTransferi/2"
               ("http://www.erlang.org/doc/man/gl.html#pixelTransferi-2" "pixelTransferi(Pname, Param) -> ok")
               "gl:pixelTransferf/2"
               ("http://www.erlang.org/doc/man/gl.html#pixelTransferf-2" "pixelTransferf(Pname, Param) -> ok")
               "gl:pixelStorei/2"
               ("http://www.erlang.org/doc/man/gl.html#pixelStorei-2" "pixelStorei(Pname, Param) -> ok")
               "gl:pixelStoref/2"
               ("http://www.erlang.org/doc/man/gl.html#pixelStoref-2" "pixelStoref(Pname, Param) -> ok")
               "gl:pixelZoom/2"
               ("http://www.erlang.org/doc/man/gl.html#pixelZoom-2" "pixelZoom(Xfactor, Yfactor) -> ok")
               "gl:colorMaterial/2"
               ("http://www.erlang.org/doc/man/gl.html#colorMaterial-2" "colorMaterial(Face, Mode) -> ok")
               "gl:getMaterialiv/2"
               ("http://www.erlang.org/doc/man/gl.html#getMaterialiv-2" "getMaterialiv(Face, Pname) -> {integer(), integer(), integer(), integer()}")
               "gl:getMaterialfv/2"
               ("http://www.erlang.org/doc/man/gl.html#getMaterialfv-2" "getMaterialfv(Face, Pname) -> {float(), float(), float(), float()}")
               "gl:materialiv/3"
               ("http://www.erlang.org/doc/man/gl.html#materialiv-3" "materialiv(Face, Pname, Params) -> ok")
               "gl:materialfv/3"
               ("http://www.erlang.org/doc/man/gl.html#materialfv-3" "materialfv(Face, Pname, Params) -> ok")
               "gl:materiali/3"
               ("http://www.erlang.org/doc/man/gl.html#materiali-3" "materiali(Face, Pname, Param) -> ok")
               "gl:materialf/3"
               ("http://www.erlang.org/doc/man/gl.html#materialf-3" "materialf(Face, Pname, Param) -> ok")
               "gl:lightModeliv/2"
               ("http://www.erlang.org/doc/man/gl.html#lightModeliv-2" "lightModeliv(Pname, Params) -> ok")
               "gl:lightModelfv/2"
               ("http://www.erlang.org/doc/man/gl.html#lightModelfv-2" "lightModelfv(Pname, Params) -> ok")
               "gl:lightModeli/2"
               ("http://www.erlang.org/doc/man/gl.html#lightModeli-2" "lightModeli(Pname, Param) -> ok")
               "gl:lightModelf/2"
               ("http://www.erlang.org/doc/man/gl.html#lightModelf-2" "lightModelf(Pname, Param) -> ok")
               "gl:getLightiv/2"
               ("http://www.erlang.org/doc/man/gl.html#getLightiv-2" "getLightiv(Light, Pname) -> {integer(), integer(), integer(), integer()}")
               "gl:getLightfv/2"
               ("http://www.erlang.org/doc/man/gl.html#getLightfv-2" "getLightfv(Light, Pname) -> {float(), float(), float(), float()}")
               "gl:lightiv/3"
               ("http://www.erlang.org/doc/man/gl.html#lightiv-3" "lightiv(Light, Pname, Params) -> ok")
               "gl:lightfv/3"
               ("http://www.erlang.org/doc/man/gl.html#lightfv-3" "lightfv(Light, Pname, Params) -> ok")
               "gl:lighti/3"
               ("http://www.erlang.org/doc/man/gl.html#lighti-3" "lighti(Light, Pname, Param) -> ok")
               "gl:lightf/3"
               ("http://www.erlang.org/doc/man/gl.html#lightf-3" "lightf(Light, Pname, Param) -> ok")
               "gl:shadeModel/1"
               ("http://www.erlang.org/doc/man/gl.html#shadeModel-1" "shadeModel(Mode) -> ok")
               "gl:interleavedArrays/3"
               ("http://www.erlang.org/doc/man/gl.html#interleavedArrays-3" "interleavedArrays(Format, Stride, Pointer) -> ok")
               "gl:drawElements/4"
               ("http://www.erlang.org/doc/man/gl.html#drawElements-4" "drawElements(Mode, Count, Type, Indices) -> ok")
               "gl:drawArrays/3"
               ("http://www.erlang.org/doc/man/gl.html#drawArrays-3" "drawArrays(Mode, First, Count) -> ok")
               "gl:arrayElement/1"
               ("http://www.erlang.org/doc/man/gl.html#arrayElement-1" "arrayElement(I) -> ok")
               "gl:edgeFlagPointer/2"
               ("http://www.erlang.org/doc/man/gl.html#edgeFlagPointer-2" "edgeFlagPointer(Stride, Ptr) -> ok")
               "gl:texCoordPointer/4"
               ("http://www.erlang.org/doc/man/gl.html#texCoordPointer-4" "texCoordPointer(Size, Type, Stride, Ptr) -> ok")
               "gl:indexPointer/3"
               ("http://www.erlang.org/doc/man/gl.html#indexPointer-3" "indexPointer(Type, Stride, Ptr) -> ok")
               "gl:colorPointer/4"
               ("http://www.erlang.org/doc/man/gl.html#colorPointer-4" "colorPointer(Size, Type, Stride, Ptr) -> ok")
               "gl:normalPointer/3"
               ("http://www.erlang.org/doc/man/gl.html#normalPointer-3" "normalPointer(Type, Stride, Ptr) -> ok")
               "gl:vertexPointer/4"
               ("http://www.erlang.org/doc/man/gl.html#vertexPointer-4" "vertexPointer(Size, Type, Stride, Ptr) -> ok")
               "gl:rectsv/2"
               ("http://www.erlang.org/doc/man/gl.html#rectsv-2" "rectsv(V1, V2) -> ok")
               "gl:rectiv/2"
               ("http://www.erlang.org/doc/man/gl.html#rectiv-2" "rectiv(V1, V2) -> ok")
               "gl:rectfv/2"
               ("http://www.erlang.org/doc/man/gl.html#rectfv-2" "rectfv(V1, V2) -> ok")
               "gl:rectdv/2"
               ("http://www.erlang.org/doc/man/gl.html#rectdv-2" "rectdv(V1, V2) -> ok")
               "gl:rects/4"
               ("http://www.erlang.org/doc/man/gl.html#rects-4" "rects(X1, Y1, X2, Y2) -> ok")
               "gl:recti/4"
               ("http://www.erlang.org/doc/man/gl.html#recti-4" "recti(X1, Y1, X2, Y2) -> ok")
               "gl:rectf/4"
               ("http://www.erlang.org/doc/man/gl.html#rectf-4" "rectf(X1, Y1, X2, Y2) -> ok")
               "gl:rectd/4"
               ("http://www.erlang.org/doc/man/gl.html#rectd-4" "rectd(X1, Y1, X2, Y2) -> ok")
               "gl:rasterPos4sv/1"
               ("http://www.erlang.org/doc/man/gl.html#rasterPos4sv-1" "rasterPos4sv(V) -> ok")
               "gl:rasterPos4iv/1"
               ("http://www.erlang.org/doc/man/gl.html#rasterPos4iv-1" "rasterPos4iv(V) -> ok")
               "gl:rasterPos4fv/1"
               ("http://www.erlang.org/doc/man/gl.html#rasterPos4fv-1" "rasterPos4fv(V) -> ok")
               "gl:rasterPos4dv/1"
               ("http://www.erlang.org/doc/man/gl.html#rasterPos4dv-1" "rasterPos4dv(V) -> ok")
               "gl:rasterPos3sv/1"
               ("http://www.erlang.org/doc/man/gl.html#rasterPos3sv-1" "rasterPos3sv(V) -> ok")
               "gl:rasterPos3iv/1"
               ("http://www.erlang.org/doc/man/gl.html#rasterPos3iv-1" "rasterPos3iv(V) -> ok")
               "gl:rasterPos3fv/1"
               ("http://www.erlang.org/doc/man/gl.html#rasterPos3fv-1" "rasterPos3fv(V) -> ok")
               "gl:rasterPos3dv/1"
               ("http://www.erlang.org/doc/man/gl.html#rasterPos3dv-1" "rasterPos3dv(V) -> ok")
               "gl:rasterPos2sv/1"
               ("http://www.erlang.org/doc/man/gl.html#rasterPos2sv-1" "rasterPos2sv(V) -> ok")
               "gl:rasterPos2iv/1"
               ("http://www.erlang.org/doc/man/gl.html#rasterPos2iv-1" "rasterPos2iv(V) -> ok")
               "gl:rasterPos2fv/1"
               ("http://www.erlang.org/doc/man/gl.html#rasterPos2fv-1" "rasterPos2fv(V) -> ok")
               "gl:rasterPos2dv/1"
               ("http://www.erlang.org/doc/man/gl.html#rasterPos2dv-1" "rasterPos2dv(V) -> ok")
               "gl:rasterPos4s/4"
               ("http://www.erlang.org/doc/man/gl.html#rasterPos4s-4" "rasterPos4s(X, Y, Z, W) -> ok")
               "gl:rasterPos4i/4"
               ("http://www.erlang.org/doc/man/gl.html#rasterPos4i-4" "rasterPos4i(X, Y, Z, W) -> ok")
               "gl:rasterPos4f/4"
               ("http://www.erlang.org/doc/man/gl.html#rasterPos4f-4" "rasterPos4f(X, Y, Z, W) -> ok")
               "gl:rasterPos4d/4"
               ("http://www.erlang.org/doc/man/gl.html#rasterPos4d-4" "rasterPos4d(X, Y, Z, W) -> ok")
               "gl:rasterPos3s/3"
               ("http://www.erlang.org/doc/man/gl.html#rasterPos3s-3" "rasterPos3s(X, Y, Z) -> ok")
               "gl:rasterPos3i/3"
               ("http://www.erlang.org/doc/man/gl.html#rasterPos3i-3" "rasterPos3i(X, Y, Z) -> ok")
               "gl:rasterPos3f/3"
               ("http://www.erlang.org/doc/man/gl.html#rasterPos3f-3" "rasterPos3f(X, Y, Z) -> ok")
               "gl:rasterPos3d/3"
               ("http://www.erlang.org/doc/man/gl.html#rasterPos3d-3" "rasterPos3d(X, Y, Z) -> ok")
               "gl:rasterPos2s/2"
               ("http://www.erlang.org/doc/man/gl.html#rasterPos2s-2" "rasterPos2s(X, Y) -> ok")
               "gl:rasterPos2i/2"
               ("http://www.erlang.org/doc/man/gl.html#rasterPos2i-2" "rasterPos2i(X, Y) -> ok")
               "gl:rasterPos2f/2"
               ("http://www.erlang.org/doc/man/gl.html#rasterPos2f-2" "rasterPos2f(X, Y) -> ok")
               "gl:rasterPos2d/2"
               ("http://www.erlang.org/doc/man/gl.html#rasterPos2d-2" "rasterPos2d(X, Y) -> ok")
               "gl:texCoord4sv/1"
               ("http://www.erlang.org/doc/man/gl.html#texCoord4sv-1" "texCoord4sv(V) -> ok")
               "gl:texCoord4iv/1"
               ("http://www.erlang.org/doc/man/gl.html#texCoord4iv-1" "texCoord4iv(V) -> ok")
               "gl:texCoord4fv/1"
               ("http://www.erlang.org/doc/man/gl.html#texCoord4fv-1" "texCoord4fv(V) -> ok")
               "gl:texCoord4dv/1"
               ("http://www.erlang.org/doc/man/gl.html#texCoord4dv-1" "texCoord4dv(V) -> ok")
               "gl:texCoord3sv/1"
               ("http://www.erlang.org/doc/man/gl.html#texCoord3sv-1" "texCoord3sv(V) -> ok")
               "gl:texCoord3iv/1"
               ("http://www.erlang.org/doc/man/gl.html#texCoord3iv-1" "texCoord3iv(V) -> ok")
               "gl:texCoord3fv/1"
               ("http://www.erlang.org/doc/man/gl.html#texCoord3fv-1" "texCoord3fv(V) -> ok")
               "gl:texCoord3dv/1"
               ("http://www.erlang.org/doc/man/gl.html#texCoord3dv-1" "texCoord3dv(V) -> ok")
               "gl:texCoord2sv/1"
               ("http://www.erlang.org/doc/man/gl.html#texCoord2sv-1" "texCoord2sv(V) -> ok")
               "gl:texCoord2iv/1"
               ("http://www.erlang.org/doc/man/gl.html#texCoord2iv-1" "texCoord2iv(V) -> ok")
               "gl:texCoord2fv/1"
               ("http://www.erlang.org/doc/man/gl.html#texCoord2fv-1" "texCoord2fv(V) -> ok")
               "gl:texCoord2dv/1"
               ("http://www.erlang.org/doc/man/gl.html#texCoord2dv-1" "texCoord2dv(V) -> ok")
               "gl:texCoord1sv/1"
               ("http://www.erlang.org/doc/man/gl.html#texCoord1sv-1" "texCoord1sv(V) -> ok")
               "gl:texCoord1iv/1"
               ("http://www.erlang.org/doc/man/gl.html#texCoord1iv-1" "texCoord1iv(V) -> ok")
               "gl:texCoord1fv/1"
               ("http://www.erlang.org/doc/man/gl.html#texCoord1fv-1" "texCoord1fv(V) -> ok")
               "gl:texCoord1dv/1"
               ("http://www.erlang.org/doc/man/gl.html#texCoord1dv-1" "texCoord1dv(V) -> ok")
               "gl:texCoord4s/4"
               ("http://www.erlang.org/doc/man/gl.html#texCoord4s-4" "texCoord4s(S, T, R, Q) -> ok")
               "gl:texCoord4i/4"
               ("http://www.erlang.org/doc/man/gl.html#texCoord4i-4" "texCoord4i(S, T, R, Q) -> ok")
               "gl:texCoord4f/4"
               ("http://www.erlang.org/doc/man/gl.html#texCoord4f-4" "texCoord4f(S, T, R, Q) -> ok")
               "gl:texCoord4d/4"
               ("http://www.erlang.org/doc/man/gl.html#texCoord4d-4" "texCoord4d(S, T, R, Q) -> ok")
               "gl:texCoord3s/3"
               ("http://www.erlang.org/doc/man/gl.html#texCoord3s-3" "texCoord3s(S, T, R) -> ok")
               "gl:texCoord3i/3"
               ("http://www.erlang.org/doc/man/gl.html#texCoord3i-3" "texCoord3i(S, T, R) -> ok")
               "gl:texCoord3f/3"
               ("http://www.erlang.org/doc/man/gl.html#texCoord3f-3" "texCoord3f(S, T, R) -> ok")
               "gl:texCoord3d/3"
               ("http://www.erlang.org/doc/man/gl.html#texCoord3d-3" "texCoord3d(S, T, R) -> ok")
               "gl:texCoord2s/2"
               ("http://www.erlang.org/doc/man/gl.html#texCoord2s-2" "texCoord2s(S, T) -> ok")
               "gl:texCoord2i/2"
               ("http://www.erlang.org/doc/man/gl.html#texCoord2i-2" "texCoord2i(S, T) -> ok")
               "gl:texCoord2f/2"
               ("http://www.erlang.org/doc/man/gl.html#texCoord2f-2" "texCoord2f(S, T) -> ok")
               "gl:texCoord2d/2"
               ("http://www.erlang.org/doc/man/gl.html#texCoord2d-2" "texCoord2d(S, T) -> ok")
               "gl:texCoord1s/1"
               ("http://www.erlang.org/doc/man/gl.html#texCoord1s-1" "texCoord1s(S) -> ok")
               "gl:texCoord1i/1"
               ("http://www.erlang.org/doc/man/gl.html#texCoord1i-1" "texCoord1i(S) -> ok")
               "gl:texCoord1f/1"
               ("http://www.erlang.org/doc/man/gl.html#texCoord1f-1" "texCoord1f(S) -> ok")
               "gl:texCoord1d/1"
               ("http://www.erlang.org/doc/man/gl.html#texCoord1d-1" "texCoord1d(S) -> ok")
               "gl:color4usv/1"
               ("http://www.erlang.org/doc/man/gl.html#color4usv-1" "color4usv(V) -> ok")
               "gl:color4uiv/1"
               ("http://www.erlang.org/doc/man/gl.html#color4uiv-1" "color4uiv(V) -> ok")
               "gl:color4ubv/1"
               ("http://www.erlang.org/doc/man/gl.html#color4ubv-1" "color4ubv(V) -> ok")
               "gl:color4sv/1"
               ("http://www.erlang.org/doc/man/gl.html#color4sv-1" "color4sv(V) -> ok")
               "gl:color4iv/1"
               ("http://www.erlang.org/doc/man/gl.html#color4iv-1" "color4iv(V) -> ok")
               "gl:color4fv/1"
               ("http://www.erlang.org/doc/man/gl.html#color4fv-1" "color4fv(V) -> ok")
               "gl:color4dv/1"
               ("http://www.erlang.org/doc/man/gl.html#color4dv-1" "color4dv(V) -> ok")
               "gl:color4bv/1"
               ("http://www.erlang.org/doc/man/gl.html#color4bv-1" "color4bv(V) -> ok")
               "gl:color3usv/1"
               ("http://www.erlang.org/doc/man/gl.html#color3usv-1" "color3usv(V) -> ok")
               "gl:color3uiv/1"
               ("http://www.erlang.org/doc/man/gl.html#color3uiv-1" "color3uiv(V) -> ok")
               "gl:color3ubv/1"
               ("http://www.erlang.org/doc/man/gl.html#color3ubv-1" "color3ubv(V) -> ok")
               "gl:color3sv/1"
               ("http://www.erlang.org/doc/man/gl.html#color3sv-1" "color3sv(V) -> ok")
               "gl:color3iv/1"
               ("http://www.erlang.org/doc/man/gl.html#color3iv-1" "color3iv(V) -> ok")
               "gl:color3fv/1"
               ("http://www.erlang.org/doc/man/gl.html#color3fv-1" "color3fv(V) -> ok")
               "gl:color3dv/1"
               ("http://www.erlang.org/doc/man/gl.html#color3dv-1" "color3dv(V) -> ok")
               "gl:color3bv/1"
               ("http://www.erlang.org/doc/man/gl.html#color3bv-1" "color3bv(V) -> ok")
               "gl:color4us/4"
               ("http://www.erlang.org/doc/man/gl.html#color4us-4" "color4us(Red, Green, Blue, Alpha) -> ok")
               "gl:color4ui/4"
               ("http://www.erlang.org/doc/man/gl.html#color4ui-4" "color4ui(Red, Green, Blue, Alpha) -> ok")
               "gl:color4ub/4"
               ("http://www.erlang.org/doc/man/gl.html#color4ub-4" "color4ub(Red, Green, Blue, Alpha) -> ok")
               "gl:color4s/4"
               ("http://www.erlang.org/doc/man/gl.html#color4s-4" "color4s(Red, Green, Blue, Alpha) -> ok")
               "gl:color4i/4"
               ("http://www.erlang.org/doc/man/gl.html#color4i-4" "color4i(Red, Green, Blue, Alpha) -> ok")
               "gl:color4f/4"
               ("http://www.erlang.org/doc/man/gl.html#color4f-4" "color4f(Red, Green, Blue, Alpha) -> ok")
               "gl:color4d/4"
               ("http://www.erlang.org/doc/man/gl.html#color4d-4" "color4d(Red, Green, Blue, Alpha) -> ok")
               "gl:color4b/4"
               ("http://www.erlang.org/doc/man/gl.html#color4b-4" "color4b(Red, Green, Blue, Alpha) -> ok")
               "gl:color3us/3"
               ("http://www.erlang.org/doc/man/gl.html#color3us-3" "color3us(Red, Green, Blue) -> ok")
               "gl:color3ui/3"
               ("http://www.erlang.org/doc/man/gl.html#color3ui-3" "color3ui(Red, Green, Blue) -> ok")
               "gl:color3ub/3"
               ("http://www.erlang.org/doc/man/gl.html#color3ub-3" "color3ub(Red, Green, Blue) -> ok")
               "gl:color3s/3"
               ("http://www.erlang.org/doc/man/gl.html#color3s-3" "color3s(Red, Green, Blue) -> ok")
               "gl:color3i/3"
               ("http://www.erlang.org/doc/man/gl.html#color3i-3" "color3i(Red, Green, Blue) -> ok")
               "gl:color3f/3"
               ("http://www.erlang.org/doc/man/gl.html#color3f-3" "color3f(Red, Green, Blue) -> ok")
               "gl:color3d/3"
               ("http://www.erlang.org/doc/man/gl.html#color3d-3" "color3d(Red, Green, Blue) -> ok")
               "gl:color3b/3"
               ("http://www.erlang.org/doc/man/gl.html#color3b-3" "color3b(Red, Green, Blue) -> ok")
               "gl:indexubv/1"
               ("http://www.erlang.org/doc/man/gl.html#indexubv-1" "indexubv(C) -> ok")
               "gl:indexsv/1"
               ("http://www.erlang.org/doc/man/gl.html#indexsv-1" "indexsv(C) -> ok")
               "gl:indexiv/1"
               ("http://www.erlang.org/doc/man/gl.html#indexiv-1" "indexiv(C) -> ok")
               "gl:indexfv/1"
               ("http://www.erlang.org/doc/man/gl.html#indexfv-1" "indexfv(C) -> ok")
               "gl:indexdv/1"
               ("http://www.erlang.org/doc/man/gl.html#indexdv-1" "indexdv(C) -> ok")
               "gl:indexub/1"
               ("http://www.erlang.org/doc/man/gl.html#indexub-1" "indexub(C) -> ok")
               "gl:indexs/1"
               ("http://www.erlang.org/doc/man/gl.html#indexs-1" "indexs(C) -> ok")
               "gl:indexi/1"
               ("http://www.erlang.org/doc/man/gl.html#indexi-1" "indexi(C) -> ok")
               "gl:indexf/1"
               ("http://www.erlang.org/doc/man/gl.html#indexf-1" "indexf(C) -> ok")
               "gl:indexd/1"
               ("http://www.erlang.org/doc/man/gl.html#indexd-1" "indexd(C) -> ok")
               "gl:normal3sv/1"
               ("http://www.erlang.org/doc/man/gl.html#normal3sv-1" "normal3sv(V) -> ok")
               "gl:normal3iv/1"
               ("http://www.erlang.org/doc/man/gl.html#normal3iv-1" "normal3iv(V) -> ok")
               "gl:normal3fv/1"
               ("http://www.erlang.org/doc/man/gl.html#normal3fv-1" "normal3fv(V) -> ok")
               "gl:normal3dv/1"
               ("http://www.erlang.org/doc/man/gl.html#normal3dv-1" "normal3dv(V) -> ok")
               "gl:normal3bv/1"
               ("http://www.erlang.org/doc/man/gl.html#normal3bv-1" "normal3bv(V) -> ok")
               "gl:normal3s/3"
               ("http://www.erlang.org/doc/man/gl.html#normal3s-3" "normal3s(Nx, Ny, Nz) -> ok")
               "gl:normal3i/3"
               ("http://www.erlang.org/doc/man/gl.html#normal3i-3" "normal3i(Nx, Ny, Nz) -> ok")
               "gl:normal3f/3"
               ("http://www.erlang.org/doc/man/gl.html#normal3f-3" "normal3f(Nx, Ny, Nz) -> ok")
               "gl:normal3d/3"
               ("http://www.erlang.org/doc/man/gl.html#normal3d-3" "normal3d(Nx, Ny, Nz) -> ok")
               "gl:normal3b/3"
               ("http://www.erlang.org/doc/man/gl.html#normal3b-3" "normal3b(Nx, Ny, Nz) -> ok")
               "gl:vertex4sv/1"
               ("http://www.erlang.org/doc/man/gl.html#vertex4sv-1" "vertex4sv(V) -> ok")
               "gl:vertex4iv/1"
               ("http://www.erlang.org/doc/man/gl.html#vertex4iv-1" "vertex4iv(V) -> ok")
               "gl:vertex4fv/1"
               ("http://www.erlang.org/doc/man/gl.html#vertex4fv-1" "vertex4fv(V) -> ok")
               "gl:vertex4dv/1"
               ("http://www.erlang.org/doc/man/gl.html#vertex4dv-1" "vertex4dv(V) -> ok")
               "gl:vertex3sv/1"
               ("http://www.erlang.org/doc/man/gl.html#vertex3sv-1" "vertex3sv(V) -> ok")
               "gl:vertex3iv/1"
               ("http://www.erlang.org/doc/man/gl.html#vertex3iv-1" "vertex3iv(V) -> ok")
               "gl:vertex3fv/1"
               ("http://www.erlang.org/doc/man/gl.html#vertex3fv-1" "vertex3fv(V) -> ok")
               "gl:vertex3dv/1"
               ("http://www.erlang.org/doc/man/gl.html#vertex3dv-1" "vertex3dv(V) -> ok")
               "gl:vertex2sv/1"
               ("http://www.erlang.org/doc/man/gl.html#vertex2sv-1" "vertex2sv(V) -> ok")
               "gl:vertex2iv/1"
               ("http://www.erlang.org/doc/man/gl.html#vertex2iv-1" "vertex2iv(V) -> ok")
               "gl:vertex2fv/1"
               ("http://www.erlang.org/doc/man/gl.html#vertex2fv-1" "vertex2fv(V) -> ok")
               "gl:vertex2dv/1"
               ("http://www.erlang.org/doc/man/gl.html#vertex2dv-1" "vertex2dv(V) -> ok")
               "gl:vertex4s/4"
               ("http://www.erlang.org/doc/man/gl.html#vertex4s-4" "vertex4s(X, Y, Z, W) -> ok")
               "gl:vertex4i/4"
               ("http://www.erlang.org/doc/man/gl.html#vertex4i-4" "vertex4i(X, Y, Z, W) -> ok")
               "gl:vertex4f/4"
               ("http://www.erlang.org/doc/man/gl.html#vertex4f-4" "vertex4f(X, Y, Z, W) -> ok")
               "gl:vertex4d/4"
               ("http://www.erlang.org/doc/man/gl.html#vertex4d-4" "vertex4d(X, Y, Z, W) -> ok")
               "gl:vertex3s/3"
               ("http://www.erlang.org/doc/man/gl.html#vertex3s-3" "vertex3s(X, Y, Z) -> ok")
               "gl:vertex3i/3"
               ("http://www.erlang.org/doc/man/gl.html#vertex3i-3" "vertex3i(X, Y, Z) -> ok")
               "gl:vertex3f/3"
               ("http://www.erlang.org/doc/man/gl.html#vertex3f-3" "vertex3f(X, Y, Z) -> ok")
               "gl:vertex3d/3"
               ("http://www.erlang.org/doc/man/gl.html#vertex3d-3" "vertex3d(X, Y, Z) -> ok")
               "gl:vertex2s/2"
               ("http://www.erlang.org/doc/man/gl.html#vertex2s-2" "vertex2s(X, Y) -> ok")
               "gl:vertex2i/2"
               ("http://www.erlang.org/doc/man/gl.html#vertex2i-2" "vertex2i(X, Y) -> ok")
               "gl:vertex2f/2"
               ("http://www.erlang.org/doc/man/gl.html#vertex2f-2" "vertex2f(X, Y) -> ok")
               "gl:vertex2d/2"
               ("http://www.erlang.org/doc/man/gl.html#vertex2d-2" "vertex2d(X, Y) -> ok")
               "gl:end/0"
               ("http://www.erlang.org/doc/man/gl.html#end-0" "end() -> ok")
               "gl:begin/1"
               ("http://www.erlang.org/doc/man/gl.html#begin-1" "begin(Mode) -> ok")
               "gl:listBase/1"
               ("http://www.erlang.org/doc/man/gl.html#listBase-1" "listBase(Base) -> ok")
               "gl:callLists/1"
               ("http://www.erlang.org/doc/man/gl.html#callLists-1" "callLists(Lists) -> ok")
               "gl:callList/1"
               ("http://www.erlang.org/doc/man/gl.html#callList-1" "callList(List) -> ok")
               "gl:endList/0"
               ("http://www.erlang.org/doc/man/gl.html#endList-0" "endList() -> ok")
               "gl:newList/2"
               ("http://www.erlang.org/doc/man/gl.html#newList-2" "newList(List, Mode) -> ok")
               "gl:genLists/1"
               ("http://www.erlang.org/doc/man/gl.html#genLists-1" "genLists(Range) -> integer()")
               "gl:deleteLists/2"
               ("http://www.erlang.org/doc/man/gl.html#deleteLists-2" "deleteLists(List, Range) -> ok")
               "gl:isList/1"
               ("http://www.erlang.org/doc/man/gl.html#isList-1" "isList(List) -> 0 | 1")
               "gl:translatef/3"
               ("http://www.erlang.org/doc/man/gl.html#translatef-3" "translatef(X, Y, Z) -> ok")
               "gl:translated/3"
               ("http://www.erlang.org/doc/man/gl.html#translated-3" "translated(X, Y, Z) -> ok")
               "gl:scalef/3"
               ("http://www.erlang.org/doc/man/gl.html#scalef-3" "scalef(X, Y, Z) -> ok")
               "gl:scaled/3"
               ("http://www.erlang.org/doc/man/gl.html#scaled-3" "scaled(X, Y, Z) -> ok")
               "gl:rotatef/4"
               ("http://www.erlang.org/doc/man/gl.html#rotatef-4" "rotatef(Angle, X, Y, Z) -> ok")
               "gl:rotated/4"
               ("http://www.erlang.org/doc/man/gl.html#rotated-4" "rotated(Angle, X, Y, Z) -> ok")
               "gl:multMatrixf/1"
               ("http://www.erlang.org/doc/man/gl.html#multMatrixf-1" "multMatrixf(M) -> ok")
               "gl:multMatrixd/1"
               ("http://www.erlang.org/doc/man/gl.html#multMatrixd-1" "multMatrixd(M) -> ok")
               "gl:loadMatrixf/1"
               ("http://www.erlang.org/doc/man/gl.html#loadMatrixf-1" "loadMatrixf(M) -> ok")
               "gl:loadMatrixd/1"
               ("http://www.erlang.org/doc/man/gl.html#loadMatrixd-1" "loadMatrixd(M) -> ok")
               "gl:loadIdentity/0"
               ("http://www.erlang.org/doc/man/gl.html#loadIdentity-0" "loadIdentity() -> ok")
               "gl:popMatrix/0"
               ("http://www.erlang.org/doc/man/gl.html#popMatrix-0" "popMatrix() -> ok")
               "gl:pushMatrix/0"
               ("http://www.erlang.org/doc/man/gl.html#pushMatrix-0" "pushMatrix() -> ok")
               "gl:viewport/4"
               ("http://www.erlang.org/doc/man/gl.html#viewport-4" "viewport(X, Y, Width, Height) -> ok")
               "gl:frustum/6"
               ("http://www.erlang.org/doc/man/gl.html#frustum-6" "frustum(Left, Right, Bottom, Top, Near_val, Far_val) -> ok")
               "gl:ortho/6"
               ("http://www.erlang.org/doc/man/gl.html#ortho-6" "ortho(Left, Right, Bottom, Top, Near_val, Far_val) -> ok")
               "gl:matrixMode/1"
               ("http://www.erlang.org/doc/man/gl.html#matrixMode-1" "matrixMode(Mode) -> ok")
               "gl:accum/2"
               ("http://www.erlang.org/doc/man/gl.html#accum-2" "accum(Op, Value) -> ok")
               "gl:clearAccum/4"
               ("http://www.erlang.org/doc/man/gl.html#clearAccum-4" "clearAccum(Red, Green, Blue, Alpha) -> ok")
               "gl:depthRange/2"
               ("http://www.erlang.org/doc/man/gl.html#depthRange-2" "depthRange(Near_val, Far_val) -> ok")
               "gl:depthMask/1"
               ("http://www.erlang.org/doc/man/gl.html#depthMask-1" "depthMask(Flag) -> ok")
               "gl:depthFunc/1"
               ("http://www.erlang.org/doc/man/gl.html#depthFunc-1" "depthFunc(Func) -> ok")
               "gl:clearDepth/1"
               ("http://www.erlang.org/doc/man/gl.html#clearDepth-1" "clearDepth(Depth) -> ok")
               "gl:hint/2"
               ("http://www.erlang.org/doc/man/gl.html#hint-2" "hint(Target, Mode) -> ok")
               "gl:flush/0"
               ("http://www.erlang.org/doc/man/gl.html#flush-0" "flush() -> ok")
               "gl:finish/0"
               ("http://www.erlang.org/doc/man/gl.html#finish-0" "finish() -> ok")
               "gl:getString/1"
               ("http://www.erlang.org/doc/man/gl.html#getString-1" "getString(Name) -> string()")
               "gl:getError/0"
               ("http://www.erlang.org/doc/man/gl.html#getError-0" "getError() -> enum()")
               "gl:renderMode/1"
               ("http://www.erlang.org/doc/man/gl.html#renderMode-1" "renderMode(Mode) -> integer()")
               "gl:popClientAttrib/0"
               ("http://www.erlang.org/doc/man/gl.html#popClientAttrib-0" "popClientAttrib() -> ok")
               "gl:pushClientAttrib/1"
               ("http://www.erlang.org/doc/man/gl.html#pushClientAttrib-1" "pushClientAttrib(Mask) -> ok")
               "gl:popAttrib/0"
               ("http://www.erlang.org/doc/man/gl.html#popAttrib-0" "popAttrib() -> ok")
               "gl:pushAttrib/1"
               ("http://www.erlang.org/doc/man/gl.html#pushAttrib-1" "pushAttrib(Mask) -> ok")
               "gl:getIntegerv/1"
               ("http://www.erlang.org/doc/man/gl.html#getIntegerv-1" "getIntegerv(Pname) -> [integer()]")
               "gl:getFloatv/1"
               ("http://www.erlang.org/doc/man/gl.html#getFloatv-1" "getFloatv(Pname) -> [float()]")
               "gl:getDoublev/1"
               ("http://www.erlang.org/doc/man/gl.html#getDoublev-1" "getDoublev(Pname) -> [float()]")
               "gl:getBooleanv/1"
               ("http://www.erlang.org/doc/man/gl.html#getBooleanv-1" "getBooleanv(Pname) -> [0 | 1]")
               "gl:disableClientState/1"
               ("http://www.erlang.org/doc/man/gl.html#disableClientState-1" "disableClientState(Cap) -> ok")
               "gl:enableClientState/1"
               ("http://www.erlang.org/doc/man/gl.html#enableClientState-1" "enableClientState(Cap) -> ok")
               "gl:isEnabled/1"
               ("http://www.erlang.org/doc/man/gl.html#isEnabled-1" "isEnabled(Cap) -> 0 | 1")
               "gl:disable/1"
               ("http://www.erlang.org/doc/man/gl.html#disable-1" "disable(Cap) -> ok")
               "gl:enable/1"
               ("http://www.erlang.org/doc/man/gl.html#enable-1" "enable(Cap) -> ok")
               "gl:readBuffer/1"
               ("http://www.erlang.org/doc/man/gl.html#readBuffer-1" "readBuffer(Mode) -> ok")
               "gl:drawBuffer/1"
               ("http://www.erlang.org/doc/man/gl.html#drawBuffer-1" "drawBuffer(Mode) -> ok")
               "gl:getClipPlane/1"
               ("http://www.erlang.org/doc/man/gl.html#getClipPlane-1" "getClipPlane(Plane) -> {float(), float(), float(), float()}")
               "gl:clipPlane/2"
               ("http://www.erlang.org/doc/man/gl.html#clipPlane-2" "clipPlane(Plane, Equation) -> ok")
               "gl:scissor/4"
               ("http://www.erlang.org/doc/man/gl.html#scissor-4" "scissor(X, Y, Width, Height) -> ok")
               "gl:edgeFlagv/1"
               ("http://www.erlang.org/doc/man/gl.html#edgeFlagv-1" "edgeFlagv(Flag) -> ok")
               "gl:edgeFlag/1"
               ("http://www.erlang.org/doc/man/gl.html#edgeFlag-1" "edgeFlag(Flag) -> ok")
               "gl:getPolygonStipple/0"
               ("http://www.erlang.org/doc/man/gl.html#getPolygonStipple-0" "getPolygonStipple() -> binary()")
               "gl:polygonStipple/1"
               ("http://www.erlang.org/doc/man/gl.html#polygonStipple-1" "polygonStipple(Mask) -> ok")
               "gl:polygonOffset/2"
               ("http://www.erlang.org/doc/man/gl.html#polygonOffset-2" "polygonOffset(Factor, Units) -> ok")
               "gl:polygonMode/2"
               ("http://www.erlang.org/doc/man/gl.html#polygonMode-2" "polygonMode(Face, Mode) -> ok")
               "gl:lineStipple/2"
               ("http://www.erlang.org/doc/man/gl.html#lineStipple-2" "lineStipple(Factor, Pattern) -> ok")
               "gl:lineWidth/1"
               ("http://www.erlang.org/doc/man/gl.html#lineWidth-1" "lineWidth(Width) -> ok")
               "gl:pointSize/1"
               ("http://www.erlang.org/doc/man/gl.html#pointSize-1" "pointSize(Size) -> ok")
               "gl:frontFace/1"
               ("http://www.erlang.org/doc/man/gl.html#frontFace-1" "frontFace(Mode) -> ok")
               "gl:cullFace/1"
               ("http://www.erlang.org/doc/man/gl.html#cullFace-1" "cullFace(Mode) -> ok")
               "gl:logicOp/1"
               ("http://www.erlang.org/doc/man/gl.html#logicOp-1" "logicOp(Opcode) -> ok")
               "gl:blendFunc/2"
               ("http://www.erlang.org/doc/man/gl.html#blendFunc-2" "blendFunc(Sfactor, Dfactor) -> ok")
               "gl:alphaFunc/2"
               ("http://www.erlang.org/doc/man/gl.html#alphaFunc-2" "alphaFunc(Func, Ref) -> ok")
               "gl:colorMask/4"
               ("http://www.erlang.org/doc/man/gl.html#colorMask-4" "colorMask(Red, Green, Blue, Alpha) -> ok")
               "gl:indexMask/1"
               ("http://www.erlang.org/doc/man/gl.html#indexMask-1" "indexMask(Mask) -> ok")
               "gl:clear/1"
               ("http://www.erlang.org/doc/man/gl.html#clear-1" "clear(Mask) -> ok")
               "gl:clearColor/4"
               ("http://www.erlang.org/doc/man/gl.html#clearColor-4" "clearColor(Red, Green, Blue, Alpha) -> ok")
               "gl:clearIndex/1"
               ("http://www.erlang.org/doc/man/gl.html#clearIndex-1" "clearIndex(C) -> ok")
               "gl:"
               ("http://www.erlang.org/doc/man/gl.html#type-clamp" "clamp() = float()")
               "global:whereis_name/1"
               ("http://www.erlang.org/doc/man/global.html#whereis_name-1" "whereis_name(Name) -> pid() | undefined")
               "global:unregister_name/1"
               ("http://www.erlang.org/doc/man/global.html#unregister_name-1" "unregister_name(Name) -> term()")
               "global:trans/4"
               ("http://www.erlang.org/doc/man/global.html#trans-4" "trans(Id, Fun, Nodes, Retries) -> Res | aborted")
               "global:trans/3"
               ("http://www.erlang.org/doc/man/global.html#trans-3" "trans(Id, Fun, Nodes) -> Res | aborted")
               "global:trans/2"
               ("http://www.erlang.org/doc/man/global.html#trans-2" "trans(Id, Fun) -> Res | aborted")
               "global:sync/0"
               ("http://www.erlang.org/doc/man/global.html#sync-0" "sync() -> ok | {error, Reason :: term()}")
               "global:set_lock/3"
               ("http://www.erlang.org/doc/man/global.html#set_lock-3" "set_lock(Id, Nodes, Retries) -> boolean()")
               "global:set_lock/2"
               ("http://www.erlang.org/doc/man/global.html#set_lock-2" "set_lock(Id, Nodes) -> boolean()")
               "global:set_lock/1"
               ("http://www.erlang.org/doc/man/global.html#set_lock-1" "set_lock(Id) -> boolean()")
               "global:send/2"
               ("http://www.erlang.org/doc/man/global.html#send-2" "send(Name, Msg) -> Pid")
               "global:registered_names/0"
               ("http://www.erlang.org/doc/man/global.html#registered_names-0" "registered_names() -> [Name]")
               "global:register_name/3"
               ("http://www.erlang.org/doc/man/global.html#register_name-3" "register_name(Name, Pid, Resolve) -> yes | no")
               "global:register_name/2"
               ("http://www.erlang.org/doc/man/global.html#register_name-2" "register_name(Name, Pid) -> yes | no")
               "global:re_register_name/3"
               ("http://www.erlang.org/doc/man/global.html#re_register_name-3" "re_register_name(Name, Pid, Resolve) -> yes")
               "global:re_register_name/2"
               ("http://www.erlang.org/doc/man/global.html#re_register_name-2" "re_register_name(Name, Pid) -> yes")
               "global:random_notify_name/3"
               ("http://www.erlang.org/doc/man/global.html#random_notify_name-3" "random_notify_name(Name, Pid1, Pid2) -> pid()")
               "global:random_exit_name/3"
               ("http://www.erlang.org/doc/man/global.html#random_exit_name-3" "random_exit_name(Name, Pid1, Pid2) -> pid()")
               "global:notify_all_name/3"
               ("http://www.erlang.org/doc/man/global.html#notify_all_name-3" "notify_all_name(Name, Pid1, Pid2) -> none")
               "global:del_lock/2"
               ("http://www.erlang.org/doc/man/global.html#del_lock-2" "del_lock(Id, Nodes) -> true")
               "global:del_lock/1"
               ("http://www.erlang.org/doc/man/global.html#del_lock-1" "del_lock(Id) -> true")
               "global:id()"
               ("http://www.erlang.org/doc/man/global.html#type-id" "id() = {ResourceId :: term(), LockRequesterId :: term()}")
               "global_group:whereis_name/2"
               ("http://www.erlang.org/doc/man/global_group.html#whereis_name-2" "whereis_name(Where, Name) -> pid() | undefined")
               "global_group:whereis_name/1"
               ("http://www.erlang.org/doc/man/global_group.html#whereis_name-1" "whereis_name(Name) -> pid() | undefined")
               "global_group:sync/0"
               ("http://www.erlang.org/doc/man/global_group.html#sync-0" "sync() -> ok")
               "global_group:send/3"
               ("http://www.erlang.org/doc/man/global_group.html#send-3" "send(Where, Name, Msg) -> pid() | {badarg, {Name, Msg}}")
               "global_group:send/2"
               ("http://www.erlang.org/doc/man/global_group.html#send-2" "send(Name, Msg) -> pid() | {badarg, {Name, Msg}}")
               "global_group:registered_names/1"
               ("http://www.erlang.org/doc/man/global_group.html#registered_names-1" "registered_names(Where) -> Names")
               "global_group:own_nodes/0"
               ("http://www.erlang.org/doc/man/global_group.html#own_nodes-0" "own_nodes() -> Nodes")
               "global_group:monitor_nodes/1"
               ("http://www.erlang.org/doc/man/global_group.html#monitor_nodes-1" "monitor_nodes(Flag) -> ok")
               "global_group:info/0"
               ("http://www.erlang.org/doc/man/global_group.html#info-0" "info() -> [info_item()]")
               "global_group:global_groups/0"
               ("http://www.erlang.org/doc/man/global_group.html#global_groups-0" "global_groups() -> {GroupName, GroupNames} | undefined")
               "global_group:where()"
               ("http://www.erlang.org/doc/man/global_group.html#type-where" "where() = {node, node()} | {group, group_name() }")
               "global_group:name()"
               ("http://www.erlang.org/doc/man/global_group.html#type-name" "name() = atom()")
               "global_group:publish_type()"
               ("http://www.erlang.org/doc/man/global_group.html#type-publish_type" "publish_type() = hidden | normal")
               "global_group:group_name()"
               ("http://www.erlang.org/doc/man/global_group.html#type-group_name" "group_name() = atom()")
               "global_group:group_tuple()"
               ("http://www.erlang.org/doc/man/global_group.html#type-group_tuple" "group_tuple() = {GroupName :: group_name() , [node()]} | {GroupName :: group_name() , PublishType :: publish_type() , [node()]}")
               "glu:unProject4/9"
               ("http://www.erlang.org/doc/man/glu.html#unProject4-9" "unProject4(WinX, WinY, WinZ, ClipW, Model, Proj, View, NearVal, FarVal) -> {integer(), ObjX::float(), ObjY::float(), ObjZ::float(), ObjW::float()}")
               "glu:unProject/6"
               ("http://www.erlang.org/doc/man/glu.html#unProject-6" "unProject(WinX, WinY, WinZ, Model, Proj, View) -> {integer(), ObjX::float(), ObjY::float(), ObjZ::float()}")
               "glu:sphere/4"
               ("http://www.erlang.org/doc/man/glu.html#sphere-4" "sphere(Quad, Radius, Slices, Stacks) -> ok")
               "glu:scaleImage/9"
               ("http://www.erlang.org/doc/man/glu.html#scaleImage-9" "scaleImage(Format, WIn, HIn, TypeIn, DataIn, WOut, HOut, TypeOut, DataOut) -> integer()")
               "glu:quadricTexture/2"
               ("http://www.erlang.org/doc/man/glu.html#quadricTexture-2" "quadricTexture(Quad, Texture) -> ok")
               "glu:quadricOrientation/2"
               ("http://www.erlang.org/doc/man/glu.html#quadricOrientation-2" "quadricOrientation(Quad, Orientation) -> ok")
               "glu:quadricNormals/2"
               ("http://www.erlang.org/doc/man/glu.html#quadricNormals-2" "quadricNormals(Quad, Normal) -> ok")
               "glu:quadricDrawStyle/2"
               ("http://www.erlang.org/doc/man/glu.html#quadricDrawStyle-2" "quadricDrawStyle(Quad, Draw) -> ok")
               "glu:project/6"
               ("http://www.erlang.org/doc/man/glu.html#project-6" "project(ObjX, ObjY, ObjZ, Model, Proj, View) -> {integer(), WinX::float(), WinY::float(), WinZ::float()}")
               "glu:pickMatrix/5"
               ("http://www.erlang.org/doc/man/glu.html#pickMatrix-5" "pickMatrix(X, Y, DelX, DelY, Viewport) -> ok")
               "glu:perspective/4"
               ("http://www.erlang.org/doc/man/glu.html#perspective-4" "perspective(Fovy, Aspect, ZNear, ZFar) -> ok")
               "glu:partialDisk/7"
               ("http://www.erlang.org/doc/man/glu.html#partialDisk-7" "partialDisk(Quad, Inner, Outer, Slices, Loops, Start, Sweep) -> ok")
               "glu:ortho2D/4"
               ("http://www.erlang.org/doc/man/glu.html#ortho2D-4" "ortho2D(Left, Right, Bottom, Top) -> ok")
               "glu:newQuadric/0"
               ("http://www.erlang.org/doc/man/glu.html#newQuadric-0" "newQuadric() -> integer()")
               "glu:lookAt/9"
               ("http://www.erlang.org/doc/man/glu.html#lookAt-9" "lookAt(EyeX, EyeY, EyeZ, CenterX, CenterY, CenterZ, UpX, UpY, UpZ) -> ok")
               "glu:getString/1"
               ("http://www.erlang.org/doc/man/glu.html#getString-1" "getString(Name) -> string()")
               "glu:errorString/1"
               ("http://www.erlang.org/doc/man/glu.html#errorString-1" "errorString(Error) -> string()")
               "glu:disk/5"
               ("http://www.erlang.org/doc/man/glu.html#disk-5" "disk(Quad, Inner, Outer, Slices, Loops) -> ok")
               "glu:deleteQuadric/1"
               ("http://www.erlang.org/doc/man/glu.html#deleteQuadric-1" "deleteQuadric(Quad) -> ok")
               "glu:cylinder/6"
               ("http://www.erlang.org/doc/man/glu.html#cylinder-6" "cylinder(Quad, Base, Top, Height, Slices, Stacks) -> ok")
               "glu:checkExtension/2"
               ("http://www.erlang.org/doc/man/glu.html#checkExtension-2" "checkExtension(ExtName, ExtString) -> 0 | 1")
               "glu:build3DMipmaps/8"
               ("http://www.erlang.org/doc/man/glu.html#build3DMipmaps-8" "build3DMipmaps(Target, InternalFormat, Width, Height, Depth, Format, Type, Data) -> integer()")
               "glu:build3DMipmapLevels/11"
               ("http://www.erlang.org/doc/man/glu.html#build3DMipmapLevels-11" "build3DMipmapLevels(Target, InternalFormat, Width, Height, Depth, Format, Type, Level, Base, Max, Data) -> integer()")
               "glu:build2DMipmaps/7"
               ("http://www.erlang.org/doc/man/glu.html#build2DMipmaps-7" "build2DMipmaps(Target, InternalFormat, Width, Height, Format, Type, Data) -> integer()")
               "glu:build2DMipmapLevels/10"
               ("http://www.erlang.org/doc/man/glu.html#build2DMipmapLevels-10" "build2DMipmapLevels(Target, InternalFormat, Width, Height, Format, Type, Level, Base, Max, Data) -> integer()")
               "glu:build1DMipmaps/6"
               ("http://www.erlang.org/doc/man/glu.html#build1DMipmaps-6" "build1DMipmaps(Target, InternalFormat, Width, Format, Type, Data) -> integer()")
               "glu:build1DMipmapLevels/9"
               ("http://www.erlang.org/doc/man/glu.html#build1DMipmapLevels-9" "build1DMipmapLevels(Target, InternalFormat, Width, Format, Type, Level, Base, Max, Data) -> integer()")
               "glu:tesselate/2"
               ("http://www.erlang.org/doc/man/glu.html#tesselate-2" "tesselate(Normal, Vs::[Vs]) -> {Triangles, VertexPos}")
               "glu:"
               ("http://www.erlang.org/doc/man/glu.html#type-enum" "enum() = non_neg_integer()")
               "gs:stop/0"
               ("http://www.erlang.org/doc/man/gs.html#stop-0" "stop() -> void()")
               "gs:start/0"
               ("http://www.erlang.org/doc/man/gs.html#start-0" "start() -> ObjId")
               "gs:read/2"
               ("http://www.erlang.org/doc/man/gs.html#read-2" "read(GSObj, Key) -> Value")
               "gs:ObjType/3"
               ("http://www.erlang.org/doc/man/gs.html#ObjType-3" "ObjType(Name, Parent, Options)")
               "gs:ObjType/2"
               ("http://www.erlang.org/doc/man/gs.html#ObjType-2" "ObjType(Parent, Options)")
               "gs:ObjType/1"
               ("http://www.erlang.org/doc/man/gs.html#ObjType-1" "ObjType(Parent)")
               "gs:destroy/1"
               ("http://www.erlang.org/doc/man/gs.html#destroy-1" "destroy(GSObj) -> void()")
               "gs:create_tree/2"
               ("http://www.erlang.org/doc/man/gs.html#create_tree-2" "create_tree(Parent, Tree) -> ok")
               "gs:create/4"
               ("http://www.erlang.org/doc/man/gs.html#create-4" "create(ObjType, Name, Parent, Options) -> ObjId")
               "gs:create/3"
               ("http://www.erlang.org/doc/man/gs.html#create-3" "create(ObjType, Parent, Options) -> ObjId")
               "gs:create/2"
               ("http://www.erlang.org/doc/man/gs.html#create-2" "create(ObjType, Parent) -> ObjId")
               "gs:config/2"
               ("http://www.erlang.org/doc/man/gs.html#config-2" "config(GSObj, Options) -> ok")
               "heart:get_options/0"
               ("http://www.erlang.org/doc/man/heart.html#get_options-0" "get_options() -> {ok, Options} | none")
               "heart:set_options/1"
               ("http://www.erlang.org/doc/man/heart.html#set_options-1" "set_options(Options) -> ok | {error, {bad_options, Options}}")
               "heart:get_callback/0"
               ("http://www.erlang.org/doc/man/heart.html#get_callback-0" "get_callback() -> {ok, {Module, Function}} | none")
               "heart:clear_callback/0"
               ("http://www.erlang.org/doc/man/heart.html#clear_callback-0" "clear_callback() -> ok")
               "heart:set_callback/2"
               ("http://www.erlang.org/doc/man/heart.html#set_callback-2" "set_callback(Module, Function) -> ok | {error, {bad_callback, {Module, Function}}}")
               "heart:get_cmd/0"
               ("http://www.erlang.org/doc/man/heart.html#get_cmd-0" "get_cmd() -> {ok, Cmd}")
               "heart:clear_cmd/0"
               ("http://www.erlang.org/doc/man/heart.html#clear_cmd-0" "clear_cmd() -> ok")
               "heart:set_cmd/1"
               ("http://www.erlang.org/doc/man/heart.html#set_cmd-1" "set_cmd(Cmd) -> ok | {error, {bad_cmd, Cmd}}")
               "heart:heart_option()"
               ("http://www.erlang.org/doc/man/heart.html#type-heart_option" "heart_option() = check_schedulers")
               "http_uri:scheme_defaults/0"
               ("http://www.erlang.org/doc/man/http_uri.html#scheme_defaults-0" "scheme_defaults() -> SchemeDefaults")
               "http_uri:parse/2"
               ("http://www.erlang.org/doc/man/http_uri.html#parse-2" "parse(URI, Options) -> {ok, Result} | {error, Reason}")
               "http_uri:parse/1"
               ("http://www.erlang.org/doc/man/http_uri.html#parse-1" "parse(URI) -> {ok, Result} | {error, Reason}")
               "http_uri:encode/1"
               ("http://www.erlang.org/doc/man/http_uri.html#encode-1" "encode(URI) -> HexEncodedURI")
               "http_uri:decode/1"
               ("http://www.erlang.org/doc/man/http_uri.html#decode-1" "decode(HexEncodedURI) -> URI")
               "httpc:which_sessions/1"
               ("http://www.erlang.org/doc/man/httpc.html#which_sessions-1" "which_sessions(Profile) -> session_info()")
               "httpc:which_sessions/0"
               ("http://www.erlang.org/doc/man/httpc.html#which_sessions-0" "which_sessions() -> session_info()")
               "httpc:which_cookies/1"
               ("http://www.erlang.org/doc/man/httpc.html#which_cookies-1" "which_cookies(Profile) -> cookies()")
               "httpc:which_cookies/0"
               ("http://www.erlang.org/doc/man/httpc.html#which_cookies-0" "which_cookies() -> cookies()")
               "httpc:stream_next/1"
               ("http://www.erlang.org/doc/man/httpc.html#stream_next-1" "stream_next(Pid) -> ok")
               "httpc:store_cookies/3"
               ("http://www.erlang.org/doc/man/httpc.html#store_cookies-3" "store_cookies(SetCookieHeaders, Url, Profile) -> ok | {error, Reason}")
               "httpc:store_cookies/2"
               ("http://www.erlang.org/doc/man/httpc.html#store_cookies-2" "store_cookies(SetCookieHeaders, Url) ->")
               "httpc:set_options/2"
               ("http://www.erlang.org/doc/man/httpc.html#set_options-2" "set_options(Options, Profile) -> ok | {error, Reason}")
               "httpc:set_options/1"
               ("http://www.erlang.org/doc/man/httpc.html#set_options-1" "set_options(Options) ->")
               "httpc:request/5"
               ("http://www.erlang.org/doc/man/httpc.html#request-5" "request(Method, Request, HTTPOptions, Options, Profile) -> {ok, Result} | {ok, saved_to_file} | {error, Reason}")
               "httpc:request/4"
               ("http://www.erlang.org/doc/man/httpc.html#request-4" "request(Method, Request, HTTPOptions, Options) ->")
               "httpc:request/2"
               ("http://www.erlang.org/doc/man/httpc.html#request-2" "request(Url, Profile) -> {ok, Result} | {error, Reason}")
               "httpc:request/1"
               ("http://www.erlang.org/doc/man/httpc.html#request-1" "request(Url) ->")
               "httpc:reset_cookies/1"
               ("http://www.erlang.org/doc/man/httpc.html#reset_cookies-1" "reset_cookies(Profile) -> void()")
               "httpc:reset_cookies/0"
               ("http://www.erlang.org/doc/man/httpc.html#reset_cookies-0" "reset_cookies() -> void()")
               "httpc:info/1"
               ("http://www.erlang.org/doc/man/httpc.html#info-1" "info(Profile) -> list()")
               "httpc:info/0"
               ("http://www.erlang.org/doc/man/httpc.html#info-0" "info() -> list()")
               "httpc:get_options/2"
               ("http://www.erlang.org/doc/man/httpc.html#get_options-2" "get_options(OptionItems, Profile) -> {ok, Values} | {error, Reason}")
               "httpc:get_options/1"
               ("http://www.erlang.org/doc/man/httpc.html#get_options-1" "get_options(OptionItems) -> {ok, Values} | {error, Reason}")
               "httpc:cookie_header/3"
               ("http://www.erlang.org/doc/man/httpc.html#cookie_header-3" "cookie_header(Url, Opts, Profile) -> header() | {error, Reason}")
               "httpc:cookie_header/2"
               ("http://www.erlang.org/doc/man/httpc.html#cookie_header-2" "cookie_header(Url, Profile | Opts) -> header() | {error, Reason}")
               "httpc:cookie_header/1"
               ("http://www.erlang.org/doc/man/httpc.html#cookie_header-1" "cookie_header(Url) ->")
               "httpc:cancel_request/2"
               ("http://www.erlang.org/doc/man/httpc.html#cancel_request-2" "cancel_request(RequestId, Profile) -> ok")
               "httpc:cancel_request/1"
               ("http://www.erlang.org/doc/man/httpc.html#cancel_request-1" "cancel_request(RequestId) ->")
               "httpd:parse_query/1"
               ("http://www.erlang.org/doc/man/httpd.html#parse_query-1" "parse_query(QueryString) -> [{Key,Value}]")
               "httpd:Module:store/2"
               ("http://www.erlang.org/doc/man/httpd.html#Module:store-2" "Module:store({Option, Value}, Config)-> {ok, {Option, NewValue}} | {error, Reason}")
               "httpd:Module:remove/1"
               ("http://www.erlang.org/doc/man/httpd.html#Module:remove-1" "Module:remove(ConfigDB) -> ok | {error, Reason}")
               "httpd:Module:load/2"
               ("http://www.erlang.org/doc/man/httpd.html#Module:load-2" "Module:load(Line, AccIn)-> eof | ok | {ok, AccOut} | {ok, AccOut, {Option, Value}} | {ok, AccOut, [{Option, Value}]} | {error, Reason}")
               "httpd:Module:do/1"
               ("http://www.erlang.org/doc/man/httpd.html#Module:do-1" "Module:do(ModData)-> {proceed, OldData} | {proceed, NewData} | {break, NewData} | done")
               "httpd:reload_config/2"
               ("http://www.erlang.org/doc/man/httpd.html#reload_config-2" "reload_config(Config, Mode) -> ok | {error, Reason}")
               "httpd:info/3"
               ("http://www.erlang.org/doc/man/httpd.html#info-3" "info(Address, Port, Profile) ->")
               "httpd:info/4"
               ("http://www.erlang.org/doc/man/httpd.html#info-4" "info(Address, Port, Profile, Properties) -> [{Option, Value}]")
               "httpd:info/2"
               ("http://www.erlang.org/doc/man/httpd.html#info-2" "info(Pid, Properties) -> [{Option, Value}]")
               "httpd:info/1"
               ("http://www.erlang.org/doc/man/httpd.html#info-1" "info(Pid) ->")
               "httpd_custom_api:request_header/1"
               ("http://www.erlang.org/doc/man/httpd_custom_api.html#request_header-1" "request_header({HeaderName, HeaderValue}) ->   {true, Header} | false")
               "httpd_custom_api:response_header/1"
               ("http://www.erlang.org/doc/man/httpd_custom_api.html#response_header-1" "response_header({HeaderName, HeaderValue}) ->  {true, Header} | false")
               "httpd_custom_api:response_default_headers/0"
               ("http://www.erlang.org/doc/man/httpd_custom_api.html#response_default_headers-0" "response_default_headers() -> [Header]")
               "httpd_socket:resolve/0"
               ("http://www.erlang.org/doc/man/httpd_socket.html#resolve-0" "resolve() -> HostName")
               "httpd_socket:peername/2"
               ("http://www.erlang.org/doc/man/httpd_socket.html#peername-2" "peername(SocketType,Socket) -> {Port,IPAddress}")
               "httpd_socket:deliver/3"
               ("http://www.erlang.org/doc/man/httpd_socket.html#deliver-3" "deliver(SocketType, Socket, Data) -> Result")
               "httpd_util:suffix/1"
               ("http://www.erlang.org/doc/man/httpd_util.html#suffix-1" "suffix(FileName) -> Suffix")
               "httpd_util:strip/1"
               ("http://www.erlang.org/doc/man/httpd_util.html#strip-1" "strip(String) -> Stripped")
               "httpd_util:split_path/1"
               ("http://www.erlang.org/doc/man/httpd_util.html#split_path-1" "split_path(RequestLine) -> {Path,QueryStringOrPathInfo}")
               "httpd_util:split_script_path/1"
               ("http://www.erlang.org/doc/man/httpd_util.html#split_script_path-1" "split_script_path(RequestLine) -> Splitted")
               "httpd_util:split/3"
               ("http://www.erlang.org/doc/man/httpd_util.html#split-3" "split(String,RegExp,N) -> SplitRes")
               "httpd_util:rfc1123_date/2"
               ("http://www.erlang.org/doc/man/httpd_util.html#rfc1123_date-2" "rfc1123_date({{YYYY,MM,DD},{Hour,Min,Sec}}) -> RFC1123Date")
               "httpd_util:rfc1123_date/0"
               ("http://www.erlang.org/doc/man/httpd_util.html#rfc1123_date-0" "rfc1123_date() -> RFC1123Date")
               "httpd_util:reason_phrase/1"
               ("http://www.erlang.org/doc/man/httpd_util.html#reason_phrase-1" "reason_phrase(StatusCode) -> Description")
               "httpd_util:multi_lookup/2"
               ("http://www.erlang.org/doc/man/httpd_util.html#multi_lookup-2" "multi_lookup(ETSTable,Key) -> Result")
               "httpd_util:month/1"
               ("http://www.erlang.org/doc/man/httpd_util.html#month-1" "month(NthMonth) -> Month")
               "httpd_util:message/3"
               ("http://www.erlang.org/doc/man/httpd_util.html#message-3" "message(StatusCode,PhraseArgs,ConfigDB) -> Message")
               "httpd_util:lookup_mime_default/3"
               ("http://www.erlang.org/doc/man/httpd_util.html#lookup_mime_default-3" "lookup_mime_default(ConfigDB,Suffix,Undefined) -> MimeType")
               "httpd_util:lookup_mime_default/2"
               ("http://www.erlang.org/doc/man/httpd_util.html#lookup_mime_default-2" "lookup_mime_default(ConfigDB,Suffix)")
               "httpd_util:lookup_mime/3"
               ("http://www.erlang.org/doc/man/httpd_util.html#lookup_mime-3" "lookup_mime(ConfigDB,Suffix,Undefined) -> MimeType")
               "httpd_util:lookup_mime/2"
               ("http://www.erlang.org/doc/man/httpd_util.html#lookup_mime-2" "lookup_mime(ConfigDB,Suffix)")
               "httpd_util:lookup/3"
               ("http://www.erlang.org/doc/man/httpd_util.html#lookup-3" "lookup(ETSTable,Key,Undefined) -> Result")
               "httpd_util:lookup/2"
               ("http://www.erlang.org/doc/man/httpd_util.html#lookup-2" "lookup(ETSTable,Key) -> Result")
               "httpd_util:integer_to_hexlist/1"
               ("http://www.erlang.org/doc/man/httpd_util.html#integer_to_hexlist-1" "integer_to_hexlist(Number) -> HexString")
               "httpd_util:hexlist_to_integer/1"
               ("http://www.erlang.org/doc/man/httpd_util.html#hexlist_to_integer-1" "hexlist_to_integer(HexString) -> Number")
               "httpd_util:flatlength/1"
               ("http://www.erlang.org/doc/man/httpd_util.html#flatlength-1" "flatlength(NestedList) -> Size")
               "httpd_util:decode_hex/1"
               ("http://www.erlang.org/doc/man/httpd_util.html#decode_hex-1" "decode_hex(HexValue) -> DecValue")
               "httpd_util:day/1"
               ("http://www.erlang.org/doc/man/httpd_util.html#day-1" "day(NthDayOfWeek) -> DayOfWeek")
               "httpd_util:create_etag/1"
               ("http://www.erlang.org/doc/man/httpd_util.html#create_etag-1" "create_etag(FileInfo) -> Etag")
               "httpd_util:convert_request_date/1"
               ("http://www.erlang.org/doc/man/httpd_util.html#convert_request_date-1" "convert_request_date(DateString) -> ErlDate|bad_date")
               "i:help/0"
               ("http://www.erlang.org/doc/man/i.html#help-0" "help() -> ok")
               "i:iv/0"
               ("http://www.erlang.org/doc/man/i.html#iv-0" "iv() -> atom()")
               "i:ipb/1"
               ("http://www.erlang.org/doc/man/i.html#ipb-1" "ipb(Module) -> ok")
               "i:ipb/0"
               ("http://www.erlang.org/doc/man/i.html#ipb-0" "ipb() -> ok")
               "i:ibc/3"
               ("http://www.erlang.org/doc/man/i.html#ibc-3" "ibc(Module, Line, Function) -> ok")
               "i:iba/3"
               ("http://www.erlang.org/doc/man/i.html#iba-3" "iba(Module, Line, Action) -> ok")
               "i:ibe/2"
               ("http://www.erlang.org/doc/man/i.html#ibe-2" "ibe(Module, Line) -> ok")
               "i:ibd/2"
               ("http://www.erlang.org/doc/man/i.html#ibd-2" "ibd(Module, Line) -> ok")
               "i:ir/3"
               ("http://www.erlang.org/doc/man/i.html#ir-3" "ir(Module, Name, Arity) -> ok | {error, function_not_found}")
               "i:ir/2"
               ("http://www.erlang.org/doc/man/i.html#ir-2" "ir(Module, Line) -> ok")
               "i:ir/1"
               ("http://www.erlang.org/doc/man/i.html#ir-1" "ir(Module) -> ok")
               "i:ir/0"
               ("http://www.erlang.org/doc/man/i.html#ir-0" "ir() -> ok")
               "i:ib/3"
               ("http://www.erlang.org/doc/man/i.html#ib-3" "ib(Module, Name, Arity) -> ok | {error, function_not_found}")
               "i:ib/2"
               ("http://www.erlang.org/doc/man/i.html#ib-2" "ib(Module, Line) -> ok | {error, break_exists}")
               "i:ia/4"
               ("http://www.erlang.org/doc/man/i.html#ia-4" "ia(X,Y,Z, Function) -> ok | no_proc")
               "i:ia/2"
               ("http://www.erlang.org/doc/man/i.html#ia-2" "ia(Pid, Function) -> ok | no_proc")
               "i:ia/3"
               ("http://www.erlang.org/doc/man/i.html#ia-3" "ia(X,Y,Z) -> ok | no_proc")
               "i:ia/1"
               ("http://www.erlang.org/doc/man/i.html#ia-1" "ia(Pid) -> ok | no_proc")
               "i:ist/1"
               ("http://www.erlang.org/doc/man/i.html#ist-1" "ist(Flag) -> true")
               "i:iaa/2"
               ("http://www.erlang.org/doc/man/i.html#iaa-2" "iaa(Flags, Function) -> true")
               "i:iaa/1"
               ("http://www.erlang.org/doc/man/i.html#iaa-1" "iaa(Flags) -> true")
               "i:ic/0"
               ("http://www.erlang.org/doc/man/i.html#ic-0" "ic() -> ok")
               "i:ip/0"
               ("http://www.erlang.org/doc/man/i.html#ip-0" "ip() -> ok")
               "i:il/0"
               ("http://www.erlang.org/doc/man/i.html#il-0" "il() -> ok")
               "i:inq/1"
               ("http://www.erlang.org/doc/man/i.html#inq-1" "inq(AbsModule) -> ok")
               "i:iq/1"
               ("http://www.erlang.org/doc/man/i.html#iq-1" "iq(AbsModule) -> ok")
               "i:ini/1"
               ("http://www.erlang.org/doc/man/i.html#ini-1" "ini(AbsModules) -> ok")
               "i:ii/1"
               ("http://www.erlang.org/doc/man/i.html#ii-1" "ii(AbsModules) -> ok")
               "i:im/0"
               ("http://www.erlang.org/doc/man/i.html#im-0" "im() -> pid()")
               "ic:ic:gen/2"
               ("http://www.erlang.org/doc/man/ic.html#ic:gen-2" "ic:gen(FileName, [Option]) -> Result")
               "ic:ic:gen/1"
               ("http://www.erlang.org/doc/man/ic.html#ic:gen-1" "ic:gen(FileName) -> Result")
               "ic_c_protocol:oe_prepare_reply_encoding()"
               ("http://www.erlang.org/doc/man/ic_c_protocol.html#oe_prepare_reply_encoding" "int oe_prepare_reply_encoding(CORBA_Environment *env)")
               "ic_c_protocol:oe_prepare_request_decoding()"
               ("http://www.erlang.org/doc/man/ic_c_protocol.html#oe_prepare_request_decoding" "int oe_prepare_request_decoding(CORBA_Environment *env)")
               "ic_c_protocol:oe_prepare_reply_decoding()"
               ("http://www.erlang.org/doc/man/ic_c_protocol.html#oe_prepare_reply_decoding" "int oe_prepare_reply_decoding(CORBA_Environment *env)")
               "ic_c_protocol:oe_send_request_and_receive_reply_tmo()"
               ("http://www.erlang.org/doc/man/ic_c_protocol.html#oe_send_request_and_receive_reply_tmo" "int oe_send_request_and_receive_reply_tmo(CORBA_Environment *env, unsigned int send_ms, unsigned int recv_ms)")
               "ic_c_protocol:oe_send_request_and_receive_reply()"
               ("http://www.erlang.org/doc/man/ic_c_protocol.html#oe_send_request_and_receive_reply" "int oe_send_request_and_receive_reply(CORBA_Environment *env)")
               "ic_c_protocol:oe_prepare_request_encoding()"
               ("http://www.erlang.org/doc/man/ic_c_protocol.html#oe_prepare_request_encoding" "int oe_prepare_request_encoding(CORBA_Environment *env)")
               "ic_c_protocol:oe_send_notification_tmo()"
               ("http://www.erlang.org/doc/man/ic_c_protocol.html#oe_send_notification_tmo" "int oe_send_notification_tmo(CORBA_Environment *env,  unsigned int send_ms)")
               "ic_c_protocol:oe_send_notification()"
               ("http://www.erlang.org/doc/man/ic_c_protocol.html#oe_send_notification" "int oe_send_notification(CORBA_Environment *env)")
               "ic_c_protocol:oe_prepare_notification_encoding()"
               ("http://www.erlang.org/doc/man/ic_c_protocol.html#oe_prepare_notification_encoding" "int oe_prepare_notification_encoding(CORBA_Environment *env)")
               "ic_clib:oe_merge_maps()"
               ("http://www.erlang.org/doc/man/ic_clib.html#oe_merge_maps" "oe_map_t *oe_merge_maps(oe_map_t *maps, int size)")
               "ic_clib:oe_exec_switch()"
               ("http://www.erlang.org/doc/man/ic_clib.html#oe_exec_switch" "int oe_exec_switch(CORBA_Object obj, CORBA_Environment *env, oe_map_t *map)")
               "ic_clib:oe_server_receive_tmo()"
               ("http://www.erlang.org/doc/man/ic_clib.html#oe_server_receive_tmo" "int oe_server_receive_tmo(CORBA_Environment *env, oe_map_t *map,  unsigned int send_ms, unsigned int recv_ms)")
               "ic_clib:oe_server_receive()"
               ("http://www.erlang.org/doc/man/ic_clib.html#oe_server_receive" "int oe_server_receive(CORBA_Environment *env, oe_map_t *map)")
               "ic_clib:CORBA_exc_set()"
               ("http://www.erlang.org/doc/man/ic_clib.html#CORBA_exc_set" "void CORBA_exc_set(CORBA_Environment *env, CORBA_exception_type Major, CORBA_char *Id, CORBA_char *Value)")
               "ic_clib:CORBA_exception_value()"
               ("http://www.erlang.org/doc/man/ic_clib.html#CORBA_exception_value" "void *CORBA_exception_value(CORBA_Environment *env)")
               "ic_clib:CORBA_exception_id()"
               ("http://www.erlang.org/doc/man/ic_clib.html#CORBA_exception_id" "CORBA_char *CORBA_exception_id(CORBA_Environment *env)")
               "ic_clib:CORBA_wstring_alloc()"
               ("http://www.erlang.org/doc/man/ic_clib.html#CORBA_wstring_alloc" "CORBA_wchar *CORBA_wstring_alloc(CORBA_unsigned_long len)")
               "ic_clib:CORBA_string_alloc()"
               ("http://www.erlang.org/doc/man/ic_clib.html#CORBA_string_alloc" "CORBA_char *CORBA_string_alloc(CORBA_unsigned_long len)")
               "ic_clib:CORBA_free()"
               ("http://www.erlang.org/doc/man/ic_clib.html#CORBA_free" "void CORBA_free(void *p)")
               "ic_clib:CORBA_Environment_alloc()"
               ("http://www.erlang.org/doc/man/ic_clib.html#CORBA_Environment_alloc" "CORBA_Environment *CORBA_Environment_alloc(int inbufsz, int outbufsz)")
               "igor:rename/3"
               ("http://www.erlang.org/doc/man/igor.html#rename-3" "rename(Files::[ filename() ], Renamings, Options::[term()]) -> [string()]")
               "igor:rename/2"
               ("http://www.erlang.org/doc/man/igor.html#rename-2" "rename(Files::[ filename() ], Renamings) -> [string()]")
               "igor:parse_transform/2"
               ("http://www.erlang.org/doc/man/igor.html#parse_transform-2" "parse_transform(Forms::[ syntaxTree() ], Options::[term()]) -> [ syntaxTree() ]")
               "igor:merge_sources/3"
               ("http://www.erlang.org/doc/man/igor.html#merge_sources-3" "merge_sources(Name::atom(), Sources::[Forms], Options::[term()]) -> { syntaxTree() , [ stubDescriptor() ]}")
               "igor:merge_files/4"
               ("http://www.erlang.org/doc/man/igor.html#merge_files-4" "merge_files(Name::atom(), Sources::[Forms], Files::[ filename() ], Options::[term()]) -> { syntaxTree() , [ stubDescriptor() ]}")
               "igor:merge_files/3"
               ("http://www.erlang.org/doc/man/igor.html#merge_files-3" "merge_files(Name::atom(), Files::[ filename() ], Options::[term()]) -> { syntaxTree() , [ stubDescriptor() ]}")
               "igor:merge/3"
               ("http://www.erlang.org/doc/man/igor.html#merge-3" "merge(Name::atom(), Files::[ filename() ], Options::[term()]) -> [ filename() ]")
               "igor:merge/2"
               ("http://www.erlang.org/doc/man/igor.html#merge-2" "merge(Name::atom(), Files::[ filename() ]) -> [ filename() ]")
               "igor:create_stubs/2"
               ("http://www.erlang.org/doc/man/igor.html#create_stubs-2" "create_stubs(Stubs::[ stubDescriptor() ], Options::[term()]) -> [string()]")
               "igor:"
               ("http://www.erlang.org/doc/man/igor.html#type-filename" "filename() = file:filename()")
               "inet:socknames/2"
               ("http://www.erlang.org/doc/man/inet.html#socknames-2" "socknames(Socket, Assoc) -> {ok, [{Address, Port}]} | {error, posix() }")
               "inet:socknames/1"
               ("http://www.erlang.org/doc/man/inet.html#socknames-1" "socknames(Socket :: socket() ) -> {ok, [{ ip_address() , port_number() } |  returned_non_ip_address() ]} | {error, posix() }")
               "inet:sockname/1"
               ("http://www.erlang.org/doc/man/inet.html#sockname-1" "sockname(Socket :: socket() ) -> {ok, { ip_address() , port_number() } |  returned_non_ip_address() } | {error, posix() }")
               "inet:setopts/2"
               ("http://www.erlang.org/doc/man/inet.html#setopts-2" "setopts(Socket, Options) -> ok | {error, posix() }")
               "inet:port/1"
               ("http://www.erlang.org/doc/man/inet.html#port-1" "port(Socket) -> {ok, Port} | {error, any()}")
               "inet:peernames/2"
               ("http://www.erlang.org/doc/man/inet.html#peernames-2" "peernames(Socket, Assoc) -> {ok, [{Address, Port}]} | {error, posix() }")
               "inet:peernames/1"
               ("http://www.erlang.org/doc/man/inet.html#peernames-1" "peernames(Socket :: socket() ) -> {ok, [{ ip_address() , port_number() } |  returned_non_ip_address() ]} | {error, posix() }")
               "inet:peername/1"
               ("http://www.erlang.org/doc/man/inet.html#peername-1" "peername(Socket :: socket() ) -> {ok, { ip_address() , port_number() } |  returned_non_ip_address() } | {error, posix() }")
               "inet:parse_strict_address/1"
               ("http://www.erlang.org/doc/man/inet.html#parse_strict_address-1" "parse_strict_address(Address) -> {ok, IPAddress} | {error, einval}")
               "inet:parse_ipv6strict_address/1"
               ("http://www.erlang.org/doc/man/inet.html#parse_ipv6strict_address-1" "parse_ipv6strict_address(Address) -> {ok, IPv6Address} | {error, einval}")
               "inet:parse_ipv6_address/1"
               ("http://www.erlang.org/doc/man/inet.html#parse_ipv6_address-1" "parse_ipv6_address(Address) -> {ok, IPv6Address} | {error, einval}")
               "inet:parse_ipv4strict_address/1"
               ("http://www.erlang.org/doc/man/inet.html#parse_ipv4strict_address-1" "parse_ipv4strict_address(Address) -> {ok, IPv4Address} | {error, einval}")
               "inet:parse_ipv4_address/1"
               ("http://www.erlang.org/doc/man/inet.html#parse_ipv4_address-1" "parse_ipv4_address(Address) -> {ok, IPv4Address} | {error, einval}")
               "inet:parse_address/1"
               ("http://www.erlang.org/doc/man/inet.html#parse_address-1" "parse_address(Address) -> {ok, IPAddress} | {error, einval}")
               "inet:ntoa/1"
               ("http://www.erlang.org/doc/man/inet.html#ntoa-1" "ntoa(IpAddress) -> Address | {error, einval}")
               "inet:getstat/2"
               ("http://www.erlang.org/doc/man/inet.html#getstat-2" "getstat(Socket, Options) -> {ok, OptionValues} | {error, posix() }")
               "inet:getstat/1"
               ("http://www.erlang.org/doc/man/inet.html#getstat-1" "getstat(Socket) -> {ok, OptionValues} | {error, posix() }")
               "inet:getopts/2"
               ("http://www.erlang.org/doc/man/inet.html#getopts-2" "getopts(Socket, Options) -> {ok, OptionValues} | {error, posix() }")
               "inet:getifaddrs/0"
               ("http://www.erlang.org/doc/man/inet.html#getifaddrs-0" "getifaddrs() -> {ok, Iflist} | {error, posix() }")
               "inet:gethostname/0"
               ("http://www.erlang.org/doc/man/inet.html#gethostname-0" "gethostname() -> {ok, Hostname}")
               "inet:gethostbyname/2"
               ("http://www.erlang.org/doc/man/inet.html#gethostbyname-2" "gethostbyname(Hostname, Family) -> {ok, Hostent} | {error, posix() }")
               "inet:gethostbyname/1"
               ("http://www.erlang.org/doc/man/inet.html#gethostbyname-1" "gethostbyname(Hostname) -> {ok, Hostent} | {error, posix() }")
               "inet:gethostbyaddr/1"
               ("http://www.erlang.org/doc/man/inet.html#gethostbyaddr-1" "gethostbyaddr(Address) -> {ok, Hostent} | {error, posix() }")
               "inet:getaddrs/2"
               ("http://www.erlang.org/doc/man/inet.html#getaddrs-2" "getaddrs(Host, Family) -> {ok, Addresses} | {error, posix() }")
               "inet:getaddr/2"
               ("http://www.erlang.org/doc/man/inet.html#getaddr-2" "getaddr(Host, Family) -> {ok, Address} | {error, posix() }")
               "inet:get_rc/0"
               ("http://www.erlang.org/doc/man/inet.html#get_rc-0" "get_rc() -> [{Par :: any(), Val :: any()}]")
               "inet:format_error/1"
               ("http://www.erlang.org/doc/man/inet.html#format_error-1" "format_error(Reason) -> string()")
               "inet:close/1"
               ("http://www.erlang.org/doc/man/inet.html#close-1" "close(Socket) -> ok")
               "inet:address_family()"
               ("http://www.erlang.org/doc/man/inet.html#type-address_family" "address_family() = inet | inet6 | local")
               "inet:"
               ("http://www.erlang.org/doc/man/inet.html#type-socket" "socket()")
               "inet:posix()"
               ("http://www.erlang.org/doc/man/inet.html#type-posix" "posix() = exbadport | exbadseq | file:posix()")
               "inet:returned_non_ip_address()"
               ("http://www.erlang.org/doc/man/inet.html#type-returned_non_ip_address" "returned_non_ip_address() = {local, binary()} | {unspec, <<>>} | {undefined, any()}")
               "inet:socket_setopt()"
               ("http://www.erlang.org/doc/man/inet.html#type-socket_setopt" "socket_setopt() =  gen_sctp:option() | gen_tcp:option() | gen_udp:option()")
               "inet:socket_getopt()"
               ("http://www.erlang.org/doc/man/inet.html#type-socket_getopt" "socket_getopt() =  gen_sctp:option_name() |  gen_tcp:option_name() |  gen_udp:option_name()")
               "inet:socket_address()"
               ("http://www.erlang.org/doc/man/inet.html#type-socket_address" "socket_address() =  ip_address() | any | loopback | local_address()")
               "inet:local_address()"
               ("http://www.erlang.org/doc/man/inet.html#type-local_address" "local_address() = {local, File :: binary() | string()}")
               "inet:port_number()"
               ("http://www.erlang.org/doc/man/inet.html#type-port_number" "port_number() = 0..65535")
               "inet:ip6_address()"
               ("http://www.erlang.org/doc/man/inet.html#type-ip6_address" "ip6_address() = {0..65535, 0..65535, 0..65535, 0..65535, 0..65535, 0..65535, 0..65535, 0..65535}")
               "inet:ip4_address()"
               ("http://www.erlang.org/doc/man/inet.html#type-ip4_address" "ip4_address() = {0..255, 0..255, 0..255, 0..255}")
               "inet:ip_address()"
               ("http://www.erlang.org/doc/man/inet.html#type-ip_address" "ip_address() = ip4_address() | ip6_address()")
               "inet:hostname()"
               ("http://www.erlang.org/doc/man/inet.html#type-hostname" "hostname() = atom() | string()")
               "inet:hostent()"
               ("http://www.erlang.org/doc/man/inet.html#type-hostent" "hostent() = #hostent{h_name = inet:hostname() , h_aliases = [ inet:hostname() ], h_addrtype = inet | inet6, h_length = integer() >= 0, h_addr_list = [ inet:ip_address() ]}")
               "inet_res:nnslookup/5"
               ("http://www.erlang.org/doc/man/inet_res.html#nnslookup-5" "nnslookup(Name, Class, Type, Nameservers, Timeout) -> {ok, dns_msg() } | {error, Reason}")
               "inet_res:nnslookup/4"
               ("http://www.erlang.org/doc/man/inet_res.html#nnslookup-4" "nnslookup(Name, Class, Type, Nameservers) -> {ok, dns_msg() } | {error, Reason}")
               "inet_res:nslookup/4"
               ("http://www.erlang.org/doc/man/inet_res.html#nslookup-4" "nslookup(Name, Class, Type, Timeout) -> {ok, dns_msg() } | {error, Reason}")
               "inet_res:nslookup/3"
               ("http://www.erlang.org/doc/man/inet_res.html#nslookup-3" "nslookup(Name, Class, Type) -> {ok, dns_msg() } | {error, Reason}")
               "inet_res:resolve/5"
               ("http://www.erlang.org/doc/man/inet_res.html#resolve-5" "resolve(Name, Class, Type, Opts, Timeout) -> {ok, dns_msg() } | Error")
               "inet_res:resolve/4"
               ("http://www.erlang.org/doc/man/inet_res.html#resolve-4" "resolve(Name, Class, Type, Opts) -> {ok, dns_msg() } | Error")
               "inet_res:resolve/3"
               ("http://www.erlang.org/doc/man/inet_res.html#resolve-3" "resolve(Name, Class, Type) -> {ok, dns_msg() } | Error")
               "inet_res:lookup/5"
               ("http://www.erlang.org/doc/man/inet_res.html#lookup-5" "lookup(Name, Class, Type, Opts, Timeout) -> [ dns_data() ]")
               "inet_res:lookup/4"
               ("http://www.erlang.org/doc/man/inet_res.html#lookup-4" "lookup(Name, Class, Type, Opts) -> [ dns_data() ]")
               "inet_res:lookup/3"
               ("http://www.erlang.org/doc/man/inet_res.html#lookup-3" "lookup(Name, Class, Type) -> [ dns_data() ]")
               "inet_res:gethostbyname/3"
               ("http://www.erlang.org/doc/man/inet_res.html#gethostbyname-3" "gethostbyname(Name, Family, Timeout) -> {ok, Hostent} | {error, Reason}")
               "inet_res:gethostbyname/2"
               ("http://www.erlang.org/doc/man/inet_res.html#gethostbyname-2" "gethostbyname(Name, Family) -> {ok, Hostent} | {error, Reason}")
               "inet_res:gethostbyname/1"
               ("http://www.erlang.org/doc/man/inet_res.html#gethostbyname-1" "gethostbyname(Name) -> {ok, Hostent} | {error, Reason}")
               "inet_res:gethostbyaddr/2"
               ("http://www.erlang.org/doc/man/inet_res.html#gethostbyaddr-2" "gethostbyaddr(Address, Timeout) -> {ok, Hostent} | {error, Reason}")
               "inet_res:gethostbyaddr/1"
               ("http://www.erlang.org/doc/man/inet_res.html#gethostbyaddr-1" "gethostbyaddr(Address) -> {ok, Hostent} | {error, Reason}")
               "inet_res:getbyname/3"
               ("http://www.erlang.org/doc/man/inet_res.html#getbyname-3" "getbyname(Name, Type, Timeout) -> {ok, Hostent} | {error, Reason}")
               "inet_res:getbyname/2"
               ("http://www.erlang.org/doc/man/inet_res.html#getbyname-2" "getbyname(Name, Type) -> {ok, Hostent} | {error, Reason}")
               "inet_res:dns_data()"
               ("http://www.erlang.org/doc/man/inet_res.html#type-dns_data" "dns_data() =  dns_name() |  inet:ip4_address() |  inet:ip6_address() | {MName :: dns_name() , RName :: dns_name() , Serial :: integer(), Refresh :: integer(), Retry :: integer(), Expiry :: integer(), Minimum :: integer()} | { inet:ip4_address() , Proto :: integer(), BitMap :: binary()} | {CpuString :: string(), OsString :: string()} | {RM :: dns_name() , EM :: dns_name() } | {Prio :: integer(), dns_name() } | {Prio :: integer(), Weight :: integer(), Port :: integer(),  dns_name() } | {Order :: integer(), Preference :: integer(), Flags :: string(), Services :: string(), Regexp :: string(),  dns_name() } | [string()] | binary()")
               "inet_res:dns_msg()"
               ("http://www.erlang.org/doc/man/inet_res.html#type-dns_msg" "dns_msg() = term()")
               "inet_res:dns_class()"
               ("http://www.erlang.org/doc/man/inet_res.html#type-dns_class" "dns_class() = in | chaos | hs | any")
               "inet_res:rr_type()"
               ("http://www.erlang.org/doc/man/inet_res.html#type-rr_type" "rr_type() = a | aaaa | cname | gid | hinfo | ns | mb | md | mg | mf | minfo | mx | naptr | null | ptr | soa | spf | srv | txt | uid | uinfo | unspec | wks")
               "inet_res:dns_name()"
               ("http://www.erlang.org/doc/man/inet_res.html#type-dns_name" "dns_name() = string()")
               "inet_res:res_error()"
               ("http://www.erlang.org/doc/man/inet_res.html#type-res_error" "res_error() = formerr | qfmterror | servfail | nxdomain | notimp | refused | badvers | timeout")
               "inet_res:nameserver()"
               ("http://www.erlang.org/doc/man/inet_res.html#type-nameserver" "nameserver() = { inet:ip_address() , Port :: 1..65535}")
               "inet_res:res_option()"
               ("http://www.erlang.org/doc/man/inet_res.html#type-res_option" "res_option() = {alt_nameservers, [ nameserver() ]} | {edns, 0 | false} | {inet6, boolean()} | {nameservers, [ nameserver() ]} | {recurse, boolean()} | {retry, integer()} | {timeout, integer()} | {udp_payload_size, integer()} | {usevc, boolean()}")
               "inets:stop/2"
               ("http://www.erlang.org/doc/man/inets.html#stop-2" "stop(Service, Reference) -> ok | {error, Reason}")
               "inets:stop/0"
               ("http://www.erlang.org/doc/man/inets.html#stop-0" "stop() -> ok")
               "inets:start/3"
               ("http://www.erlang.org/doc/man/inets.html#start-3" "start(Service, ServiceConfig, How) -> {ok, Pid} | {error, Reason}")
               "inets:start/2"
               ("http://www.erlang.org/doc/man/inets.html#start-2" "start(Service, ServiceConfig) -> {ok, Pid} | {error, Reason}")
               "inets:start/1"
               ("http://www.erlang.org/doc/man/inets.html#start-1" "start(Type) -> ok | {error, Reason}")
               "inets:start/0"
               ("http://www.erlang.org/doc/man/inets.html#start-0" "start() ->")
               "inets:service_names/0"
               ("http://www.erlang.org/doc/man/inets.html#service_names-0" "service_names() -> [Service]")
               "inets:services_info/0"
               ("http://www.erlang.org/doc/man/inets.html#services_info-0" "services_info() -> [{Service, Pid, Info}]")
               "inets:services/0"
               ("http://www.erlang.org/doc/man/inets.html#services-0" "services() -> [{Service, Pid}]")
               "init:stop/1"
               ("http://www.erlang.org/doc/man/init.html#stop-1" "stop(Status) -> ok")
               "init:stop/0"
               ("http://www.erlang.org/doc/man/init.html#stop-0" "stop() -> ok")
               "init:script_id/0"
               ("http://www.erlang.org/doc/man/init.html#script_id-0" "script_id() -> Id")
               "init:restart/0"
               ("http://www.erlang.org/doc/man/init.html#restart-0" "restart() -> ok")
               "init:reboot/0"
               ("http://www.erlang.org/doc/man/init.html#reboot-0" "reboot() -> ok")
               "init:get_status/0"
               ("http://www.erlang.org/doc/man/init.html#get_status-0" "get_status() -> {InternalStatus, ProvidedStatus}")
               "init:get_plain_arguments/0"
               ("http://www.erlang.org/doc/man/init.html#get_plain_arguments-0" "get_plain_arguments() -> [Arg]")
               "init:get_arguments/0"
               ("http://www.erlang.org/doc/man/init.html#get_arguments-0" "get_arguments() -> Flags")
               "init:get_argument/1"
               ("http://www.erlang.org/doc/man/init.html#get_argument-1" "get_argument(Flag) -> {ok, Arg} | error")
               "init:boot/1"
               ("http://www.erlang.org/doc/man/init.html#boot-1" "boot(BootArgs) -> no_return()")
               "instrument:type_no_range/1"
               ("http://www.erlang.org/doc/man/instrument.html#type_no_range-1" "type_no_range(MemoryData) -> {Min, Max}")
               "instrument:type_descr/2"
               ("http://www.erlang.org/doc/man/instrument.html#type_descr-2" "type_descr(MemoryData, TypeNo) -> TypeDescr | invalid_type")
               "instrument:sum_blocks/1"
               ("http://www.erlang.org/doc/man/instrument.html#sum_blocks-1" "sum_blocks(MemoryData) -> int()")
               "instrument:store_memory_status/1"
               ("http://www.erlang.org/doc/man/instrument.html#store_memory_status-1" "store_memory_status(File) -> true|false")
               "instrument:store_memory_data/1"
               ("http://www.erlang.org/doc/man/instrument.html#store_memory_data-1" "store_memory_data(File) -> true|false")
               "instrument:sort/1"
               ("http://www.erlang.org/doc/man/instrument.html#sort-1" "sort(MemoryData) -> MemoryData")
               "instrument:read_memory_status/1"
               ("http://www.erlang.org/doc/man/instrument.html#read_memory_status-1" "read_memory_status(File) -> MemoryStatus | {error, Reason}")
               "instrument:read_memory_data/1"
               ("http://www.erlang.org/doc/man/instrument.html#read_memory_data-1" "read_memory_data(File) -> MemoryData | {error, Reason}")
               "instrument:memory_status/1"
               ("http://www.erlang.org/doc/man/instrument.html#memory_status-1" "memory_status(StatusType) -> [StatusInfo] | false")
               "instrument:memory_data/0"
               ("http://www.erlang.org/doc/man/instrument.html#memory_data-0" "memory_data() -> MemoryData | false")
               "instrument:mem_limits/1"
               ("http://www.erlang.org/doc/man/instrument.html#mem_limits-1" "mem_limits(MemoryData) -> {Low, High}")
               "instrument:holes/1"
               ("http://www.erlang.org/doc/man/instrument.html#holes-1" "holes(MemoryData) -> ok")
               "instrument:descr/1"
               ("http://www.erlang.org/doc/man/instrument.html#descr-1" "descr(MemoryData) -> DescrMemoryData")
               "instrument:class_descr/2"
               ("http://www.erlang.org/doc/man/instrument.html#class_descr-2" "class_descr(MemoryData, TypeNo) -> ClassDescr | invalid_type | \"unknown\"")
               "instrument:block_header_size/1"
               ("http://www.erlang.org/doc/man/instrument.html#block_header_size-1" "block_header_size(MemoryData) -> int()")
               "instrument:allocator_descr/2"
               ("http://www.erlang.org/doc/man/instrument.html#allocator_descr-2" "allocator_descr(MemoryData, TypeNo) -> AllocDescr | invalid_type | \"unknown\"")
               "int:continue/3"
               ("http://www.erlang.org/doc/man/int.html#continue-3" "continue(X,Y,Z) -> ok | {error,not_interpreted}")
               "int:continue/1"
               ("http://www.erlang.org/doc/man/int.html#continue-1" "continue(Pid) -> ok | {error,not_interpreted}")
               "int:clear/0"
               ("http://www.erlang.org/doc/man/int.html#clear-0" "clear() -> ok")
               "int:snapshot/0"
               ("http://www.erlang.org/doc/man/int.html#snapshot-0" "snapshot() -> [Snapshot]")
               "int:all_breaks/1"
               ("http://www.erlang.org/doc/man/int.html#all_breaks-1" "all_breaks(Module) -> [Break]")
               "int:all_breaks/0"
               ("http://www.erlang.org/doc/man/int.html#all_breaks-0" "all_breaks() -> [Break]")
               "int:get_binding/2"
               ("http://www.erlang.org/doc/man/int.html#get_binding-2" "get_binding(Var, Bindings) -> {value,Value} | unbound")
               "int:test_at_break/3"
               ("http://www.erlang.org/doc/man/int.html#test_at_break-3" "test_at_break(Module, Line, Function) -> ok")
               "int:action_at_break/3"
               ("http://www.erlang.org/doc/man/int.html#action_at_break-3" "action_at_break(Module, Line, Action) -> ok")
               "int:enable_break/2"
               ("http://www.erlang.org/doc/man/int.html#enable_break-2" "enable_break(Module, Line) -> ok")
               "int:disable_break/2"
               ("http://www.erlang.org/doc/man/int.html#disable_break-2" "disable_break(Module, Line) -> ok")
               "int:no_break/1"
               ("http://www.erlang.org/doc/man/int.html#no_break-1" "no_break(Module) -> ok")
               "int:no_break/0"
               ("http://www.erlang.org/doc/man/int.html#no_break-0" "no_break() -> ok")
               "int:del_break_in/3"
               ("http://www.erlang.org/doc/man/int.html#del_break_in-3" "del_break_in(Module, Name, Arity) -> ok\n	| {error,function_not_found}")
               "int:break_in/3"
               ("http://www.erlang.org/doc/man/int.html#break_in-3" "break_in(Module, Name, Arity) -> ok\n	| {error,function_not_found}")
               "int:delete_break/2"
               ("http://www.erlang.org/doc/man/int.html#delete_break-2" "delete_break(Module, Line) -> ok")
               "int:break/2"
               ("http://www.erlang.org/doc/man/int.html#break-2" "break(Module, Line) -> ok | {error,break_exists}")
               "int:stack_trace/1"
               ("http://www.erlang.org/doc/man/int.html#stack_trace-1" "stack_trace(Flag)")
               "int:stack_trace/0"
               ("http://www.erlang.org/doc/man/int.html#stack_trace-0" "stack_trace() -> Flag")
               "int:auto_attach/2"
               ("http://www.erlang.org/doc/man/int.html#auto_attach-2" "auto_attach(Flags, Function)")
               "int:auto_attach/1"
               ("http://www.erlang.org/doc/man/int.html#auto_attach-1" "auto_attach(false)")
               "int:auto_attach/0"
               ("http://www.erlang.org/doc/man/int.html#auto_attach-0" "auto_attach() -> false | {Flags,Function}")
               "int:interpretable/1"
               ("http://www.erlang.org/doc/man/int.html#interpretable-1" "interpretable(AbsModule) -> true | {error,Reason}")
               "int:file/1"
               ("http://www.erlang.org/doc/man/int.html#file-1" "file(Module) -> File | {error,not_loaded}")
               "int:interpreted/0"
               ("http://www.erlang.org/doc/man/int.html#interpreted-0" "interpreted() -> [Module]")
               "int:nn/1"
               ("http://www.erlang.org/doc/man/int.html#nn-1" "nn(AbsModule) -> ok")
               "int:n/1"
               ("http://www.erlang.org/doc/man/int.html#n-1" "n(AbsModule) -> ok")
               "int:ni/1"
               ("http://www.erlang.org/doc/man/int.html#ni-1" "ni(AbsModule) -> {module,Module} | error")
               "int:i/1"
               ("http://www.erlang.org/doc/man/int.html#i-1" "i(AbsModule) -> {module,Module} | error")
               "interceptors:out_request_encoded/6"
               ("http://www.erlang.org/doc/man/interceptors.html#out_request_encoded-6" "out_request_encoded(Ref, Obj, Ctx, Op, Bin, Extra) -> Reply")
               "interceptors:out_request/6"
               ("http://www.erlang.org/doc/man/interceptors.html#out_request-6" "out_request(Ref, Obj, Ctx, Op, Args, Extra) -> Reply")
               "interceptors:out_reply_encoded/6"
               ("http://www.erlang.org/doc/man/interceptors.html#out_reply_encoded-6" "out_reply_encoded(Ref, Obj, Ctx, Op, Bin, Extra) -> Reply")
               "interceptors:out_reply/6"
               ("http://www.erlang.org/doc/man/interceptors.html#out_reply-6" "out_reply(Ref, Obj, Ctx, Op, Data, Extra) -> Reply")
               "interceptors:in_request_encoded/6"
               ("http://www.erlang.org/doc/man/interceptors.html#in_request_encoded-6" "in_request_encoded(Ref, Obj, Ctx, Op, Bin, Extra) -> Reply")
               "interceptors:in_request/6"
               ("http://www.erlang.org/doc/man/interceptors.html#in_request-6" "in_request(Ref, Obj, Ctx, Op, Args, Extra) -> Reply")
               "interceptors:in_reply_encoded/6"
               ("http://www.erlang.org/doc/man/interceptors.html#in_reply_encoded-6" "in_reply_encoded(Ref, Obj, Ctx, Op, Bin, Extra) -> Reply")
               "interceptors:in_reply/6"
               ("http://www.erlang.org/doc/man/interceptors.html#in_reply-6" "in_reply(Ref, Obj, Ctx, Op, Data, Extra) -> Reply")
               "interceptors:closed_out_connection/1"
               ("http://www.erlang.org/doc/man/interceptors.html#closed_out_connection-1" "closed_out_connection(Ref) -> NewRef")
               "interceptors:closed_in_connection/1"
               ("http://www.erlang.org/doc/man/interceptors.html#closed_in_connection-1" "closed_in_connection(Ref) -> NewRef")
               "interceptors:new_out_connection/5"
               ("http://www.erlang.org/doc/man/interceptors.html#new_out_connection-5" "new_out_connection(Ref, PeerHost, PeerPort, SocketHost, SocketPort) -> NewRef")
               "interceptors:new_out_connection/3"
               ("http://www.erlang.org/doc/man/interceptors.html#new_out_connection-3" "new_out_connection(Ref, PeerHost, PeerPort) -> NewRef")
               "interceptors:new_in_connection/5"
               ("http://www.erlang.org/doc/man/interceptors.html#new_in_connection-5" "new_in_connection(Ref, PeerHost, PeerPort, SocketHost, SocketPort) -> NewRef")
               "interceptors:new_in_connection/3"
               ("http://www.erlang.org/doc/man/interceptors.html#new_in_connection-3" "new_in_connection(Ref, PeerHost, PeerPort) -> NewRef")
               "io:write/2"
               ("http://www.erlang.org/doc/man/io.html#write-2" "write(IoDevice, Term) -> ok")
               "io:write/1"
               ("http://www.erlang.org/doc/man/io.html#write-1" "write(Term) -> ok")
               "io:setopts/2"
               ("http://www.erlang.org/doc/man/io.html#setopts-2" "setopts(IoDevice, Opts) -> ok | {error, Reason}")
               "io:setopts/1"
               ("http://www.erlang.org/doc/man/io.html#setopts-1" "setopts(Opts) -> ok | {error, Reason}")
               "io:scan_erl_form/4"
               ("http://www.erlang.org/doc/man/io.html#scan_erl_form-4" "scan_erl_form(IoDevice, Prompt, StartLocation, Options) -> Result")
               "io:scan_erl_form/3"
               ("http://www.erlang.org/doc/man/io.html#scan_erl_form-3" "scan_erl_form(IoDevice, Prompt, StartLocation) -> Result")
               "io:scan_erl_form/2"
               ("http://www.erlang.org/doc/man/io.html#scan_erl_form-2" "scan_erl_form(IoDevice, Prompt) -> Result")
               "io:scan_erl_form/1"
               ("http://www.erlang.org/doc/man/io.html#scan_erl_form-1" "scan_erl_form(Prompt) -> Result")
               "io:scan_erl_exprs/4"
               ("http://www.erlang.org/doc/man/io.html#scan_erl_exprs-4" "scan_erl_exprs(Device, Prompt, StartLocation, Options) -> Result")
               "io:scan_erl_exprs/3"
               ("http://www.erlang.org/doc/man/io.html#scan_erl_exprs-3" "scan_erl_exprs(Device, Prompt, StartLocation) -> Result")
               "io:scan_erl_exprs/2"
               ("http://www.erlang.org/doc/man/io.html#scan_erl_exprs-2" "scan_erl_exprs(Device, Prompt) -> Result")
               "io:scan_erl_exprs/1"
               ("http://www.erlang.org/doc/man/io.html#scan_erl_exprs-1" "scan_erl_exprs(Prompt) -> Result")
               "io:rows/1"
               ("http://www.erlang.org/doc/man/io.html#rows-1" "rows(IoDevice) -> {ok, integer() >= 1} | {error, enotsup}")
               "io:rows/0"
               ("http://www.erlang.org/doc/man/io.html#rows-0" "rows() -> {ok, integer() >= 1} | {error, enotsup}")
               "io:read/4"
               ("http://www.erlang.org/doc/man/io.html#read-4" "read(IoDevice, Prompt, StartLocation, Options) -> Result")
               "io:read/3"
               ("http://www.erlang.org/doc/man/io.html#read-3" "read(IoDevice, Prompt, StartLocation) -> Result")
               "io:read/2"
               ("http://www.erlang.org/doc/man/io.html#read-2" "read(IoDevice, Prompt) -> Result")
               "io:read/1"
               ("http://www.erlang.org/doc/man/io.html#read-1" "read(Prompt) -> Result")
               "io:put_chars/2"
               ("http://www.erlang.org/doc/man/io.html#put_chars-2" "put_chars(IoDevice, CharData) -> ok")
               "io:put_chars/1"
               ("http://www.erlang.org/doc/man/io.html#put_chars-1" "put_chars(CharData) -> ok")
               "io:printable_range/0"
               ("http://www.erlang.org/doc/man/io.html#printable_range-0" "printable_range() -> unicode | latin1")
               "io:parse_erl_form/4"
               ("http://www.erlang.org/doc/man/io.html#parse_erl_form-4" "parse_erl_form(IoDevice, Prompt, StartLocation, Options) -> Result")
               "io:parse_erl_form/3"
               ("http://www.erlang.org/doc/man/io.html#parse_erl_form-3" "parse_erl_form(IoDevice, Prompt, StartLocation) -> Result")
               "io:parse_erl_form/2"
               ("http://www.erlang.org/doc/man/io.html#parse_erl_form-2" "parse_erl_form(IoDevice, Prompt) -> Result")
               "io:parse_erl_form/1"
               ("http://www.erlang.org/doc/man/io.html#parse_erl_form-1" "parse_erl_form(Prompt) -> Result")
               "io:parse_erl_exprs/4"
               ("http://www.erlang.org/doc/man/io.html#parse_erl_exprs-4" "parse_erl_exprs(IoDevice, Prompt, StartLocation, Options) -> Result")
               "io:parse_erl_exprs/3"
               ("http://www.erlang.org/doc/man/io.html#parse_erl_exprs-3" "parse_erl_exprs(IoDevice, Prompt, StartLocation) -> Result")
               "io:parse_erl_exprs/2"
               ("http://www.erlang.org/doc/man/io.html#parse_erl_exprs-2" "parse_erl_exprs(IoDevice, Prompt) -> Result")
               "io:parse_erl_exprs/1"
               ("http://www.erlang.org/doc/man/io.html#parse_erl_exprs-1" "parse_erl_exprs(Prompt) -> Result")
               "io:nl/1"
               ("http://www.erlang.org/doc/man/io.html#nl-1" "nl(IoDevice) -> ok")
               "io:nl/0"
               ("http://www.erlang.org/doc/man/io.html#nl-0" "nl() -> ok")
               "io:getopts/1"
               ("http://www.erlang.org/doc/man/io.html#getopts-1" "getopts(IoDevice) -> [ opt_pair() ] | {error, Reason}")
               "io:getopts/0"
               ("http://www.erlang.org/doc/man/io.html#getopts-0" "getopts() -> [ opt_pair() ] | {error, Reason}")
               "io:get_line/2"
               ("http://www.erlang.org/doc/man/io.html#get_line-2" "get_line(IoDevice, Prompt) -> Data | server_no_data()")
               "io:get_line/1"
               ("http://www.erlang.org/doc/man/io.html#get_line-1" "get_line(Prompt) -> Data | server_no_data()")
               "io:get_chars/3"
               ("http://www.erlang.org/doc/man/io.html#get_chars-3" "get_chars(IoDevice, Prompt, Count) -> Data | server_no_data()")
               "io:get_chars/2"
               ("http://www.erlang.org/doc/man/io.html#get_chars-2" "get_chars(Prompt, Count) -> Data | server_no_data()")
               "io:fread/3"
               ("http://www.erlang.org/doc/man/io.html#fread-3" "fread(IoDevice, Prompt, Format) -> Result")
               "io:fread/2"
               ("http://www.erlang.org/doc/man/io.html#fread-2" "fread(Prompt, Format) -> Result")
               "io:fwrite/3"
               ("http://www.erlang.org/doc/man/io.html#fwrite-3" "fwrite(IoDevice, Format, Data) -> ok")
               "io:fwrite/2"
               ("http://www.erlang.org/doc/man/io.html#fwrite-2" "fwrite(Format, Data) -> ok")
               "io:fwrite/1"
               ("http://www.erlang.org/doc/man/io.html#fwrite-1" "fwrite(Format) -> ok")
               "io:format/3"
               ("http://www.erlang.org/doc/man/io.html#format-3" "format(IoDevice, Format, Data) -> ok")
               "io:format/2"
               ("http://www.erlang.org/doc/man/io.html#format-2" "format(Format, Data) -> ok")
               "io:format/1"
               ("http://www.erlang.org/doc/man/io.html#format-1" "format(Format) -> ok")
               "io:columns/1"
               ("http://www.erlang.org/doc/man/io.html#columns-1" "columns(IoDevice) -> {ok, integer() >= 1} | {error, enotsup}")
               "io:columns/0"
               ("http://www.erlang.org/doc/man/io.html#columns-0" "columns() -> {ok, integer() >= 1} | {error, enotsup}")
               "io:server_no_data()"
               ("http://www.erlang.org/doc/man/io.html#type-server_no_data" "server_no_data() = {error, ErrorDescription :: term()} | eof")
               "io:prompt()"
               ("http://www.erlang.org/doc/man/io.html#type-prompt" "prompt() = atom() | unicode:chardata()")
               "io:location()"
               ("http://www.erlang.org/doc/man/io.html#type-location" "location() = erl_anno:location()")
               "io:format()"
               ("http://www.erlang.org/doc/man/io.html#type-format" "format() = atom() | string() | binary()")
               "io:setopt()"
               ("http://www.erlang.org/doc/man/io.html#type-setopt" "setopt() = binary | list | opt_pair()")
               "io:encoding()"
               ("http://www.erlang.org/doc/man/io.html#type-encoding" "encoding() = latin1 | unicode | utf8 | utf16 | utf32 | {utf16, big | little} | {utf32, big | little}")
               "io:expand_fun()"
               ("http://www.erlang.org/doc/man/io.html#type-expand_fun" "expand_fun() = fun((term()) -> {yes | no, string(), [string(), ...]})")
               "io:opt_pair()"
               ("http://www.erlang.org/doc/man/io.html#type-opt_pair" "opt_pair() = {binary, boolean()} | {echo, boolean()} | {expand_fun, expand_fun() } | {encoding, encoding() }")
               "io:device()"
               ("http://www.erlang.org/doc/man/io.html#type-device" "device() = atom() | pid()")
               "io_lib:write_string_as_latin1/1"
               ("http://www.erlang.org/doc/man/io_lib.html#write_string_as_latin1-1" "write_string_as_latin1(String) -> latin1_string()")
               "io_lib:write_string/1"
               ("http://www.erlang.org/doc/man/io_lib.html#write_string-1" "write_string(String) -> chars()")
               "io_lib:write_latin1_string/1"
               ("http://www.erlang.org/doc/man/io_lib.html#write_latin1_string-1" "write_latin1_string(Latin1String) -> latin1_string()")
               "io_lib:write_latin1_char/1"
               ("http://www.erlang.org/doc/man/io_lib.html#write_latin1_char-1" "write_latin1_char(Latin1Char) -> latin1_string()")
               "io_lib:write_char_as_latin1/1"
               ("http://www.erlang.org/doc/man/io_lib.html#write_char_as_latin1-1" "write_char_as_latin1(Char) -> latin1_string()")
               "io_lib:write_char/1"
               ("http://www.erlang.org/doc/man/io_lib.html#write_char-1" "write_char(Char) -> chars()")
               "io_lib:write_atom/1"
               ("http://www.erlang.org/doc/man/io_lib.html#write_atom-1" "write_atom(Atom) -> chars()")
               "io_lib:write/2"
               ("http://www.erlang.org/doc/man/io_lib.html#write-2" "write(Term, Depth) -> chars()")
               "io_lib:write/1"
               ("http://www.erlang.org/doc/man/io_lib.html#write-1" "write(Term) -> chars()")
               "io_lib:unscan_format/1"
               ("http://www.erlang.org/doc/man/io_lib.html#unscan_format-1" "unscan_format(FormatList) -> {Format, Data}")
               "io_lib:scan_format/2"
               ("http://www.erlang.org/doc/man/io_lib.html#scan_format-2" "scan_format(Format, Data) -> FormatList")
               "io_lib:printable_unicode_list/1"
               ("http://www.erlang.org/doc/man/io_lib.html#printable_unicode_list-1" "printable_unicode_list(Term) -> boolean()")
               "io_lib:printable_list/1"
               ("http://www.erlang.org/doc/man/io_lib.html#printable_list-1" "printable_list(Term) -> boolean()")
               "io_lib:printable_latin1_list/1"
               ("http://www.erlang.org/doc/man/io_lib.html#printable_latin1_list-1" "printable_latin1_list(Term) -> boolean()")
               "io_lib:print/4"
               ("http://www.erlang.org/doc/man/io_lib.html#print-4" "print(Term, Column, LineLength, Depth) -> chars()")
               "io_lib:print/1"
               ("http://www.erlang.org/doc/man/io_lib.html#print-1" "print(Term) -> chars()")
               "io_lib:nl/0"
               ("http://www.erlang.org/doc/man/io_lib.html#nl-0" "nl() -> string()")
               "io_lib:latin1_char_list/1"
               ("http://www.erlang.org/doc/man/io_lib.html#latin1_char_list-1" "latin1_char_list(Term) -> boolean()")
               "io_lib:indentation/2"
               ("http://www.erlang.org/doc/man/io_lib.html#indentation-2" "indentation(String, StartIndent) -> integer()")
               "io_lib:fread/3"
               ("http://www.erlang.org/doc/man/io_lib.html#fread-3" "fread(Continuation, CharSpec, Format) -> Return")
               "io_lib:fread/2"
               ("http://www.erlang.org/doc/man/io_lib.html#fread-2" "fread(Format, String) -> Result")
               "io_lib:fwrite/2"
               ("http://www.erlang.org/doc/man/io_lib.html#fwrite-2" "fwrite(Format, Data) -> chars()")
               "io_lib:format/2"
               ("http://www.erlang.org/doc/man/io_lib.html#format-2" "format(Format, Data) -> chars()")
               "io_lib:deep_latin1_char_list/1"
               ("http://www.erlang.org/doc/man/io_lib.html#deep_latin1_char_list-1" "deep_latin1_char_list(Term) -> boolean()")
               "io_lib:deep_char_list/1"
               ("http://www.erlang.org/doc/man/io_lib.html#deep_char_list-1" "deep_char_list(Term) -> boolean()")
               "io_lib:char_list/1"
               ("http://www.erlang.org/doc/man/io_lib.html#char_list-1" "char_list(Term) -> boolean()")
               "io_lib:build_text/1"
               ("http://www.erlang.org/doc/man/io_lib.html#build_text-1" "build_text(FormatList) -> chars()")
               "io_lib:format_spec()"
               ("http://www.erlang.org/doc/man/io_lib.html#type-format_spec" "format_spec() = #{control_char := char(), args := [any()], width := none | integer(), adjust := left | right, precision := none | integer(), pad_char := char(), encoding := unicode | latin1, strings := boolean()}")
               "io_lib:latin1_string()"
               ("http://www.erlang.org/doc/man/io_lib.html#type-latin1_string" "latin1_string() = [ unicode:latin1_char() ]")
               "io_lib:fread_item()"
               ("http://www.erlang.org/doc/man/io_lib.html#type-fread_item" "fread_item() = string() | atom() | integer() | float()")
               "io_lib:fread_error()"
               ("http://www.erlang.org/doc/man/io_lib.html#type-fread_error" "fread_error() = atom | based | character | float | format | input | integer | string | unsigned")
               "io_lib:depth()"
               ("http://www.erlang.org/doc/man/io_lib.html#type-depth" "depth() = -1 | integer() >= 0")
               "io_lib:continuation()"
               ("http://www.erlang.org/doc/man/io_lib.html#type-continuation" "continuation()")
               "io_lib:chars()"
               ("http://www.erlang.org/doc/man/io_lib.html#type-chars" "chars() = [char() | chars() ]")
               "lcnt:rt_opt/2"
               ("http://www.erlang.org/doc/man/lcnt.html#rt_opt-2" "rt_opt(Node, {Type, bool()}) -> bool()")
               "lcnt:rt_opt/1"
               ("http://www.erlang.org/doc/man/lcnt.html#rt_opt-1" "rt_opt({Type, bool()}) -> bool()")
               "lcnt:rt_clear/1"
               ("http://www.erlang.org/doc/man/lcnt.html#rt_clear-1" "rt_clear(Node) -> ok")
               "lcnt:rt_clear/0"
               ("http://www.erlang.org/doc/man/lcnt.html#rt_clear-0" "rt_clear() -> ok")
               "lcnt:rt_collect/1"
               ("http://www.erlang.org/doc/man/lcnt.html#rt_collect-1" "rt_collect(Node) -> [lock_counter_data()]")
               "lcnt:rt_collect/0"
               ("http://www.erlang.org/doc/man/lcnt.html#rt_collect-0" "rt_collect() -> [lock_counter_data()]")
               "lcnt:port/2"
               ("http://www.erlang.org/doc/man/lcnt.html#port-2" "port(Node, Id) -> port()")
               "lcnt:port/1"
               ("http://www.erlang.org/doc/man/lcnt.html#port-1" "port(Id) -> port()")
               "lcnt:pid/3"
               ("http://www.erlang.org/doc/man/lcnt.html#pid-3" "pid(Node, Id, Serial) -> pid()")
               "lcnt:pid/2"
               ("http://www.erlang.org/doc/man/lcnt.html#pid-2" "pid(Id, Serial) -> pid()")
               "lcnt:apply/3"
               ("http://www.erlang.org/doc/man/lcnt.html#apply-3" "apply(Module, Function, Args) -> term()")
               "lcnt:apply/2"
               ("http://www.erlang.org/doc/man/lcnt.html#apply-2" "apply(Fun, Args) -> term()")
               "lcnt:apply/1"
               ("http://www.erlang.org/doc/man/lcnt.html#apply-1" "apply(Fun) -> term()")
               "lcnt:save/1"
               ("http://www.erlang.org/doc/man/lcnt.html#save-1" "save(Filename) -> ok")
               "lcnt:load/1"
               ("http://www.erlang.org/doc/man/lcnt.html#load-1" "load(Filename) -> ok")
               "lcnt:swap_pid_keys/0"
               ("http://www.erlang.org/doc/man/lcnt.html#swap_pid_keys-0" "swap_pid_keys() -> ok")
               "lcnt:information/0"
               ("http://www.erlang.org/doc/man/lcnt.html#information-0" "information() -> ok")
               "lcnt:inspect/2"
               ("http://www.erlang.org/doc/man/lcnt.html#inspect-2" "inspect(Lock, [Option]) -> ok")
               "lcnt:inspect/1"
               ("http://www.erlang.org/doc/man/lcnt.html#inspect-1" "inspect(Lock) -> ok")
               "lcnt:locations/1"
               ("http://www.erlang.org/doc/man/lcnt.html#locations-1" "locations([Option]) -> ok")
               "lcnt:locations/0"
               ("http://www.erlang.org/doc/man/lcnt.html#locations-0" "locations() -> ok")
               "lcnt:conflicts/1"
               ("http://www.erlang.org/doc/man/lcnt.html#conflicts-1" "conflicts([Option]) -> ok")
               "lcnt:conflicts/0"
               ("http://www.erlang.org/doc/man/lcnt.html#conflicts-0" "conflicts() -> ok")
               "lcnt:clear/1"
               ("http://www.erlang.org/doc/man/lcnt.html#clear-1" "clear(Node) -> ok")
               "lcnt:clear/0"
               ("http://www.erlang.org/doc/man/lcnt.html#clear-0" "clear() -> ok")
               "lcnt:collect/1"
               ("http://www.erlang.org/doc/man/lcnt.html#collect-1" "collect(Node) -> ok")
               "lcnt:collect/0"
               ("http://www.erlang.org/doc/man/lcnt.html#collect-0" "collect() -> ok")
               "lcnt:stop/0"
               ("http://www.erlang.org/doc/man/lcnt.html#stop-0" "stop() -> ok")
               "lcnt:start/0"
               ("http://www.erlang.org/doc/man/lcnt.html#start-0" "start() -> {ok, Pid} | {error, {already_started, Pid}}")
               "leex:tokens/3"
               ("http://www.erlang.org/doc/man/leex.html#tokens-3" "tokens(Cont, Chars, StartLine) -> \n               {more,Cont1} | {done,TokensRet,RestChars}")
               "leex:tokens/2"
               ("http://www.erlang.org/doc/man/leex.html#tokens-2" "tokens(Cont, Chars) -> {more,Cont1} | {done,TokensRet,RestChars}")
               "leex:token/3"
               ("http://www.erlang.org/doc/man/leex.html#token-3" "token(Cont, Chars, StartLine) -> {more,Cont1} \n             | {done,TokenRet,RestChars}")
               "leex:token/2"
               ("http://www.erlang.org/doc/man/leex.html#token-2" "token(Cont, Chars) -> {more,Cont1} | {done,TokenRet,RestChars}")
               "leex:string/2"
               ("http://www.erlang.org/doc/man/leex.html#string-2" "string(String, StartLine) -> StringRet")
               "leex:string/1"
               ("http://www.erlang.org/doc/man/leex.html#string-1" "string(String) -> StringRet")
               "leex:format_error/1"
               ("http://www.erlang.org/doc/man/leex.html#format_error-1" "format_error(ErrorInfo) -> Chars")
               "leex:file/2"
               ("http://www.erlang.org/doc/man/leex.html#file-2" "file(FileName, [, Options]) -> LeexRet")
               "lib:sendw/2"
               ("http://www.erlang.org/doc/man/lib.html#sendw-2" "sendw(To, Msg) -> term()")
               "lib:send/2"
               ("http://www.erlang.org/doc/man/lib.html#send-2" "send(To, Msg) -> Msg")
               "lib:progname/0"
               ("http://www.erlang.org/doc/man/lib.html#progname-0" "progname() -> atom()")
               "lib:nonl/1"
               ("http://www.erlang.org/doc/man/lib.html#nonl-1" "nonl(String1) -> String2")
               "lib:flush_receive/0"
               ("http://www.erlang.org/doc/man/lib.html#flush_receive-0" "flush_receive() -> ok")
               "lib:error_message/2"
               ("http://www.erlang.org/doc/man/lib.html#error_message-2" "error_message(Format, Args) -> ok")
               "lists:zipwith3/4"
               ("http://www.erlang.org/doc/man/lists.html#zipwith3-4" "zipwith3(Combine, List1, List2, List3) -> List4")
               "lists:zipwith/3"
               ("http://www.erlang.org/doc/man/lists.html#zipwith-3" "zipwith(Combine, List1, List2) -> List3")
               "lists:zip3/3"
               ("http://www.erlang.org/doc/man/lists.html#zip3-3" "zip3(List1, List2, List3) -> List4")
               "lists:zip/2"
               ("http://www.erlang.org/doc/man/lists.html#zip-2" "zip(List1, List2) -> List3")
               "lists:usort/2"
               ("http://www.erlang.org/doc/man/lists.html#usort-2" "usort(Fun, List1) -> List2")
               "lists:usort/1"
               ("http://www.erlang.org/doc/man/lists.html#usort-1" "usort(List1) -> List2")
               "lists:unzip3/1"
               ("http://www.erlang.org/doc/man/lists.html#unzip3-1" "unzip3(List1) -> {List2, List3, List4}")
               "lists:unzip/1"
               ("http://www.erlang.org/doc/man/lists.html#unzip-1" "unzip(List1) -> {List2, List3}")
               "lists:umerge3/3"
               ("http://www.erlang.org/doc/man/lists.html#umerge3-3" "umerge3(List1, List2, List3) -> List4")
               "lists:umerge/3"
               ("http://www.erlang.org/doc/man/lists.html#umerge-3" "umerge(Fun, List1, List2) -> List3")
               "lists:umerge/2"
               ("http://www.erlang.org/doc/man/lists.html#umerge-2" "umerge(List1, List2) -> List3")
               "lists:umerge/1"
               ("http://www.erlang.org/doc/man/lists.html#umerge-1" "umerge(ListOfLists) -> List1")
               "lists:ukeysort/2"
               ("http://www.erlang.org/doc/man/lists.html#ukeysort-2" "ukeysort(N, TupleList1) -> TupleList2")
               "lists:ukeymerge/3"
               ("http://www.erlang.org/doc/man/lists.html#ukeymerge-3" "ukeymerge(N, TupleList1, TupleList2) -> TupleList3")
               "lists:takewhile/2"
               ("http://www.erlang.org/doc/man/lists.html#takewhile-2" "takewhile(Pred, List1) -> List2")
               "lists:sum/1"
               ("http://www.erlang.org/doc/man/lists.html#sum-1" "sum(List) -> number()")
               "lists:suffix/2"
               ("http://www.erlang.org/doc/man/lists.html#suffix-2" "suffix(List1, List2) -> boolean()")
               "lists:subtract/2"
               ("http://www.erlang.org/doc/man/lists.html#subtract-2" "subtract(List1, List2) -> List3")
               "lists:sublist/3"
               ("http://www.erlang.org/doc/man/lists.html#sublist-3" "sublist(List1, Start, Len) -> List2")
               "lists:sublist/2"
               ("http://www.erlang.org/doc/man/lists.html#sublist-2" "sublist(List1, Len) -> List2")
               "lists:splitwith/2"
               ("http://www.erlang.org/doc/man/lists.html#splitwith-2" "splitwith(Pred, List) -> {List1, List2}")
               "lists:split/2"
               ("http://www.erlang.org/doc/man/lists.html#split-2" "split(N, List1) -> {List2, List3}")
               "lists:sort/2"
               ("http://www.erlang.org/doc/man/lists.html#sort-2" "sort(Fun, List1) -> List2")
               "lists:sort/1"
               ("http://www.erlang.org/doc/man/lists.html#sort-1" "sort(List1) -> List2")
               "lists:seq/3"
               ("http://www.erlang.org/doc/man/lists.html#seq-3" "seq(From, To, Incr) -> Seq")
               "lists:seq/2"
               ("http://www.erlang.org/doc/man/lists.html#seq-2" "seq(From, To) -> Seq")
               "lists:reverse/2"
               ("http://www.erlang.org/doc/man/lists.html#reverse-2" "reverse(List1, Tail) -> List2")
               "lists:reverse/1"
               ("http://www.erlang.org/doc/man/lists.html#reverse-1" "reverse(List1) -> List2")
               "lists:prefix/2"
               ("http://www.erlang.org/doc/man/lists.html#prefix-2" "prefix(List1, List2) -> boolean()")
               "lists:partition/2"
               ("http://www.erlang.org/doc/man/lists.html#partition-2" "partition(Pred, List) -> {Satisfying, NotSatisfying}")
               "lists:nthtail/2"
               ("http://www.erlang.org/doc/man/lists.html#nthtail-2" "nthtail(N, List) -> Tail")
               "lists:nth/2"
               ("http://www.erlang.org/doc/man/lists.html#nth-2" "nth(N, List) -> Elem")
               "lists:min/1"
               ("http://www.erlang.org/doc/man/lists.html#min-1" "min(List) -> Min")
               "lists:merge3/3"
               ("http://www.erlang.org/doc/man/lists.html#merge3-3" "merge3(List1, List2, List3) -> List4")
               "lists:merge/3"
               ("http://www.erlang.org/doc/man/lists.html#merge-3" "merge(Fun, List1, List2) -> List3")
               "lists:merge/2"
               ("http://www.erlang.org/doc/man/lists.html#merge-2" "merge(List1, List2) -> List3")
               "lists:merge/1"
               ("http://www.erlang.org/doc/man/lists.html#merge-1" "merge(ListOfLists) -> List1")
               "lists:member/2"
               ("http://www.erlang.org/doc/man/lists.html#member-2" "member(Elem, List) -> boolean()")
               "lists:max/1"
               ("http://www.erlang.org/doc/man/lists.html#max-1" "max(List) -> Max")
               "lists:mapfoldr/3"
               ("http://www.erlang.org/doc/man/lists.html#mapfoldr-3" "mapfoldr(Fun, Acc0, List1) -> {List2, Acc1}")
               "lists:mapfoldl/3"
               ("http://www.erlang.org/doc/man/lists.html#mapfoldl-3" "mapfoldl(Fun, Acc0, List1) -> {List2, Acc1}")
               "lists:map/2"
               ("http://www.erlang.org/doc/man/lists.html#map-2" "map(Fun, List1) -> List2")
               "lists:last/1"
               ("http://www.erlang.org/doc/man/lists.html#last-1" "last(List) -> Last")
               "lists:keytake/3"
               ("http://www.erlang.org/doc/man/lists.html#keytake-3" "keytake(Key, N, TupleList1) -> {value, Tuple, TupleList2} | false")
               "lists:keystore/4"
               ("http://www.erlang.org/doc/man/lists.html#keystore-4" "keystore(Key, N, TupleList1, NewTuple) -> TupleList2")
               "lists:keysort/2"
               ("http://www.erlang.org/doc/man/lists.html#keysort-2" "keysort(N, TupleList1) -> TupleList2")
               "lists:keysearch/3"
               ("http://www.erlang.org/doc/man/lists.html#keysearch-3" "keysearch(Key, N, TupleList) -> {value, Tuple} | false")
               "lists:keyreplace/4"
               ("http://www.erlang.org/doc/man/lists.html#keyreplace-4" "keyreplace(Key, N, TupleList1, NewTuple) -> TupleList2")
               "lists:keymerge/3"
               ("http://www.erlang.org/doc/man/lists.html#keymerge-3" "keymerge(N, TupleList1, TupleList2) -> TupleList3")
               "lists:keymember/3"
               ("http://www.erlang.org/doc/man/lists.html#keymember-3" "keymember(Key, N, TupleList) -> boolean()")
               "lists:keymap/3"
               ("http://www.erlang.org/doc/man/lists.html#keymap-3" "keymap(Fun, N, TupleList1) -> TupleList2")
               "lists:keyfind/3"
               ("http://www.erlang.org/doc/man/lists.html#keyfind-3" "keyfind(Key, N, TupleList) -> Tuple | false")
               "lists:keydelete/3"
               ("http://www.erlang.org/doc/man/lists.html#keydelete-3" "keydelete(Key, N, TupleList1) -> TupleList2")
               "lists:foreach/2"
               ("http://www.erlang.org/doc/man/lists.html#foreach-2" "foreach(Fun, List) -> ok")
               "lists:join/2"
               ("http://www.erlang.org/doc/man/lists.html#join-2" "join(Sep, List1) -> List2")
               "lists:foldr/3"
               ("http://www.erlang.org/doc/man/lists.html#foldr-3" "foldr(Fun, Acc0, List) -> Acc1")
               "lists:foldl/3"
               ("http://www.erlang.org/doc/man/lists.html#foldl-3" "foldl(Fun, Acc0, List) -> Acc1")
               "lists:flatten/2"
               ("http://www.erlang.org/doc/man/lists.html#flatten-2" "flatten(DeepList, Tail) -> List")
               "lists:flatten/1"
               ("http://www.erlang.org/doc/man/lists.html#flatten-1" "flatten(DeepList) -> List")
               "lists:flatmap/2"
               ("http://www.erlang.org/doc/man/lists.html#flatmap-2" "flatmap(Fun, List1) -> List2")
               "lists:flatlength/1"
               ("http://www.erlang.org/doc/man/lists.html#flatlength-1" "flatlength(DeepList) -> integer() >= 0")
               "lists:filtermap/2"
               ("http://www.erlang.org/doc/man/lists.html#filtermap-2" "filtermap(Fun, List1) -> List2")
               "lists:filter/2"
               ("http://www.erlang.org/doc/man/lists.html#filter-2" "filter(Pred, List1) -> List2")
               "lists:duplicate/2"
               ("http://www.erlang.org/doc/man/lists.html#duplicate-2" "duplicate(N, Elem) -> List")
               "lists:dropwhile/2"
               ("http://www.erlang.org/doc/man/lists.html#dropwhile-2" "dropwhile(Pred, List1) -> List2")
               "lists:droplast/1"
               ("http://www.erlang.org/doc/man/lists.html#droplast-1" "droplast(List) -> InitList")
               "lists:delete/2"
               ("http://www.erlang.org/doc/man/lists.html#delete-2" "delete(Elem, List1) -> List2")
               "lists:concat/1"
               ("http://www.erlang.org/doc/man/lists.html#concat-1" "concat(Things) -> string()")
               "lists:append/2"
               ("http://www.erlang.org/doc/man/lists.html#append-2" "append(List1, List2) -> List3")
               "lists:append/1"
               ("http://www.erlang.org/doc/man/lists.html#append-1" "append(ListOfLists) -> List1")
               "lists:any/2"
               ("http://www.erlang.org/doc/man/lists.html#any-2" "any(Pred, List) -> boolean()")
               "lists:all/2"
               ("http://www.erlang.org/doc/man/lists.html#all-2" "all(Pred, List) -> boolean()")
               "lname:from_idl_form/1"
               ("http://www.erlang.org/doc/man/lname.html#from_idl_form-1" "from_idl_form(Name) -> Return")
               "lname:to_idl_form/1"
               ("http://www.erlang.org/doc/man/lname.html#to_idl_form-1" "to_idl_form(Name) -> Return")
               "lname:less_than/2"
               ("http://www.erlang.org/doc/man/lname.html#less_than-2" "less_than(Name1, Name2) -> Return")
               "lname:equal/2"
               ("http://www.erlang.org/doc/man/lname.html#equal-2" "equal(Name1, Name2) -> Return")
               "lname:num_component/1"
               ("http://www.erlang.org/doc/man/lname.html#num_component-1" "num_component(Name) -> Return")
               "lname:delete_component/2"
               ("http://www.erlang.org/doc/man/lname.html#delete_component-2" "delete_component(Name, N) -> Return")
               "lname:get_component/2"
               ("http://www.erlang.org/doc/man/lname.html#get_component-2" "get_component(Name, N) -> Return")
               "lname:insert_component/3"
               ("http://www.erlang.org/doc/man/lname.html#insert_component-3" "insert_component(Name, N, NameComponent) -> Return")
               "lname:create/0"
               ("http://www.erlang.org/doc/man/lname.html#create-0" "create() -> Return")
               "lname_component:set_kind/2"
               ("http://www.erlang.org/doc/man/lname_component.html#set_kind-2" "set_kind(NameComponent, Kind) -> Return")
               "lname_component:get_kind/1"
               ("http://www.erlang.org/doc/man/lname_component.html#get_kind-1" "get_kind(NameComponent) -> Return")
               "lname_component:set_id/2"
               ("http://www.erlang.org/doc/man/lname_component.html#set_id-2" "set_id(NameComponent, Id) -> Return")
               "lname_component:get_id/1"
               ("http://www.erlang.org/doc/man/lname_component.html#get_id-1" "get_id(NameComponent) -> Return")
               "lname_component:create/0"
               ("http://www.erlang.org/doc/man/lname_component.html#create-0" "create() -> Return")
               "log_mf_h:init/4"
               ("http://www.erlang.org/doc/man/log_mf_h.html#init-4" "init(Dir, MaxBytes, MaxFiles, Pred) -> Args")
               "log_mf_h:init/3"
               ("http://www.erlang.org/doc/man/log_mf_h.html#init-3" "init(Dir, MaxBytes, MaxFiles) -> Args")
               "log_mf_h:args()"
               ("http://www.erlang.org/doc/man/log_mf_h.html#type-args" "args()")
               "make:files/2"
               ("http://www.erlang.org/doc/man/make.html#files-2" "files(ModFiles, Options) -> up_to_date | error")
               "make:files/1"
               ("http://www.erlang.org/doc/man/make.html#files-1" "files(ModFiles) -> up_to_date | error")
               "make:all/1"
               ("http://www.erlang.org/doc/man/make.html#all-1" "all(Options) -> up_to_date | error")
               "make:all/0"
               ("http://www.erlang.org/doc/man/make.html#all-0" "all() -> up_to_date | error")
               "maps:without/2"
               ("http://www.erlang.org/doc/man/maps.html#without-2" "without(Ks, Map1) -> Map2")
               "maps:with/2"
               ("http://www.erlang.org/doc/man/maps.html#with-2" "with(Ks, Map1) -> Map2")
               "maps:values/1"
               ("http://www.erlang.org/doc/man/maps.html#values-1" "values(Map) -> Values")
               "maps:update_with/4"
               ("http://www.erlang.org/doc/man/maps.html#update_with-4" "update_with(Key, Fun, Init, Map1) -> Map2")
               "maps:update_with/3"
               ("http://www.erlang.org/doc/man/maps.html#update_with-3" "update_with(Key, Fun, Map1) -> Map2")
               "maps:update/3"
               ("http://www.erlang.org/doc/man/maps.html#update-3" "update(Key, Value, Map1) -> Map2")
               "maps:to_list/1"
               ("http://www.erlang.org/doc/man/maps.html#to_list-1" "to_list(Map) -> [{Key, Value}]")
               "maps:take/2"
               ("http://www.erlang.org/doc/man/maps.html#take-2" "take(Key, Map1) -> {Value, Map2} | error")
               "maps:size/1"
               ("http://www.erlang.org/doc/man/maps.html#size-1" "size(Map) -> integer() >= 0")
               "maps:remove/2"
               ("http://www.erlang.org/doc/man/maps.html#remove-2" "remove(Key, Map1) -> Map2")
               "maps:put/3"
               ("http://www.erlang.org/doc/man/maps.html#put-3" "put(Key, Value, Map1) -> Map2")
               "maps:new/0"
               ("http://www.erlang.org/doc/man/maps.html#new-0" "new() -> Map")
               "maps:merge/2"
               ("http://www.erlang.org/doc/man/maps.html#merge-2" "merge(Map1, Map2) -> Map3")
               "maps:map/2"
               ("http://www.erlang.org/doc/man/maps.html#map-2" "map(Fun, Map1) -> Map2")
               "maps:keys/1"
               ("http://www.erlang.org/doc/man/maps.html#keys-1" "keys(Map) -> Keys")
               "maps:is_key/2"
               ("http://www.erlang.org/doc/man/maps.html#is_key-2" "is_key(Key, Map) -> boolean()")
               "maps:get/3"
               ("http://www.erlang.org/doc/man/maps.html#get-3" "get(Key, Map, Default) -> Value | Default")
               "maps:get/2"
               ("http://www.erlang.org/doc/man/maps.html#get-2" "get(Key, Map) -> Value")
               "maps:from_list/1"
               ("http://www.erlang.org/doc/man/maps.html#from_list-1" "from_list(List) -> Map")
               "maps:fold/3"
               ("http://www.erlang.org/doc/man/maps.html#fold-3" "fold(Fun, Init, Map) -> Acc")
               "maps:find/2"
               ("http://www.erlang.org/doc/man/maps.html#find-2" "find(Key, Map) -> {ok, Value} | error")
               "maps:filter/2"
               ("http://www.erlang.org/doc/man/maps.html#filter-2" "filter(Pred, Map1) -> Map2")
               "math:pi/0"
               ("http://www.erlang.org/doc/man/math.html#pi-0" "pi() -> float()")
               "math:erfc/1"
               ("http://www.erlang.org/doc/man/math.html#erfc-1" "erfc(X) -> float()")
               "math:erf/1"
               ("http://www.erlang.org/doc/man/math.html#erf-1" "erf(X) -> float()")
               "math:tanh/1"
               ("http://www.erlang.org/doc/man/math.html#tanh-1" "tanh(X) -> float()")
               "math:tan/1"
               ("http://www.erlang.org/doc/man/math.html#tan-1" "tan(X) -> float()")
               "math:sqrt/1"
               ("http://www.erlang.org/doc/man/math.html#sqrt-1" "sqrt(X) -> float()")
               "math:sinh/1"
               ("http://www.erlang.org/doc/man/math.html#sinh-1" "sinh(X) -> float()")
               "math:sin/1"
               ("http://www.erlang.org/doc/man/math.html#sin-1" "sin(X) -> float()")
               "math:pow/2"
               ("http://www.erlang.org/doc/man/math.html#pow-2" "pow(X, Y) -> float()")
               "math:log2/1"
               ("http://www.erlang.org/doc/man/math.html#log2-1" "log2(X) -> float()")
               "math:log10/1"
               ("http://www.erlang.org/doc/man/math.html#log10-1" "log10(X) -> float()")
               "math:log/1"
               ("http://www.erlang.org/doc/man/math.html#log-1" "log(X) -> float()")
               "math:exp/1"
               ("http://www.erlang.org/doc/man/math.html#exp-1" "exp(X) -> float()")
               "math:cosh/1"
               ("http://www.erlang.org/doc/man/math.html#cosh-1" "cosh(X) -> float()")
               "math:cos/1"
               ("http://www.erlang.org/doc/man/math.html#cos-1" "cos(X) -> float()")
               "math:atanh/1"
               ("http://www.erlang.org/doc/man/math.html#atanh-1" "atanh(X) -> float()")
               "math:atan2/2"
               ("http://www.erlang.org/doc/man/math.html#atan2-2" "atan2(Y, X) -> float()")
               "math:atan/1"
               ("http://www.erlang.org/doc/man/math.html#atan-1" "atan(X) -> float()")
               "math:asinh/1"
               ("http://www.erlang.org/doc/man/math.html#asinh-1" "asinh(X) -> float()")
               "math:asin/1"
               ("http://www.erlang.org/doc/man/math.html#asin-1" "asin(X) -> float()")
               "math:acosh/1"
               ("http://www.erlang.org/doc/man/math.html#acosh-1" "acosh(X) -> float()")
               "math:acos/1"
               ("http://www.erlang.org/doc/man/math.html#acos-1" "acos(X) -> float()")
               "megaco:test_reply/5"
               ("http://www.erlang.org/doc/man/megaco.html#test_reply-5" "test_reply(ConnHandle, Version, EncodingMod, EncodingConfig, Reply) -> {MegaMsg, EncodeRes}")
               "megaco:test_request/5"
               ("http://www.erlang.org/doc/man/megaco.html#test_request-5" "test_request(ConnHandle, Version, EncodingMod, EncodingConfig, Actions) -> {MegaMsg, EncodeRes}")
               "megaco:reset_stats/1"
               ("http://www.erlang.org/doc/man/megaco.html#reset_stats-1" "reset_stats(ConnHandle) -> void()")
               "megaco:reset_stats/0"
               ("http://www.erlang.org/doc/man/megaco.html#reset_stats-0" "reset_stats() -> void()")
               "megaco:get_stats/2"
               ("http://www.erlang.org/doc/man/megaco.html#get_stats-2" "get_stats(ConnHandle, Counter) -> {ok, integer()} | {error, Reason}")
               "megaco:get_stats/1"
               ("http://www.erlang.org/doc/man/megaco.html#get_stats-1" "get_stats(GlobalCounter) -> {ok, CounterStats} | {error, Reason}")
               "megaco:get_stats/0"
               ("http://www.erlang.org/doc/man/megaco.html#get_stats-0" "get_stats() -> {ok, TotalStats} | {error, Reason}")
               "megaco:set_trace/1"
               ("http://www.erlang.org/doc/man/megaco.html#set_trace-1" "set_trace(Level) -> void()")
               "megaco:disable_trace/0"
               ("http://www.erlang.org/doc/man/megaco.html#disable_trace-0" "disable_trace() -> void()")
               "megaco:enable_trace/2"
               ("http://www.erlang.org/doc/man/megaco.html#enable_trace-2" "enable_trace(Level, Destination) -> void()")
               "megaco:print_version_info/1"
               ("http://www.erlang.org/doc/man/megaco.html#print_version_info-1" "print_version_info(VersionInfo) -> void()")
               "megaco:print_version_info/0"
               ("http://www.erlang.org/doc/man/megaco.html#print_version_info-0" "print_version_info() -> void()")
               "megaco:versions2/0"
               ("http://www.erlang.org/doc/man/megaco.html#versions2-0" "versions2() -> {ok, Info} | {error, Reason}")
               "megaco:versions1/0"
               ("http://www.erlang.org/doc/man/megaco.html#versions1-0" "versions1() -> {ok, VersionInfo} | {error, Reason}")
               "megaco:get_sdp_record_from_PropertGroup/2"
               ("http://www.erlang.org/doc/man/megaco.html#get_sdp_record_from_PropertGroup-2" "get_sdp_record_from_PropertGroup(Type, PG) -> [sdp()]")
               "megaco:decode_sdp/1"
               ("http://www.erlang.org/doc/man/megaco.html#decode_sdp-1" "decode_sdp(PP) -> {ok, SDP} | {error, Reason}")
               "megaco:encode_sdp/1"
               ("http://www.erlang.org/doc/man/megaco.html#encode_sdp-1" "encode_sdp(SDP) -> {ok, PP} | {error, Reason}")
               "megaco:test_digit_event/2"
               ("http://www.erlang.org/doc/man/megaco.html#test_digit_event-2" "test_digit_event(DigitMap, Events) -> {ok, Kind, Letters} | {error, Reason}")
               "megaco:report_digit_event/2"
               ("http://www.erlang.org/doc/man/megaco.html#report_digit_event-2" "report_digit_event(DigitMapEvalPid, Events) -> ok | {error, Reason}")
               "megaco:eval_digit_map/2"
               ("http://www.erlang.org/doc/man/megaco.html#eval_digit_map-2" "eval_digit_map(DigitMap, Timers) -> {ok, MatchResult} | {error, Reason}")
               "megaco:eval_digit_map/1"
               ("http://www.erlang.org/doc/man/megaco.html#eval_digit_map-1" "eval_digit_map(DigitMap) -> {ok, MatchResult} | {error, Reason}")
               "megaco:parse_digit_map/1"
               ("http://www.erlang.org/doc/man/megaco.html#parse_digit_map-1" "parse_digit_map(DigitMapBody) -> {ok, ParsedDigitMap} | {error, Reason}")
               "megaco:receive_message/5"
               ("http://www.erlang.org/doc/man/megaco.html#receive_message-5" "receive_message(ReceiveHandle, ControlPid, SendHandle, BinMsg, Extra) -> ok")
               "megaco:receive_message/4"
               ("http://www.erlang.org/doc/man/megaco.html#receive_message-4" "receive_message(ReceiveHandle, ControlPid, SendHandle, BinMsg) -> ok")
               "megaco:process_received_message/5"
               ("http://www.erlang.org/doc/man/megaco.html#process_received_message-5" "process_received_message(ReceiveHandle, ControlPid, SendHandle, BinMsg, Extra) -> ok")
               "megaco:process_received_message/4"
               ("http://www.erlang.org/doc/man/megaco.html#process_received_message-4" "process_received_message(ReceiveHandle, ControlPid, SendHandle, BinMsg) -> ok")
               "megaco:cancel/2"
               ("http://www.erlang.org/doc/man/megaco.html#cancel-2" "cancel(ConnHandle, CancelReason) -> ok | {error, ErrReason}")
               "megaco:token_tag2string/3"
               ("http://www.erlang.org/doc/man/megaco.html#token_tag2string-3" "token_tag2string(Tag, EncoderMod, Version) -> Result")
               "megaco:token_tag2string/2"
               ("http://www.erlang.org/doc/man/megaco.html#token_tag2string-2" "token_tag2string(Tag, EncoderMod) -> Result")
               "megaco:token_tag2string/1"
               ("http://www.erlang.org/doc/man/megaco.html#token_tag2string-1" "token_tag2string(Tag) -> Result")
               "megaco:encode_actions/3"
               ("http://www.erlang.org/doc/man/megaco.html#encode_actions-3" "encode_actions(ConnHandle, Actions, Options) -> {ok, BinOrBins} | {error, Reason}")
               "megaco:cast/3"
               ("http://www.erlang.org/doc/man/megaco.html#cast-3" "cast(ConnHandle, Actions, Options) -> ok | {error, Reason}")
               "megaco:call/3"
               ("http://www.erlang.org/doc/man/megaco.html#call-3" "call(ConnHandle, Actions, Options) -> {ProtocolVersion, UserReply}")
               "megaco:disconnect/2"
               ("http://www.erlang.org/doc/man/megaco.html#disconnect-2" "disconnect(ConnHandle, DiscoReason) -> ok | {error, ErrReason}")
               "megaco:connect/5"
               ("http://www.erlang.org/doc/man/megaco.html#connect-5" "connect(ReceiveHandle, RemoteMid, SendHandle, ControlPid, Extra) -> {ok, ConnHandle} | {error, Reason}")
               "megaco:connect/4"
               ("http://www.erlang.org/doc/man/megaco.html#connect-4" "connect(ReceiveHandle, RemoteMid, SendHandle, ControlPid) -> {ok, ConnHandle} | {error, Reason}")
               "megaco:info/0"
               ("http://www.erlang.org/doc/man/megaco.html#info-0" "info() -> Info")
               "megaco:system_info/1"
               ("http://www.erlang.org/doc/man/megaco.html#system_info-1" "system_info(Item) -> Value | exit(Reason)")
               "megaco:system_info/0"
               ("http://www.erlang.org/doc/man/megaco.html#system_info-0" "system_info() -> [{Item, Value}] | exit(Reason)")
               "megaco:update_conn_info/3"
               ("http://www.erlang.org/doc/man/megaco.html#update_conn_info-3" "update_conn_info(ConnHandle, Item, Value) -> ok | {error, Reason}")
               "megaco:conn_info/2"
               ("http://www.erlang.org/doc/man/megaco.html#conn_info-2" "conn_info(ConnHandle, Item) -> Value | exit(Reason)")
               "megaco:conn_info/1"
               ("http://www.erlang.org/doc/man/megaco.html#conn_info-1" "conn_info(ConnHandle) -> [{Item, Value}]")
               "megaco:update_user_info/3"
               ("http://www.erlang.org/doc/man/megaco.html#update_user_info-3" "update_user_info(UserMid, Item, Value) -> ok | {error, Reason}")
               "megaco:user_info/2"
               ("http://www.erlang.org/doc/man/megaco.html#user_info-2" "user_info(UserMid, Item) -> Value | exit(Reason)")
               "megaco:user_info/1"
               ("http://www.erlang.org/doc/man/megaco.html#user_info-1" "user_info(UserMid) -> [{Item, Value}]")
               "megaco:stop_user/1"
               ("http://www.erlang.org/doc/man/megaco.html#stop_user-1" "stop_user(UserMid) -> ok | {error, Reason}")
               "megaco:start_user/2"
               ("http://www.erlang.org/doc/man/megaco.html#start_user-2" "start_user(UserMid, Config) -> ok | {error, Reason}")
               "megaco:stop/0"
               ("http://www.erlang.org/doc/man/megaco.html#stop-0" "stop() -> ok | {error, Reason}")
               "megaco:start/0"
               ("http://www.erlang.org/doc/man/megaco.html#start-0" "start() -> ok | {error, Reason}")
               "megaco_codec_meas:start/1"
               ("http://www.erlang.org/doc/man/megaco_codec_meas.html#start-1" "start(MessagePackage) -> void()")
               "megaco_codec_meas:start/0"
               ("http://www.erlang.org/doc/man/megaco_codec_meas.html#start-0" "start() -> void()")
               "megaco_codec_mstone1:start_no_drv/2"
               ("http://www.erlang.org/doc/man/megaco_codec_mstone1.html#start_no_drv-2" "start_no_drv(MessagePackage, Factor) -> void()")
               "megaco_codec_mstone1:start_no_drv/1"
               ("http://www.erlang.org/doc/man/megaco_codec_mstone1.html#start_no_drv-1" "start_no_drv(MessagePackage) -> void()")
               "megaco_codec_mstone1:start_no_drv/0"
               ("http://www.erlang.org/doc/man/megaco_codec_mstone1.html#start_no_drv-0" "start_no_drv() -> void()")
               "megaco_codec_mstone1:start_only_drv/2"
               ("http://www.erlang.org/doc/man/megaco_codec_mstone1.html#start_only_drv-2" "start_only_drv(MessagePackage, Factor) -> void()")
               "megaco_codec_mstone1:start_only_drv/1"
               ("http://www.erlang.org/doc/man/megaco_codec_mstone1.html#start_only_drv-1" "start_only_drv(MessagePackage) -> void()")
               "megaco_codec_mstone1:start_only_drv/0"
               ("http://www.erlang.org/doc/man/megaco_codec_mstone1.html#start_only_drv-0" "start_only_drv() -> void()")
               "megaco_codec_mstone1:start_flex/2"
               ("http://www.erlang.org/doc/man/megaco_codec_mstone1.html#start_flex-2" "start_flex(MessagePackage, Factor) -> void()")
               "megaco_codec_mstone1:start_flex/1"
               ("http://www.erlang.org/doc/man/megaco_codec_mstone1.html#start_flex-1" "start_flex(MessagePackage) -> void()")
               "megaco_codec_mstone1:start_flex/0"
               ("http://www.erlang.org/doc/man/megaco_codec_mstone1.html#start_flex-0" "start_flex() -> void()")
               "megaco_codec_mstone1:start/2"
               ("http://www.erlang.org/doc/man/megaco_codec_mstone1.html#start-2" "start(MessagePackage, Factor) -> void()")
               "megaco_codec_mstone1:start/1"
               ("http://www.erlang.org/doc/man/megaco_codec_mstone1.html#start-1" "start(MessagePackage) -> void()")
               "megaco_codec_mstone1:start/0"
               ("http://www.erlang.org/doc/man/megaco_codec_mstone1.html#start-0" "start() -> void()")
               "megaco_codec_mstone2:start/1"
               ("http://www.erlang.org/doc/man/megaco_codec_mstone2.html#start-1" "start(MessagePackage) -> void()")
               "megaco_codec_mstone2:start/0"
               ("http://www.erlang.org/doc/man/megaco_codec_mstone2.html#start-0" "start() -> void()")
               "megaco_codec_transform:export_messages/1"
               ("http://www.erlang.org/doc/man/megaco_codec_transform.html#export_messages-1" "export_messages(MessagePackage) -> void()")
               "megaco_codec_transform:export_messages/0"
               ("http://www.erlang.org/doc/man/megaco_codec_transform.html#export_messages-0" "export_messages() -> void()")
               "megaco_edist_compress:Module:decode/2"
               ("http://www.erlang.org/doc/man/megaco_edist_compress.html#Module:decode-2" "Module:decode(T, Version) -> R")
               "megaco_edist_compress:Module:encode/2"
               ("http://www.erlang.org/doc/man/megaco_edist_compress.html#Module:encode-2" "Module:encode(R, Version) -> T")
               "megaco_encoder:Module:encode_action_reply/3"
               ("http://www.erlang.org/doc/man/megaco_encoder.html#Module:encode_action_reply-3" "Module:encode_action_reply(EncodingConfig, Version, AR) -> OK | Error")
               "megaco_encoder:Module:encode_action_requests/3"
               ("http://www.erlang.org/doc/man/megaco_encoder.html#Module:encode_action_requests-3" "Module:encode_action_requests(EncodingConfig, Version, ARs) -> OK | Error")
               "megaco_encoder:Module:encode_transaction/3"
               ("http://www.erlang.org/doc/man/megaco_encoder.html#Module:encode_transaction-3" "Module:encode_transaction(EncodingConfig, Version, Transaction) -> OK | Error")
               "megaco_encoder:Module:decode_mini_message/3"
               ("http://www.erlang.org/doc/man/megaco_encoder.html#Module:decode_mini_message-3" "Module:decode_mini_message(EncodingConfig, Version, Bin) -> {ok, Message} | Error")
               "megaco_encoder:Module:decode_message/3"
               ("http://www.erlang.org/doc/man/megaco_encoder.html#Module:decode_message-3" "Module:decode_message(EncodingConfig, Version, Bin) -> {ok, Message} | Error")
               "megaco_encoder:Module:encode_message/3"
               ("http://www.erlang.org/doc/man/megaco_encoder.html#Module:encode_message-3" "Module:encode_message(EncodingConfig, Version, Message) -> {ok, Bin} | Error")
               "megaco_flex_scanner:scan/2"
               ("http://www.erlang.org/doc/man/megaco_flex_scanner.html#scan-2" "scan(Binary, PortOrPorts) -> {ok, Tokens, Version, LatestLine} | {error, Reason, LatestLine}")
               "megaco_flex_scanner:is_scanner_port/2"
               ("http://www.erlang.org/doc/man/megaco_flex_scanner.html#is_scanner_port-2" "is_scanner_port(Port, PortOrPorts) -> Boolean")
               "megaco_flex_scanner:is_reentrant_enabled/0"
               ("http://www.erlang.org/doc/man/megaco_flex_scanner.html#is_reentrant_enabled-0" "is_reentrant_enabled() -> Boolean")
               "megaco_flex_scanner:stop/1"
               ("http://www.erlang.org/doc/man/megaco_flex_scanner.html#stop-1" "stop(PortOrPorts) -> stopped")
               "megaco_flex_scanner:start/0"
               ("http://www.erlang.org/doc/man/megaco_flex_scanner.html#start-0" "start() -> {ok, PortOrPorts} | {error, Reason}")
               "megaco_tcp:reset_stats/1"
               ("http://www.erlang.org/doc/man/megaco_tcp.html#reset_stats-1" "reset_stats(SendHandle) -> void()")
               "megaco_tcp:reset_stats/0"
               ("http://www.erlang.org/doc/man/megaco_tcp.html#reset_stats-0" "reset_stats() -> void()")
               "megaco_tcp:get_stats/2"
               ("http://www.erlang.org/doc/man/megaco_tcp.html#get_stats-2" "get_stats(SendHandle, Counter) -> {ok, CounterStats} | {error, Reason}")
               "megaco_tcp:get_stats/1"
               ("http://www.erlang.org/doc/man/megaco_tcp.html#get_stats-1" "get_stats(SendHandle) -> {ok, SendHandleStats} | {error, Reason}")
               "megaco_tcp:get_stats/0"
               ("http://www.erlang.org/doc/man/megaco_tcp.html#get_stats-0" "get_stats() -> {ok, TotalStats} | {error, Reason}")
               "megaco_tcp:upgrade_receive_handle/1"
               ("http://www.erlang.org/doc/man/megaco_tcp.html#upgrade_receive_handle-1" "upgrade_receive_handle(ControlPid) -> ok")
               "megaco_tcp:unblock/1"
               ("http://www.erlang.org/doc/man/megaco_tcp.html#unblock-1" "unblock(Handle) -> ok")
               "megaco_tcp:block/1"
               ("http://www.erlang.org/doc/man/megaco_tcp.html#block-1" "block(Handle) -> ok")
               "megaco_tcp:send_message/2"
               ("http://www.erlang.org/doc/man/megaco_tcp.html#send_message-2" "send_message(Handle, Message) -> ok")
               "megaco_tcp:socket/1"
               ("http://www.erlang.org/doc/man/megaco_tcp.html#socket-1" "socket(Handle) -> Socket")
               "megaco_tcp:close/1"
               ("http://www.erlang.org/doc/man/megaco_tcp.html#close-1" "close(Handle) -> ok")
               "megaco_tcp:connect/2"
               ("http://www.erlang.org/doc/man/megaco_tcp.html#connect-2" "connect(TransportRef, OptionList) -> {ok, Handle, ControlPid} |  {error, Reason}")
               "megaco_tcp:listen/2"
               ("http://www.erlang.org/doc/man/megaco_tcp.html#listen-2" "listen(TransportRef, ListenPortSpecList) -> ok")
               "megaco_tcp:start_transport/0"
               ("http://www.erlang.org/doc/man/megaco_tcp.html#start_transport-0" "start_transport() -> {ok, TransportRef}")
               "megaco_transport:Module:resend_message/2"
               ("http://www.erlang.org/doc/man/megaco_transport.html#Module:resend_message-2" "Module:resend_message(Handle, Msg) -> ok | {cancel, Reason} | Error")
               "megaco_transport:Module:send_message/3"
               ("http://www.erlang.org/doc/man/megaco_transport.html#Module:send_message-3" "Module:send_message(Handle, Msg, Resend) -> ok | {cancel, Reason} | Error")
               "megaco_transport:Module:send_message/2"
               ("http://www.erlang.org/doc/man/megaco_transport.html#Module:send_message-2" "Module:send_message(Handle, Msg) -> ok | {cancel, Reason} | Error")
               "megaco_udp:reset_stats/1"
               ("http://www.erlang.org/doc/man/megaco_udp.html#reset_stats-1" "reset_stats(SendHandle) -> void()")
               "megaco_udp:reset_stats/0"
               ("http://www.erlang.org/doc/man/megaco_udp.html#reset_stats-0" "reset_stats() -> void()")
               "megaco_udp:get_stats/2"
               ("http://www.erlang.org/doc/man/megaco_udp.html#get_stats-2" "get_stats(SendHandle, Counter) -> {ok, CounterStats} | {error, Reason}")
               "megaco_udp:get_stats/1"
               ("http://www.erlang.org/doc/man/megaco_udp.html#get_stats-1" "get_stats(SendHandle) -> {ok, SendHandleStats} | {error, Reason}")
               "megaco_udp:get_stats/0"
               ("http://www.erlang.org/doc/man/megaco_udp.html#get_stats-0" "get_stats() -> {ok, TotalStats} | {error, Reason}")
               "megaco_udp:upgrade_receive_handle/2"
               ("http://www.erlang.org/doc/man/megaco_udp.html#upgrade_receive_handle-2" "upgrade_receive_handle(ControlPid, NewHandle) -> ok")
               "megaco_udp:unblock/1"
               ("http://www.erlang.org/doc/man/megaco_udp.html#unblock-1" "unblock(Handle) -> ok")
               "megaco_udp:block/1"
               ("http://www.erlang.org/doc/man/megaco_udp.html#block-1" "block(Handle) -> ok")
               "megaco_udp:send_message/2"
               ("http://www.erlang.org/doc/man/megaco_udp.html#send_message-2" "send_message(SendHandle, Msg) -> ok")
               "megaco_udp:create_send_handle/3"
               ("http://www.erlang.org/doc/man/megaco_udp.html#create_send_handle-3" "create_send_handle(Handle, Host, Port) -> send_handle()")
               "megaco_udp:socket/1"
               ("http://www.erlang.org/doc/man/megaco_udp.html#socket-1" "socket(Handle) -> Socket")
               "megaco_udp:close/2"
               ("http://www.erlang.org/doc/man/megaco_udp.html#close-2" "close(Handle, Msg) -> ok")
               "megaco_udp:open/2"
               ("http://www.erlang.org/doc/man/megaco_udp.html#open-2" "open(TransportRef, OptionList) ->  {ok, Handle, ControlPid} |  {error, Reason}")
               "megaco_udp:start_transport/0"
               ("http://www.erlang.org/doc/man/megaco_udp.html#start_transport-0" "start_transport() -> {ok, TransportRef}")
               "megaco_user:handle_segment_reply/6"
               ("http://www.erlang.org/doc/man/megaco_user.html#handle_segment_reply-6" "handle_segment_reply(ConnHandle, ProtocolVersion, TransNo, SegNo, SegCompl, Extra) -> ok")
               "megaco_user:handle_segment_reply/5"
               ("http://www.erlang.org/doc/man/megaco_user.html#handle_segment_reply-5" "handle_segment_reply(ConnHandle, ProtocolVersion, TransNo, SegNo, SegCompl) -> ok")
               "megaco_user:handle_trans_request_abort/5"
               ("http://www.erlang.org/doc/man/megaco_user.html#handle_trans_request_abort-5" "handle_trans_request_abort(ConnHandle, ProtocolVersion, TransNo, Pid, Extra) -> ok")
               "megaco_user:handle_trans_request_abort/4"
               ("http://www.erlang.org/doc/man/megaco_user.html#handle_trans_request_abort-4" "handle_trans_request_abort(ConnHandle, ProtocolVersion, TransNo, Pid) -> ok")
               "megaco_user:handle_unexpected_trans/4"
               ("http://www.erlang.org/doc/man/megaco_user.html#handle_unexpected_trans-4" "handle_unexpected_trans(ConnHandle, ProtocolVersion, Trans, Extra) -> ok")
               "megaco_user:handle_unexpected_trans/3"
               ("http://www.erlang.org/doc/man/megaco_user.html#handle_unexpected_trans-3" "handle_unexpected_trans(ConnHandle, ProtocolVersion, Trans) -> ok")
               "megaco_user:handle_trans_ack/5"
               ("http://www.erlang.org/doc/man/megaco_user.html#handle_trans_ack-5" "handle_trans_ack(ConnHandle, ProtocolVersion, AckStatus, AckData, Extra) -> ok")
               "megaco_user:handle_trans_ack/4"
               ("http://www.erlang.org/doc/man/megaco_user.html#handle_trans_ack-4" "handle_trans_ack(ConnHandle, ProtocolVersion, AckStatus, AckData) -> ok")
               "megaco_user:handle_trans_reply/5"
               ("http://www.erlang.org/doc/man/megaco_user.html#handle_trans_reply-5" "handle_trans_reply(ConnHandle, ProtocolVersion, UserReply, ReplyData, Extra) -> ok")
               "megaco_user:handle_trans_reply/4"
               ("http://www.erlang.org/doc/man/megaco_user.html#handle_trans_reply-4" "handle_trans_reply(ConnHandle, ProtocolVersion, UserReply, ReplyData) -> ok")
               "megaco_user:handle_trans_long_request/4"
               ("http://www.erlang.org/doc/man/megaco_user.html#handle_trans_long_request-4" "handle_trans_long_request(ConnHandle, ProtocolVersion, ReqData, Extra) -> reply()")
               "megaco_user:handle_trans_long_request/3"
               ("http://www.erlang.org/doc/man/megaco_user.html#handle_trans_long_request-3" "handle_trans_long_request(ConnHandle, ProtocolVersion, ReqData) -> reply()")
               "megaco_user:handle_trans_request/4"
               ("http://www.erlang.org/doc/man/megaco_user.html#handle_trans_request-4" "handle_trans_request(ConnHandle, ProtocolVersion, ActionRequests, Extra) -> pending() | reply() | ignore_trans_request")
               "megaco_user:handle_trans_request/3"
               ("http://www.erlang.org/doc/man/megaco_user.html#handle_trans_request-3" "handle_trans_request(ConnHandle, ProtocolVersion, ActionRequests) -> pending() | reply() | ignore_trans_request")
               "megaco_user:handle_message_error/4"
               ("http://www.erlang.org/doc/man/megaco_user.html#handle_message_error-4" "handle_message_error(ConnHandle, ProtocolVersion, ErrorDescr, Extra) -> ok")
               "megaco_user:handle_message_error/3"
               ("http://www.erlang.org/doc/man/megaco_user.html#handle_message_error-3" "handle_message_error(ConnHandle, ProtocolVersion, ErrorDescr) -> ok")
               "megaco_user:handle_syntax_error/4"
               ("http://www.erlang.org/doc/man/megaco_user.html#handle_syntax_error-4" "handle_syntax_error(ReceiveHandle, ProtocolVersion, DefaultED, Extra) -> reply | {reply, ED} | no_reply | {no_reply, ED}")
               "megaco_user:handle_syntax_error/3"
               ("http://www.erlang.org/doc/man/megaco_user.html#handle_syntax_error-3" "handle_syntax_error(ReceiveHandle, ProtocolVersion, DefaultED) -> reply | {reply, ED} | no_reply | {no_reply, ED}")
               "megaco_user:handle_disconnect/3"
               ("http://www.erlang.org/doc/man/megaco_user.html#handle_disconnect-3" "handle_disconnect(ConnHandle, ProtocolVersion, Reason) -> ok")
               "megaco_user:handle_connect/3"
               ("http://www.erlang.org/doc/man/megaco_user.html#handle_connect-3" "handle_connect(ConnHandle, ProtocolVersion, Extra]) -> ok | error | {error,ErrorDescr}")
               "megaco_user:handle_connect/2"
               ("http://www.erlang.org/doc/man/megaco_user.html#handle_connect-2" "handle_connect(ConnHandle, ProtocolVersion) -> ok | error | {error,ErrorDescr}")
               "memsup:set_helper_timeout/1"
               ("http://www.erlang.org/doc/man/memsup.html#set_helper_timeout-1" "set_helper_timeout(Seconds) -> ok")
               "memsup:get_helper_timeout/0"
               ("http://www.erlang.org/doc/man/memsup.html#get_helper_timeout-0" "get_helper_timeout() -> Seconds")
               "memsup:set_sysmem_high_watermark/1"
               ("http://www.erlang.org/doc/man/memsup.html#set_sysmem_high_watermark-1" "set_sysmem_high_watermark(Float) -> ok")
               "memsup:get_sysmem_high_watermark/0"
               ("http://www.erlang.org/doc/man/memsup.html#get_sysmem_high_watermark-0" "get_sysmem_high_watermark() -> int()")
               "memsup:set_procmem_high_watermark/1"
               ("http://www.erlang.org/doc/man/memsup.html#set_procmem_high_watermark-1" "set_procmem_high_watermark(Float) -> ok")
               "memsup:get_procmem_high_watermark/0"
               ("http://www.erlang.org/doc/man/memsup.html#get_procmem_high_watermark-0" "get_procmem_high_watermark() -> int()")
               "memsup:set_check_interval/1"
               ("http://www.erlang.org/doc/man/memsup.html#set_check_interval-1" "set_check_interval(Minutes) -> ok")
               "memsup:get_check_interval/0"
               ("http://www.erlang.org/doc/man/memsup.html#get_check_interval-0" "get_check_interval() -> MS")
               "memsup:get_os_wordsize/0"
               ("http://www.erlang.org/doc/man/memsup.html#get_os_wordsize-0" "get_os_wordsize() -> Wordsize")
               "memsup:get_system_memory_data/0"
               ("http://www.erlang.org/doc/man/memsup.html#get_system_memory_data-0" "get_system_memory_data() -> MemDataList")
               "memsup:get_memory_data/0"
               ("http://www.erlang.org/doc/man/memsup.html#get_memory_data-0" "get_memory_data() -> {Total,Allocated,Worst}")
               "merl:var/1"
               ("http://www.erlang.org/doc/man/merl.html#var-1" "var(Name::atom()) -> tree()")
               "merl:tsubst/2"
               ("http://www.erlang.org/doc/man/merl.html#tsubst-2" "tsubst(Trees:: pattern_or_patterns() , Env:: env() ) -> template_or_templates()")
               "merl:tree/1"
               ("http://www.erlang.org/doc/man/merl.html#tree-1" "tree(Templates:: template_or_templates() ) -> tree_or_trees()")
               "merl:term/1"
               ("http://www.erlang.org/doc/man/merl.html#term-1" "term(Term::term()) -> tree()")
               "merl:template_vars/1"
               ("http://www.erlang.org/doc/man/merl.html#template_vars-1" "template_vars(Template:: template_or_templates() ) -> [ id() ]")
               "merl:template/1"
               ("http://www.erlang.org/doc/man/merl.html#template-1" "template(Trees:: pattern_or_patterns() ) -> template_or_templates()")
               "merl:switch/2"
               ("http://www.erlang.org/doc/man/merl.html#switch-2" "switch(Trees:: tree_or_trees() , Cs::[ switch_clause() ]) -> any()")
               "merl:subst/2"
               ("http://www.erlang.org/doc/man/merl.html#subst-2" "subst(Trees:: pattern_or_patterns() , Env:: env() ) -> tree_or_trees()")
               "merl:show/1"
               ("http://www.erlang.org/doc/man/merl.html#show-1" "show(Ts) -> term()")
               "merl:quote/2"
               ("http://www.erlang.org/doc/man/merl.html#quote-2" "quote(StartPos:: location() , Text:: text() ) -> tree_or_trees()")
               "merl:quote/1"
               ("http://www.erlang.org/doc/man/merl.html#quote-1" "quote(Text:: text() ) -> tree_or_trees()")
               "merl:qquote/3"
               ("http://www.erlang.org/doc/man/merl.html#qquote-3" "qquote(StartPos:: location() , Text:: text() , Env:: env() ) -> tree_or_trees()")
               "merl:qquote/2"
               ("http://www.erlang.org/doc/man/merl.html#qquote-2" "qquote(Text:: text() , Env:: env() ) -> tree_or_trees()")
               "merl:print/1"
               ("http://www.erlang.org/doc/man/merl.html#print-1" "print(Ts) -> term()")
               "merl:meta_template/1"
               ("http://www.erlang.org/doc/man/merl.html#meta_template-1" "meta_template(Templates:: template_or_templates() ) -> tree_or_trees()")
               "merl:match/2"
               ("http://www.erlang.org/doc/man/merl.html#match-2" "match(Patterns:: pattern_or_patterns() , Trees:: tree_or_trees() ) -> {ok, env() } | error")
               "merl:compile_and_load/2"
               ("http://www.erlang.org/doc/man/merl.html#compile_and_load-2" "compile_and_load(Code, Options) -> term()")
               "merl:compile_and_load/1"
               ("http://www.erlang.org/doc/man/merl.html#compile_and_load-1" "compile_and_load(Code) -> term()")
               "merl:compile/2"
               ("http://www.erlang.org/doc/man/merl.html#compile-2" "compile(Code, Options) -> term()")
               "merl:compile/1"
               ("http://www.erlang.org/doc/man/merl.html#compile-1" "compile(Code) -> term()")
               "merl:alpha/2"
               ("http://www.erlang.org/doc/man/merl.html#alpha-2" "alpha(Trees:: pattern_or_patterns() , Env::[{ id() , id() }]) -> template_or_templates()")
               "merl:"
               ("http://www.erlang.org/doc/man/merl.html#type-default_action" "default_action() = () -> any()")
               "merl_transform:parse_transform/2"
               ("http://www.erlang.org/doc/man/merl_transform.html#parse_transform-2" "parse_transform(Forms, Options) -> term()")
               "mnesia:write_lock_table/1"
               ("http://www.erlang.org/doc/man/mnesia.html#write_lock_table-1" "write_lock_table(Tab) -> ok | transaction abort")
               "mnesia:write/3"
               ("http://www.erlang.org/doc/man/mnesia.html#write-3" "write(Tab, Record, LockKind) -> transaction abort | ok")
               "mnesia:write/1"
               ("http://www.erlang.org/doc/man/mnesia.html#write-1" "write(Record) -> transaction abort | ok")
               "mnesia:wread/1"
               ("http://www.erlang.org/doc/man/mnesia.html#wread-1" "wread({Tab, Key}) -> transaction abort | RecordList")
               "mnesia:wait_for_tables/2"
               ("http://www.erlang.org/doc/man/mnesia.html#wait_for_tables-2" "wait_for_tables(TabList, Timeout) -> ok | {timeout, BadTabList} | {error, Reason}")
               "mnesia:unsubscribe/1"
               ("http://www.erlang.org/doc/man/mnesia.html#unsubscribe-1" "unsubscribe(EventCategory) -> {ok, Node} | {error, Reason}")
               "mnesia:uninstall_fallback/1"
               ("http://www.erlang.org/doc/man/mnesia.html#uninstall_fallback-1" "uninstall_fallback(Args) -> ok | {error,Reason}")
               "mnesia:uninstall_fallback/0"
               ("http://www.erlang.org/doc/man/mnesia.html#uninstall_fallback-0" "uninstall_fallback() -> ok | {error,Reason}")
               "mnesia:traverse_backup/4"
               ("http://www.erlang.org/doc/man/mnesia.html#traverse_backup-4" "traverse_backup(Source, [SourceMod,] Target, [TargetMod,] Fun, Acc) -> {ok, LastAcc} | {error, Reason}")
               "mnesia:transform_table/3"
               ("http://www.erlang.org/doc/man/mnesia.html#transform_table-3" "transform_table(Tab, Fun, NewAttributeList) -> {aborted, R} | {atomic, ok}")
               "mnesia:transform_table/4"
               ("http://www.erlang.org/doc/man/mnesia.html#transform_table-4" "transform_table(Tab, Fun, NewAttributeList, NewRecordName) -> {aborted, R} | {atomic, ok}")
               "mnesia:transaction/2"
               ("http://www.erlang.org/doc/man/mnesia.html#transaction-2" "transaction(Fun [[, Args], Retries]) -> {aborted, Reason} | {atomic, ResultOfFun}")
               "mnesia:table_info/2"
               ("http://www.erlang.org/doc/man/mnesia.html#table_info-2" "table_info(Tab, InfoKey) -> Info | exit({aborted, Reason})")
               "mnesia:table/1"
               ("http://www.erlang.org/doc/man/mnesia.html#table-1" "table(Tab [,[Option]]) -> QueryHandle")
               "mnesia:system_info/1"
               ("http://www.erlang.org/doc/man/mnesia.html#system_info-1" "system_info(InfoKey) -> Info | exit({aborted, Reason})")
               "mnesia:sync_transaction/3"
               ("http://www.erlang.org/doc/man/mnesia.html#sync_transaction-3" "sync_transaction(Fun, [[, Args], Retries]) -> {aborted, Reason} | {atomic, ResultOfFun}")
               "mnesia:sync_log/0"
               ("http://www.erlang.org/doc/man/mnesia.html#sync_log-0" "sync_log() -> ok | {error, Reason}")
               "mnesia:sync_dirty/2"
               ("http://www.erlang.org/doc/man/mnesia.html#sync_dirty-2" "sync_dirty(Fun, [, Args]) -> ResultOfFun | exit(Reason)")
               "mnesia:subscribe/1"
               ("http://www.erlang.org/doc/man/mnesia.html#subscribe-1" "subscribe(EventCategory) -> {ok, Node} | {error, Reason}")
               "mnesia:stop/0"
               ("http://www.erlang.org/doc/man/mnesia.html#stop-0" "stop() -> stopped")
               "mnesia:start/0"
               ("http://www.erlang.org/doc/man/mnesia.html#start-0" "start() -> ok | {error, Reason}")
               "mnesia:snmp_open_table/2"
               ("http://www.erlang.org/doc/man/mnesia.html#snmp_open_table-2" "snmp_open_table(Tab, SnmpStruct) -> {aborted, R} | {atomic, ok}")
               "mnesia:snmp_get_row/2"
               ("http://www.erlang.org/doc/man/mnesia.html#snmp_get_row-2" "snmp_get_row(Tab, RowIndex) -> {ok, Row} | undefined")
               "mnesia:snmp_get_next_index/2"
               ("http://www.erlang.org/doc/man/mnesia.html#snmp_get_next_index-2" "snmp_get_next_index(Tab, RowIndex) -> {ok, NextIndex} | endOfTable")
               "mnesia:snmp_get_mnesia_key/2"
               ("http://www.erlang.org/doc/man/mnesia.html#snmp_get_mnesia_key-2" "snmp_get_mnesia_key(Tab, RowIndex) -> {ok, Key} | undefined")
               "mnesia:snmp_close_table/1"
               ("http://www.erlang.org/doc/man/mnesia.html#snmp_close_table-1" "snmp_close_table(Tab) -> {aborted, R} | {atomic, ok}")
               "mnesia:set_master_nodes/2"
               ("http://www.erlang.org/doc/man/mnesia.html#set_master_nodes-2" "set_master_nodes(Tab, MasterNodes) -> ok | {error, Reason}")
               "mnesia:set_master_nodes/1"
               ("http://www.erlang.org/doc/man/mnesia.html#set_master_nodes-1" "set_master_nodes(MasterNodes) -> ok | {error, Reason}")
               "mnesia:set_debug_level/1"
               ("http://www.erlang.org/doc/man/mnesia.html#set_debug_level-1" "set_debug_level(Level) -> OldLevel")
               "mnesia:select/1"
               ("http://www.erlang.org/doc/man/mnesia.html#select-1" "select(Cont) -> transaction abort | {[Object],Cont} | '$end_of_table'")
               "mnesia:select/4"
               ("http://www.erlang.org/doc/man/mnesia.html#select-4" "select(Tab, MatchSpec, NObjects, Lock) -> transaction abort | {[Object],Cont} | '$end_of_table'")
               "mnesia:select/2"
               ("http://www.erlang.org/doc/man/mnesia.html#select-2" "select(Tab, MatchSpec [, Lock]) -> transaction abort | [Object]")
               "mnesia:schema/1"
               ("http://www.erlang.org/doc/man/mnesia.html#schema-1" "schema(Tab) -> ok")
               "mnesia:schema/0"
               ("http://www.erlang.org/doc/man/mnesia.html#schema-0" "schema() -> ok")
               "mnesia:s_write/1"
               ("http://www.erlang.org/doc/man/mnesia.html#s_write-1" "s_write(Record) -> ok | transaction abort")
               "mnesia:s_delete_object/1"
               ("http://www.erlang.org/doc/man/mnesia.html#s_delete_object-1" "s_delete_object(Record) -> ok | transaction abort")
               "mnesia:s_delete/1"
               ("http://www.erlang.org/doc/man/mnesia.html#s_delete-1" "s_delete({Tab, Key}) -> ok | transaction abort")
               "mnesia:restore/2"
               ("http://www.erlang.org/doc/man/mnesia.html#restore-2" "restore(Opaque, Args) -> {atomic, RestoredTabs} |{aborted, Reason}")
               "mnesia:report_event/1"
               ("http://www.erlang.org/doc/man/mnesia.html#report_event-1" "report_event(Event) -> ok")
               "mnesia:read_lock_table/1"
               ("http://www.erlang.org/doc/man/mnesia.html#read_lock_table-1" "read_lock_table(Tab) -> ok | transaction abort")
               "mnesia:read/3"
               ("http://www.erlang.org/doc/man/mnesia.html#read-3" "read(Tab, Key, LockKind) -> transaction abort | RecordList")
               "mnesia:read/2"
               ("http://www.erlang.org/doc/man/mnesia.html#read-2" "read(Tab, Key) -> transaction abort | RecordList")
               "mnesia:read/1"
               ("http://www.erlang.org/doc/man/mnesia.html#read-1" "read({Tab, Key}) -> transaction abort | RecordList")
               "mnesia:prev/2"
               ("http://www.erlang.org/doc/man/mnesia.html#prev-2" "prev(Tab, Key) -> Key | transaction abort")
               "mnesia:next/2"
               ("http://www.erlang.org/doc/man/mnesia.html#next-2" "next(Tab, Key) -> Key | transaction abort")
               "mnesia:move_table_copy/3"
               ("http://www.erlang.org/doc/man/mnesia.html#move_table_copy-3" "move_table_copy(Tab, From, To) -> {aborted, Reason} | {atomic, ok}")
               "mnesia:match_object/3"
               ("http://www.erlang.org/doc/man/mnesia.html#match_object-3" "match_object(Tab, Pattern, LockKind) -> transaction abort | RecList")
               "mnesia:match_object/1"
               ("http://www.erlang.org/doc/man/mnesia.html#match_object-1" "match_object(Pattern) -> transaction abort | RecList")
               "mnesia:lock/2"
               ("http://www.erlang.org/doc/man/mnesia.html#lock-2" "lock(LockItem, LockKind) -> Nodes | ok | transaction abort")
               "mnesia:load_textfile/1"
               ("http://www.erlang.org/doc/man/mnesia.html#load_textfile-1" "load_textfile(Filename)")
               "mnesia:last/1"
               ("http://www.erlang.org/doc/man/mnesia.html#last-1" "last(Tab) -> Key | transaction abort")
               "mnesia:is_transaction/0"
               ("http://www.erlang.org/doc/man/mnesia.html#is_transaction-0" "is_transaction() -> boolean")
               "mnesia:install_fallback/2"
               ("http://www.erlang.org/doc/man/mnesia.html#install_fallback-2" "install_fallback(Opaque, Args) -> ok | {error,Reason}")
               "mnesia:install_fallback/1"
               ("http://www.erlang.org/doc/man/mnesia.html#install_fallback-1" "install_fallback(Opaque) -> ok | {error,Reason}")
               "mnesia:info/0"
               ("http://www.erlang.org/doc/man/mnesia.html#info-0" "info() -> ok")
               "mnesia:index_read/3"
               ("http://www.erlang.org/doc/man/mnesia.html#index_read-3" "index_read(Tab, SecondaryKey, Pos) -> transaction abort | RecordList")
               "mnesia:index_match_object/4"
               ("http://www.erlang.org/doc/man/mnesia.html#index_match_object-4" "index_match_object(Tab, Pattern, Pos, LockKind) -> transaction abort | ObjList")
               "mnesia:index_match_object/2"
               ("http://www.erlang.org/doc/man/mnesia.html#index_match_object-2" "index_match_object(Pattern, Pos) -> transaction abort | ObjList")
               "mnesia:force_load_table/1"
               ("http://www.erlang.org/doc/man/mnesia.html#force_load_table-1" "force_load_table(Tab) -> yes | ErrorDescription")
               "mnesia:foldr/3"
               ("http://www.erlang.org/doc/man/mnesia.html#foldr-3" "foldr(Function, Acc, Table) -> NewAcc | transaction abort")
               "mnesia:foldl/3"
               ("http://www.erlang.org/doc/man/mnesia.html#foldl-3" "foldl(Function, Acc, Table) -> NewAcc | transaction abort")
               "mnesia:first/1"
               ("http://www.erlang.org/doc/man/mnesia.html#first-1" "first(Tab) ->  Key | transaction abort")
               "mnesia:ets/2"
               ("http://www.erlang.org/doc/man/mnesia.html#ets-2" "ets(Fun, [, Args]) -> ResultOfFun | exit(Reason)")
               "mnesia:error_description/1"
               ("http://www.erlang.org/doc/man/mnesia.html#error_description-1" "error_description(Error) -> String")
               "mnesia:dump_to_textfile/1"
               ("http://www.erlang.org/doc/man/mnesia.html#dump_to_textfile-1" "dump_to_textfile(Filename)")
               "mnesia:dump_tables/1"
               ("http://www.erlang.org/doc/man/mnesia.html#dump_tables-1" "dump_tables(TabList) -> {atomic, ok} | {aborted, Reason}")
               "mnesia:dump_log/0"
               ("http://www.erlang.org/doc/man/mnesia.html#dump_log-0" "dump_log() -> dumped")
               "mnesia:dirty_write/2"
               ("http://www.erlang.org/doc/man/mnesia.html#dirty_write-2" "dirty_write(Tab, Record) -> ok | exit({aborted, Reason})")
               "mnesia:dirty_write/1"
               ("http://www.erlang.org/doc/man/mnesia.html#dirty_write-1" "dirty_write(Record) -> ok | exit({aborted, Reason})")
               "mnesia:dirty_update_counter/3"
               ("http://www.erlang.org/doc/man/mnesia.html#dirty_update_counter-3" "dirty_update_counter(Tab, Key, Incr) -> NewVal | exit({aborted, Reason})")
               "mnesia:dirty_update_counter/2"
               ("http://www.erlang.org/doc/man/mnesia.html#dirty_update_counter-2" "dirty_update_counter({Tab, Key}, Incr) -> NewVal | exit({aborted, Reason})")
               "mnesia:dirty_slot/2"
               ("http://www.erlang.org/doc/man/mnesia.html#dirty_slot-2" "dirty_slot(Tab, Slot) -> RecordList | exit({aborted, Reason})")
               "mnesia:dirty_select/2"
               ("http://www.erlang.org/doc/man/mnesia.html#dirty_select-2" "dirty_select(Tab, MatchSpec) -> ValueList | exit({aborted, Reason}")
               "mnesia:dirty_read/2"
               ("http://www.erlang.org/doc/man/mnesia.html#dirty_read-2" "dirty_read(Tab, Key) -> ValueList | exit({aborted, Reason}")
               "mnesia:dirty_read/1"
               ("http://www.erlang.org/doc/man/mnesia.html#dirty_read-1" "dirty_read({Tab, Key}) -> ValueList | exit({aborted, Reason}")
               "mnesia:dirty_prev/2"
               ("http://www.erlang.org/doc/man/mnesia.html#dirty_prev-2" "dirty_prev(Tab, Key) -> Key | exit({aborted, Reason})")
               "mnesia:dirty_next/2"
               ("http://www.erlang.org/doc/man/mnesia.html#dirty_next-2" "dirty_next(Tab, Key) -> Key | exit({aborted, Reason})")
               "mnesia:dirty_match_object/2"
               ("http://www.erlang.org/doc/man/mnesia.html#dirty_match_object-2" "dirty_match_object(Tab, Pattern) -> RecordList | exit({aborted, Reason})")
               "mnesia:dirty_match_object/1"
               ("http://www.erlang.org/doc/man/mnesia.html#dirty_match_object-1" "dirty_match_object(Pattern) -> RecordList | exit({aborted, Reason})")
               "mnesia:dirty_last/1"
               ("http://www.erlang.org/doc/man/mnesia.html#dirty_last-1" "dirty_last(Tab) -> Key | exit({aborted, Reason})")
               "mnesia:dirty_index_read/3"
               ("http://www.erlang.org/doc/man/mnesia.html#dirty_index_read-3" "dirty_index_read(Tab, SecondaryKey, Pos)")
               "mnesia:dirty_index_match_object/3"
               ("http://www.erlang.org/doc/man/mnesia.html#dirty_index_match_object-3" "dirty_index_match_object(Tab, Pattern, Pos)")
               "mnesia:dirty_index_match_object/2"
               ("http://www.erlang.org/doc/man/mnesia.html#dirty_index_match_object-2" "dirty_index_match_object(Pattern, Pos)")
               "mnesia:dirty_first/1"
               ("http://www.erlang.org/doc/man/mnesia.html#dirty_first-1" "dirty_first(Tab) ->  Key | exit({aborted, Reason})")
               "mnesia:dirty_delete_object/2"
               ("http://www.erlang.org/doc/man/mnesia.html#dirty_delete_object-2" "dirty_delete_object(Tab, Record)")
               "mnesia:dirty_delete_object/1"
               ("http://www.erlang.org/doc/man/mnesia.html#dirty_delete_object-1" "dirty_delete_object(Record)")
               "mnesia:dirty_delete/2"
               ("http://www.erlang.org/doc/man/mnesia.html#dirty_delete-2" "dirty_delete(Tab, Key) -> ok | exit({aborted, Reason})")
               "mnesia:dirty_delete/1"
               ("http://www.erlang.org/doc/man/mnesia.html#dirty_delete-1" "dirty_delete({Tab, Key}) -> ok | exit({aborted, Reason})")
               "mnesia:dirty_all_keys/1"
               ("http://www.erlang.org/doc/man/mnesia.html#dirty_all_keys-1" "dirty_all_keys(Tab) -> KeyList | exit({aborted, Reason})")
               "mnesia:delete_table/1"
               ("http://www.erlang.org/doc/man/mnesia.html#delete_table-1" "delete_table(Tab) -> {aborted, Reason} | {atomic, ok}")
               "mnesia:delete_schema/1"
               ("http://www.erlang.org/doc/man/mnesia.html#delete_schema-1" "delete_schema(DiscNodes) -> ok | {error,Reason}")
               "mnesia:delete_object/3"
               ("http://www.erlang.org/doc/man/mnesia.html#delete_object-3" "delete_object(Tab, Record, LockKind) -> transaction abort | ok")
               "mnesia:delete_object/1"
               ("http://www.erlang.org/doc/man/mnesia.html#delete_object-1" "delete_object(Record) -> transaction abort | ok")
               "mnesia:delete/3"
               ("http://www.erlang.org/doc/man/mnesia.html#delete-3" "delete(Tab, Key, LockKind) -> transaction abort | ok")
               "mnesia:delete/1"
               ("http://www.erlang.org/doc/man/mnesia.html#delete-1" "delete({Tab, Key}) -> transaction abort | ok")
               "mnesia:del_table_index/2"
               ("http://www.erlang.org/doc/man/mnesia.html#del_table_index-2" "del_table_index(Tab, AttrName) -> {aborted, R} | {atomic, ok}")
               "mnesia:del_table_copy/2"
               ("http://www.erlang.org/doc/man/mnesia.html#del_table_copy-2" "del_table_copy(Tab, Node) -> {aborted, R} | {atomic, ok}")
               "mnesia:deactivate_checkpoint/1"
               ("http://www.erlang.org/doc/man/mnesia.html#deactivate_checkpoint-1" "deactivate_checkpoint(Name) -> ok | {error, Reason}")
               "mnesia:create_table/2"
               ("http://www.erlang.org/doc/man/mnesia.html#create_table-2" "create_table(Name, TabDef) -> {atomic, ok} | {aborted, Reason}")
               "mnesia:create_schema/1"
               ("http://www.erlang.org/doc/man/mnesia.html#create_schema-1" "create_schema(DiscNodes) -> ok | {error,Reason}")
               "mnesia:clear_table/1"
               ("http://www.erlang.org/doc/man/mnesia.html#clear_table-1" "clear_table(Tab) -> {aborted, R} | {atomic, ok}")
               "mnesia:change_table_majority/2"
               ("http://www.erlang.org/doc/man/mnesia.html#change_table_majority-2" "change_table_majority(Tab, Majority) -> {aborted, R} | {atomic, ok}")
               "mnesia:change_table_load_order/2"
               ("http://www.erlang.org/doc/man/mnesia.html#change_table_load_order-2" "change_table_load_order(Tab, LoadOrder) -> {aborted, R} | {atomic, ok}")
               "mnesia:change_table_copy_type/3"
               ("http://www.erlang.org/doc/man/mnesia.html#change_table_copy_type-3" "change_table_copy_type(Tab, Node, To) -> {aborted, R} | {atomic, ok}")
               "mnesia:change_table_access_mode/2"
               ("http://www.erlang.org/doc/man/mnesia.html#change_table_access_mode-2" "change_table_access_mode(Tab, AccessMode) -> {aborted, R} | {atomic, ok}")
               "mnesia:change_config/2"
               ("http://www.erlang.org/doc/man/mnesia.html#change_config-2" "change_config(Config, Value) -> {error, Reason} | {ok, ReturnValue}")
               "mnesia:backup_checkpoint/2"
               ("http://www.erlang.org/doc/man/mnesia.html#backup_checkpoint-2" "backup_checkpoint(Name, Opaque [, BackupMod]) -> ok | {error,Reason}")
               "mnesia:backup/1"
               ("http://www.erlang.org/doc/man/mnesia.html#backup-1" "backup(Opaque [, BackupMod]) -> ok | {error,Reason}")
               "mnesia:async_dirty/2"
               ("http://www.erlang.org/doc/man/mnesia.html#async_dirty-2" "async_dirty(Fun, [, Args]) -> ResultOfFun | exit(Reason)")
               "mnesia:all_keys/1"
               ("http://www.erlang.org/doc/man/mnesia.html#all_keys-1" "all_keys(Tab) -> KeyList | transaction abort")
               "mnesia:add_table_index/2"
               ("http://www.erlang.org/doc/man/mnesia.html#add_table_index-2" "add_table_index(Tab, AttrName) -> {aborted, R} | {atomic, ok}")
               "mnesia:add_table_copy/3"
               ("http://www.erlang.org/doc/man/mnesia.html#add_table_copy-3" "add_table_copy(Tab, Node, Type) -> {aborted, R} | {atomic, ok}")
               "mnesia:activity/4"
               ("http://www.erlang.org/doc/man/mnesia.html#activity-4" "activity(AccessContext, Fun, Args, AccessMod) -> ResultOfFun | exit(Reason)")
               "mnesia:activity/2"
               ("http://www.erlang.org/doc/man/mnesia.html#activity-2" "activity(AccessContext, Fun [, Args]) -> ResultOfFun | exit(Reason)")
               "mnesia:activate_checkpoint/1"
               ("http://www.erlang.org/doc/man/mnesia.html#activate_checkpoint-1" "activate_checkpoint(Args) -> {ok,Name,Nodes} | {error,Reason}")
               "mnesia:abort/1"
               ("http://www.erlang.org/doc/man/mnesia.html#abort-1" "abort(Reason) -> transaction abort")
               "mnesia_frag_hash:match_spec_to_frag_numbers/2"
               ("http://www.erlang.org/doc/man/mnesia_frag_hash.html#match_spec_to_frag_numbers-2" "match_spec_to_frag_numbers(State, MatchSpec) -> FragNums | abort(Reason)")
               "mnesia_frag_hash:key_to_frag_number/2"
               ("http://www.erlang.org/doc/man/mnesia_frag_hash.html#key_to_frag_number-2" "key_to_frag_number(State, Key) -> FragNum | abort(Reason)")
               "mnesia_frag_hash:del_frag/1"
               ("http://www.erlang.org/doc/man/mnesia_frag_hash.html#del_frag-1" "del_frag(State) ->  {NewState, IterFrags, AdditionalLockFrags} | abort(Reason)")
               "mnesia_frag_hash:add_frag/1"
               ("http://www.erlang.org/doc/man/mnesia_frag_hash.html#add_frag-1" "add_frag(State) -> {NewState, IterFrags, AdditionalLockFrags} | abort(Reason)")
               "mnesia_frag_hash:init_state/2"
               ("http://www.erlang.org/doc/man/mnesia_frag_hash.html#init_state-2" "init_state(Tab, State) -> NewState | abort(Reason)")
               "mnesia_registry:create_table/2"
               ("http://www.erlang.org/doc/man/mnesia_registry.html#create_table-2" "create_table(Tab, TabDef) -> ok | exit(Reason)")
               "mnesia_registry:create_table/1"
               ("http://www.erlang.org/doc/man/mnesia_registry.html#create_table-1" "create_table(Tab) -> ok | exit(Reason)")
               "mod_alias:real_script_name/3"
               ("http://www.erlang.org/doc/man/mod_alias.html#real_script_name-3" "real_script_name(ConfigDB, RequestURI, ScriptAliases) -> Ret")
               "mod_alias:real_name/3"
               ("http://www.erlang.org/doc/man/mod_alias.html#real_name-3" "real_name(ConfigDB, RequestURI, Aliases) -> Ret")
               "mod_alias:path/3"
               ("http://www.erlang.org/doc/man/mod_alias.html#path-3" "path(PathData, ConfigDB, RequestURI) -> Path")
               "mod_alias:default_index/2"
               ("http://www.erlang.org/doc/man/mod_alias.html#default_index-2" "default_index(ConfigDB, Path) -> NewPath")
               "mod_auth:update_password/6"
               ("http://www.erlang.org/doc/man/mod_auth.html#update_password-6" "update_password(Address,Port, Dir, OldPassword, NewPassword, NewPassword) -> ok | {error, Reason}")
               "mod_auth:update_password/5"
               ("http://www.erlang.org/doc/man/mod_auth.html#update_password-5" "update_password(Port, Dir, OldPassword, NewPassword, NewPassword) -> ok | {error, Reason}")
               "mod_auth:list_users/3"
               ("http://www.erlang.org/doc/man/mod_auth.html#list_users-3" "list_users(Address, Port, Dir) -> {ok, Users} | {error, Reason}")
               "mod_auth:list_users/2"
               ("http://www.erlang.org/doc/man/mod_auth.html#list_users-2" "list_users(Port, Dir) -> {ok, Users} | {error, Reason}")
               "mod_auth:list_users/1"
               ("http://www.erlang.org/doc/man/mod_auth.html#list_users-1" "list_users(Options) -> {ok, Users} | {error, Reason}")
               "mod_auth:list_group_members/4"
               ("http://www.erlang.org/doc/man/mod_auth.html#list_group_members-4" "list_group_members(GroupName, Address, Port, Dir) -> {ok, Users} | {error, Reason}")
               "mod_auth:list_group_members/3"
               ("http://www.erlang.org/doc/man/mod_auth.html#list_group_members-3" "list_group_members(GroupName, Port, Dir) -> {ok, Users} | {error, Reason}")
               "mod_auth:list_group_members/2"
               ("http://www.erlang.org/doc/man/mod_auth.html#list_group_members-2" "list_group_members(GroupName, Options) -> {ok, Users} | {error, Reason}")
               "mod_auth:list_groups/3"
               ("http://www.erlang.org/doc/man/mod_auth.html#list_groups-3" "list_groups(Address, Port, Dir) -> {ok, Groups} | {error, Reason}")
               "mod_auth:list_groups/2"
               ("http://www.erlang.org/doc/man/mod_auth.html#list_groups-2" "list_groups(Port, Dir) -> {ok, Groups} | {error, Reason}")
               "mod_auth:list_groups/1"
               ("http://www.erlang.org/doc/man/mod_auth.html#list_groups-1" "list_groups(Options) -> {ok, Groups} | {error, Reason}")
               "mod_auth:get_user/4"
               ("http://www.erlang.org/doc/man/mod_auth.html#get_user-4" "get_user(UserName, Address, Port, Dir) -> {ok, #httpd_user} | {error, Reason}")
               "mod_auth:get_user/3"
               ("http://www.erlang.org/doc/man/mod_auth.html#get_user-3" "get_user(UserName, Port, Dir) -> {ok, #httpd_user} | {error, Reason}")
               "mod_auth:get_user/2"
               ("http://www.erlang.org/doc/man/mod_auth.html#get_user-2" "get_user(UserName,Options) -> {ok, #httpd_user} |{error, Reason}")
               "mod_auth:delete_user/4"
               ("http://www.erlang.org/doc/man/mod_auth.html#delete_user-4" "delete_user(UserName, Address, Port, Dir) -> true | {error, Reason}")
               "mod_auth:delete_user/3"
               ("http://www.erlang.org/doc/man/mod_auth.html#delete_user-3" "delete_user(UserName, Port, Dir) -> true | {error, Reason}")
               "mod_auth:delete_user/2"
               ("http://www.erlang.org/doc/man/mod_auth.html#delete_user-2" "delete_user(UserName,Options) -> true | {error, Reason}")
               "mod_auth:delete_group_member/5"
               ("http://www.erlang.org/doc/man/mod_auth.html#delete_group_member-5" "delete_group_member(GroupName, UserName, Address, Port, Dir) -> true | {error, Reason}")
               "mod_auth:delete_group_member/4"
               ("http://www.erlang.org/doc/man/mod_auth.html#delete_group_member-4" "delete_group_member(GroupName, UserName, Port, Dir) -> true | {error, Reason}")
               "mod_auth:delete_group_member/3"
               ("http://www.erlang.org/doc/man/mod_auth.html#delete_group_member-3" "delete_group_member(GroupName, UserName, Options) -> true | {error, Reason}")
               "mod_auth:delete_group/4"
               ("http://www.erlang.org/doc/man/mod_auth.html#delete_group-4" "delete_group(GroupName, Address, Port, Dir) -> true | {error, Reason}")
               "mod_auth:delete_group/2"
               ("http://www.erlang.org/doc/man/mod_auth.html#delete_group-2" "delete_group(GroupName, Options) -> true | {error,Reason} <name>delete_group(GroupName, Port, Dir) -> true | {error, Reason}")
               "mod_auth:add_user/6"
               ("http://www.erlang.org/doc/man/mod_auth.html#add_user-6" "add_user(UserName, Password, UserData, Address, Port, Dir) -> true | {error, Reason}")
               "mod_auth:add_user/5"
               ("http://www.erlang.org/doc/man/mod_auth.html#add_user-5" "add_user(UserName, Password, UserData, Port, Dir) -> true | {error, Reason}")
               "mod_auth:add_user/2"
               ("http://www.erlang.org/doc/man/mod_auth.html#add_user-2" "add_user(UserName, Options) -> true| {error, Reason}")
               "mod_auth:add_group_member/5"
               ("http://www.erlang.org/doc/man/mod_auth.html#add_group_member-5" "add_group_member(GroupName, UserName, Address, Port, Dir) -> true | {error, Reason}")
               "mod_auth:add_group_member/4"
               ("http://www.erlang.org/doc/man/mod_auth.html#add_group_member-4" "add_group_member(GroupName, UserName, Port, Dir) -> true | {error, Reason}")
               "mod_auth:add_group_member/3"
               ("http://www.erlang.org/doc/man/mod_auth.html#add_group_member-3" "add_group_member(GroupName, UserName, Options) -> true | {error, Reason}")
               "mod_esi:Module:Function/2"
               ("http://www.erlang.org/doc/man/mod_esi.html#Module:Function-2" "Module:Function(Env, Input)-> Response")
               "mod_esi:Module:Function/3"
               ("http://www.erlang.org/doc/man/mod_esi.html#Module:Function-3" "Module:Function(SessionID, Env, Input)-> _")
               "mod_esi:deliver/2"
               ("http://www.erlang.org/doc/man/mod_esi.html#deliver-2" "deliver(SessionID, Data) -> ok | {error, Reason}")
               "mod_security:Module:event/5"
               ("http://www.erlang.org/doc/man/mod_security.html#Module:event-5" "Module:event(What, Address, Port, Dir, Data) -> ignored")
               "mod_security:Module:event/4"
               ("http://www.erlang.org/doc/man/mod_security.html#Module:event-4" "Module:event(What, Port, Dir, Data) -> ignored")
               "mod_security:unblock_user/4"
               ("http://www.erlang.org/doc/man/mod_security.html#unblock_user-4" "unblock_user(User, Address, Port, Dir) -> true | {error, Reason}")
               "mod_security:unblock_user/3"
               ("http://www.erlang.org/doc/man/mod_security.html#unblock_user-3" "unblock_user(User, Address, Port) -> true | {error, Reason}")
               "mod_security:unblock_user/2"
               ("http://www.erlang.org/doc/man/mod_security.html#unblock_user-2" "unblock_user(User, Port) -> true | {error, Reason}")
               "mod_security:list_blocked_users/3"
               ("http://www.erlang.org/doc/man/mod_security.html#list_blocked_users-3" "list_blocked_users(Address, Port, Dir) -> Users | []")
               "mod_security:list_blocked_users/2"
               ("http://www.erlang.org/doc/man/mod_security.html#list_blocked_users-2" "list_blocked_users(Address, Port) -> Users | []")
               "mod_security:list_blocked_users/1"
               ("http://www.erlang.org/doc/man/mod_security.html#list_blocked_users-1" "list_blocked_users(Port) -> Users | []")
               "mod_security:list_auth_users/3"
               ("http://www.erlang.org/doc/man/mod_security.html#list_auth_users-3" "list_auth_users(Address, Port, Dir) -> Users | []")
               "mod_security:list_auth_users/2"
               ("http://www.erlang.org/doc/man/mod_security.html#list_auth_users-2" "list_auth_users(Address, Port) -> Users | []")
               "mod_security:list_auth_users/1"
               ("http://www.erlang.org/doc/man/mod_security.html#list_auth_users-1" "list_auth_users(Port) -> Users | []")
               "mod_security:block_user/5"
               ("http://www.erlang.org/doc/man/mod_security.html#block_user-5" "block_user(User, Address, Port, Dir, Seconds) -> true | {error, Reason}")
               "mod_security:block_user/4"
               ("http://www.erlang.org/doc/man/mod_security.html#block_user-4" "block_user(User, Port, Dir, Seconds) -> true | {error, Reason}")
               "Module_Interface:Module_Interface_impl:own_functions/5"
               ("http://www.erlang.org/doc/man/Module_Interface.html#Module_Interface_impl:own_functions-5" "Module_Interface_impl:own_functions(This, State, Arg1, ..., ArgN) -> CallReply")
               "Module_Interface:Module_Interface_impl:own_functions/4"
               ("http://www.erlang.org/doc/man/Module_Interface.html#Module_Interface_impl:own_functions-4" "Module_Interface_impl:own_functions(State, Arg1, ..., ArgN) -> CallReply")
               "Module_Interface:Module_Interface_impl:own_functions/6"
               ("http://www.erlang.org/doc/man/Module_Interface.html#Module_Interface_impl:own_functions-6" "Module_Interface_impl:own_functions(This, From, State, Arg1, ..., ArgN) -> ExtCallReply")
               "Module_Interface:Module_Interface_impl:handle_info/2"
               ("http://www.erlang.org/doc/man/Module_Interface.html#Module_Interface_impl:handle_info-2" "Module_Interface_impl:handle_info(Info, State) -> CallReply")
               "Module_Interface:Module_Interface_impl:code_change/3"
               ("http://www.erlang.org/doc/man/Module_Interface.html#Module_Interface_impl:code_change-3" "Module_Interface_impl:code_change(OldVsn, State, Extra) -> CallReply")
               "Module_Interface:Module_Interface_impl:terminate/2"
               ("http://www.erlang.org/doc/man/Module_Interface.html#Module_Interface_impl:terminate-2" "Module_Interface_impl:terminate(Reason, State) -> ok")
               "Module_Interface:Module_Interface_impl:init/1"
               ("http://www.erlang.org/doc/man/Module_Interface.html#Module_Interface_impl:init-1" "Module_Interface_impl:init(Env) -> CallReply")
               "Module_Interface:Module_Interface:own_functions/5"
               ("http://www.erlang.org/doc/man/Module_Interface.html#Module_Interface:own_functions-5" "Module_Interface:own_functions(ObjRef, Options, Arg1, ..., ArgN) -> Reply")
               "Module_Interface:Module_Interface:own_functions/4"
               ("http://www.erlang.org/doc/man/Module_Interface.html#Module_Interface:own_functions-4" "Module_Interface:own_functions(ObjRef, Arg1, ..., ArgN) -> Reply")
               "Module_Interface:Module_Interface:oe_create_link/2"
               ("http://www.erlang.org/doc/man/Module_Interface.html#Module_Interface:oe_create_link-2" "Module_Interface:oe_create_link(Env, Options) -> Return")
               "Module_Interface:Module_Interface:oe_create/2"
               ("http://www.erlang.org/doc/man/Module_Interface.html#Module_Interface:oe_create-2" "Module_Interface:oe_create(Env, Options) -> ObjRef")
               "Module_Interface:Module_Interface:oe_create_link/1"
               ("http://www.erlang.org/doc/man/Module_Interface.html#Module_Interface:oe_create_link-1" "Module_Interface:oe_create_link(Env) -> ObjRef")
               "Module_Interface:Module_Interface:oe_create/1"
               ("http://www.erlang.org/doc/man/Module_Interface.html#Module_Interface:oe_create-1" "Module_Interface:oe_create(Env) -> ObjRef")
               "Module_Interface:Module_Interface:oe_create_link/0"
               ("http://www.erlang.org/doc/man/Module_Interface.html#Module_Interface:oe_create_link-0" "Module_Interface:oe_create_link() -> ObjRef")
               "Module_Interface:Module_Interface:oe_create/0"
               ("http://www.erlang.org/doc/man/Module_Interface.html#Module_Interface:oe_create-0" "Module_Interface:oe_create() -> ObjRef")
               "Module_Interface:Module_Interface:typeID/0"
               ("http://www.erlang.org/doc/man/Module_Interface.html#Module_Interface:typeID-0" "Module_Interface:typeID() -> TypeId")
               "ms_transform:transform_from_shell/3"
               ("http://www.erlang.org/doc/man/ms_transform.html#transform_from_shell-3" "transform_from_shell(Dialect, Clauses, BoundEnvironment) -> term()")
               "ms_transform:parse_transform/2"
               ("http://www.erlang.org/doc/man/ms_transform.html#parse_transform-2" "parse_transform(Forms, Options) -> Forms2")
               "ms_transform:format_error/1"
               ("http://www.erlang.org/doc/man/ms_transform.html#format_error-1" "format_error(Error) -> Chars")
               "msacc:from_file/1"
               ("http://www.erlang.org/doc/man/msacc.html#from_file-1" "from_file(Filename) -> msacc_data()")
               "msacc:to_file/1"
               ("http://www.erlang.org/doc/man/msacc.html#to_file-1" "to_file(Filename) -> ok | {error, file:posix() }")
               "msacc:stats/2"
               ("http://www.erlang.org/doc/man/msacc.html#stats-2" "stats(Analysis, Stats) -> integer() >= 0")
               "msacc:stats/0"
               ("http://www.erlang.org/doc/man/msacc.html#stats-0" "stats() -> msacc_data()")
               "msacc:print/3"
               ("http://www.erlang.org/doc/man/msacc.html#print-3" "print(FileOrDevice, DataOrStats, Options) -> ok")
               "msacc:print/2"
               ("http://www.erlang.org/doc/man/msacc.html#print-2" "print(DataOrStats, Options) -> ok")
               "msacc:print/1"
               ("http://www.erlang.org/doc/man/msacc.html#print-1" "print(DataOrStats) -> ok")
               "msacc:print/0"
               ("http://www.erlang.org/doc/man/msacc.html#print-0" "print() -> ok")
               "msacc:reset/0"
               ("http://www.erlang.org/doc/man/msacc.html#reset-0" "reset() -> boolean()")
               "msacc:stop/0"
               ("http://www.erlang.org/doc/man/msacc.html#stop-0" "stop() -> boolean()")
               "msacc:start/1"
               ("http://www.erlang.org/doc/man/msacc.html#start-1" "start(Time) -> true")
               "msacc:start/0"
               ("http://www.erlang.org/doc/man/msacc.html#start-0" "start() -> boolean()")
               "msacc:available/0"
               ("http://www.erlang.org/doc/man/msacc.html#available-0" "available() -> boolean()")
               "msacc:msacc_print_options()"
               ("http://www.erlang.org/doc/man/msacc.html#type-msacc_print_options" "msacc_print_options() = #{system => boolean()}")
               "msacc:msacc_state()"
               ("http://www.erlang.org/doc/man/msacc.html#type-msacc_state" "msacc_state() = alloc | aux | bif | busy_wait | check_io | emulator | ets | gc | gc_fullsweep | nif | other | port | send | sleep | timers")
               "msacc:msacc_id()"
               ("http://www.erlang.org/doc/man/msacc.html#type-msacc_id" "msacc_id() = integer() >= 0")
               "msacc:msacc_type()"
               ("http://www.erlang.org/doc/man/msacc.html#type-msacc_type" "msacc_type() = scheduler | aux | async")
               "msacc:msacc_stats_counters()"
               ("http://www.erlang.org/doc/man/msacc.html#type-msacc_stats_counters" "msacc_stats_counters() = #{ msacc_state() => #{thread := float(), system := float()}}")
               "msacc:msacc_stats_thread()"
               ("http://www.erlang.org/doc/man/msacc.html#type-msacc_stats_thread" "msacc_stats_thread() = #{'$type' := msacc_stats, type := msacc_type() , id := msacc_id() , system := float(), counters := msacc_stats_counters() }")
               "msacc:msacc_stats()"
               ("http://www.erlang.org/doc/man/msacc.html#type-msacc_stats" "msacc_stats() = [ msacc_stats_thread() ]")
               "msacc:msacc_data_counters()"
               ("http://www.erlang.org/doc/man/msacc.html#type-msacc_data_counters" "msacc_data_counters() = #{ msacc_state() => integer() >= 0}")
               "msacc:msacc_data_thread()"
               ("http://www.erlang.org/doc/man/msacc.html#type-msacc_data_thread" "msacc_data_thread() = #{'$type' := msacc_data, type := msacc_type() , id := msacc_id() , counters := msacc_data_counters() }")
               "msacc:msacc_data()"
               ("http://www.erlang.org/doc/man/msacc.html#type-msacc_data" "msacc_data() = [ msacc_data_thread() ]")
               "net_adm:world_list/2"
               ("http://www.erlang.org/doc/man/net_adm.html#world_list-2" "world_list(Hosts, Arg) -> [node()]")
               "net_adm:world_list/1"
               ("http://www.erlang.org/doc/man/net_adm.html#world_list-1" "world_list(Hosts) -> [node()]")
               "net_adm:world/1"
               ("http://www.erlang.org/doc/man/net_adm.html#world-1" "world(Arg) -> [node()]")
               "net_adm:world/0"
               ("http://www.erlang.org/doc/man/net_adm.html#world-0" "world() -> [node()]")
               "net_adm:ping/1"
               ("http://www.erlang.org/doc/man/net_adm.html#ping-1" "ping(Node) -> pong | pang")
               "net_adm:names/1"
               ("http://www.erlang.org/doc/man/net_adm.html#names-1" "names(Host) -> {ok, [{Name, Port}]} | {error, Reason}")
               "net_adm:names/0"
               ("http://www.erlang.org/doc/man/net_adm.html#names-0" "names() -> {ok, [{Name, Port}]} | {error, Reason}")
               "net_adm:localhost/0"
               ("http://www.erlang.org/doc/man/net_adm.html#localhost-0" "localhost() -> Name")
               "net_adm:host_file/0"
               ("http://www.erlang.org/doc/man/net_adm.html#host_file-0" "host_file() -> Hosts | {error, Reason}")
               "net_adm:dns_hostname/1"
               ("http://www.erlang.org/doc/man/net_adm.html#dns_hostname-1" "dns_hostname(Host) -> {ok, Name} | {error, Host}")
               "net_kernel:stop/0"
               ("http://www.erlang.org/doc/man/net_kernel.html#stop-0" "stop() -> ok | {error, Reason}")
               "net_kernel:start/1"
               ("http://www.erlang.org/doc/man/net_kernel.html#start-1" "start([Name]) -> {ok, pid()} | {error, Reason}")
               "net_kernel:setopts/2"
               ("http://www.erlang.org/doc/man/net_kernel.html#setopts-2" "setopts(Node, Options) -> ok | {error, Reason} | ignored")
               "net_kernel:set_net_ticktime/2"
               ("http://www.erlang.org/doc/man/net_kernel.html#set_net_ticktime-2" "set_net_ticktime(NetTicktime, TransitionPeriod) -> Res")
               "net_kernel:set_net_ticktime/1"
               ("http://www.erlang.org/doc/man/net_kernel.html#set_net_ticktime-1" "set_net_ticktime(NetTicktime) -> Res")
               "net_kernel:monitor_nodes/2"
               ("http://www.erlang.org/doc/man/net_kernel.html#monitor_nodes-2" "monitor_nodes(Flag, Options) -> ok | Error")
               "net_kernel:monitor_nodes/1"
               ("http://www.erlang.org/doc/man/net_kernel.html#monitor_nodes-1" "monitor_nodes(Flag) -> ok | Error")
               "net_kernel:getopts/2"
               ("http://www.erlang.org/doc/man/net_kernel.html#getopts-2" "getopts(Node, Options) -> {ok, OptionValues} | {error, Reason} | ignored")
               "net_kernel:get_net_ticktime/0"
               ("http://www.erlang.org/doc/man/net_kernel.html#get_net_ticktime-0" "get_net_ticktime() -> Res")
               "net_kernel:connect_node/1"
               ("http://www.erlang.org/doc/man/net_kernel.html#connect_node-1" "connect_node(Node) -> boolean() | ignored")
               "net_kernel:allow/1"
               ("http://www.erlang.org/doc/man/net_kernel.html#allow-1" "allow(Nodes) -> ok | error")
               "nteventlog:stop/0"
               ("http://www.erlang.org/doc/man/nteventlog.html#stop-0" "stop() -> stopped")
               "nteventlog:start_link/2"
               ("http://www.erlang.org/doc/man/nteventlog.html#start_link-2" "start_link(Identifier, MFA) -> Result")
               "nteventlog:start/2"
               ("http://www.erlang.org/doc/man/nteventlog.html#start-2" "start(Identifier, MFA) -> Result")
               "observer:start/0"
               ("http://www.erlang.org/doc/man/observer.html#start-0" "start() -> ok")
               "odbc:select/4"
               ("http://www.erlang.org/doc/man/odbc.html#select-4" "select(Ref, Position, N, TimeOut) -> {selected, ColNames, Rows} | {error, Reason}")
               "odbc:select/3"
               ("http://www.erlang.org/doc/man/odbc.html#select-3" "select(Ref, Position, N) ->")
               "odbc:select_count/3"
               ("http://www.erlang.org/doc/man/odbc.html#select_count-3" "select_count(Ref, SelectQuery, TimeOut) -> {ok, NrRows} | {error, Reason}")
               "odbc:select_count/2"
               ("http://www.erlang.org/doc/man/odbc.html#select_count-2" "select_count(Ref, SelectQuery) ->")
               "odbc:sql_query/3"
               ("http://www.erlang.org/doc/man/odbc.html#sql_query-3" "sql_query(Ref, SQLQuery, TimeOut) -> ResultTuple | [ResultTuple] |{error, Reason}")
               "odbc:sql_query/2"
               ("http://www.erlang.org/doc/man/odbc.html#sql_query-2" "sql_query(Ref, SQLQuery) ->")
               "odbc:stop/0"
               ("http://www.erlang.org/doc/man/odbc.html#stop-0" "stop() -> ok")
               "odbc:start/1"
               ("http://www.erlang.org/doc/man/odbc.html#start-1" "start(Type) -> ok | {error, Reason}")
               "odbc:start/0"
               ("http://www.erlang.org/doc/man/odbc.html#start-0" "start() ->")
               "odbc:prev/2"
               ("http://www.erlang.org/doc/man/odbc.html#prev-2" "prev(ConnectionReference, TimeOut) -> {selected, ColNames, Rows} | {error, Reason}")
               "odbc:prev/1"
               ("http://www.erlang.org/doc/man/odbc.html#prev-1" "prev(Ref) ->")
               "odbc:param_query/4"
               ("http://www.erlang.org/doc/man/odbc.html#param_query-4" "param_query(Ref, SQLQuery, Params, TimeOut) -> ResultTuple | {error, Reason}")
               "odbc:param_query/3"
               ("http://www.erlang.org/doc/man/odbc.html#param_query-3" "param_query(Ref, SQLQuery, Params) ->")
               "odbc:next/2"
               ("http://www.erlang.org/doc/man/odbc.html#next-2" "next(Ref, TimeOut) -> {selected, ColNames, Rows} | {error, Reason}")
               "odbc:next/1"
               ("http://www.erlang.org/doc/man/odbc.html#next-1" "next(Ref) ->")
               "odbc:last/2"
               ("http://www.erlang.org/doc/man/odbc.html#last-2" "last(Ref, TimeOut) -> {selected, ColNames, Rows} | {error, Reason}")
               "odbc:last/1"
               ("http://www.erlang.org/doc/man/odbc.html#last-1" "last(Ref) ->")
               "odbc:first/2"
               ("http://www.erlang.org/doc/man/odbc.html#first-2" "first(Ref, Timeout) -> {selected, ColNames, Rows} | {error, Reason}")
               "odbc:first/1"
               ("http://www.erlang.org/doc/man/odbc.html#first-1" "first(Ref) ->")
               "odbc:describe_table/3"
               ("http://www.erlang.org/doc/man/odbc.html#describe_table-3" "describe_table(Ref, Table, Timeout) -> {ok, Description} | {error, Reason}")
               "odbc:describe_table/2"
               ("http://www.erlang.org/doc/man/odbc.html#describe_table-2" "describe_table(Ref, Table) ->")
               "odbc:disconnect/1"
               ("http://www.erlang.org/doc/man/odbc.html#disconnect-1" "disconnect(Ref) -> ok | {error, Reason}")
               "odbc:connect/2"
               ("http://www.erlang.org/doc/man/odbc.html#connect-2" "connect(ConnectStr, Options) -> {ok, Ref} | {error, Reason}")
               "odbc:commit/3"
               ("http://www.erlang.org/doc/man/odbc.html#commit-3" "commit(Ref, CommitMode, TimeOut) -> ok | {error, Reason}")
               "odbc:commit/2"
               ("http://www.erlang.org/doc/man/odbc.html#commit-2" "commit(Ref, CommitMode) ->")
               "orber:configure/2"
               ("http://www.erlang.org/doc/man/orber.html#configure-2" "configure(Key, Value) -> ok | {'EXIT', Reason}")
               "orber:remove_node/1"
               ("http://www.erlang.org/doc/man/orber.html#remove_node-1" "remove_node(Node) -> RetVal")
               "orber:add_node/2"
               ("http://www.erlang.org/doc/man/orber.html#add_node-2" "add_node(Node, Options) -> RetVal")
               "orber:uninstall/0"
               ("http://www.erlang.org/doc/man/orber.html#uninstall-0" "uninstall() -> ok")
               "orber:install/2"
               ("http://www.erlang.org/doc/man/orber.html#install-2" "install(NodeList, Options) -> ok")
               "orber:install/1"
               ("http://www.erlang.org/doc/man/orber.html#install-1" "install(NodeList) -> ok")
               "orber:orber_nodes/0"
               ("http://www.erlang.org/doc/man/orber.html#orber_nodes-0" "orber_nodes() -> RetVal")
               "orber:objectkeys_gc_time/0"
               ("http://www.erlang.org/doc/man/orber.html#objectkeys_gc_time-0" "objectkeys_gc_time() -> int() (seconds)")
               "orber:set_ssl_client_options/1"
               ("http://www.erlang.org/doc/man/orber.html#set_ssl_client_options-1" "set_ssl_client_options(Options) -> ok")
               "orber:ssl_client_options/0"
               ("http://www.erlang.org/doc/man/orber.html#ssl_client_options-0" "ssl_client_options() -> list()")
               "orber:ssl_server_options/0"
               ("http://www.erlang.org/doc/man/orber.html#ssl_server_options-0" "ssl_server_options() -> list()")
               "orber:secure/0"
               ("http://www.erlang.org/doc/man/orber.html#secure-0" "secure() -> no | ssl")
               "orber:close_connection/2"
               ("http://www.erlang.org/doc/man/orber.html#close_connection-2" "close_connection(Connection, Interface) -> Result")
               "orber:close_connection/1"
               ("http://www.erlang.org/doc/man/orber.html#close_connection-1" "close_connection(Connection) -> Result")
               "orber:remove_listen_interface/1"
               ("http://www.erlang.org/doc/man/orber.html#remove_listen_interface-1" "remove_listen_interface(Ref) -> ok")
               "orber:add_listen_interface/3"
               ("http://www.erlang.org/doc/man/orber.html#add_listen_interface-3" "add_listen_interface(IP, Type, Port) -> Result")
               "orber:add_listen_interface/2"
               ("http://www.erlang.org/doc/man/orber.html#add_listen_interface-2" "add_listen_interface(IP, Type) -> Result")
               "orber:deactivate_audit_trail/0"
               ("http://www.erlang.org/doc/man/orber.html#deactivate_audit_trail-0" "deactivate_audit_trail() -> Result")
               "orber:activate_audit_trail/1"
               ("http://www.erlang.org/doc/man/orber.html#activate_audit_trail-1" "activate_audit_trail(Verbosity) -> Result")
               "orber:activate_audit_trail/0"
               ("http://www.erlang.org/doc/man/orber.html#activate_audit_trail-0" "activate_audit_trail() -> Result")
               "orber:iiop_acl/0"
               ("http://www.erlang.org/doc/man/orber.html#iiop_acl-0" "iiop_acl() -> Result")
               "orber:iiop_in_connection_timeout/0"
               ("http://www.erlang.org/doc/man/orber.html#iiop_in_connection_timeout-0" "iiop_in_connection_timeout() -> int() (milliseconds)")
               "orber:iiop_connections_pending/0"
               ("http://www.erlang.org/doc/man/orber.html#iiop_connections_pending-0" "iiop_connections_pending() -> Result")
               "orber:iiop_connections/1"
               ("http://www.erlang.org/doc/man/orber.html#iiop_connections-1" "iiop_connections(Direction) -> Result")
               "orber:iiop_connections/0"
               ("http://www.erlang.org/doc/man/orber.html#iiop_connections-0" "iiop_connections() -> Result")
               "orber:iiop_connection_timeout/0"
               ("http://www.erlang.org/doc/man/orber.html#iiop_connection_timeout-0" "iiop_connection_timeout() -> int() (milliseconds)")
               "orber:iiop_timeout/0"
               ("http://www.erlang.org/doc/man/orber.html#iiop_timeout-0" "iiop_timeout() -> int() (milliseconds)")
               "orber:iiop_ssl_port/0"
               ("http://www.erlang.org/doc/man/orber.html#iiop_ssl_port-0" "iiop_ssl_port() -> int()")
               "orber:iiop_out_ports_attempts/0"
               ("http://www.erlang.org/doc/man/orber.html#iiop_out_ports_attempts-0" "iiop_out_ports_attempts() -> int()")
               "orber:iiop_out_ports_random/0"
               ("http://www.erlang.org/doc/man/orber.html#iiop_out_ports_random-0" "iiop_out_ports_random() -> true | false")
               "orber:iiop_out_ports/0"
               ("http://www.erlang.org/doc/man/orber.html#iiop_out_ports-0" "iiop_out_ports() -> 0 | {Min, Max}")
               "orber:iiop_port/0"
               ("http://www.erlang.org/doc/man/orber.html#iiop_port-0" "iiop_port() -> int()")
               "orber:domain/0"
               ("http://www.erlang.org/doc/man/orber.html#domain-0" "domain() -> string()")
               "orber:get_ORBDefaultInitRef/0"
               ("http://www.erlang.org/doc/man/orber.html#get_ORBDefaultInitRef-0" "get_ORBDefaultInitRef() -> string() | undefined")
               "orber:get_ORBInitRef/0"
               ("http://www.erlang.org/doc/man/orber.html#get_ORBInitRef-0" "get_ORBInitRef() -> string() | undefined")
               "orber:get_tables/0"
               ("http://www.erlang.org/doc/man/orber.html#get_tables-0" "get_tables() -> [Tables]")
               "orber:is_system_exception/1"
               ("http://www.erlang.org/doc/man/orber.html#is_system_exception-1" "is_system_exception(Exception) -> true | false")
               "orber:exception_info/1"
               ("http://www.erlang.org/doc/man/orber.html#exception_info-1" "exception_info(Exception) -> {ok, string()} | {error, Reason}")
               "orber:info/1"
               ("http://www.erlang.org/doc/man/orber.html#info-1" "info(IoType) -> ok | {'EXIT', Reason} | string()")
               "orber:info/0"
               ("http://www.erlang.org/doc/man/orber.html#info-0" "info() -> ok")
               "orber:stop/0"
               ("http://www.erlang.org/doc/man/orber.html#stop-0" "stop() -> ok")
               "orber:jump_start/1"
               ("http://www.erlang.org/doc/man/orber.html#jump_start-1" "jump_start(Attributes) -> ok | {'EXIT', Reason}")
               "orber:start/1"
               ("http://www.erlang.org/doc/man/orber.html#start-1" "start(Type) -> ok")
               "orber:start/0"
               ("http://www.erlang.org/doc/man/orber.html#start-0" "start() -> ok")
               "orber_acl:range/2"
               ("http://www.erlang.org/doc/man/orber_acl.html#range-2" "range(Filter, Family) -> Reply")
               "orber_acl:verify/3"
               ("http://www.erlang.org/doc/man/orber_acl.html#verify-3" "verify(IP, Filter, Family) -> Reply")
               "orber_acl:match/3"
               ("http://www.erlang.org/doc/man/orber_acl.html#match-3" "match(IP, Direction, GetInfo) -> Reply")
               "orber_acl:match/2"
               ("http://www.erlang.org/doc/man/orber_acl.html#match-2" "match(IP, Direction) -> boolean()")
               "orber_diagnostics:missing_modules/0"
               ("http://www.erlang.org/doc/man/orber_diagnostics.html#missing_modules-0" "missing_modules() -> Count")
               "orber_diagnostics:nameservice/1"
               ("http://www.erlang.org/doc/man/orber_diagnostics.html#nameservice-1" "nameservice(Flags) -> Result")
               "orber_diagnostics:nameservice/0"
               ("http://www.erlang.org/doc/man/orber_diagnostics.html#nameservice-0" "nameservice() -> Result")
               "orber_ifr:create_operation/9"
               ("http://www.erlang.org/doc/man/orber_ifr.html#create_operation-9" "create_operation(Objref,Id,Name,Version,Result,Mode,Params, Exceptions,Contexts) -> Return")
               "orber_ifr:create_attribute/6"
               ("http://www.erlang.org/doc/man/orber_ifr.html#create_attribute-6" "create_attribute(Objref,Id,Name,Version,Type,Mode) -> Return")
               "orber_ifr:describe_interface/1"
               ("http://www.erlang.org/doc/man/orber_ifr.html#describe_interface-1" "describe_interface(Objref) -> Return")
               "orber_ifr:is_a/2"
               ("http://www.erlang.org/doc/man/orber_ifr.html#is_a-2" "is_a(Objref,Interface_id) -> Return")
               "orber_ifr:set_base_interfaces/2"
               ("http://www.erlang.org/doc/man/orber_ifr.html#set_base_interfaces-2" "set_base_interfaces(Objref,BaseInterfaces) -> Return")
               "orber_ifr:get_base_interfaces/1"
               ("http://www.erlang.org/doc/man/orber_ifr.html#get_base_interfaces-1" "get_base_interfaces(Objref) -> Return")
               "orber_ifr:set_exceptions/2"
               ("http://www.erlang.org/doc/man/orber_ifr.html#set_exceptions-2" "set_exceptions(Objref,Exceptions) -> Return")
               "orber_ifr:get_exceptions/1"
               ("http://www.erlang.org/doc/man/orber_ifr.html#get_exceptions-1" "get_exceptions(Objref) -> Return")
               "orber_ifr:set_contexts/2"
               ("http://www.erlang.org/doc/man/orber_ifr.html#set_contexts-2" "set_contexts(Objref,Contexts) -> Return")
               "orber_ifr:get_contexts/1"
               ("http://www.erlang.org/doc/man/orber_ifr.html#get_contexts-1" "get_contexts(Objref) -> Return")
               "orber_ifr:set_params/2"
               ("http://www.erlang.org/doc/man/orber_ifr.html#set_params-2" "set_params(Objref,Params) -> Return")
               "orber_ifr:get_params/1"
               ("http://www.erlang.org/doc/man/orber_ifr.html#get_params-1" "get_params(Objref) -> Return")
               "orber_ifr:set_result_def/2"
               ("http://www.erlang.org/doc/man/orber_ifr.html#set_result_def-2" "set_result_def(Objref,ResultDef) -> Return")
               "orber_ifr:get_result_def/1"
               ("http://www.erlang.org/doc/man/orber_ifr.html#get_result_def-1" "get_result_def(Objref) -> Return")
               "orber_ifr:get_result/1"
               ("http://www.erlang.org/doc/man/orber_ifr.html#get_result-1" "get_result(Objref) -> Return")
               "orber_ifr:set_mode/2"
               ("http://www.erlang.org/doc/man/orber_ifr.html#set_mode-2" "set_mode(Objref,Mode) -> Return")
               "orber_ifr:get_mode/1"
               ("http://www.erlang.org/doc/man/orber_ifr.html#get_mode-1" "get_mode(Objref) -> Return")
               "orber_ifr:set_length/2"
               ("http://www.erlang.org/doc/man/orber_ifr.html#set_length-2" "set_length(Objref,Length) -> Return")
               "orber_ifr:get_length/1"
               ("http://www.erlang.org/doc/man/orber_ifr.html#get_length-1" "get_length(Objref) -> Return")
               "orber_ifr:set_element_type_def/2"
               ("http://www.erlang.org/doc/man/orber_ifr.html#set_element_type_def-2" "set_element_type_def(Objref,TypeDef) -> Return")
               "orber_ifr:get_element_type_def/1"
               ("http://www.erlang.org/doc/man/orber_ifr.html#get_element_type_def-1" "get_element_type_def(Objref) -> Return")
               "orber_ifr:get_element_type/1"
               ("http://www.erlang.org/doc/man/orber_ifr.html#get_element_type-1" "get_element_type(Objref) -> Return")
               "orber_ifr:set_bound/2"
               ("http://www.erlang.org/doc/man/orber_ifr.html#set_bound-2" "set_bound(Objref,Bound) -> Return")
               "orber_ifr:get_bound/1"
               ("http://www.erlang.org/doc/man/orber_ifr.html#get_bound-1" "get_bound(Objref) -> Return")
               "orber_ifr:get_kind/1"
               ("http://www.erlang.org/doc/man/orber_ifr.html#get_kind-1" "get_kind(Objref) -> Return")
               "orber_ifr:set_original_type_def/2"
               ("http://www.erlang.org/doc/man/orber_ifr.html#set_original_type_def-2" "set_original_type_def(Objref,TypeDef) -> Return")
               "orber_ifr:get_original_type_def/1"
               ("http://www.erlang.org/doc/man/orber_ifr.html#get_original_type_def-1" "get_original_type_def(Objref) -> Return")
               "orber_ifr:set_discriminator_type_def/2"
               ("http://www.erlang.org/doc/man/orber_ifr.html#set_discriminator_type_def-2" "set_discriminator_type_def(Objref,TypeDef) ->  Return")
               "orber_ifr:get_discriminator_type_def/1"
               ("http://www.erlang.org/doc/man/orber_ifr.html#get_discriminator_type_def-1" "get_discriminator_type_def(Objref) -> Return")
               "orber_ifr:get_discriminator_type/1"
               ("http://www.erlang.org/doc/man/orber_ifr.html#get_discriminator_type-1" "get_discriminator_type(Objref) -> Return")
               "orber_ifr:set_members/2"
               ("http://www.erlang.org/doc/man/orber_ifr.html#set_members-2" "set_members(Objref,Members) -> Return")
               "orber_ifr:get_members/1"
               ("http://www.erlang.org/doc/man/orber_ifr.html#get_members-1" "get_members(Objref) -> Return")
               "orber_ifr:set_value/2"
               ("http://www.erlang.org/doc/man/orber_ifr.html#set_value-2" "set_value(Objref,Value) -> Return")
               "orber_ifr:get_value/1"
               ("http://www.erlang.org/doc/man/orber_ifr.html#get_value-1" "get_value(Objref) -> Return")
               "orber_ifr:set_type_def/2"
               ("http://www.erlang.org/doc/man/orber_ifr.html#set_type_def-2" "set_type_def(Objref,TypeDef) -> Return")
               "orber_ifr:get_type_def/1"
               ("http://www.erlang.org/doc/man/orber_ifr.html#get_type_def-1" "get_type_def(Objref) -> Return")
               "orber_ifr:create_idltype/2"
               ("http://www.erlang.org/doc/man/orber_ifr.html#create_idltype-2" "create_idltype(Objref,Typecode) -> Return")
               "orber_ifr:create_array/3"
               ("http://www.erlang.org/doc/man/orber_ifr.html#create_array-3" "create_array(Objref,Length,Element_type) -> Return")
               "orber_ifr:create_sequence/3"
               ("http://www.erlang.org/doc/man/orber_ifr.html#create_sequence-3" "create_sequence(Objref,Bound,Element_type) -> Return")
               "orber_ifr:create_fixed/3"
               ("http://www.erlang.org/doc/man/orber_ifr.html#create_fixed-3" "create_fixed(Objref,Digits,Scale) -> Return")
               "orber_ifr:create_wstring/2"
               ("http://www.erlang.org/doc/man/orber_ifr.html#create_wstring-2" "create_wstring(Objref,Bound) -> Return")
               "orber_ifr:create_string/2"
               ("http://www.erlang.org/doc/man/orber_ifr.html#create_string-2" "create_string(Objref,Bound) -> Return")
               "orber_ifr:get_primitive/2"
               ("http://www.erlang.org/doc/man/orber_ifr.html#get_primitive-2" "get_primitive(Objref,Kind) -> Return")
               "orber_ifr:lookup_id/2"
               ("http://www.erlang.org/doc/man/orber_ifr.html#lookup_id-2" "lookup_id(Objref,Search_id) -> Return")
               "orber_ifr:get_type/1"
               ("http://www.erlang.org/doc/man/orber_ifr.html#get_type-1" "get_type(Objref) -> Return")
               "orber_ifr:create_exception/5"
               ("http://www.erlang.org/doc/man/orber_ifr.html#create_exception-5" "create_exception(Objref,Id,Name,Version,Members) -> Return")
               "orber_ifr:create_interface/5"
               ("http://www.erlang.org/doc/man/orber_ifr.html#create_interface-5" "create_interface(Objref,Id,Name,Version,Base_interfaces) -> Return")
               "orber_ifr:create_alias/5"
               ("http://www.erlang.org/doc/man/orber_ifr.html#create_alias-5" "create_alias(Objref,Id,Name,Version,Original_type) -> Return")
               "orber_ifr:create_enum/5"
               ("http://www.erlang.org/doc/man/orber_ifr.html#create_enum-5" "create_enum(Objref,Id,Name,Version,Members) -> Return")
               "orber_ifr:create_union/6"
               ("http://www.erlang.org/doc/man/orber_ifr.html#create_union-6" "create_union(Objref,Id,Name,Version,Discriminator_type,Members) -> Return")
               "orber_ifr:create_struct/5"
               ("http://www.erlang.org/doc/man/orber_ifr.html#create_struct-5" "create_struct(Objref,Id,Name,Version,Members) -> Return")
               "orber_ifr:create_constant/6"
               ("http://www.erlang.org/doc/man/orber_ifr.html#create_constant-6" "create_constant(Objref,Id,Name,Version,Type,Value) -> Return")
               "orber_ifr:create_module/4"
               ("http://www.erlang.org/doc/man/orber_ifr.html#create_module-4" "create_module(Objref,Id,Name,Version) -> Return")
               "orber_ifr:describe_contents/4"
               ("http://www.erlang.org/doc/man/orber_ifr.html#describe_contents-4" "describe_contents(Objref, Limit_type, Exclude_inherited, Max_returned_objs) -> Return")
               "orber_ifr:lookup_name/5"
               ("http://www.erlang.org/doc/man/orber_ifr.html#lookup_name-5" "lookup_name(Objref,Search_name,Levels_to_search, Limit_type, Exclude_inherited) -> Return")
               "orber_ifr:contents/3"
               ("http://www.erlang.org/doc/man/orber_ifr.html#contents-3" "contents(Objref,Limit_type,Exclude_inherited) -> Return")
               "orber_ifr:lookup/2"
               ("http://www.erlang.org/doc/man/orber_ifr.html#lookup-2" "lookup(Objref,Search_name) -> Return")
               "orber_ifr:move/4"
               ("http://www.erlang.org/doc/man/orber_ifr.html#move-4" "move(Objref,New_container,New_name,New_version) -> Return")
               "orber_ifr:describe/1"
               ("http://www.erlang.org/doc/man/orber_ifr.html#describe-1" "describe(Objref) -> Return")
               "orber_ifr:get_containing_repository/1"
               ("http://www.erlang.org/doc/man/orber_ifr.html#get_containing_repository-1" "get_containing_repository(Objref) -> Return")
               "orber_ifr:get_absolute_name/1"
               ("http://www.erlang.org/doc/man/orber_ifr.html#get_absolute_name-1" "get_absolute_name(Objref) -> Return")
               "orber_ifr:get_defined_in/1"
               ("http://www.erlang.org/doc/man/orber_ifr.html#get_defined_in-1" "get_defined_in(Objref) -> Return")
               "orber_ifr:set_version/2"
               ("http://www.erlang.org/doc/man/orber_ifr.html#set_version-2" "set_version(Objref,Version) -> ok")
               "orber_ifr:get_version/1"
               ("http://www.erlang.org/doc/man/orber_ifr.html#get_version-1" "get_version(Objref) -> Return")
               "orber_ifr:set_name/2"
               ("http://www.erlang.org/doc/man/orber_ifr.html#set_name-2" "set_name(Objref,Name) -> ok")
               "orber_ifr:get_name/1"
               ("http://www.erlang.org/doc/man/orber_ifr.html#get_name-1" "get_name(Objref) -> Return")
               "orber_ifr:set_id/2"
               ("http://www.erlang.org/doc/man/orber_ifr.html#set_id-2" "set_id(Objref,Id) -> ok")
               "orber_ifr:get_id/1"
               ("http://www.erlang.org/doc/man/orber_ifr.html#get_id-1" "get_id(Objref) -> Return")
               "orber_ifr:destroy/1"
               ("http://www.erlang.org/doc/man/orber_ifr.html#destroy-1" "destroy(Objref) -> Return")
               "orber_ifr:get_def_kind/1"
               ("http://www.erlang.org/doc/man/orber_ifr.html#get_def_kind-1" "get_def_kind(Objref) -> Return")
               "orber_ifr:find_repository/0"
               ("http://www.erlang.org/doc/man/orber_ifr.html#find_repository-0" "find_repository() -> #IFR_Repository_objref")
               "orber_ifr:init/2"
               ("http://www.erlang.org/doc/man/orber_ifr.html#init-2" "init(Nodes,Timeout) -> ok")
               "orber_tc:check_tc/1"
               ("http://www.erlang.org/doc/man/orber_tc.html#check_tc-1" "check_tc(TC) -> boolean()")
               "orber_tc:get_tc/1"
               ("http://www.erlang.org/doc/man/orber_tc.html#get_tc-1" "get_tc(Object) -> TC")
               "orber_tc:exception/3"
               ("http://www.erlang.org/doc/man/orber_tc.html#exception-3" "exception(Id, Name, ElementList) -> TC")
               "orber_tc:alias/3"
               ("http://www.erlang.org/doc/man/orber_tc.html#alias-3" "alias(Id, Name, AliasTC) -> TC")
               "orber_tc:array/2"
               ("http://www.erlang.org/doc/man/orber_tc.html#array-2" "array(ElemTC, Length) -> TC")
               "orber_tc:sequence/2"
               ("http://www.erlang.org/doc/man/orber_tc.html#sequence-2" "sequence(ElemTC, Length) -> TC")
               "orber_tc:fixed/2"
               ("http://www.erlang.org/doc/man/orber_tc.html#fixed-2" "fixed(Digits, Scale) -> TC")
               "orber_tc:wstring/1"
               ("http://www.erlang.org/doc/man/orber_tc.html#wstring-1" "wstring(Length) -> TC")
               "orber_tc:string/1"
               ("http://www.erlang.org/doc/man/orber_tc.html#string-1" "string(Length) -> TC")
               "orber_tc:enum/3"
               ("http://www.erlang.org/doc/man/orber_tc.html#enum-3" "enum(Id, Name, ElementList) -> TC")
               "orber_tc:union/5"
               ("http://www.erlang.org/doc/man/orber_tc.html#union-5" "union(Id, Name, DiscrTC, Default, ElementList) -> TC")
               "orber_tc:struct/3"
               ("http://www.erlang.org/doc/man/orber_tc.html#struct-3" "struct(Id, Name, ElementList) -> TC")
               "orber_tc:object_reference/2"
               ("http://www.erlang.org/doc/man/orber_tc.html#object_reference-2" "object_reference(Id, Name) -> TC")
               "orber_tc:principal/0"
               ("http://www.erlang.org/doc/man/orber_tc.html#principal-0" "principal() -> TC")
               "orber_tc:typecode/0"
               ("http://www.erlang.org/doc/man/orber_tc.html#typecode-0" "typecode() -> TC")
               "orber_tc:any/0"
               ("http://www.erlang.org/doc/man/orber_tc.html#any-0" "any() -> TC")
               "orber_tc:octet/0"
               ("http://www.erlang.org/doc/man/orber_tc.html#octet-0" "octet() -> TC")
               "orber_tc:char/0"
               ("http://www.erlang.org/doc/man/orber_tc.html#char-0" "char() -> TC")
               "orber_tc:boolean/0"
               ("http://www.erlang.org/doc/man/orber_tc.html#boolean-0" "boolean() -> TC")
               "orber_tc:double/0"
               ("http://www.erlang.org/doc/man/orber_tc.html#double-0" "double() -> TC")
               "orber_tc:float/0"
               ("http://www.erlang.org/doc/man/orber_tc.html#float-0" "float() -> TC")
               "orber_tc:wchar/0"
               ("http://www.erlang.org/doc/man/orber_tc.html#wchar-0" "wchar() -> TC")
               "orber_tc:unsigned_long_long/0"
               ("http://www.erlang.org/doc/man/orber_tc.html#unsigned_long_long-0" "unsigned_long_long() -> TC")
               "orber_tc:long_long/0"
               ("http://www.erlang.org/doc/man/orber_tc.html#long_long-0" "long_long() -> TC")
               "orber_tc:unsigned_long/0"
               ("http://www.erlang.org/doc/man/orber_tc.html#unsigned_long-0" "unsigned_long() -> TC")
               "orber_tc:long/0"
               ("http://www.erlang.org/doc/man/orber_tc.html#long-0" "long() -> TC")
               "orber_tc:unsigned_short/0"
               ("http://www.erlang.org/doc/man/orber_tc.html#unsigned_short-0" "unsigned_short() -> TC")
               "orber_tc:short/0"
               ("http://www.erlang.org/doc/man/orber_tc.html#short-0" "short() -> TC")
               "orber_tc:void/0"
               ("http://www.erlang.org/doc/man/orber_tc.html#void-0" "void() -> TC")
               "orber_tc:null/0"
               ("http://www.erlang.org/doc/man/orber_tc.html#null-0" "null() -> TC")
               "orddict:update_counter/3"
               ("http://www.erlang.org/doc/man/orddict.html#update_counter-3" "update_counter(Key, Increment, Orddict1) -> Orddict2")
               "orddict:update/4"
               ("http://www.erlang.org/doc/man/orddict.html#update-4" "update(Key, Fun, Initial, Orddict1) -> Orddict2")
               "orddict:update/3"
               ("http://www.erlang.org/doc/man/orddict.html#update-3" "update(Key, Fun, Orddict1) -> Orddict2")
               "orddict:to_list/1"
               ("http://www.erlang.org/doc/man/orddict.html#to_list-1" "to_list(Orddict) -> List")
               "orddict:store/3"
               ("http://www.erlang.org/doc/man/orddict.html#store-3" "store(Key, Value, Orddict1) -> Orddict2")
               "orddict:size/1"
               ("http://www.erlang.org/doc/man/orddict.html#size-1" "size(Orddict) -> integer() >= 0")
               "orddict:new/0"
               ("http://www.erlang.org/doc/man/orddict.html#new-0" "new() -> orddict()")
               "orddict:merge/3"
               ("http://www.erlang.org/doc/man/orddict.html#merge-3" "merge(Fun, Orddict1, Orddict2) -> Orddict3")
               "orddict:map/2"
               ("http://www.erlang.org/doc/man/orddict.html#map-2" "map(Fun, Orddict1) -> Orddict2")
               "orddict:is_key/2"
               ("http://www.erlang.org/doc/man/orddict.html#is_key-2" "is_key(Key, Orddict) -> boolean()")
               "orddict:is_empty/1"
               ("http://www.erlang.org/doc/man/orddict.html#is_empty-1" "is_empty(Orddict) -> boolean()")
               "orddict:from_list/1"
               ("http://www.erlang.org/doc/man/orddict.html#from_list-1" "from_list(List) -> Orddict")
               "orddict:fold/3"
               ("http://www.erlang.org/doc/man/orddict.html#fold-3" "fold(Fun, Acc0, Orddict) -> Acc1")
               "orddict:find/2"
               ("http://www.erlang.org/doc/man/orddict.html#find-2" "find(Key, Orddict) -> {ok, Value} | error")
               "orddict:filter/2"
               ("http://www.erlang.org/doc/man/orddict.html#filter-2" "filter(Pred, Orddict1) -> Orddict2")
               "orddict:fetch_keys/1"
               ("http://www.erlang.org/doc/man/orddict.html#fetch_keys-1" "fetch_keys(Orddict) -> Keys")
               "orddict:fetch/2"
               ("http://www.erlang.org/doc/man/orddict.html#fetch-2" "fetch(Key, Orddict) -> Value")
               "orddict:erase/2"
               ("http://www.erlang.org/doc/man/orddict.html#erase-2" "erase(Key, Orddict1) -> Orddict2")
               "orddict:append_list/3"
               ("http://www.erlang.org/doc/man/orddict.html#append_list-3" "append_list(Key, ValList, Orddict1) -> Orddict2")
               "orddict:append/3"
               ("http://www.erlang.org/doc/man/orddict.html#append-3" "append(Key, Value, Orddict1) -> Orddict2")
               "orddict:orddict()"
               ("http://www.erlang.org/doc/man/orddict.html#type-orddict" "orddict() = orddict (term(), term())")
               "orddict:orddict(Key, Value)"
               ("http://www.erlang.org/doc/man/orddict.html#type-orddict" "orddict(Key, Value) = [{Key, Value}]")
               "ordsets:union/2"
               ("http://www.erlang.org/doc/man/ordsets.html#union-2" "union(Ordset1, Ordset2) -> Ordset3")
               "ordsets:union/1"
               ("http://www.erlang.org/doc/man/ordsets.html#union-1" "union(OrdsetList) -> Ordset")
               "ordsets:to_list/1"
               ("http://www.erlang.org/doc/man/ordsets.html#to_list-1" "to_list(Ordset) -> List")
               "ordsets:subtract/2"
               ("http://www.erlang.org/doc/man/ordsets.html#subtract-2" "subtract(Ordset1, Ordset2) -> Ordset3")
               "ordsets:size/1"
               ("http://www.erlang.org/doc/man/ordsets.html#size-1" "size(Ordset) -> integer() >= 0")
               "ordsets:new/0"
               ("http://www.erlang.org/doc/man/ordsets.html#new-0" "new() -> []")
               "ordsets:is_subset/2"
               ("http://www.erlang.org/doc/man/ordsets.html#is_subset-2" "is_subset(Ordset1, Ordset2) -> boolean()")
               "ordsets:is_set/1"
               ("http://www.erlang.org/doc/man/ordsets.html#is_set-1" "is_set(Ordset) -> boolean()")
               "ordsets:is_element/2"
               ("http://www.erlang.org/doc/man/ordsets.html#is_element-2" "is_element(Element, Ordset) -> boolean()")
               "ordsets:is_disjoint/2"
               ("http://www.erlang.org/doc/man/ordsets.html#is_disjoint-2" "is_disjoint(Ordset1, Ordset2) -> boolean()")
               "ordsets:intersection/2"
               ("http://www.erlang.org/doc/man/ordsets.html#intersection-2" "intersection(Ordset1, Ordset2) -> Ordset3")
               "ordsets:intersection/1"
               ("http://www.erlang.org/doc/man/ordsets.html#intersection-1" "intersection(OrdsetList) -> Ordset")
               "ordsets:from_list/1"
               ("http://www.erlang.org/doc/man/ordsets.html#from_list-1" "from_list(List) -> Ordset")
               "ordsets:fold/3"
               ("http://www.erlang.org/doc/man/ordsets.html#fold-3" "fold(Function, Acc0, Ordset) -> Acc1")
               "ordsets:filter/2"
               ("http://www.erlang.org/doc/man/ordsets.html#filter-2" "filter(Pred, Ordset1) -> Ordset2")
               "ordsets:del_element/2"
               ("http://www.erlang.org/doc/man/ordsets.html#del_element-2" "del_element(Element, Ordset1) -> Ordset2")
               "ordsets:add_element/2"
               ("http://www.erlang.org/doc/man/ordsets.html#add_element-2" "add_element(Element, Ordset1) -> Ordset2")
               "ordsets:ordset(T)"
               ("http://www.erlang.org/doc/man/ordsets.html#type-ordset" "ordset(T) = [T]")
               "os:version/0"
               ("http://www.erlang.org/doc/man/os.html#version-0" "version() -> VersionString | {Major, Minor, Release}")
               "os:unsetenv/1"
               ("http://www.erlang.org/doc/man/os.html#unsetenv-1" "unsetenv(VarName) -> true")
               "os:"
               ("http://www.erlang.org/doc/man/os.html#type-0" "type() -> {Osfamily, Osname}")
               "os:type/0"
               ("http://www.erlang.org/doc/man/os.html#type-0" "type() -> {Osfamily, Osname}")
               "os:perf_counter/1"
               ("http://www.erlang.org/doc/man/os.html#perf_counter-1" "perf_counter(Unit) -> integer()")
               "os:perf_counter/0"
               ("http://www.erlang.org/doc/man/os.html#perf_counter-0" "perf_counter() -> Counter")
               "os:timestamp/0"
               ("http://www.erlang.org/doc/man/os.html#timestamp-0" "timestamp() -> Timestamp")
               "os:system_time/1"
               ("http://www.erlang.org/doc/man/os.html#system_time-1" "system_time(Unit) -> integer()")
               "os:system_time/0"
               ("http://www.erlang.org/doc/man/os.html#system_time-0" "system_time() -> integer()")
               "os:putenv/2"
               ("http://www.erlang.org/doc/man/os.html#putenv-2" "putenv(VarName, Value) -> true")
               "os:getpid/0"
               ("http://www.erlang.org/doc/man/os.html#getpid-0" "getpid() -> Value")
               "os:getenv/2"
               ("http://www.erlang.org/doc/man/os.html#getenv-2" "getenv(VarName, DefaultValue) -> Value")
               "os:getenv/1"
               ("http://www.erlang.org/doc/man/os.html#getenv-1" "getenv(VarName) -> Value | false")
               "os:getenv/0"
               ("http://www.erlang.org/doc/man/os.html#getenv-0" "getenv() -> [string()]")
               "os:find_executable/2"
               ("http://www.erlang.org/doc/man/os.html#find_executable-2" "find_executable(Name, Path) -> Filename | false")
               "os:find_executable/1"
               ("http://www.erlang.org/doc/man/os.html#find_executable-1" "find_executable(Name) -> Filename | false")
               "os:cmd/1"
               ("http://www.erlang.org/doc/man/os.html#cmd-1" "cmd(Command) -> string()")
               "os_mon_mib:unload/1"
               ("http://www.erlang.org/doc/man/os_mon_mib.html#unload-1" "unload(Agent) -> ok | {error, Reason}")
               "os_mon_mib:load/1"
               ("http://www.erlang.org/doc/man/os_mon_mib.html#load-1" "load(Agent) -> ok | {error, Reason}")
               "os_sup:disable/2"
               ("http://www.erlang.org/doc/man/os_sup.html#disable-2" "disable(Dir, Conf) -> ok | {error, Error}")
               "os_sup:disable/0"
               ("http://www.erlang.org/doc/man/os_sup.html#disable-0" "disable() -> ok | {error, Res}")
               "os_sup:enable/2"
               ("http://www.erlang.org/doc/man/os_sup.html#enable-2" "enable(Dir, Conf) -> ok | {error, Error}")
               "os_sup:enable/0"
               ("http://www.erlang.org/doc/man/os_sup.html#enable-0" "enable() -> ok | {error, Res}")
               "otp_mib:unload/1"
               ("http://www.erlang.org/doc/man/otp_mib.html#unload-1" "unload(Agent) -> ok | {error, Reason}")
               "otp_mib:load/1"
               ("http://www.erlang.org/doc/man/otp_mib.html#load-1" "load(Agent) -> ok | {error, Reason}")
               "percept:stop_webserver/0"
               ("http://www.erlang.org/doc/man/percept.html#stop_webserver-0" "stop_webserver() -> ok | {error, not_started}")
               "percept:stop_profile/0"
               ("http://www.erlang.org/doc/man/percept.html#stop_profile-0" "stop_profile() -> ok | {error, not_started}")
               "percept:start_webserver/1"
               ("http://www.erlang.org/doc/man/percept.html#start_webserver-1" "start_webserver(Port::integer()) -> {started, Hostname, AssignedPort} | {error, Reason}")
               "percept:start_webserver/0"
               ("http://www.erlang.org/doc/man/percept.html#start_webserver-0" "start_webserver() -> {started, Hostname, Port} | {error, Reason}")
               "percept:profile/3"
               ("http://www.erlang.org/doc/man/percept.html#profile-3" "profile(Filename::string(), MFA::mfa(), Options::[ percept_option() ]) -> ok | {already_started, Port} | {error, not_started}")
               "percept:profile/2"
               ("http://www.erlang.org/doc/man/percept.html#profile-2" "profile(Filename::string(), Options::[ percept_option() ]) -> {ok, Port} | {already_started, Port}")
               "percept:profile/1"
               ("http://www.erlang.org/doc/man/percept.html#profile-1" "profile(Filename::string()) -> {ok, Port} | {already_started, Port}")
               "percept:analyze/1"
               ("http://www.erlang.org/doc/man/percept.html#analyze-1" "analyze(Filename::string()) -> ok | {error, Reason}")
               "percept:"
               ("http://www.erlang.org/doc/man/percept.html#type-percept_option" "percept_option() = procs | ports | exclusive")
               "percept_profile:stop/0"
               ("http://www.erlang.org/doc/man/percept_profile.html#stop-0" "stop() -> ok | {error, not_started}")
               "percept_profile:start/3"
               ("http://www.erlang.org/doc/man/percept_profile.html#start-3" "start(Filename::string(), MFA::mfa(), Options::[ percept_option() ]) -> ok | {already_started, Port} | {error, not_started}")
               "percept_profile:start/2"
               ("http://www.erlang.org/doc/man/percept_profile.html#start-2" "start(Filename::string(), Options::[ percept_option() ]) -> {ok, Port} | {already_started, Port}")
               "percept_profile:start/1"
               ("http://www.erlang.org/doc/man/percept_profile.html#start-1" "start(Filename::string()) -> {ok, Port} | {already_started, Port}")
               "percept_profile:"
               ("http://www.erlang.org/doc/man/percept_profile.html#type-percept_option" "percept_option() = procs | ports | exclusive")
               "pg2:which_groups/0"
               ("http://www.erlang.org/doc/man/pg2.html#which_groups-0" "which_groups() -> [Name :: name() ]")
               "pg2:start_link/0"
               ("http://www.erlang.org/doc/man/pg2.html#start_link-0" "start_link() -> {ok, pid()} | {error, any()}")
               "pg2:start/0"
               ("http://www.erlang.org/doc/man/pg2.html#start-0" "start() -> {ok, pid()} | {error, any()}")
               "pg2:leave/2"
               ("http://www.erlang.org/doc/man/pg2.html#leave-2" "leave(Name, Pid :: pid()) -> ok | {error, {no_such_group, Name}}")
               "pg2:join/2"
               ("http://www.erlang.org/doc/man/pg2.html#join-2" "join(Name, Pid :: pid()) -> ok | {error, {no_such_group, Name}}")
               "pg2:get_members/1"
               ("http://www.erlang.org/doc/man/pg2.html#get_members-1" "get_members(Name) -> [pid()] | {error, {no_such_group, Name}}")
               "pg2:get_local_members/1"
               ("http://www.erlang.org/doc/man/pg2.html#get_local_members-1" "get_local_members(Name) -> [pid()] | {error, {no_such_group, Name}}")
               "pg2:get_closest_pid/1"
               ("http://www.erlang.org/doc/man/pg2.html#get_closest_pid-1" "get_closest_pid(Name) -> pid() | {error, Reason}")
               "pg2:delete/1"
               ("http://www.erlang.org/doc/man/pg2.html#delete-1" "delete(Name :: name() ) -> ok")
               "pg2:create/1"
               ("http://www.erlang.org/doc/man/pg2.html#create-1" "create(Name :: name() ) -> ok")
               "pg2:name()"
               ("http://www.erlang.org/doc/man/pg2.html#type-name" "name() = any()")
               "pool:stop/0"
               ("http://www.erlang.org/doc/man/pool.html#stop-0" "stop() -> stopped")
               "pool:start/2"
               ("http://www.erlang.org/doc/man/pool.html#start-2" "start(Name, Args) -> Nodes")
               "pool:start/1"
               ("http://www.erlang.org/doc/man/pool.html#start-1" "start(Name) -> Nodes")
               "pool:pspawn_link/3"
               ("http://www.erlang.org/doc/man/pool.html#pspawn_link-3" "pspawn_link(Mod, Fun, Args) -> pid()")
               "pool:pspawn/3"
               ("http://www.erlang.org/doc/man/pool.html#pspawn-3" "pspawn(Mod, Fun, Args) -> pid()")
               "pool:get_nodes/0"
               ("http://www.erlang.org/doc/man/pool.html#get_nodes-0" "get_nodes() -> [node()]")
               "pool:get_node/0"
               ("http://www.erlang.org/doc/man/pool.html#get_node-0" "get_node() -> node()")
               "pool:attach/1"
               ("http://www.erlang.org/doc/man/pool.html#attach-1" "attach(Node) -> already_attached | attached")
               "prettypr:text_par/2"
               ("http://www.erlang.org/doc/man/prettypr.html#text_par-2" "text_par(Text::string(), Indentation::integer()) -> document()")
               "prettypr:text_par/1"
               ("http://www.erlang.org/doc/man/prettypr.html#text_par-1" "text_par(Text::string()) -> document()")
               "prettypr:text/1"
               ("http://www.erlang.org/doc/man/prettypr.html#text-1" "text(Characters::string()) -> document()")
               "prettypr:sep/1"
               ("http://www.erlang.org/doc/man/prettypr.html#sep-1" "sep(Docs::[ document() ]) -> document()")
               "prettypr:par/2"
               ("http://www.erlang.org/doc/man/prettypr.html#par-2" "par(Docs::[ document() ], Offset::integer()) -> document()")
               "prettypr:par/1"
               ("http://www.erlang.org/doc/man/prettypr.html#par-1" "par(Docs::[ document() ]) -> document()")
               "prettypr:null_text/1"
               ("http://www.erlang.org/doc/man/prettypr.html#null_text-1" "null_text(Characters::string()) -> document()")
               "prettypr:nest/2"
               ("http://www.erlang.org/doc/man/prettypr.html#nest-2" "nest(N::integer(), D:: document() ) -> document()")
               "prettypr:format/3"
               ("http://www.erlang.org/doc/man/prettypr.html#format-3" "format(D:: document() , PaperWidth::integer(), LineWidth::integer()) -> string()")
               "prettypr:format/2"
               ("http://www.erlang.org/doc/man/prettypr.html#format-2" "format(D:: document() , PaperWidth::integer()) -> string()")
               "prettypr:format/1"
               ("http://www.erlang.org/doc/man/prettypr.html#format-1" "format(D:: document() ) -> string()")
               "prettypr:follow/3"
               ("http://www.erlang.org/doc/man/prettypr.html#follow-3" "follow(D1:: document() , D2:: document() , Offset::integer()) -> document()")
               "prettypr:follow/2"
               ("http://www.erlang.org/doc/man/prettypr.html#follow-2" "follow(D1:: document() , D2:: document() ) -> document()")
               "prettypr:floating/3"
               ("http://www.erlang.org/doc/man/prettypr.html#floating-3" "floating(D:: document() , Hp::integer(), Vp::integer()) -> document()")
               "prettypr:floating/1"
               ("http://www.erlang.org/doc/man/prettypr.html#floating-1" "floating(D:: document() ) -> document()")
               "prettypr:empty/0"
               ("http://www.erlang.org/doc/man/prettypr.html#empty-0" "empty() -> document()")
               "prettypr:break/1"
               ("http://www.erlang.org/doc/man/prettypr.html#break-1" "break(D:: document() ) -> document()")
               "prettypr:best/3"
               ("http://www.erlang.org/doc/man/prettypr.html#best-3" "best(D:: document() , PaperWidth::integer(), LineWidth::integer()) -> empty | document()")
               "prettypr:beside/2"
               ("http://www.erlang.org/doc/man/prettypr.html#beside-2" "beside(D1:: document() , D2:: document() ) -> document()")
               "prettypr:above/2"
               ("http://www.erlang.org/doc/man/prettypr.html#above-2" "above(D1:: document() , D2:: document() ) -> document()")
               "prettypr:"
               ("http://www.erlang.org/doc/man/prettypr.html#type-document" "document()")
               "proc_lib:translate_initial_call/1"
               ("http://www.erlang.org/doc/man/proc_lib.html#translate_initial_call-1" "translate_initial_call(Process) -> {Module, Function, Arity}")
               "proc_lib:stop/3"
               ("http://www.erlang.org/doc/man/proc_lib.html#stop-3" "stop(Process, Reason, Timeout) -> ok")
               "proc_lib:stop/1"
               ("http://www.erlang.org/doc/man/proc_lib.html#stop-1" "stop(Process) -> ok")
               "proc_lib:start_link/5"
               ("http://www.erlang.org/doc/man/proc_lib.html#start_link-5" "start_link(Module, Function, Args, Time, SpawnOpts) -> Ret")
               "proc_lib:start_link/4"
               ("http://www.erlang.org/doc/man/proc_lib.html#start_link-4" "start_link(Module, Function, Args, Time) -> Ret")
               "proc_lib:start_link/3"
               ("http://www.erlang.org/doc/man/proc_lib.html#start_link-3" "start_link(Module, Function, Args) -> Ret")
               "proc_lib:start/5"
               ("http://www.erlang.org/doc/man/proc_lib.html#start-5" "start(Module, Function, Args, Time, SpawnOpts) -> Ret")
               "proc_lib:start/4"
               ("http://www.erlang.org/doc/man/proc_lib.html#start-4" "start(Module, Function, Args, Time) -> Ret")
               "proc_lib:start/3"
               ("http://www.erlang.org/doc/man/proc_lib.html#start-3" "start(Module, Function, Args) -> Ret")
               "proc_lib:spawn_opt/5"
               ("http://www.erlang.org/doc/man/proc_lib.html#spawn_opt-5" "spawn_opt(Node, Module, Function, Args, SpawnOpts) -> pid()")
               "proc_lib:spawn_opt/4"
               ("http://www.erlang.org/doc/man/proc_lib.html#spawn_opt-4" "spawn_opt(Module, Function, Args, SpawnOpts) -> pid()")
               "proc_lib:spawn_opt/3"
               ("http://www.erlang.org/doc/man/proc_lib.html#spawn_opt-3" "spawn_opt(Node, Function, SpawnOpts) -> pid()")
               "proc_lib:spawn_opt/2"
               ("http://www.erlang.org/doc/man/proc_lib.html#spawn_opt-2" "spawn_opt(Fun, SpawnOpts) -> pid()")
               "proc_lib:spawn_link/4"
               ("http://www.erlang.org/doc/man/proc_lib.html#spawn_link-4" "spawn_link(Node, Module, Function, Args) -> pid()")
               "proc_lib:spawn_link/3"
               ("http://www.erlang.org/doc/man/proc_lib.html#spawn_link-3" "spawn_link(Module, Function, Args) -> pid()")
               "proc_lib:spawn_link/2"
               ("http://www.erlang.org/doc/man/proc_lib.html#spawn_link-2" "spawn_link(Node, Fun) -> pid()")
               "proc_lib:spawn_link/1"
               ("http://www.erlang.org/doc/man/proc_lib.html#spawn_link-1" "spawn_link(Fun) -> pid()")
               "proc_lib:spawn/4"
               ("http://www.erlang.org/doc/man/proc_lib.html#spawn-4" "spawn(Node, Module, Function, Args) -> pid()")
               "proc_lib:spawn/3"
               ("http://www.erlang.org/doc/man/proc_lib.html#spawn-3" "spawn(Module, Function, Args) -> pid()")
               "proc_lib:spawn/2"
               ("http://www.erlang.org/doc/man/proc_lib.html#spawn-2" "spawn(Node, Fun) -> pid()")
               "proc_lib:spawn/1"
               ("http://www.erlang.org/doc/man/proc_lib.html#spawn-1" "spawn(Fun) -> pid()")
               "proc_lib:initial_call/1"
               ("http://www.erlang.org/doc/man/proc_lib.html#initial_call-1" "initial_call(Process) -> {Module, Function, Args} | false")
               "proc_lib:init_ack/2"
               ("http://www.erlang.org/doc/man/proc_lib.html#init_ack-2" "init_ack(Parent, Ret) -> ok")
               "proc_lib:init_ack/1"
               ("http://www.erlang.org/doc/man/proc_lib.html#init_ack-1" "init_ack(Ret) -> ok")
               "proc_lib:hibernate/3"
               ("http://www.erlang.org/doc/man/proc_lib.html#hibernate-3" "hibernate(Module, Function, Args) -> no_return()")
               "proc_lib:format/3"
               ("http://www.erlang.org/doc/man/proc_lib.html#format-3" "format(CrashReport, Encoding, Depth) -> string()")
               "proc_lib:format/2"
               ("http://www.erlang.org/doc/man/proc_lib.html#format-2" "format(CrashReport, Encoding) -> string()")
               "proc_lib:format/1"
               ("http://www.erlang.org/doc/man/proc_lib.html#format-1" "format(CrashReport) -> string()")
               "proc_lib:dict_or_pid()"
               ("http://www.erlang.org/doc/man/proc_lib.html#type-dict_or_pid" "dict_or_pid() = pid() | (ProcInfo :: [term()]) | {X :: integer(), Y :: integer(), Z :: integer()}")
               "proc_lib:max_heap_size()"
               ("http://www.erlang.org/doc/man/proc_lib.html#type-max_heap_size" "max_heap_size() = integer() >= 0 | #{size => integer() >= 0, kill => true, error_logger => true}")
               "proc_lib:priority_level()"
               ("http://www.erlang.org/doc/man/proc_lib.html#type-priority_level" "priority_level() = high | low | max | normal")
               "proc_lib:spawn_option()"
               ("http://www.erlang.org/doc/man/proc_lib.html#type-spawn_option" "spawn_option() = link | monitor | {priority, priority_level() } | {max_heap_size, max_heap_size() } | {min_heap_size, integer() >= 0} | {min_bin_vheap_size, integer() >= 0} | {fullsweep_after, integer() >= 0} | {message_queue_data, off_heap | on_heap | mixed}")
               "proplists:unfold/1"
               ("http://www.erlang.org/doc/man/proplists.html#unfold-1" "unfold(ListIn) -> ListOut")
               "proplists:substitute_negations/2"
               ("http://www.erlang.org/doc/man/proplists.html#substitute_negations-2" "substitute_negations(Negations, ListIn) -> ListOut")
               "proplists:substitute_aliases/2"
               ("http://www.erlang.org/doc/man/proplists.html#substitute_aliases-2" "substitute_aliases(Aliases, ListIn) -> ListOut")
               "proplists:split/2"
               ("http://www.erlang.org/doc/man/proplists.html#split-2" "split(List, Keys) -> {Lists, Rest}")
               "proplists:property/2"
               ("http://www.erlang.org/doc/man/proplists.html#property-2" "property(Key, Value) -> Property")
               "proplists:property/1"
               ("http://www.erlang.org/doc/man/proplists.html#property-1" "property(PropertyIn) -> PropertyOut")
               "proplists:normalize/2"
               ("http://www.erlang.org/doc/man/proplists.html#normalize-2" "normalize(ListIn, Stages) -> ListOut")
               "proplists:lookup_all/2"
               ("http://www.erlang.org/doc/man/proplists.html#lookup_all-2" "lookup_all(Key, List) -> [tuple()]")
               "proplists:lookup/2"
               ("http://www.erlang.org/doc/man/proplists.html#lookup-2" "lookup(Key, List) -> none | tuple()")
               "proplists:is_defined/2"
               ("http://www.erlang.org/doc/man/proplists.html#is_defined-2" "is_defined(Key, List) -> boolean()")
               "proplists:get_value/3"
               ("http://www.erlang.org/doc/man/proplists.html#get_value-3" "get_value(Key, List, Default) -> term()")
               "proplists:get_value/2"
               ("http://www.erlang.org/doc/man/proplists.html#get_value-2" "get_value(Key, List) -> term()")
               "proplists:get_keys/1"
               ("http://www.erlang.org/doc/man/proplists.html#get_keys-1" "get_keys(List) -> [term()]")
               "proplists:get_bool/2"
               ("http://www.erlang.org/doc/man/proplists.html#get_bool-2" "get_bool(Key, List) -> boolean()")
               "proplists:get_all_values/2"
               ("http://www.erlang.org/doc/man/proplists.html#get_all_values-2" "get_all_values(Key, List) -> [term()]")
               "proplists:expand/2"
               ("http://www.erlang.org/doc/man/proplists.html#expand-2" "expand(Expansions, ListIn) -> ListOut")
               "proplists:delete/2"
               ("http://www.erlang.org/doc/man/proplists.html#delete-2" "delete(Key, List) -> List")
               "proplists:compact/1"
               ("http://www.erlang.org/doc/man/proplists.html#compact-1" "compact(ListIn) -> ListOut")
               "proplists:append_values/2"
               ("http://www.erlang.org/doc/man/proplists.html#append_values-2" "append_values(Key, ListIn) -> ListOut")
               "proplists:property()"
               ("http://www.erlang.org/doc/man/proplists.html#type-property" "property() = atom() | tuple()")
               "public_key:short_name_hash/1"
               ("http://www.erlang.org/doc/man/public_key.html#short_name_hash-1" "short_name_hash(Name) -> string()")
               "public_key:verify/4"
               ("http://www.erlang.org/doc/man/public_key.html#verify-4" "verify(Msg, DigestType, Signature, Key) -> boolean()")
               "public_key:ssh_hostkey_fingerprint/2"
               ("http://www.erlang.org/doc/man/public_key.html#ssh_hostkey_fingerprint-2" "ssh_hostkey_fingerprint(DigestType, HostKey) -> string()")
               "public_key:ssh_hostkey_fingerprint/1"
               ("http://www.erlang.org/doc/man/public_key.html#ssh_hostkey_fingerprint-1" "ssh_hostkey_fingerprint(HostKey) -> string()")
               "public_key:ssh_encode/2"
               ("http://www.erlang.org/doc/man/public_key.html#ssh_encode-2" "ssh_encode([{Key, Attributes}], Type) -> binary()")
               "public_key:ssh_decode/2"
               ("http://www.erlang.org/doc/man/public_key.html#ssh_decode-2" "ssh_decode(SshBin,  Type) -> [{public_key(), Attributes::list()}]")
               "public_key:sign/3"
               ("http://www.erlang.org/doc/man/public_key.html#sign-3" "sign(Msg, DigestType, Key) -> binary()")
               "public_key:pkix_verify/2"
               ("http://www.erlang.org/doc/man/public_key.html#pkix_verify-2" "pkix_verify(Cert, Key) -> boolean()")
               "public_key:pkix_sign_types/1"
               ("http://www.erlang.org/doc/man/public_key.html#pkix_sign_types-1" "pkix_sign_types(AlgorithmId) -> {DigestType, SignatureType}")
               "public_key:pkix_sign/2"
               ("http://www.erlang.org/doc/man/public_key.html#pkix_sign-2" "pkix_sign(#'OTPTBSCertificate'{}, Key) -> der_encoded()")
               "public_key:pkix_match_dist_point/2"
               ("http://www.erlang.org/doc/man/public_key.html#pkix_match_dist_point-2" "pkix_match_dist_point(CRL, DistPoint) -> boolean()")
               "public_key:pkix_dist_points/1"
               ("http://www.erlang.org/doc/man/public_key.html#pkix_dist_points-1" "pkix_dist_points(Cert) -> DistPoints")
               "public_key:pkix_dist_point/1"
               ("http://www.erlang.org/doc/man/public_key.html#pkix_dist_point-1" "pkix_dist_point(Cert) -> DistPoint")
               "public_key:pkix_crl_verify/2"
               ("http://www.erlang.org/doc/man/public_key.html#pkix_crl_verify-2" "pkix_crl_verify(CRL, Cert) -> boolean()")
               "public_key:pkix_crls_validate/3"
               ("http://www.erlang.org/doc/man/public_key.html#pkix_crls_validate-3" "pkix_crls_validate(OTPCertificate, DPAndCRLs, Options) -> CRLStatus()")
               "public_key:pkix_crl_issuer/1"
               ("http://www.erlang.org/doc/man/public_key.html#pkix_crl_issuer-1" "pkix_crl_issuer(CRL) -> issuer_name()")
               "public_key:pkix_path_validation/3"
               ("http://www.erlang.org/doc/man/public_key.html#pkix_path_validation-3" "pkix_path_validation(TrustedCert, CertChain, Options) -> {ok, {PublicKeyInfo, PolicyTree}} | {error, {bad_cert, Reason}}")
               "public_key:pkix_normalize_name/1"
               ("http://www.erlang.org/doc/man/public_key.html#pkix_normalize_name-1" "pkix_normalize_name(Issuer) -> Normalized")
               "public_key:pkix_issuer_id/2"
               ("http://www.erlang.org/doc/man/public_key.html#pkix_issuer_id-2" "pkix_issuer_id(Cert, IssuedBy) -> {ok, IssuerID} | {error, Reason}")
               "public_key:pkix_is_self_signed/1"
               ("http://www.erlang.org/doc/man/public_key.html#pkix_is_self_signed-1" "pkix_is_self_signed(Cert) -> boolean()")
               "public_key:pkix_is_fixed_dh_cert/1"
               ("http://www.erlang.org/doc/man/public_key.html#pkix_is_fixed_dh_cert-1" "pkix_is_fixed_dh_cert(Cert) -> boolean()")
               "public_key:pkix_is_issuer/2"
               ("http://www.erlang.org/doc/man/public_key.html#pkix_is_issuer-2" "pkix_is_issuer(Cert, IssuerCert) -> boolean()")
               "public_key:pkix_encode/3"
               ("http://www.erlang.org/doc/man/public_key.html#pkix_encode-3" "pkix_encode(Asn1Type, Entity, otp | plain) -> der_encoded()")
               "public_key:pkix_decode_cert/2"
               ("http://www.erlang.org/doc/man/public_key.html#pkix_decode_cert-2" "pkix_decode_cert(Cert, otp|plain) ->  #'Certificate'{} | #'OTPCertificate'{}")
               "public_key:pem_entry_encode/3"
               ("http://www.erlang.org/doc/man/public_key.html#pem_entry_encode-3" "pem_entry_encode(Asn1Type, Entity, {CipherInfo, Password}) -> pem_entry()")
               "public_key:pem_entry_encode/2"
               ("http://www.erlang.org/doc/man/public_key.html#pem_entry_encode-2" "pem_entry_encode(Asn1Type, Entity) -> pem_entry()")
               "public_key:pem_entry_decode/2"
               ("http://www.erlang.org/doc/man/public_key.html#pem_entry_decode-2" "pem_entry_decode(PemEntry, Password) -> term()")
               "public_key:pem_entry_decode/1"
               ("http://www.erlang.org/doc/man/public_key.html#pem_entry_decode-1" "pem_entry_decode(PemEntry) -> term()")
               "public_key:pem_encode/1"
               ("http://www.erlang.org/doc/man/public_key.html#pem_encode-1" "pem_encode(PemEntries) -> binary()")
               "public_key:pem_decode/1"
               ("http://www.erlang.org/doc/man/public_key.html#pem_decode-1" "pem_decode(PemBin) -> [pem_entry()]")
               "public_key:generate_key/1"
               ("http://www.erlang.org/doc/man/public_key.html#generate_key-1" "generate_key(Params) -> {Public::binary(), Private::binary()}  | #'ECPrivateKey'{}")
               "public_key:encrypt_public/2"
               ("http://www.erlang.org/doc/man/public_key.html#encrypt_public-2" "encrypt_public(PlainText, Key) -> binary()")
               "public_key:encrypt_private/2"
               ("http://www.erlang.org/doc/man/public_key.html#encrypt_private-2" "encrypt_private(PlainText, Key) -> binary()")
               "public_key:dh_gex_group/4"
               ("http://www.erlang.org/doc/man/public_key.html#dh_gex_group-4" "dh_gex_group(MinSize, SuggestedSize, MaxSize, Groups) -> {ok, {Size,Group}} | {error,Error}")
               "public_key:der_encode/2"
               ("http://www.erlang.org/doc/man/public_key.html#der_encode-2" "der_encode(Asn1Type, Entity) -> der_encoded()")
               "public_key:der_decode/2"
               ("http://www.erlang.org/doc/man/public_key.html#der_decode-2" "der_decode(Asn1type, Der) -> term()")
               "public_key:decrypt_public/3"
               ("http://www.erlang.org/doc/man/public_key.html#decrypt_public-3" "decrypt_public(CipherText, Key, Options) - > binary()")
               "public_key:decrypt_public/2"
               ("http://www.erlang.org/doc/man/public_key.html#decrypt_public-2" "decrypt_public(CipherText, Key) - > binary()")
               "public_key:decrypt_private/3"
               ("http://www.erlang.org/doc/man/public_key.html#decrypt_private-3" "decrypt_private(CipherText, Key, Options) -> binary()")
               "public_key:decrypt_private/2"
               ("http://www.erlang.org/doc/man/public_key.html#decrypt_private-2" "decrypt_private(CipherText, Key) -> binary()")
               "public_key:compute_key/3"
               ("http://www.erlang.org/doc/man/public_key.html#compute_key-3" "compute_key(OthersKey, MyKey, Params)->")
               "public_key:compute_key/2"
               ("http://www.erlang.org/doc/man/public_key.html#compute_key-2" "compute_key(OthersKey, MyKey)->")
               "qlc:table/2"
               ("http://www.erlang.org/doc/man/qlc.html#table-2" "table(TraverseFun, Options) -> QH")
               "qlc:string_to_handle/3"
               ("http://www.erlang.org/doc/man/qlc.html#string_to_handle-3" "string_to_handle(QueryString, Options, Bindings) -> QH | Error")
               "qlc:string_to_handle/2"
               ("http://www.erlang.org/doc/man/qlc.html#string_to_handle-2" "string_to_handle(QueryString, Options) -> QH | Error")
               "qlc:string_to_handle/1"
               ("http://www.erlang.org/doc/man/qlc.html#string_to_handle-1" "string_to_handle(QueryString) -> QH | Error")
               "qlc:sort/2"
               ("http://www.erlang.org/doc/man/qlc.html#sort-2" "sort(QH1, SortOptions) -> QH2")
               "qlc:sort/1"
               ("http://www.erlang.org/doc/man/qlc.html#sort-1" "sort(QH1) -> QH2")
               "qlc:q/2"
               ("http://www.erlang.org/doc/man/qlc.html#q-2" "q(QLC, Options) -> QH")
               "qlc:q/1"
               ("http://www.erlang.org/doc/man/qlc.html#q-1" "q(QLC) -> QH")
               "qlc:next_answers/2"
               ("http://www.erlang.org/doc/man/qlc.html#next_answers-2" "next_answers(QueryCursor, NumberOfAnswers) -> Answers | Error")
               "qlc:next_answers/1"
               ("http://www.erlang.org/doc/man/qlc.html#next_answers-1" "next_answers(QueryCursor) -> Answers | Error")
               "qlc:keysort/3"
               ("http://www.erlang.org/doc/man/qlc.html#keysort-3" "keysort(KeyPos, QH1, SortOptions) -> QH2")
               "qlc:keysort/2"
               ("http://www.erlang.org/doc/man/qlc.html#keysort-2" "keysort(KeyPos, QH1) -> QH2")
               "qlc:info/2"
               ("http://www.erlang.org/doc/man/qlc.html#info-2" "info(QH, Options) -> Info")
               "qlc:info/1"
               ("http://www.erlang.org/doc/man/qlc.html#info-1" "info(QH) -> Info")
               "qlc:format_error/1"
               ("http://www.erlang.org/doc/man/qlc.html#format_error-1" "format_error(Error) -> Chars")
               "qlc:fold/4"
               ("http://www.erlang.org/doc/man/qlc.html#fold-4" "fold(Function, Acc0, QH, Options) -> Acc1 | Error")
               "qlc:fold/3"
               ("http://www.erlang.org/doc/man/qlc.html#fold-3" "fold(Function, Acc0, QH) -> Acc1 | Error")
               "qlc:eval/2"
               ("http://www.erlang.org/doc/man/qlc.html#eval-2" "eval(QH, Options) -> Answers | Error")
               "qlc:eval/1"
               ("http://www.erlang.org/doc/man/qlc.html#eval-1" "eval(QH) -> Answers | Error")
               "qlc:e/2"
               ("http://www.erlang.org/doc/man/qlc.html#e-2" "e(QH, Options) -> Answers | Error")
               "qlc:e/1"
               ("http://www.erlang.org/doc/man/qlc.html#e-1" "e(QH) -> Answers | Error")
               "qlc:delete_cursor/1"
               ("http://www.erlang.org/doc/man/qlc.html#delete_cursor-1" "delete_cursor(QueryCursor) -> ok")
               "qlc:cursor/2"
               ("http://www.erlang.org/doc/man/qlc.html#cursor-2" "cursor(QH, Options) -> Cursor")
               "qlc:cursor/1"
               ("http://www.erlang.org/doc/man/qlc.html#cursor-1" "cursor(QH) -> Cursor")
               "qlc:append/2"
               ("http://www.erlang.org/doc/man/qlc.html#append-2" "append(QH1, QH2) -> QH3")
               "qlc:append/1"
               ("http://www.erlang.org/doc/man/qlc.html#append-1" "append(QHL) -> QH")
               "qlc:tmp_file_usage()"
               ("http://www.erlang.org/doc/man/qlc.html#type-tmp_file_usage" "tmp_file_usage() = allowed | not_allowed | info_msg | warning_msg | error_msg")
               "qlc:tmp_directory()"
               ("http://www.erlang.org/doc/man/qlc.html#type-tmp_directory" "tmp_directory() = [] | file:name()")
               "qlc:sort_option()"
               ("http://www.erlang.org/doc/man/qlc.html#type-sort_option" "sort_option() = {compressed, boolean()} | {no_files, no_files() } | {order, order() } | {size, integer() >= 1} | {tmpdir, tmp_directory() } | {unique, boolean()}")
               "qlc:sort_options()"
               ("http://www.erlang.org/doc/man/qlc.html#type-sort_options" "sort_options() = [ sort_option() ] | sort_option()")
               "qlc:spawn_options()"
               ("http://www.erlang.org/doc/man/qlc.html#type-spawn_options" "spawn_options() = default | [ proc_lib:spawn_option() ]")
               "qlc:query_list_comprehension()"
               ("http://www.erlang.org/doc/man/qlc.html#type-query_list_comprehension" "query_list_comprehension() = term()")
               "qlc:query_handle_or_list()"
               ("http://www.erlang.org/doc/man/qlc.html#type-query_handle_or_list" "query_handle_or_list() = query_handle() | list()")
               "qlc:query_handle()"
               ("http://www.erlang.org/doc/man/qlc.html#type-query_handle" "query_handle()")
               "qlc:query_cursor()"
               ("http://www.erlang.org/doc/man/qlc.html#type-query_cursor" "query_cursor()")
               "qlc:order_fun()"
               ("http://www.erlang.org/doc/man/qlc.html#type-order_fun" "order_fun() = fun((term(), term()) -> boolean())")
               "qlc:order()"
               ("http://www.erlang.org/doc/man/qlc.html#type-order" "order() = ascending | descending | order_fun()")
               "qlc:max_list_size()"
               ("http://www.erlang.org/doc/man/qlc.html#type-max_list_size" "max_list_size() = integer() >= 0")
               "qlc:key_pos()"
               ("http://www.erlang.org/doc/man/qlc.html#type-key_pos" "key_pos() = integer() >= 1 | [integer() >= 1]")
               "qlc:no_files()"
               ("http://www.erlang.org/doc/man/qlc.html#type-no_files" "no_files() = integer() >= 1")
               "qlc:match_expression()"
               ("http://www.erlang.org/doc/man/qlc.html#type-match_expression" "match_expression() = ets:match_spec()")
               "qlc:cache()"
               ("http://www.erlang.org/doc/man/qlc.html#type-cache" "cache() = ets | list | no")
               "qlc:answers()"
               ("http://www.erlang.org/doc/man/qlc.html#type-answers" "answers() = [ answer() ]")
               "qlc:answer()"
               ("http://www.erlang.org/doc/man/qlc.html#type-answer" "answer() = term()")
               "qlc:abstract_expr()"
               ("http://www.erlang.org/doc/man/qlc.html#type-abstract_expr" "abstract_expr() = erl_parse:abstract_expr()")
               "queue:tail/1"
               ("http://www.erlang.org/doc/man/queue.html#tail-1" "tail(Q1 :: queue (Item)) -> Q2 :: queue (Item)")
               "queue:snoc/2"
               ("http://www.erlang.org/doc/man/queue.html#snoc-2" "snoc(Q1 :: queue (Item), Item) -> Q2 :: queue (Item)")
               "queue:liat/1"
               ("http://www.erlang.org/doc/man/queue.html#liat-1" "liat(Q1 :: queue (Item)) -> Q2 :: queue (Item)")
               "queue:last/1"
               ("http://www.erlang.org/doc/man/queue.html#last-1" "last(Q :: queue (Item)) -> Item")
               "queue:lait/1"
               ("http://www.erlang.org/doc/man/queue.html#lait-1" "lait(Q1 :: queue (Item)) -> Q2 :: queue (Item)")
               "queue:init/1"
               ("http://www.erlang.org/doc/man/queue.html#init-1" "init(Q1 :: queue (Item)) -> Q2 :: queue (Item)")
               "queue:head/1"
               ("http://www.erlang.org/doc/man/queue.html#head-1" "head(Q :: queue (Item)) -> Item")
               "queue:daeh/1"
               ("http://www.erlang.org/doc/man/queue.html#daeh-1" "daeh(Q :: queue (Item)) -> Item")
               "queue:cons/2"
               ("http://www.erlang.org/doc/man/queue.html#cons-2" "cons(Item, Q1 :: queue (Item)) -> Q2 :: queue (Item)")
               "queue:peek_r/1"
               ("http://www.erlang.org/doc/man/queue.html#peek_r-1" "peek_r(Q :: queue (Item)) -> empty | {value, Item}")
               "queue:peek/1"
               ("http://www.erlang.org/doc/man/queue.html#peek-1" "peek(Q :: queue (Item)) -> empty | {value, Item}")
               "queue:get_r/1"
               ("http://www.erlang.org/doc/man/queue.html#get_r-1" "get_r(Q :: queue (Item)) -> Item")
               "queue:get/1"
               ("http://www.erlang.org/doc/man/queue.html#get-1" "get(Q :: queue (Item)) -> Item")
               "queue:drop_r/1"
               ("http://www.erlang.org/doc/man/queue.html#drop_r-1" "drop_r(Q1 :: queue (Item)) -> Q2 :: queue (Item)")
               "queue:drop/1"
               ("http://www.erlang.org/doc/man/queue.html#drop-1" "drop(Q1 :: queue (Item)) -> Q2 :: queue (Item)")
               "queue:to_list/1"
               ("http://www.erlang.org/doc/man/queue.html#to_list-1" "to_list(Q :: queue (Item)) -> [Item]")
               "queue:split/2"
               ("http://www.erlang.org/doc/man/queue.html#split-2" "split(N :: integer() >= 0, Q1 :: queue (Item)) -> {Q2 :: queue (Item), Q3 :: queue (Item)}")
               "queue:reverse/1"
               ("http://www.erlang.org/doc/man/queue.html#reverse-1" "reverse(Q1 :: queue (Item)) -> Q2 :: queue (Item)")
               "queue:out_r/1"
               ("http://www.erlang.org/doc/man/queue.html#out_r-1" "out_r(Q1 :: queue (Item)) -> {{value, Item}, Q2 :: queue (Item)} | {empty, Q1 :: queue (Item)}")
               "queue:out/1"
               ("http://www.erlang.org/doc/man/queue.html#out-1" "out(Q1 :: queue (Item)) -> {{value, Item}, Q2 :: queue (Item)} | {empty, Q1 :: queue (Item)}")
               "queue:new/0"
               ("http://www.erlang.org/doc/man/queue.html#new-0" "new() -> queue()")
               "queue:member/2"
               ("http://www.erlang.org/doc/man/queue.html#member-2" "member(Item, Q :: queue (Item)) -> boolean()")
               "queue:len/1"
               ("http://www.erlang.org/doc/man/queue.html#len-1" "len(Q :: queue() ) -> integer() >= 0")
               "queue:join/2"
               ("http://www.erlang.org/doc/man/queue.html#join-2" "join(Q1 :: queue (Item), Q2 :: queue (Item)) -> Q3 :: queue (Item)")
               "queue:is_queue/1"
               ("http://www.erlang.org/doc/man/queue.html#is_queue-1" "is_queue(Term :: term()) -> boolean()")
               "queue:is_empty/1"
               ("http://www.erlang.org/doc/man/queue.html#is_empty-1" "is_empty(Q :: queue() ) -> boolean()")
               "queue:in_r/2"
               ("http://www.erlang.org/doc/man/queue.html#in_r-2" "in_r(Item, Q1 :: queue (Item)) -> Q2 :: queue (Item)")
               "queue:in/2"
               ("http://www.erlang.org/doc/man/queue.html#in-2" "in(Item, Q1 :: queue (Item)) -> Q2 :: queue (Item)")
               "queue:from_list/1"
               ("http://www.erlang.org/doc/man/queue.html#from_list-1" "from_list(L :: [Item]) -> queue (Item)")
               "queue:filter/2"
               ("http://www.erlang.org/doc/man/queue.html#filter-2" "filter(Fun, Q1 :: queue (Item)) -> Q2 :: queue (Item)")
               "queue:queue()"
               ("http://www.erlang.org/doc/man/queue.html#type-queue" "queue() = queue (term())")
               "queue:queue(Item)"
               ("http://www.erlang.org/doc/man/queue.html#type-queue" "queue(Item)")
               "rand:uniform_s/2"
               ("http://www.erlang.org/doc/man/rand.html#uniform_s-2" "uniform_s(N :: integer() >= 1, State :: state() ) -> {X :: integer() >= 1, NewS :: state() }")
               "rand:uniform_s/1"
               ("http://www.erlang.org/doc/man/rand.html#uniform_s-1" "uniform_s(State :: state() ) -> {X :: float(), NewS :: state() }")
               "rand:uniform/1"
               ("http://www.erlang.org/doc/man/rand.html#uniform-1" "uniform(N :: integer() >= 1) -> X :: integer() >= 1")
               "rand:uniform/0"
               ("http://www.erlang.org/doc/man/rand.html#uniform-0" "uniform() -> X :: float()")
               "rand:seed_s/2"
               ("http://www.erlang.org/doc/man/rand.html#seed_s-2" "seed_s(Alg :: alg() , S0 :: {integer(), integer(), integer()}) ->  state()")
               "rand:seed_s/1"
               ("http://www.erlang.org/doc/man/rand.html#seed_s-1" "seed_s(AlgOrExpState :: alg() | export_state() ) -> state()")
               "rand:seed/2"
               ("http://www.erlang.org/doc/man/rand.html#seed-2" "seed(Alg :: alg() , S0 :: {integer(), integer(), integer()}) ->  state()")
               "rand:seed/1"
               ("http://www.erlang.org/doc/man/rand.html#seed-1" "seed(AlgOrExpState :: alg() | export_state() ) -> state()")
               "rand:normal_s/1"
               ("http://www.erlang.org/doc/man/rand.html#normal_s-1" "normal_s(State0 :: state() ) -> {float(), NewS :: state() }")
               "rand:normal/0"
               ("http://www.erlang.org/doc/man/rand.html#normal-0" "normal() -> float()")
               "rand:export_seed_s/1"
               ("http://www.erlang.org/doc/man/rand.html#export_seed_s-1" "export_seed_s(X1 :: state() ) -> export_state()")
               "rand:export_seed/0"
               ("http://www.erlang.org/doc/man/rand.html#export_seed-0" "export_seed() -> undefined | export_state()")
               "rand:export_state()"
               ("http://www.erlang.org/doc/man/rand.html#type-export_state" "export_state()")
               "rand:state()"
               ("http://www.erlang.org/doc/man/rand.html#type-state" "state()")
               "rand:alg()"
               ("http://www.erlang.org/doc/man/rand.html#type-alg" "alg() = exs64 | exsplus | exs1024")
               "random:uniform_s/2"
               ("http://www.erlang.org/doc/man/random.html#uniform_s-2" "uniform_s(N, State0) -> {integer(), State1}")
               "random:uniform_s/1"
               ("http://www.erlang.org/doc/man/random.html#uniform_s-1" "uniform_s(State0) -> {float(), State1}")
               "random:uniform/1"
               ("http://www.erlang.org/doc/man/random.html#uniform-1" "uniform(N) -> integer() >= 1")
               "random:uniform/0"
               ("http://www.erlang.org/doc/man/random.html#uniform-0" "uniform() -> float()")
               "random:seed0/0"
               ("http://www.erlang.org/doc/man/random.html#seed0-0" "seed0() -> ran()")
               "random:seed/3"
               ("http://www.erlang.org/doc/man/random.html#seed-3" "seed(A1, A2, A3) -> undefined | ran()")
               "random:seed/1"
               ("http://www.erlang.org/doc/man/random.html#seed-1" "seed(SValue) -> undefined | ran()")
               "random:seed/0"
               ("http://www.erlang.org/doc/man/random.html#seed-0" "seed() -> ran()")
               "random:ran()"
               ("http://www.erlang.org/doc/man/random.html#type-ran" "ran() = {integer(), integer(), integer()}")
               "rb:stop_log/0"
               ("http://www.erlang.org/doc/man/rb.html#stop_log-0" "stop_log()")
               "rb:stop/0"
               ("http://www.erlang.org/doc/man/rb.html#stop-0" "stop()")
               "rb:start_log/1"
               ("http://www.erlang.org/doc/man/rb.html#start_log-1" "start_log(FileName)")
               "rb:start/1"
               ("http://www.erlang.org/doc/man/rb.html#start-1" "start(Options)")
               "rb:start/0"
               ("http://www.erlang.org/doc/man/rb.html#start-0" "start()")
               "rb:show/1"
               ("http://www.erlang.org/doc/man/rb.html#show-1" "show(Report)")
               "rb:show/0"
               ("http://www.erlang.org/doc/man/rb.html#show-0" "show()")
               "rb:rescan/1"
               ("http://www.erlang.org/doc/man/rb.html#rescan-1" "rescan(Options)")
               "rb:rescan/0"
               ("http://www.erlang.org/doc/man/rb.html#rescan-0" "rescan()")
               "rb:log_list/1"
               ("http://www.erlang.org/doc/man/rb.html#log_list-1" "log_list(Type)")
               "rb:log_list/0"
               ("http://www.erlang.org/doc/man/rb.html#log_list-0" "log_list()")
               "rb:list/1"
               ("http://www.erlang.org/doc/man/rb.html#list-1" "list(Type)")
               "rb:list/0"
               ("http://www.erlang.org/doc/man/rb.html#list-0" "list()")
               "rb:help/0"
               ("http://www.erlang.org/doc/man/rb.html#help-0" "help()")
               "rb:h/0"
               ("http://www.erlang.org/doc/man/rb.html#h-0" "h()")
               "rb:grep/1"
               ("http://www.erlang.org/doc/man/rb.html#grep-1" "grep(RegExp)")
               "rb:filter/2"
               ("http://www.erlang.org/doc/man/rb.html#filter-2" "filter(Filters, Dates)")
               "rb:filter/1"
               ("http://www.erlang.org/doc/man/rb.html#filter-1" "filter(Filters)")
               "re:split/3"
               ("http://www.erlang.org/doc/man/re.html#split-3" "split(Subject, RE, Options) -> SplitList")
               "re:split/2"
               ("http://www.erlang.org/doc/man/re.html#split-2" "split(Subject, RE) -> SplitList")
               "re:run/3"
               ("http://www.erlang.org/doc/man/re.html#run-3" "run(Subject, RE, Options) -> {match, Captured} | match | nomatch | {error, ErrType}")
               "re:run/2"
               ("http://www.erlang.org/doc/man/re.html#run-2" "run(Subject, RE) -> {match, Captured} | nomatch")
               "re:replace/4"
               ("http://www.erlang.org/doc/man/re.html#replace-4" "replace(Subject, RE, Replacement, Options) -> iodata() | unicode:charlist()")
               "re:replace/3"
               ("http://www.erlang.org/doc/man/re.html#replace-3" "replace(Subject, RE, Replacement) -> iodata() | unicode:charlist()")
               "re:inspect/2"
               ("http://www.erlang.org/doc/man/re.html#inspect-2" "inspect(MP, Item) -> {namelist, [binary()]}")
               "re:compile/2"
               ("http://www.erlang.org/doc/man/re.html#compile-2" "compile(Regexp, Options) -> {ok, MP} | {error, ErrSpec}")
               "re:compile/1"
               ("http://www.erlang.org/doc/man/re.html#compile-1" "compile(Regexp) -> {ok, MP} | {error, ErrSpec}")
               "re:compile_option()"
               ("http://www.erlang.org/doc/man/re.html#type-compile_option" "compile_option() = unicode | anchored | caseless | dollar_endonly | dotall | extended | firstline | multiline | no_auto_capture | dupnames | ungreedy | {newline, nl_spec() } | bsr_anycrlf | bsr_unicode | no_start_optimize | ucp | never_utf")
               "re:nl_spec()"
               ("http://www.erlang.org/doc/man/re.html#type-nl_spec" "nl_spec() = cr | crlf | lf | anycrlf | any")
               "re:mp()"
               ("http://www.erlang.org/doc/man/re.html#type-mp" "mp() = {re_pattern, term(), term(), term(), term()}")
               "registry:ei_reg_tabstat()"
               ("http://www.erlang.org/doc/man/registry.html#ei_reg_tabstat" "int ei_reg_tabstat(reg,obuf)")
               "registry:ei_reg_stat()"
               ("http://www.erlang.org/doc/man/registry.html#ei_reg_stat" "int ei_reg_stat(reg,key,obuf)")
               "registry:ei_reg_setval()"
               ("http://www.erlang.org/doc/man/registry.html#ei_reg_setval" "int ei_reg_setval(reg,key,flags,v,...)")
               "registry:ei_reg_setsval()"
               ("http://www.erlang.org/doc/man/registry.html#ei_reg_setsval" "int ei_reg_setsval(reg,key,s)")
               "registry:ei_reg_setpval()"
               ("http://www.erlang.org/doc/man/registry.html#ei_reg_setpval" "int ei_reg_setpval(reg,key,p,size)")
               "registry:ei_reg_setival()"
               ("http://www.erlang.org/doc/man/registry.html#ei_reg_setival" "int ei_reg_setival(reg,key,i)")
               "registry:ei_reg_setfval()"
               ("http://www.erlang.org/doc/man/registry.html#ei_reg_setfval" "int ei_reg_setfval(reg,key,f)")
               "registry:ei_reg_restore()"
               ("http://www.erlang.org/doc/man/registry.html#ei_reg_restore" "int ei_reg_restore(fd,reg,mntab)")
               "registry:ei_reg_resize()"
               ("http://www.erlang.org/doc/man/registry.html#ei_reg_resize" "int ei_reg_resize(reg,newsize)")
               "registry:ei_reg_purge()"
               ("http://www.erlang.org/doc/man/registry.html#ei_reg_purge" "int ei_reg_purge(reg)")
               "registry:ei_reg_open()"
               ("http://www.erlang.org/doc/man/registry.html#ei_reg_open" "ei_reg *ei_reg_open(size)")
               "registry:ei_reg_markdirty()"
               ("http://www.erlang.org/doc/man/registry.html#ei_reg_markdirty" "int ei_reg_markdirty(reg,key)")
               "registry:ei_reg_getval()"
               ("http://www.erlang.org/doc/man/registry.html#ei_reg_getval" "int ei_reg_getval(reg,key,flags,v,...)")
               "registry:ei_reg_getsval()"
               ("http://www.erlang.org/doc/man/registry.html#ei_reg_getsval" "const char *ei_reg_getsval(reg,key)")
               "registry:ei_reg_getpval()"
               ("http://www.erlang.org/doc/man/registry.html#ei_reg_getpval" "const void *ei_reg_getpval(reg,key,size)")
               "registry:ei_reg_getival()"
               ("http://www.erlang.org/doc/man/registry.html#ei_reg_getival" "int ei_reg_getival(reg,key)")
               "registry:ei_reg_getfval()"
               ("http://www.erlang.org/doc/man/registry.html#ei_reg_getfval" "double ei_reg_getfval(reg,key)")
               "registry:ei_reg_dump()"
               ("http://www.erlang.org/doc/man/registry.html#ei_reg_dump" "int ei_reg_dump(fd,reg,mntab,flags)")
               "registry:ei_reg_delete()"
               ("http://www.erlang.org/doc/man/registry.html#ei_reg_delete" "int ei_reg_delete(reg,key)")
               "registry:ei_reg_close()"
               ("http://www.erlang.org/doc/man/registry.html#ei_reg_close" "int ei_reg_close(reg)")
               "release_handler:eval_appup_script/4"
               ("http://www.erlang.org/doc/man/release_handler.html#eval_appup_script-4" "eval_appup_script(App, ToVsn, ToDir, Script) -> {ok, Unpurged} | restart_emulator | {error, Reason}")
               "release_handler:downgrade_script/3"
               ("http://www.erlang.org/doc/man/release_handler.html#downgrade_script-3" "downgrade_script(App, OldVsn, Dir) -> {ok, Script}")
               "release_handler:upgrade_script/2"
               ("http://www.erlang.org/doc/man/release_handler.html#upgrade_script-2" "upgrade_script(App, Dir) -> {ok, NewVsn, Script}")
               "release_handler:downgrade_app/3"
               ("http://www.erlang.org/doc/man/release_handler.html#downgrade_app-3" "downgrade_app(App, OldVsn, Dir) -> {ok, Unpurged} | restart_emulator | {error, Reason}")
               "release_handler:downgrade_app/2"
               ("http://www.erlang.org/doc/man/release_handler.html#downgrade_app-2" "downgrade_app(App, Dir) ->")
               "release_handler:upgrade_app/2"
               ("http://www.erlang.org/doc/man/release_handler.html#upgrade_app-2" "upgrade_app(App, Dir) -> {ok, Unpurged} | restart_emulator | {error, Reason}")
               "release_handler:which_releases/1"
               ("http://www.erlang.org/doc/man/release_handler.html#which_releases-1" "which_releases(Status) -> [{Name, Vsn, Apps, Status}]")
               "release_handler:which_releases/0"
               ("http://www.erlang.org/doc/man/release_handler.html#which_releases-0" "which_releases() -> [{Name, Vsn, Apps, Status}]")
               "release_handler:unpack_release/1"
               ("http://www.erlang.org/doc/man/release_handler.html#unpack_release-1" "unpack_release(Name) -> {ok, Vsn} | {error, Reason}")
               "release_handler:set_unpacked/2"
               ("http://www.erlang.org/doc/man/release_handler.html#set_unpacked-2" "set_unpacked(RelFile, AppDirs) -> {ok, Vsn} | {error, Reason}")
               "release_handler:set_removed/1"
               ("http://www.erlang.org/doc/man/release_handler.html#set_removed-1" "set_removed(Vsn) -> ok | {error, Reason}")
               "release_handler:reboot_old_release/1"
               ("http://www.erlang.org/doc/man/release_handler.html#reboot_old_release-1" "reboot_old_release(Vsn) -> ok | {error, Reason}")
               "release_handler:remove_release/1"
               ("http://www.erlang.org/doc/man/release_handler.html#remove_release-1" "remove_release(Vsn) -> ok | {error, Reason}")
               "release_handler:make_permanent/1"
               ("http://www.erlang.org/doc/man/release_handler.html#make_permanent-1" "make_permanent(Vsn) -> ok | {error, Reason}")
               "release_handler:install_release/2"
               ("http://www.erlang.org/doc/man/release_handler.html#install_release-2" "install_release(Vsn, [Opt]) -> {ok, OtherVsn, Descr} | {continue_after_restart, OtherVsn, Descr} | {error, Reason}")
               "release_handler:install_release/1"
               ("http://www.erlang.org/doc/man/release_handler.html#install_release-1" "install_release(Vsn) -> {ok, OtherVsn, Descr} | {error, Reason}")
               "release_handler:install_file/2"
               ("http://www.erlang.org/doc/man/release_handler.html#install_file-2" "install_file(Vsn, File) -> ok | {error, Reason}")
               "release_handler:create_RELEASES/4"
               ("http://www.erlang.org/doc/man/release_handler.html#create_RELEASES-4" "create_RELEASES(Root, RelDir, RelFile, AppDirs) -> ok | {error, Reason}")
               "release_handler:check_install_release/2"
               ("http://www.erlang.org/doc/man/release_handler.html#check_install_release-2" "check_install_release(Vsn,Opts) -> {ok, OtherVsn, Descr} | {error, Reason}")
               "release_handler:check_install_release/1"
               ("http://www.erlang.org/doc/man/release_handler.html#check_install_release-1" "check_install_release(Vsn) -> {ok, OtherVsn, Descr} | {error, Reason}")
               "reltool:stop/1"
               ("http://www.erlang.org/doc/man/reltool.html#stop-1" "stop(Pid) -> ok | {error, Reason}")
               "reltool:start_server/1"
               ("http://www.erlang.org/doc/man/reltool.html#start_server-1" "start_server(Options) -> {ok, ServerPid} | {error, Reason}")
               "reltool:start_link/1"
               ("http://www.erlang.org/doc/man/reltool.html#start_link-1" "start_link(Options) -> {ok, WindowPid} | {error, Reason}")
               "reltool:start/1"
               ("http://www.erlang.org/doc/man/reltool.html#start-1" "start(Options) -> {ok, WindowPid} | {error, Reason}")
               "reltool:start/0"
               ("http://www.erlang.org/doc/man/reltool.html#start-0" "start() -> {ok, WindowPid} | {error, Reason}")
               "reltool:install/2"
               ("http://www.erlang.org/doc/man/reltool.html#install-2" "install(RelName, TargetDir) -> ok | {error, Reason}")
               "reltool:get_target_spec/1"
               ("http://www.erlang.org/doc/man/reltool.html#get_target_spec-1" "get_target_spec(Server) -> {ok, TargetSpec} | {error, Reason}")
               "reltool:get_server/1"
               ("http://www.erlang.org/doc/man/reltool.html#get_server-1" "get_server(WindowPid) -> {ok, ServerPid} | {error, Reason}")
               "reltool:get_status/1"
               ("http://www.erlang.org/doc/man/reltool.html#get_status-1" "get_status(Server) -> {ok, [Warning]} | {error, Reason}")
               "reltool:get_script/2"
               ("http://www.erlang.org/doc/man/reltool.html#get_script-2" "get_script(Server, Relname) -> {ok, ScriptFile | {error, Reason}")
               "reltool:get_rel/2"
               ("http://www.erlang.org/doc/man/reltool.html#get_rel-2" "get_rel(Server, Relname) -> {ok, RelFile} | {error, Reason}")
               "reltool:get_config/3"
               ("http://www.erlang.org/doc/man/reltool.html#get_config-3" "get_config(Server, InclDefaults, InclDerived) -> {ok, Config} | {error, Reason}")
               "reltool:get_config/1"
               ("http://www.erlang.org/doc/man/reltool.html#get_config-1" "get_config(Server) -> {ok, Config} | {error, Reason}")
               "reltool:eval_target_spec/3"
               ("http://www.erlang.org/doc/man/reltool.html#eval_target_spec-3" "eval_target_spec(TargetSpec, RootDir, TargetDir) -> ok | {error, Reason}")
               "reltool:create_target/2"
               ("http://www.erlang.org/doc/man/reltool.html#create_target-2" "create_target(Server, TargetDir) -> ok | {error, Reason}")
               "rpc:yield/1"
               ("http://www.erlang.org/doc/man/rpc.html#yield-1" "yield(Key) -> Res | {badrpc, Reason}")
               "rpc:server_call/4"
               ("http://www.erlang.org/doc/man/rpc.html#server_call-4" "server_call(Node, Name, ReplyWrapper, Msg) -> Reply | {error, Reason}")
               "rpc:sbcast/3"
               ("http://www.erlang.org/doc/man/rpc.html#sbcast-3" "sbcast(Nodes, Name, Msg) -> {GoodNodes, BadNodes}")
               "rpc:sbcast/2"
               ("http://www.erlang.org/doc/man/rpc.html#sbcast-2" "sbcast(Name, Msg) -> {GoodNodes, BadNodes}")
               "rpc:pmap/3"
               ("http://www.erlang.org/doc/man/rpc.html#pmap-3" "pmap(FuncSpec, ExtraArgs, List1) -> List2")
               "rpc:pinfo/2"
               ("http://www.erlang.org/doc/man/rpc.html#pinfo-2" "pinfo(Pid, Item) -> {Item, Info} | undefined | []")
               "rpc:pinfo/1"
               ("http://www.erlang.org/doc/man/rpc.html#pinfo-1" "pinfo(Pid) -> [{Item, Info}] | undefined")
               "rpc:parallel_eval/1"
               ("http://www.erlang.org/doc/man/rpc.html#parallel_eval-1" "parallel_eval(FuncCalls) -> ResL")
               "rpc:nb_yield/2"
               ("http://www.erlang.org/doc/man/rpc.html#nb_yield-2" "nb_yield(Key, Timeout) -> {value, Val} | timeout")
               "rpc:nb_yield/1"
               ("http://www.erlang.org/doc/man/rpc.html#nb_yield-1" "nb_yield(Key) -> {value, Val} | timeout")
               "rpc:multicall/5"
               ("http://www.erlang.org/doc/man/rpc.html#multicall-5" "multicall(Nodes, Module, Function, Args, Timeout) -> {ResL, BadNodes}")
               "rpc:multicall/4"
               ("http://www.erlang.org/doc/man/rpc.html#multicall-4" "multicall(Nodes, Module, Function, Args) -> {ResL, BadNodes}")
               "rpc:multicall/3"
               ("http://www.erlang.org/doc/man/rpc.html#multicall-3" "multicall(Module, Function, Args) -> {ResL, BadNodes}")
               "rpc:multi_server_call/3"
               ("http://www.erlang.org/doc/man/rpc.html#multi_server_call-3" "multi_server_call(Nodes, Name, Msg) -> {Replies, BadNodes}")
               "rpc:multi_server_call/2"
               ("http://www.erlang.org/doc/man/rpc.html#multi_server_call-2" "multi_server_call(Name, Msg) -> {Replies, BadNodes}")
               "rpc:eval_everywhere/4"
               ("http://www.erlang.org/doc/man/rpc.html#eval_everywhere-4" "eval_everywhere(Nodes, Module, Function, Args) -> abcast")
               "rpc:eval_everywhere/3"
               ("http://www.erlang.org/doc/man/rpc.html#eval_everywhere-3" "eval_everywhere(Module, Function, Args) -> abcast")
               "rpc:cast/4"
               ("http://www.erlang.org/doc/man/rpc.html#cast-4" "cast(Node, Module, Function, Args) -> true")
               "rpc:call/5"
               ("http://www.erlang.org/doc/man/rpc.html#call-5" "call(Node, Module, Function, Args, Timeout) -> Res | {badrpc, Reason}")
               "rpc:call/4"
               ("http://www.erlang.org/doc/man/rpc.html#call-4" "call(Node, Module, Function, Args) -> Res | {badrpc, Reason}")
               "rpc:block_call/5"
               ("http://www.erlang.org/doc/man/rpc.html#block_call-5" "block_call(Node, Module, Function, Args, Timeout) -> Res | {badrpc, Reason}")
               "rpc:block_call/4"
               ("http://www.erlang.org/doc/man/rpc.html#block_call-4" "block_call(Node, Module, Function, Args) -> Res | {badrpc, Reason}")
               "rpc:async_call/4"
               ("http://www.erlang.org/doc/man/rpc.html#async_call-4" "async_call(Node, Module, Function, Args) -> Key")
               "rpc:abcast/3"
               ("http://www.erlang.org/doc/man/rpc.html#abcast-3" "abcast(Nodes, Name, Msg) -> abcast")
               "rpc:abcast/2"
               ("http://www.erlang.org/doc/man/rpc.html#abcast-2" "abcast(Name, Msg) -> abcast")
               "rpc:key()"
               ("http://www.erlang.org/doc/man/rpc.html#type-key" "key()")
               "seq_trace:get_system_tracer/0"
               ("http://www.erlang.org/doc/man/seq_trace.html#get_system_tracer-0" "get_system_tracer() -> Tracer")
               "seq_trace:set_system_tracer/1"
               ("http://www.erlang.org/doc/man/seq_trace.html#set_system_tracer-1" "set_system_tracer(Tracer) -> OldTracer")
               "seq_trace:reset_trace/0"
               ("http://www.erlang.org/doc/man/seq_trace.html#reset_trace-0" "reset_trace() -> true")
               "seq_trace:print/2"
               ("http://www.erlang.org/doc/man/seq_trace.html#print-2" "print(Label, TraceInfo) -> ok")
               "seq_trace:print/1"
               ("http://www.erlang.org/doc/man/seq_trace.html#print-1" "print(TraceInfo) -> ok")
               "seq_trace:get_token/1"
               ("http://www.erlang.org/doc/man/seq_trace.html#get_token-1" "get_token(Component) -> {Component, Val}")
               "seq_trace:get_token/0"
               ("http://www.erlang.org/doc/man/seq_trace.html#get_token-0" "get_token() -> [] | token()")
               "seq_trace:set_token/2"
               ("http://www.erlang.org/doc/man/seq_trace.html#set_token-2" "set_token(Component, Val) -> {Component, OldVal}")
               "seq_trace:set_token/1"
               ("http://www.erlang.org/doc/man/seq_trace.html#set_token-1" "set_token(Token) -> PreviousToken | ok")
               "seq_trace:token()"
               ("http://www.erlang.org/doc/man/seq_trace.html#type-token" "token() = {integer(), boolean(), term(), term(), term()}")
               "sets:union/2"
               ("http://www.erlang.org/doc/man/sets.html#union-2" "union(Set1, Set2) -> Set3")
               "sets:union/1"
               ("http://www.erlang.org/doc/man/sets.html#union-1" "union(SetList) -> Set")
               "sets:to_list/1"
               ("http://www.erlang.org/doc/man/sets.html#to_list-1" "to_list(Set) -> List")
               "sets:subtract/2"
               ("http://www.erlang.org/doc/man/sets.html#subtract-2" "subtract(Set1, Set2) -> Set3")
               "sets:size/1"
               ("http://www.erlang.org/doc/man/sets.html#size-1" "size(Set) -> integer() >= 0")
               "sets:new/0"
               ("http://www.erlang.org/doc/man/sets.html#new-0" "new() -> set()")
               "sets:is_subset/2"
               ("http://www.erlang.org/doc/man/sets.html#is_subset-2" "is_subset(Set1, Set2) -> boolean()")
               "sets:is_set/1"
               ("http://www.erlang.org/doc/man/sets.html#is_set-1" "is_set(Set) -> boolean()")
               "sets:is_element/2"
               ("http://www.erlang.org/doc/man/sets.html#is_element-2" "is_element(Element, Set) -> boolean()")
               "sets:is_disjoint/2"
               ("http://www.erlang.org/doc/man/sets.html#is_disjoint-2" "is_disjoint(Set1, Set2) -> boolean()")
               "sets:intersection/2"
               ("http://www.erlang.org/doc/man/sets.html#intersection-2" "intersection(Set1, Set2) -> Set3")
               "sets:intersection/1"
               ("http://www.erlang.org/doc/man/sets.html#intersection-1" "intersection(SetList) -> Set")
               "sets:from_list/1"
               ("http://www.erlang.org/doc/man/sets.html#from_list-1" "from_list(List) -> Set")
               "sets:fold/3"
               ("http://www.erlang.org/doc/man/sets.html#fold-3" "fold(Function, Acc0, Set) -> Acc1")
               "sets:filter/2"
               ("http://www.erlang.org/doc/man/sets.html#filter-2" "filter(Pred, Set1) -> Set2")
               "sets:del_element/2"
               ("http://www.erlang.org/doc/man/sets.html#del_element-2" "del_element(Element, Set1) -> Set2")
               "sets:add_element/2"
               ("http://www.erlang.org/doc/man/sets.html#add_element-2" "add_element(Element, Set1) -> Set2")
               "sets:set()"
               ("http://www.erlang.org/doc/man/sets.html#type-set" "set() = set (term())")
               "sets:set(Element)"
               ("http://www.erlang.org/doc/man/sets.html#type-set" "set(Element)")
               "shell:strings/1"
               ("http://www.erlang.org/doc/man/shell.html#strings-1" "strings(Strings) -> Strings2")
               "shell:stop_restricted/0"
               ("http://www.erlang.org/doc/man/shell.html#stop_restricted-0" "stop_restricted() -> no_return()")
               "shell:start_restricted/1"
               ("http://www.erlang.org/doc/man/shell.html#start_restricted-1" "start_restricted(Module) -> {error, Reason}")
               "shell:results/1"
               ("http://www.erlang.org/doc/man/shell.html#results-1" "results(N) -> integer() >= 0")
               "shell:prompt_func/1"
               ("http://www.erlang.org/doc/man/shell.html#prompt_func-1" "prompt_func(PromptFunc) -> PromptFunc2")
               "shell:history/1"
               ("http://www.erlang.org/doc/man/shell.html#history-1" "history(N) -> integer() >= 0")
               "shell:catch_exception/1"
               ("http://www.erlang.org/doc/man/shell.html#catch_exception-1" "catch_exception(Bool) -> boolean()")
               "slave:stop/1"
               ("http://www.erlang.org/doc/man/slave.html#stop-1" "stop(Node) -> ok")
               "slave:start_link/3"
               ("http://www.erlang.org/doc/man/slave.html#start_link-3" "start_link(Host, Name, Args) -> {ok, Node} | {error, Reason}")
               "slave:start_link/2"
               ("http://www.erlang.org/doc/man/slave.html#start_link-2" "start_link(Host, Name) -> {ok, Node} | {error, Reason}")
               "slave:start_link/1"
               ("http://www.erlang.org/doc/man/slave.html#start_link-1" "start_link(Host) -> {ok, Node} | {error, Reason}")
               "slave:start/3"
               ("http://www.erlang.org/doc/man/slave.html#start-3" "start(Host, Name, Args) -> {ok, Node} | {error, Reason}")
               "slave:start/2"
               ("http://www.erlang.org/doc/man/slave.html#start-2" "start(Host, Name) -> {ok, Node} | {error, Reason}")
               "slave:start/1"
               ("http://www.erlang.org/doc/man/slave.html#start-1" "start(Host) -> {ok, Node} | {error, Reason}")
               "slave:relay/1"
               ("http://www.erlang.org/doc/man/slave.html#relay-1" "relay(Pid) -> no_return()")
               "slave:pseudo/2"
               ("http://www.erlang.org/doc/man/slave.html#pseudo-2" "pseudo(Master, ServerList) -> ok")
               "slave:pseudo/1"
               ("http://www.erlang.org/doc/man/slave.html#pseudo-1" "pseudo([Master | ServerList]) -> ok")
               "snmp:set_trace/2"
               ("http://www.erlang.org/doc/man/snmp.html#set_trace-2" "set_trace(Targets, Opts) -> void()")
               "snmp:reset_trace/1"
               ("http://www.erlang.org/doc/man/snmp.html#reset_trace-1" "reset_trace(Targets) -> void()")
               "snmp:set_trace/1"
               ("http://www.erlang.org/doc/man/snmp.html#set_trace-1" "set_trace(Targets) -> void()")
               "snmp:disable_trace/0"
               ("http://www.erlang.org/doc/man/snmp.html#disable_trace-0" "disable_trace() -> void()")
               "snmp:enable_trace/0"
               ("http://www.erlang.org/doc/man/snmp.html#enable_trace-0" "enable_trace() -> void()")
               "snmp:print_versions/2"
               ("http://www.erlang.org/doc/man/snmp.html#print_versions-2" "print_versions(Prefix, VersionInfo) -> void()")
               "snmp:print_versions/1"
               ("http://www.erlang.org/doc/man/snmp.html#print_versions-1" "print_versions(VersionInfo) -> void()")
               "snmp:versions2/0"
               ("http://www.erlang.org/doc/man/snmp.html#versions2-0" "versions2() -> {ok, Info} | {error, Reason}")
               "snmp:versions1/0"
               ("http://www.erlang.org/doc/man/snmp.html#versions1-0" "versions1() -> {ok, Info} | {error, Reason}")
               "snmp:print_version_info/1"
               ("http://www.erlang.org/doc/man/snmp.html#print_version_info-1" "print_version_info(Prefix) -> void()")
               "snmp:print_version_info/0"
               ("http://www.erlang.org/doc/man/snmp.html#print_version_info-0" "print_version_info() -> void()")
               "snmp:change_log_size/2"
               ("http://www.erlang.org/doc/man/snmp.html#change_log_size-2" "change_log_size(LogName, NewSize) -> ok | {error, Reason}")
               "snmp:log_to_io/7"
               ("http://www.erlang.org/doc/man/snmp.html#log_to_io-7" "log_to_io(LogDir, Mibs, LogName, LogFile, Start, Stop, Block) -> ok | {error, Reason}")
               "snmp:log_to_io/6"
               ("http://www.erlang.org/doc/man/snmp.html#log_to_io-6" "log_to_io(LogDir, Mibs, LogName, LogFile, Start, Block | Stop) -> ok | {error, Reason}")
               "snmp:log_to_io/5"
               ("http://www.erlang.org/doc/man/snmp.html#log_to_io-5" "log_to_io(LogDir, Mibs, LogName, LogFile, Block | Start) ->  ok | {error, Reason}")
               "snmp:log_to_io/4"
               ("http://www.erlang.org/doc/man/snmp.html#log_to_io-4" "log_to_io(LogDir, Mibs, LogName, LogFile) ->  ok | {error, Reason}")
               "snmp:log_to_txt/8"
               ("http://www.erlang.org/doc/man/snmp.html#log_to_txt-8" "log_to_txt(LogDir, Mibs, OutFile, LogName, LogFile, Start, Stop, Block) -> ok | {error, Reason}")
               "snmp:log_to_txt/7"
               ("http://www.erlang.org/doc/man/snmp.html#log_to_txt-7" "log_to_txt(LogDir, Mibs, OutFile, LogName, LogFile, Start, Block | Stop) -> ok | {error, Reason}")
               "snmp:log_to_txt/6"
               ("http://www.erlang.org/doc/man/snmp.html#log_to_txt-6" "log_to_txt(LogDir, Mibs, OutFile, LogName, LogFile, Block | Start) ->  ok | {error, Reason}")
               "snmp:log_to_txt/5"
               ("http://www.erlang.org/doc/man/snmp.html#log_to_txt-5" "log_to_txt(LogDir, Mibs, OutFile, LogName, LogFile) ->  ok | {error, Reason}")
               "snmp:read_mib/1"
               ("http://www.erlang.org/doc/man/snmp.html#read_mib-1" "read_mib(FileName) -> {ok, mib()} | {error, Reason}")
               "snmp:bits_to_octet_string/1"
               ("http://www.erlang.org/doc/man/snmp.html#bits_to_octet_string-1" "bits_to_octet_string(B) -> Val")
               "snmp:octet_string_to_bits/1"
               ("http://www.erlang.org/doc/man/snmp.html#octet_string_to_bits-1" "octet_string_to_bits(S) -> Val")
               "snmp:passwd2localized_key/3"
               ("http://www.erlang.org/doc/man/snmp.html#passwd2localized_key-3" "passwd2localized_key(Alg, Passwd, EngineID) -> Key")
               "snmp:validate_date_and_time/2"
               ("http://www.erlang.org/doc/man/snmp.html#validate_date_and_time-2" "validate_date_and_time(DateAndTime, Validate) -> bool()")
               "snmp:validate_date_and_time/1"
               ("http://www.erlang.org/doc/man/snmp.html#validate_date_and_time-1" "validate_date_and_time(DateAndTime) -> bool()")
               "snmp:universal_time_to_date_and_time/1"
               ("http://www.erlang.org/doc/man/snmp.html#universal_time_to_date_and_time-1" "universal_time_to_date_and_time(UTC) -> DateAndTime")
               "snmp:local_time_to_date_and_time_dst/1"
               ("http://www.erlang.org/doc/man/snmp.html#local_time_to_date_and_time_dst-1" "local_time_to_date_and_time_dst(Local) -> [DateAndTime]")
               "snmp:date_and_time_to_string2/1"
               ("http://www.erlang.org/doc/man/snmp.html#date_and_time_to_string2-1" "date_and_time_to_string2(DateAndTime) -> string()")
               "snmp:date_and_time_to_string/2"
               ("http://www.erlang.org/doc/man/snmp.html#date_and_time_to_string-2" "date_and_time_to_string(DateAndTime, Validate) -> string()")
               "snmp:date_and_time_to_string/1"
               ("http://www.erlang.org/doc/man/snmp.html#date_and_time_to_string-1" "date_and_time_to_string(DateAndTime) -> string()")
               "snmp:date_and_time_to_universal_time_dst/1"
               ("http://www.erlang.org/doc/man/snmp.html#date_and_time_to_universal_time_dst-1" "date_and_time_to_universal_time_dst(DateAndTime) -> [utc()]")
               "snmp:date_and_time/0"
               ("http://www.erlang.org/doc/man/snmp.html#date_and_time-0" "date_and_time() -> DateAndTime")
               "snmp:start_manager/1"
               ("http://www.erlang.org/doc/man/snmp.html#start_manager-1" "start_manager(Type) -> ok | {error, Reason}")
               "snmp:start_manager/0"
               ("http://www.erlang.org/doc/man/snmp.html#start_manager-0" "start_manager() -> ok | {error, Reason}")
               "snmp:start_agent/1"
               ("http://www.erlang.org/doc/man/snmp.html#start_agent-1" "start_agent(Type) -> ok | {error, Reason}")
               "snmp:start_agent/0"
               ("http://www.erlang.org/doc/man/snmp.html#start_agent-0" "start_agent() -> ok | {error, Reason}")
               "snmp:start/1"
               ("http://www.erlang.org/doc/man/snmp.html#start-1" "start(Type) -> ok | {error, Reason}")
               "snmp:start/0"
               ("http://www.erlang.org/doc/man/snmp.html#start-0" "start() -> ok | {error, Reason}")
               "snmp:config/0"
               ("http://www.erlang.org/doc/man/snmp.html#config-0" "config() -> ok | {error, Reason}")
               "snmp_community_mib:delete_community/1"
               ("http://www.erlang.org/doc/man/snmp_community_mib.html#delete_community-1" "delete_community(Key) -> Ret")
               "snmp_community_mib:add_community/6"
               ("http://www.erlang.org/doc/man/snmp_community_mib.html#add_community-6" "add_community(Idx, CommName, SecName, EngineId, CtxName, TransportTag) -> Ret")
               "snmp_community_mib:add_community/5"
               ("http://www.erlang.org/doc/man/snmp_community_mib.html#add_community-5" "add_community(Idx, CommName, SecName, CtxName, TransportTag) -> Ret")
               "snmp_community_mib:reconfigure/1"
               ("http://www.erlang.org/doc/man/snmp_community_mib.html#reconfigure-1" "reconfigure(ConfDir) -> void()")
               "snmp_community_mib:configure/1"
               ("http://www.erlang.org/doc/man/snmp_community_mib.html#configure-1" "configure(ConfDir) -> void()")
               "snmp_framework_mib:delete_context/1"
               ("http://www.erlang.org/doc/man/snmp_framework_mib.html#delete_context-1" "delete_context(Key) -> Ret")
               "snmp_framework_mib:add_context/1"
               ("http://www.erlang.org/doc/man/snmp_framework_mib.html#add_context-1" "add_context(Ctx) -> Ret")
               "snmp_framework_mib:init/0"
               ("http://www.erlang.org/doc/man/snmp_framework_mib.html#init-0" "init() -> void()")
               "snmp_framework_mib:configure/1"
               ("http://www.erlang.org/doc/man/snmp_framework_mib.html#configure-1" "configure(ConfDir) -> void()")
               "snmp_generic:variable_set/2"
               ("http://www.erlang.org/doc/man/snmp_generic.html#variable_set-2" "variable_set(NameDb, NewVal) -> true | false")
               "snmp_generic:variable_get/1"
               ("http://www.erlang.org/doc/man/snmp_generic.html#variable_get-1" "variable_get(NameDb) -> {value, Value} | undefined")
               "snmp_generic:variable_func/3"
               ("http://www.erlang.org/doc/man/snmp_generic.html#variable_func-3" "variable_func(Op2, Val, NameDb) -> Ret")
               "snmp_generic:variable_func/2"
               ("http://www.erlang.org/doc/man/snmp_generic.html#variable_func-2" "variable_func(Op1, NameDb)")
               "snmp_generic:table_set_elements/3"
               ("http://www.erlang.org/doc/man/snmp_generic.html#table_set_elements-3" "table_set_elements(NameDb, RowIndex, Cols) -> bool()")
               "snmp_generic:table_row_exists/2"
               ("http://www.erlang.org/doc/man/snmp_generic.html#table_row_exists-2" "table_row_exists(NameDb, RowIndex) -> bool()")
               "snmp_generic:table_next/2"
               ("http://www.erlang.org/doc/man/snmp_generic.html#table_next-2" "table_next(NameDb, RestOid) -> RowIndex | endOfTable")
               "snmp_generic:table_get_elements/3"
               ("http://www.erlang.org/doc/man/snmp_generic.html#table_get_elements-3" "table_get_elements(NameDb, RowIndex, Cols) -> Values")
               "snmp_generic:table_func/4"
               ("http://www.erlang.org/doc/man/snmp_generic.html#table_func-4" "table_func(Op2, RowIndex, Cols, NameDb) -> Ret")
               "snmp_generic:table_func/2"
               ("http://www.erlang.org/doc/man/snmp_generic.html#table_func-2" "table_func(Op1, NameDb)")
               "snmp_generic:get_table_info/2"
               ("http://www.erlang.org/doc/man/snmp_generic.html#get_table_info-2" "get_table_info(Name, Item) -> table_info_result()")
               "snmp_generic:get_index_types/1"
               ("http://www.erlang.org/doc/man/snmp_generic.html#get_index_types-1" "get_index_types(Name)")
               "snmp_generic:get_status_col/2"
               ("http://www.erlang.org/doc/man/snmp_generic.html#get_status_col-2" "get_status_col(Name, Cols)")
               "snmp_notification_mib:delete_notify/1"
               ("http://www.erlang.org/doc/man/snmp_notification_mib.html#delete_notify-1" "delete_notify(Key) -> Ret")
               "snmp_notification_mib:add_notify/3"
               ("http://www.erlang.org/doc/man/snmp_notification_mib.html#add_notify-3" "add_notify(Name, Tag, Type) -> Ret")
               "snmp_notification_mib:reconfigure/1"
               ("http://www.erlang.org/doc/man/snmp_notification_mib.html#reconfigure-1" "reconfigure(ConfDir) -> void()")
               "snmp_notification_mib:configure/1"
               ("http://www.erlang.org/doc/man/snmp_notification_mib.html#configure-1" "configure(ConfDir) -> void()")
               "snmp_pdus:enc_usm_security_parameters/1"
               ("http://www.erlang.org/doc/man/snmp_pdus.html#enc_usm_security_parameters-1" "enc_usm_security_parameters(UsmSecParams) -> [byte()]")
               "snmp_pdus:enc_scoped_pdu/1"
               ("http://www.erlang.org/doc/man/snmp_pdus.html#enc_scoped_pdu-1" "enc_scoped_pdu(ScopedPdu) -> [byte()]")
               "snmp_pdus:enc_pdu/1"
               ("http://www.erlang.org/doc/man/snmp_pdus.html#enc_pdu-1" "enc_pdu(Pd) -> [byte()]")
               "snmp_pdus:enc_message_only/1"
               ("http://www.erlang.org/doc/man/snmp_pdus.html#enc_message_only-1" "enc_message_only(Message) -> [byte()]")
               "snmp_pdus:enc_message/1"
               ("http://www.erlang.org/doc/man/snmp_pdus.html#enc_message-1" "enc_message(Message) -> [byte()]")
               "snmp_pdus:enc_encrypted_scoped_pdu/1"
               ("http://www.erlang.org/doc/man/snmp_pdus.html#enc_encrypted_scoped_pdu-1" "enc_encrypted_scoped_pdu(EncryptedScopedPdu) -> [byte()]")
               "snmp_pdus:dec_usm_security_parameters/1"
               ("http://www.erlang.org/doc/man/snmp_pdus.html#dec_usm_security_parameters-1" "dec_usm_security_parameters([byte()]) -> UsmSecParams")
               "snmp_pdus:dec_scoped_pdu_data/1"
               ("http://www.erlang.org/doc/man/snmp_pdus.html#dec_scoped_pdu_data-1" "dec_scoped_pdu_data([byte()]) -> ScopedPduData")
               "snmp_pdus:dec_scoped_pdu/1"
               ("http://www.erlang.org/doc/man/snmp_pdus.html#dec_scoped_pdu-1" "dec_scoped_pdu([byte()]) -> ScopedPdu")
               "snmp_pdus:dec_pdu/1"
               ("http://www.erlang.org/doc/man/snmp_pdus.html#dec_pdu-1" "dec_pdu([byte()]) -> Pdu")
               "snmp_pdus:dec_message_only/1"
               ("http://www.erlang.org/doc/man/snmp_pdus.html#dec_message_only-1" "dec_message_only([byte()]) -> Message")
               "snmp_pdus:dec_message/1"
               ("http://www.erlang.org/doc/man/snmp_pdus.html#dec_message-1" "dec_message([byte()]) -> Message")
               "snmp_standard_mib:sys_up_time/0"
               ("http://www.erlang.org/doc/man/snmp_standard_mib.html#sys_up_time-0" "sys_up_time() -> Time")
               "snmp_standard_mib:reset/0"
               ("http://www.erlang.org/doc/man/snmp_standard_mib.html#reset-0" "reset() -> void()")
               "snmp_standard_mib:reconfigure/1"
               ("http://www.erlang.org/doc/man/snmp_standard_mib.html#reconfigure-1" "reconfigure(ConfDir) -> void()")
               "snmp_standard_mib:inc/2"
               ("http://www.erlang.org/doc/man/snmp_standard_mib.html#inc-2" "inc(Name, N) -> void()")
               "snmp_standard_mib:inc/1"
               ("http://www.erlang.org/doc/man/snmp_standard_mib.html#inc-1" "inc(Name) -> void()")
               "snmp_standard_mib:configure/1"
               ("http://www.erlang.org/doc/man/snmp_standard_mib.html#configure-1" "configure(ConfDir) -> void()")
               "snmp_target_mib:delete_params/1"
               ("http://www.erlang.org/doc/man/snmp_target_mib.html#delete_params-1" "delete_params(Key) -> Ret")
               "snmp_target_mib:add_params/5"
               ("http://www.erlang.org/doc/man/snmp_target_mib.html#add_params-5" "add_params(Name, MPModel, SecModel, SecName, SecLevel) -> Ret")
               "snmp_target_mib:delete_addr/1"
               ("http://www.erlang.org/doc/man/snmp_target_mib.html#delete_addr-1" "delete_addr(Key) -> Ret")
               "snmp_target_mib:add_addr/10"
               ("http://www.erlang.org/doc/man/snmp_target_mib.html#add_addr-10" "add_addr(Name, Domain, Addr, Timeout, Retry, TagList, Params, EngineId, TMask, MMS) -> Ret")
               "snmp_target_mib:set_target_engine_id/2"
               ("http://www.erlang.org/doc/man/snmp_target_mib.html#set_target_engine_id-2" "set_target_engine_id(TargetAddrName, EngineId) -> boolean()")
               "snmp_target_mib:reconfigure/1"
               ("http://www.erlang.org/doc/man/snmp_target_mib.html#reconfigure-1" "reconfigure(ConfDir) -> void()")
               "snmp_target_mib:configure/1"
               ("http://www.erlang.org/doc/man/snmp_target_mib.html#configure-1" "configure(ConfDir) -> void()")
               "snmp_user_based_sm_mib:delete_user/1"
               ("http://www.erlang.org/doc/man/snmp_user_based_sm_mib.html#delete_user-1" "delete_user(Key) -> Ret")
               "snmp_user_based_sm_mib:add_user/13"
               ("http://www.erlang.org/doc/man/snmp_user_based_sm_mib.html#add_user-13" "add_user(EngineID, Name, SecName, Clone, AuthP, AuthKeyC, OwnAuthKeyC, PrivP, PrivKeyC, OwnPrivKeyC, Public, AuthKey, PrivKey) -> Ret")
               "snmp_user_based_sm_mib:reconfigure/1"
               ("http://www.erlang.org/doc/man/snmp_user_based_sm_mib.html#reconfigure-1" "reconfigure(ConfDir) -> void()")
               "snmp_user_based_sm_mib:configure/1"
               ("http://www.erlang.org/doc/man/snmp_user_based_sm_mib.html#configure-1" "configure(ConfDir) -> void()")
               "snmp_view_based_acm_mib:delete_view_tree_fam/1"
               ("http://www.erlang.org/doc/man/snmp_view_based_acm_mib.html#delete_view_tree_fam-1" "delete_view_tree_fam(Key) -> Ret")
               "snmp_view_based_acm_mib:add_view_tree_fam/4"
               ("http://www.erlang.org/doc/man/snmp_view_based_acm_mib.html#add_view_tree_fam-4" "add_view_tree_fam(ViewIndex, SubTree, Status, Mask) -> Ret")
               "snmp_view_based_acm_mib:delete_access/1"
               ("http://www.erlang.org/doc/man/snmp_view_based_acm_mib.html#delete_access-1" "delete_access(Key) -> Ret")
               "snmp_view_based_acm_mib:add_access/8"
               ("http://www.erlang.org/doc/man/snmp_view_based_acm_mib.html#add_access-8" "add_access(GroupName, Prefix, SecModel, SecLevel, Match, RV, WV, NV) -> Ret")
               "snmp_view_based_acm_mib:delete_sec2group/1"
               ("http://www.erlang.org/doc/man/snmp_view_based_acm_mib.html#delete_sec2group-1" "delete_sec2group(Key) -> Ret")
               "snmp_view_based_acm_mib:add_sec2group/3"
               ("http://www.erlang.org/doc/man/snmp_view_based_acm_mib.html#add_sec2group-3" "add_sec2group(SecModel, SecName, GroupName) -> Ret")
               "snmp_view_based_acm_mib:reconfigure/1"
               ("http://www.erlang.org/doc/man/snmp_view_based_acm_mib.html#reconfigure-1" "reconfigure(ConfDir) -> void()")
               "snmp_view_based_acm_mib:configure/1"
               ("http://www.erlang.org/doc/man/snmp_view_based_acm_mib.html#configure-1" "configure(ConfDir) -> void()")
               "snmpa:verbosity/2"
               ("http://www.erlang.org/doc/man/snmpa.html#verbosity-2" "verbosity(Ref,Verbosity) -> void()")
               "snmpa:print_mib_variables/0"
               ("http://www.erlang.org/doc/man/snmpa.html#print_mib_variables-0" "print_mib_variables() -> void()")
               "snmpa:print_mib_tables/0"
               ("http://www.erlang.org/doc/man/snmpa.html#print_mib_tables-0" "print_mib_tables() -> void()")
               "snmpa:print_mib_info/0"
               ("http://www.erlang.org/doc/man/snmpa.html#print_mib_info-0" "print_mib_info() -> void()")
               "snmpa:restart_set_worker/1"
               ("http://www.erlang.org/doc/man/snmpa.html#restart_set_worker-1" "restart_set_worker(Agent) -> void()")
               "snmpa:restart_set_worker/0"
               ("http://www.erlang.org/doc/man/snmpa.html#restart_set_worker-0" "restart_set_worker() -> void()")
               "snmpa:restart_worker/1"
               ("http://www.erlang.org/doc/man/snmpa.html#restart_worker-1" "restart_worker(Agent) -> void()")
               "snmpa:restart_worker/0"
               ("http://www.erlang.org/doc/man/snmpa.html#restart_worker-0" "restart_worker() -> void()")
               "snmpa:convert_config/1"
               ("http://www.erlang.org/doc/man/snmpa.html#convert_config-1" "convert_config(OldConfig) -> AgentConfig")
               "snmpa:discovery/6"
               ("http://www.erlang.org/doc/man/snmpa.html#discovery-6" "discovery(TargetName, Notification, ContextName, Varbinds, DiscoHandler, ExtraInfo) -> {ok, ManagerEngineID} | {error, Reason}")
               "snmpa:discovery/5"
               ("http://www.erlang.org/doc/man/snmpa.html#discovery-5" "discovery(TargetName, Notification, ContextName, Varbinds, DiscoHandler) -> {ok, ManagerEngineID} | {error, Reason}")
               "snmpa:discovery/4"
               ("http://www.erlang.org/doc/man/snmpa.html#discovery-4" "discovery(TargetName, Notification, ContextName, Varbinds) -> {ok, ManagerEngineID} | {error, Reason}")
               "snmpa:discovery/3"
               ("http://www.erlang.org/doc/man/snmpa.html#discovery-3" "discovery(TargetName, Notification, Varbinds) -> {ok, ManagerEngineID} | {error, Reason}")
               "snmpa:discovery/2"
               ("http://www.erlang.org/doc/man/snmpa.html#discovery-2" "discovery(TargetName, Notification) -> {ok, ManagerEngineID} | {error, Reason}")
               "snmpa:send_notification/7"
               ("http://www.erlang.org/doc/man/snmpa.html#send_notification-7" "send_notification(Agent, Notification, Receiver, NotifyName, ContextName, Varbinds, LocalEngineID) -> void()")
               "snmpa:send_notification/6"
               ("http://www.erlang.org/doc/man/snmpa.html#send_notification-6" "send_notification(Agent, Notification, Receiver, NotifyName, ContextName, Varbinds) -> void()")
               "snmpa:send_notification/5"
               ("http://www.erlang.org/doc/man/snmpa.html#send_notification-5" "send_notification(Agent, Notification, Receiver, NotifyName, Varbinds)")
               "snmpa:send_notification/4"
               ("http://www.erlang.org/doc/man/snmpa.html#send_notification-4" "send_notification(Agent, Notification, Receiver, Varbinds)")
               "snmpa:send_notification/3"
               ("http://www.erlang.org/doc/man/snmpa.html#send_notification-3" "send_notification(Agent, Notification, Receiver)")
               "snmpa:send_notification2/3"
               ("http://www.erlang.org/doc/man/snmpa.html#send_notification2-3" "send_notification2(Agent, Notification, SendOpts) -> void()")
               "snmpa:unregister_subagent/2"
               ("http://www.erlang.org/doc/man/snmpa.html#unregister_subagent-2" "unregister_subagent(Agent, SubagentOidOrPid) -> ok | {ok, SubAgentPid} | {error, Reason}")
               "snmpa:register_subagent/3"
               ("http://www.erlang.org/doc/man/snmpa.html#register_subagent-3" "register_subagent(Agent, SubTreeOid, Subagent) -> ok | {error, Reason}")
               "snmpa:set_request_limit/2"
               ("http://www.erlang.org/doc/man/snmpa.html#set_request_limit-2" "set_request_limit(Agent, NewLimit) -> {ok, OldLimit} | {error, Reason}")
               "snmpa:set_request_limit/1"
               ("http://www.erlang.org/doc/man/snmpa.html#set_request_limit-1" "set_request_limit(NewLimit) -> {ok, OldLimit} | {error, Reason}")
               "snmpa:which_notification_filter/1"
               ("http://www.erlang.org/doc/man/snmpa.html#which_notification_filter-1" "which_notification_filter(Agent) -> Filters")
               "snmpa:which_notification_filter/0"
               ("http://www.erlang.org/doc/man/snmpa.html#which_notification_filter-0" "which_notification_filter() -> Filters")
               "snmpa:unregister_notification_filter/2"
               ("http://www.erlang.org/doc/man/snmpa.html#unregister_notification_filter-2" "unregister_notification_filter(Agent, Id) -> ok | {error, Reason}")
               "snmpa:unregister_notification_filter/1"
               ("http://www.erlang.org/doc/man/snmpa.html#unregister_notification_filter-1" "unregister_notification_filter(Id) -> ok | {error, Reason}")
               "snmpa:register_notification_filter/5"
               ("http://www.erlang.org/doc/man/snmpa.html#register_notification_filter-5" "register_notification_filter(Agent, Id, Mod, Data, Where) -> ok | {error, Reason}")
               "snmpa:register_notification_filter/4"
               ("http://www.erlang.org/doc/man/snmpa.html#register_notification_filter-4" "register_notification_filter(Agent, Id, Mod, Data) -> ok | {error, Reason}")
               "snmpa:register_notification_filter/3"
               ("http://www.erlang.org/doc/man/snmpa.html#register_notification_filter-3" "register_notification_filter(Id, Mod, Data) -> ok | {error, Reason}")
               "snmpa:update_mibs_cache_gclimit/2"
               ("http://www.erlang.org/doc/man/snmpa.html#update_mibs_cache_gclimit-2" "update_mibs_cache_gclimit(Agent, NewGCLimit) -> ok | {error, Reason}")
               "snmpa:update_mibs_cache_gclimit/1"
               ("http://www.erlang.org/doc/man/snmpa.html#update_mibs_cache_gclimit-1" "update_mibs_cache_gclimit(NewGcLimit) -> ok | {error, Reason}")
               "snmpa:update_mibs_cache_age/2"
               ("http://www.erlang.org/doc/man/snmpa.html#update_mibs_cache_age-2" "update_mibs_cache_age(Agent, NewAge) -> ok | {error, Reason}")
               "snmpa:update_mibs_cache_age/1"
               ("http://www.erlang.org/doc/man/snmpa.html#update_mibs_cache_age-1" "update_mibs_cache_age(NewAge) -> ok | {error, Reason}")
               "snmpa:disable_mibs_cache_autogc/1"
               ("http://www.erlang.org/doc/man/snmpa.html#disable_mibs_cache_autogc-1" "disable_mibs_cache_autogc(Agent) -> void()")
               "snmpa:disable_mibs_cache_autogc/0"
               ("http://www.erlang.org/doc/man/snmpa.html#disable_mibs_cache_autogc-0" "disable_mibs_cache_autogc() -> void()")
               "snmpa:enable_mibs_cache_autogc/1"
               ("http://www.erlang.org/doc/man/snmpa.html#enable_mibs_cache_autogc-1" "enable_mibs_cache_autogc(Agent) -> void()")
               "snmpa:enable_mibs_cache_autogc/0"
               ("http://www.erlang.org/doc/man/snmpa.html#enable_mibs_cache_autogc-0" "enable_mibs_cache_autogc() -> void()")
               "snmpa:gc_mibs_cache/3"
               ("http://www.erlang.org/doc/man/snmpa.html#gc_mibs_cache-3" "gc_mibs_cache(Agent, Age, GcLimit) -> {ok, NumElementsGCed} | {error, Reason}")
               "snmpa:gc_mibs_cache/2"
               ("http://www.erlang.org/doc/man/snmpa.html#gc_mibs_cache-2" "gc_mibs_cache(Agent, Age) -> {ok, NumElementsGCed} | {error, Reason}")
               "snmpa:gc_mibs_cache/1"
               ("http://www.erlang.org/doc/man/snmpa.html#gc_mibs_cache-1" "gc_mibs_cache(Agent) -> {ok, NumElementsGCed} | {error, Reason}")
               "snmpa:gc_mibs_cache/0"
               ("http://www.erlang.org/doc/man/snmpa.html#gc_mibs_cache-0" "gc_mibs_cache() -> {ok, NumElementsGCed} | {error, Reason}")
               "snmpa:which_mibs_cache_size/1"
               ("http://www.erlang.org/doc/man/snmpa.html#which_mibs_cache_size-1" "which_mibs_cache_size(Agent) -> void()")
               "snmpa:which_mibs_cache_size/0"
               ("http://www.erlang.org/doc/man/snmpa.html#which_mibs_cache_size-0" "which_mibs_cache_size() -> void()")
               "snmpa:disable_mibs_cache/1"
               ("http://www.erlang.org/doc/man/snmpa.html#disable_mibs_cache-1" "disable_mibs_cache(Agent) -> void()")
               "snmpa:disable_mibs_cache/0"
               ("http://www.erlang.org/doc/man/snmpa.html#disable_mibs_cache-0" "disable_mibs_cache() -> void()")
               "snmpa:enable_mibs_cache/1"
               ("http://www.erlang.org/doc/man/snmpa.html#enable_mibs_cache-1" "enable_mibs_cache(Agent) -> void()")
               "snmpa:enable_mibs_cache/0"
               ("http://www.erlang.org/doc/man/snmpa.html#enable_mibs_cache-0" "enable_mibs_cache() -> void()")
               "snmpa:invalidate_mibs_cache/1"
               ("http://www.erlang.org/doc/man/snmpa.html#invalidate_mibs_cache-1" "invalidate_mibs_cache(Agent) -> void()")
               "snmpa:invalidate_mibs_cache/0"
               ("http://www.erlang.org/doc/man/snmpa.html#invalidate_mibs_cache-0" "invalidate_mibs_cache() -> void()")
               "snmpa:me_of/2"
               ("http://www.erlang.org/doc/man/snmpa.html#me_of-2" "me_of(Agent, Oid) -> {ok, Me} | {error, Reason}")
               "snmpa:me_of/1"
               ("http://www.erlang.org/doc/man/snmpa.html#me_of-1" "me_of(Oid) -> {ok, Me} | {error, Reason}")
               "snmpa:mib_of/2"
               ("http://www.erlang.org/doc/man/snmpa.html#mib_of-2" "mib_of(Agent, Oid) -> {ok, MibName} | {error, Reason}")
               "snmpa:mib_of/1"
               ("http://www.erlang.org/doc/man/snmpa.html#mib_of-1" "mib_of(Oid) -> {ok, MibName} | {error, Reason}")
               "snmpa:set_log_type/2"
               ("http://www.erlang.org/doc/man/snmpa.html#set_log_type-2" "set_log_type(Agent, NewType) -> {ok, OldType} | {error, Reason}")
               "snmpa:set_log_type/1"
               ("http://www.erlang.org/doc/man/snmpa.html#set_log_type-1" "set_log_type(NewType) -> {ok, OldType} | {error, Reason}")
               "snmpa:change_log_size/1"
               ("http://www.erlang.org/doc/man/snmpa.html#change_log_size-1" "change_log_size(NewSize) -> ok | {error, Reason}")
               "snmpa:log_to_io/7"
               ("http://www.erlang.org/doc/man/snmpa.html#log_to_io-7" "log_to_io(LogDir, Mibs, LogName, LogFile, Block, Start, Stop) -> ok | {error, Reason}")
               "snmpa:log_to_io/6"
               ("http://www.erlang.org/doc/man/snmpa.html#log_to_io-6" "log_to_io(LogDir, Mibs, LogName, LogFile, Block, Start) -> ok | {error, Reason}")
               "snmpa:log_to_io/5"
               ("http://www.erlang.org/doc/man/snmpa.html#log_to_io-5" "log_to_io(LogDir, Mibs, LogName, LogFile, Block | Start) -> ok | {error, Reason}")
               "snmpa:log_to_io/4"
               ("http://www.erlang.org/doc/man/snmpa.html#log_to_io-4" "log_to_io(LogDir, Mibs, LogName, Block | LogFile) -> ok | {error, Reason}")
               "snmpa:log_to_io/3"
               ("http://www.erlang.org/doc/man/snmpa.html#log_to_io-3" "log_to_io(LogDir, Mibs, Block | LogName) ->  ok | {error, Reason}")
               "snmpa:log_to_io/2"
               ("http://www.erlang.org/doc/man/snmpa.html#log_to_io-2" "log_to_io(LogDir, Block | Mibs) ->  ok | {error, Reason}")
               "snmpa:log_to_io/1"
               ("http://www.erlang.org/doc/man/snmpa.html#log_to_io-1" "log_to_io(LogDir) ->  ok | {error, Reason}")
               "snmpa:log_to_txt/8"
               ("http://www.erlang.org/doc/man/snmpa.html#log_to_txt-8" "log_to_txt(LogDir, Mibs, OutFile, LogName, LogFile, Block, Start, Stop)  -> ok | {error, Reason}")
               "snmpa:log_to_txt/7"
               ("http://www.erlang.org/doc/man/snmpa.html#log_to_txt-7" "log_to_txt(LogDir, Mibs, OutFile, LogName, LogFile, Block, Start)  -> ok | {error, Reason}")
               "snmpa:log_to_txt/6"
               ("http://www.erlang.org/doc/man/snmpa.html#log_to_txt-6" "log_to_txt(LogDir, Mibs, OutFile, LogName, LogFile, Block | Start) ->  ok | {error, Reason}")
               "snmpa:log_to_txt/5"
               ("http://www.erlang.org/doc/man/snmpa.html#log_to_txt-5" "log_to_txt(LogDir, Mibs, OutFile, LogName, Block | LogFile) ->  ok | {error, Reason}")
               "snmpa:log_to_txt/4"
               ("http://www.erlang.org/doc/man/snmpa.html#log_to_txt-4" "log_to_txt(LogDir, Mibs, OutFile, Block | LogName) ->  ok | {error, Reason}")
               "snmpa:log_to_txt/3"
               ("http://www.erlang.org/doc/man/snmpa.html#log_to_txt-3" "log_to_txt(LogDir, Mibs, Block | OutFile) -> ok | {error, Reason}")
               "snmpa:log_to_txt/2"
               ("http://www.erlang.org/doc/man/snmpa.html#log_to_txt-2" "log_to_txt(LogDir, Block | Mibs)")
               "snmpa:log_to_txt/1"
               ("http://www.erlang.org/doc/man/snmpa.html#log_to_txt-1" "log_to_txt(LogDir)")
               "snmpa:which_notifications/0"
               ("http://www.erlang.org/doc/man/snmpa.html#which_notifications-0" "which_notifications() -> Result")
               "snmpa:which_variables/0"
               ("http://www.erlang.org/doc/man/snmpa.html#which_variables-0" "which_variables() -> Result")
               "snmpa:which_tables/0"
               ("http://www.erlang.org/doc/man/snmpa.html#which_tables-0" "which_tables() -> Result")
               "snmpa:which_aliasnames/0"
               ("http://www.erlang.org/doc/man/snmpa.html#which_aliasnames-0" "which_aliasnames() -> Result")
               "snmpa:oid_to_name/2"
               ("http://www.erlang.org/doc/man/snmpa.html#oid_to_name-2" "oid_to_name(Db, OID) -> {value, Name} | false")
               "snmpa:oid_to_name/1"
               ("http://www.erlang.org/doc/man/snmpa.html#oid_to_name-1" "oid_to_name(OID) -> {value, Name} | false")
               "snmpa:name_to_oid/2"
               ("http://www.erlang.org/doc/man/snmpa.html#name_to_oid-2" "name_to_oid(Db, Name) -> {value, oid()} | false")
               "snmpa:name_to_oid/1"
               ("http://www.erlang.org/doc/man/snmpa.html#name_to_oid-1" "name_to_oid(Name) -> {value, oid()} | false")
               "snmpa:int_to_enum/3"
               ("http://www.erlang.org/doc/man/snmpa.html#int_to_enum-3" "int_to_enum(Db, Name, Int) -> {value, Enum} | false")
               "snmpa:int_to_enum/2"
               ("http://www.erlang.org/doc/man/snmpa.html#int_to_enum-2" "int_to_enum(Name, Int) -> {value, Enum} | false")
               "snmpa:enum_to_int/3"
               ("http://www.erlang.org/doc/man/snmpa.html#enum_to_int-3" "enum_to_int(Db, Name, Enum) -> {value, Int} | false")
               "snmpa:enum_to_int/2"
               ("http://www.erlang.org/doc/man/snmpa.html#enum_to_int-2" "enum_to_int(Name, Enum) -> {value, Int} | false")
               "snmpa:current_address/0"
               ("http://www.erlang.org/doc/man/snmpa.html#current_address-0" "current_address() -> {value, Address} | false")
               "snmpa:current_community/0"
               ("http://www.erlang.org/doc/man/snmpa.html#current_community-0" "current_community() -> {value, Community} | false")
               "snmpa:current_context/0"
               ("http://www.erlang.org/doc/man/snmpa.html#current_context-0" "current_context() -> {value, Context} | false")
               "snmpa:current_request_id/0"
               ("http://www.erlang.org/doc/man/snmpa.html#current_request_id-0" "current_request_id() -> {value, RequestId} | false")
               "snmpa:whereis_mib/2"
               ("http://www.erlang.org/doc/man/snmpa.html#whereis_mib-2" "whereis_mib(Agent, MibName) -> {ok, MibFile} | {error, Reason}")
               "snmpa:whereis_mib/1"
               ("http://www.erlang.org/doc/man/snmpa.html#whereis_mib-1" "whereis_mib(MibName) -> {ok, MibFile} | {error, Reason}")
               "snmpa:which_mibs/1"
               ("http://www.erlang.org/doc/man/snmpa.html#which_mibs-1" "which_mibs(Agent) -> Mibs")
               "snmpa:which_mibs/0"
               ("http://www.erlang.org/doc/man/snmpa.html#which_mibs-0" "which_mibs() -> Mibs")
               "snmpa:unload_mibs/3"
               ("http://www.erlang.org/doc/man/snmpa.html#unload_mibs-3" "unload_mibs(Agent, Mibs, Force) -> ok | {error, Reason}")
               "snmpa:unload_mibs/2"
               ("http://www.erlang.org/doc/man/snmpa.html#unload_mibs-2" "unload_mibs(Mibs, Force) -> ok | {error, Reason}")
               "snmpa:unload_mibs/1"
               ("http://www.erlang.org/doc/man/snmpa.html#unload_mibs-1" "unload_mibs(Mibs) -> ok | {error, Reason}")
               "snmpa:unload_mib/2"
               ("http://www.erlang.org/doc/man/snmpa.html#unload_mib-2" "unload_mib(Agent, Mib) -> ok | {error, Reason}")
               "snmpa:unload_mib/1"
               ("http://www.erlang.org/doc/man/snmpa.html#unload_mib-1" "unload_mib(Mib) -> ok | {error, Reason}")
               "snmpa:load_mibs/3"
               ("http://www.erlang.org/doc/man/snmpa.html#load_mibs-3" "load_mibs(Agent, Mibs, Force) -> ok | {error, Reason}")
               "snmpa:load_mibs/2"
               ("http://www.erlang.org/doc/man/snmpa.html#load_mibs-2" "load_mibs(Mibs, Force) -> ok | {error, Reason}")
               "snmpa:load_mibs/1"
               ("http://www.erlang.org/doc/man/snmpa.html#load_mibs-1" "load_mibs(Mibs) -> ok | {error, Reason}")
               "snmpa:load_mib/2"
               ("http://www.erlang.org/doc/man/snmpa.html#load_mib-2" "load_mib(Agent, Mib) -> ok | {error, Reason}")
               "snmpa:load_mib/1"
               ("http://www.erlang.org/doc/man/snmpa.html#load_mib-1" "load_mib(Mib) -> ok | {error, Reason}")
               "snmpa:old_info_format/1"
               ("http://www.erlang.org/doc/man/snmpa.html#old_info_format-1" "old_info_format(NewInfo) -> OldInfo")
               "snmpa:info/1"
               ("http://www.erlang.org/doc/man/snmpa.html#info-1" "info(Agent) -> [{Key, Value}]")
               "snmpa:info/0"
               ("http://www.erlang.org/doc/man/snmpa.html#info-0" "info() -> [{Key, Value}]")
               "snmpa:backup/2"
               ("http://www.erlang.org/doc/man/snmpa.html#backup-2" "backup(Agent, BackupDir) -> ok | {error, Reason}")
               "snmpa:backup/1"
               ("http://www.erlang.org/doc/man/snmpa.html#backup-1" "backup(BackupDir) -> ok | {error, Reason}")
               "snmpa:get_next/3"
               ("http://www.erlang.org/doc/man/snmpa.html#get_next-3" "get_next(Agent, Vars, Context) -> Values | {error, Reason}")
               "snmpa:get_next/2"
               ("http://www.erlang.org/doc/man/snmpa.html#get_next-2" "get_next(Agent, Vars) -> Values | {error, Reason}")
               "snmpa:get/3"
               ("http://www.erlang.org/doc/man/snmpa.html#get-3" "get(Agent, Vars, Context) -> Values | {error, Reason}")
               "snmpa:get/2"
               ("http://www.erlang.org/doc/man/snmpa.html#get-2" "get(Agent, Vars) -> Values | {error, Reason}")
               "snmpa:get_agent_caps/0"
               ("http://www.erlang.org/doc/man/snmpa.html#get_agent_caps-0" "get_agent_caps() -> [[SysORIndex, SysORID, SysORDescr, SysORUpTime]]")
               "snmpa:del_agent_caps/1"
               ("http://www.erlang.org/doc/man/snmpa.html#del_agent_caps-1" "del_agent_caps(SysORIndex) -> void()")
               "snmpa:add_agent_caps/2"
               ("http://www.erlang.org/doc/man/snmpa.html#add_agent_caps-2" "add_agent_caps(SysORID, SysORDescr) -> SysORIndex")
               "snmpa_conf:read_notify_config/1"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#read_notify_config-1" "read_notify_config(Dir) -> Conf")
               "snmpa_conf:append_notify_config/2"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#append_notify_config-2" "append_notify_config(Dir, Conf) -> ok")
               "snmpa_conf:write_notify_config/3"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#write_notify_config-3" "write_notify_config(Dir, Hdr, Conf) -> ok")
               "snmpa_conf:write_notify_config/2"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#write_notify_config-2" "write_notify_config(Dir, Conf) -> ok")
               "snmpa_conf:notify_entry/3"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#notify_entry-3" "notify_entry(Name, Tag, Type) -> notify_entry()")
               "snmpa_conf:read_usm_config/1"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#read_usm_config-1" "read_usm_config(Dir) -> Conf")
               "snmpa_conf:append_usm_config/2"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#append_usm_config-2" "append_usm_config(Dir, Conf) -> ok")
               "snmpa_conf:write_usm_config/3"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#write_usm_config-3" "write_usm_config(Dir, Hdr, Conf) -> ok")
               "snmpa_conf:write_usm_config/2"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#write_usm_config-2" "write_usm_config(Dir, Conf) -> ok")
               "snmpa_conf:usm_entry/13"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#usm_entry-13" "usm_entry(EngineID, UserName, SecName, Clone, AuthP, AuthKeyC, OwnAuthKeyC, PrivP, PrivKeyC, OwnPrivKeyC, Public, AuthKey, PrivKey) -> usm_entry()")
               "snmpa_conf:usm_entry/1"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#usm_entry-1" "usm_entry(EngineId) -> usm_entry()")
               "snmpa_conf:read_vacm_config/1"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#read_vacm_config-1" "read_vacm_config(Dir) -> Conf")
               "snmpa_conf:append_vacm_config/2"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#append_vacm_config-2" "append_vacm_config(Dir, Conf) -> ok")
               "snmpa_conf:write_vacm_config/3"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#write_vacm_config-3" "write_vacm_config(Dir, Hdr, Conf) -> ok")
               "snmpa_conf:write_vacm_config/2"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#write_vacm_config-2" "write_vacm_config(Dir, Conf) -> ok")
               "snmpa_conf:vacm_vtf_entry/4"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#vacm_vtf_entry-4" "vacm_vtf_entry(ViewIndex, ViewSubtree, ViewStatus, ViewMask) -> vacm_vtf_entry()")
               "snmpa_conf:vacm_vtf_entry/2"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#vacm_vtf_entry-2" "vacm_vtf_entry(ViewIndex, ViewSubtree) -> vacm_vtf_entry()")
               "snmpa_conf:vacm_acc_entry/8"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#vacm_acc_entry-8" "vacm_acc_entry(GroupName, Prefix, SecModel, SecLevel, Match, ReadView, WriteView, NotifyView) -> vacm_acc_entry()")
               "snmpa_conf:vacm_s2g_entry/3"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#vacm_s2g_entry-3" "vacm_s2g_entry(SecModel, SecName, GroupName) -> vacm_s2g_entry()")
               "snmpa_conf:read_target_params_config/1"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#read_target_params_config-1" "read_target_params_config(Dir) -> Conf")
               "snmpa_conf:append_target_params_config/2"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#append_target_params_config-2" "append_target_params_config(Dir, Conf) -> ok")
               "snmpa_conf:write_target_params_config/3"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#write_target_params_config-3" "write_target_params_config(Dir, Hdr, Conf) -> ok")
               "snmpa_conf:write_target_params_config/2"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#write_target_params_config-2" "write_target_params_config(Dir, Conf) -> ok")
               "snmpa_conf:target_params_entry/5"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#target_params_entry-5" "target_params_entry(Name, MPModel, SecModel, SecName, SecLevel) -> target_params_entry()")
               "snmpa_conf:target_params_entry/4"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#target_params_entry-4" "target_params_entry(Name, Vsn, SecName, SecLevel) -> target_params_entry()")
               "snmpa_conf:target_params_entry/2"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#target_params_entry-2" "target_params_entry(Name, Vsn) -> target_params_entry()")
               "snmpa_conf:read_target_addr_config/1"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#read_target_addr_config-1" "read_target_addr_config(Dir) -> Conf")
               "snmpa_conf:append_target_addr_config/2"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#append_target_addr_config-2" "append_target_addr_config(Dir, Conf) -> ok")
               "snmpa_conf:write_target_addr_config/3"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#write_target_addr_config-3" "write_target_addr_config(Dir, Hdr, Conf) -> ok")
               "snmpa_conf:write_target_addr_config/2"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#write_target_addr_config-2" "write_target_addr_config(Dir, Conf) -> ok")
               "snmpa_conf:target_addr_entry/10"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#target_addr_entry-10" "target_addr_entry(Name, Domain, Addr, Timeout, RetryCount, TagList, ParamsName, EngineId, TMask, MaxMessageSize) -> target_addr_entry()")
               "snmpa_conf:target_addr_entry/8"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#target_addr_entry-8" "target_addr_entry(Name, Domain, Addr, TagList, ParamsName, EngineId, TMask, MaxMessageSize) -> target_addr_entry()")
               "snmpa_conf:target_addr_entry/7"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#target_addr_entry-7" "target_addr_entry(Name, Domain, Addr, TagList, ParamsName, EngineId, TMask) -> target_addr_entry()")
               "snmpa_conf:target_addr_entry/6"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#target_addr_entry-6" "target_addr_entry(Name, Domain, Addr, TagList, ParamsName, EngineId) -> target_addr_entry()")
               "snmpa_conf:read_community_config/1"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#read_community_config-1" "read_community_config(Dir) -> Conf")
               "snmpa_conf:append_community_config/2"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#append_community_config-2" "append_community_config(Dir, Conf) -> ok")
               "snmpa_conf:write_community_config/3"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#write_community_config-3" "write_community_config(Dir, Hdr, Conf) -> ok")
               "snmpa_conf:write_community_config/2"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#write_community_config-2" "write_community_config(Dir, Conf) -> ok")
               "snmpa_conf:community_entry/5"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#community_entry-5" "community_entry(CommunityIndex, CommunityName, SecName, ContextName, TransportTag) -> community_entry()")
               "snmpa_conf:community_entry/1"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#community_entry-1" "community_entry(CommunityIndex) -> community_entry()")
               "snmpa_conf:read_context_config/1"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#read_context_config-1" "read_context_config(Dir) -> Conf")
               "snmpa_conf:append_context_config/2"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#append_context_config-2" "append_context_config(Dir, Conf) -> ok")
               "snmpa_conf:write_context_config/3"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#write_context_config-3" "write_context_config(Dir, Hdr, Conf) -> ok")
               "snmpa_conf:write_context_config/2"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#write_context_config-2" "write_context_config(Dir, Conf) -> ok")
               "snmpa_conf:context_entry/1"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#context_entry-1" "context_entry(Context) -> context_entry()")
               "snmpa_conf:read_standard_config/1"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#read_standard_config-1" "read_standard_config(Dir) -> Conf")
               "snmpa_conf:append_standard_config/2"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#append_standard_config-2" "append_standard_config(Dir, Conf) -> ok")
               "snmpa_conf:write_standard_config/3"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#write_standard_config-3" "write_standard_config(Dir, Hdr, Conf) -> ok")
               "snmpa_conf:write_standard_config/2"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#write_standard_config-2" "write_standard_config(Dir, Conf) -> ok")
               "snmpa_conf:standard_entry/2"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#standard_entry-2" "standard_entry(Tag, Val) -> standard_entry()")
               "snmpa_conf:read_agent_config/1"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#read_agent_config-1" "read_agent_config(Dir) -> Conf")
               "snmpa_conf:append_agent_config/2"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#append_agent_config-2" "append_agent_config(Dir, Conf) -> ok")
               "snmpa_conf:write_agent_config/3"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#write_agent_config-3" "write_agent_config(Dir, Hdr, Conf) -> ok")
               "snmpa_conf:write_agent_config/2"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#write_agent_config-2" "write_agent_config(Dir, Conf) -> ok")
               "snmpa_conf:agent_entry/2"
               ("http://www.erlang.org/doc/man/snmpa_conf.html#agent_entry-2" "agent_entry(Tag, Val) -> agent_entry()")
               "snmpa_discovery_handler:stage1_finish/3"
               ("http://www.erlang.org/doc/man/snmpa_discovery_handler.html#stage1_finish-3" "stage1_finish(TargetName, ManagerEngineID, ExtraInfo) -> ignore | {ok, usm_entry() | [usm_entry()]} | {ok, usm_entry() | [usm_entry()], NewExtraInfo}")
               "snmpa_error:user_err/2"
               ("http://www.erlang.org/doc/man/snmpa_error.html#user_err-2" "user_err(Format, Args) -> void()")
               "snmpa_error:config_err/2"
               ("http://www.erlang.org/doc/man/snmpa_error.html#config_err-2" "config_err(Format, Args) -> void()")
               "snmpa_error_io:user_err/2"
               ("http://www.erlang.org/doc/man/snmpa_error_io.html#user_err-2" "user_err(Format, Args) -> void()")
               "snmpa_error_io:config_err/2"
               ("http://www.erlang.org/doc/man/snmpa_error_io.html#config_err-2" "config_err(Format, Args) -> void()")
               "snmpa_error_logger:user_err/2"
               ("http://www.erlang.org/doc/man/snmpa_error_logger.html#user_err-2" "user_err(Format, Args) -> void()")
               "snmpa_error_logger:config_err/2"
               ("http://www.erlang.org/doc/man/snmpa_error_logger.html#config_err-2" "config_err(Format, Args) -> void()")
               "snmpa_error_report:user_err/2"
               ("http://www.erlang.org/doc/man/snmpa_error_report.html#user_err-2" "user_err(Format, Args) -> void()")
               "snmpa_error_report:config_err/2"
               ("http://www.erlang.org/doc/man/snmpa_error_report.html#config_err-2" "config_err(Format, Args) -> void()")
               "snmpa_local_db:table_get_row/2"
               ("http://www.erlang.org/doc/man/snmpa_local_db.html#table_get_row-2" "table_get_row(NameDb, RowIndex) -> Row | undefined")
               "snmpa_local_db:table_exists/1"
               ("http://www.erlang.org/doc/man/snmpa_local_db.html#table_exists-1" "table_exists(NameDb) -> bool()")
               "snmpa_local_db:table_delete_row/2"
               ("http://www.erlang.org/doc/man/snmpa_local_db.html#table_delete_row-2" "table_delete_row(NameDb, RowIndex) -> bool()")
               "snmpa_local_db:table_delete/1"
               ("http://www.erlang.org/doc/man/snmpa_local_db.html#table_delete-1" "table_delete(NameDb) -> void()")
               "snmpa_local_db:table_create_row/3"
               ("http://www.erlang.org/doc/man/snmpa_local_db.html#table_create_row-3" "table_create_row(NameDb, RowIndex, Row) -> bool()")
               "snmpa_local_db:table_create/1"
               ("http://www.erlang.org/doc/man/snmpa_local_db.html#table_create-1" "table_create(NameDb) -> bool()")
               "snmpa_local_db:print/2"
               ("http://www.erlang.org/doc/man/snmpa_local_db.html#print-2" "print(TableName, Db)")
               "snmpa_local_db:print/1"
               ("http://www.erlang.org/doc/man/snmpa_local_db.html#print-1" "print(TableName)")
               "snmpa_local_db:print/0"
               ("http://www.erlang.org/doc/man/snmpa_local_db.html#print-0" "print()")
               "snmpa_local_db:match/2"
               ("http://www.erlang.org/doc/man/snmpa_local_db.html#match-2" "match(NameDb, Pattern)")
               "snmpa_local_db:dump/0"
               ("http://www.erlang.org/doc/man/snmpa_local_db.html#dump-0" "dump() -> ok | {error, Reason}")
               "snmpa_mib_data:Module:code_change/4"
               ("http://www.erlang.org/doc/man/snmpa_mib_data.html#Module:code_change-4" "Module:code_change(Destination, Vsn, Extra, State) -> NewState")
               "snmpa_mib_data:Module:backup/2"
               ("http://www.erlang.org/doc/man/snmpa_mib_data.html#Module:backup-2" "Module:backup(State, BackupDir) -> Reply")
               "snmpa_mib_data:Module:info/1"
               ("http://www.erlang.org/doc/man/snmpa_mib_data.html#Module:info-1" "Module:info(State) -> Reply")
               "snmpa_mib_data:Module:whereis_mib/2"
               ("http://www.erlang.org/doc/man/snmpa_mib_data.html#Module:whereis_mib-2" "Module:whereis_mib(State, MibName) -> Reply")
               "snmpa_mib_data:Module:which_mibs/1"
               ("http://www.erlang.org/doc/man/snmpa_mib_data.html#Module:which_mibs-1" "Module:which_mibs(State) -> Reply")
               "snmpa_mib_data:Module:which_mib/2"
               ("http://www.erlang.org/doc/man/snmpa_mib_data.html#Module:which_mib-2" "Module:which_mib(State, Oid) -> Reply")
               "snmpa_mib_data:Module:dump/2"
               ("http://www.erlang.org/doc/man/snmpa_mib_data.html#Module:dump-2" "Module:dump(State, Destination) -> Reply")
               "snmpa_mib_data:Module:unregister_subagent/2"
               ("http://www.erlang.org/doc/man/snmpa_mib_data.html#Module:unregister_subagent-2" "Module:unregister_subagent(State, PidOrOid) -> Reply")
               "snmpa_mib_data:Module:register_subagent/3"
               ("http://www.erlang.org/doc/man/snmpa_mib_data.html#Module:register_subagent-3" "Module:register_subagent(State, Oid, Pid) -> Reply")
               "snmpa_mib_data:Module:next/3"
               ("http://www.erlang.org/doc/man/snmpa_mib_data.html#Module:next-3" "Module:next(State, Oid, MibView) -> Reply")
               "snmpa_mib_data:Module:lookup/2"
               ("http://www.erlang.org/doc/man/snmpa_mib_data.html#Module:lookup-2" "Module:lookup(State, Oid) -> Reply")
               "snmpa_mib_data:Module:unload_mib/2"
               ("http://www.erlang.org/doc/man/snmpa_mib_data.html#Module:unload_mib-2" "Module:unload_mib(State, Filename) -> {ok, NewState} | {error, Reason}")
               "snmpa_mib_data:Module:load_mib/4"
               ("http://www.erlang.org/doc/man/snmpa_mib_data.html#Module:load_mib-4" "Module:load_mib(State, Filename, MeOverride, TeOverride) -> {ok, NewState} | {error, Reason}")
               "snmpa_mib_data:Module:sync/1"
               ("http://www.erlang.org/doc/man/snmpa_mib_data.html#Module:sync-1" "Module:sync(State) -> void()")
               "snmpa_mib_data:Module:close/1"
               ("http://www.erlang.org/doc/man/snmpa_mib_data.html#Module:close-1" "Module:close(State) -> void()")
               "snmpa_mib_data:Module:new/1"
               ("http://www.erlang.org/doc/man/snmpa_mib_data.html#Module:new-1" "Module:new(Storage) -> State")
               "snmpa_mib_storage:Module:backup/2"
               ("http://www.erlang.org/doc/man/snmpa_mib_storage.html#Module:backup-2" "Module:backup(TabId, BackupDir) -> ok | {error, Reason}")
               "snmpa_mib_storage:Module:sync/1"
               ("http://www.erlang.org/doc/man/snmpa_mib_storage.html#Module:sync-1" "Module:sync(TabId) -> void()")
               "snmpa_mib_storage:Module:info/1"
               ("http://www.erlang.org/doc/man/snmpa_mib_storage.html#Module:info-1" "Module:info(TabId) -> {ok, Info} | {error, Reason}")
               "snmpa_mib_storage:Module:tab2list/1"
               ("http://www.erlang.org/doc/man/snmpa_mib_storage.html#Module:tab2list-1" "Module:tab2list(TabId) -> Recs")
               "snmpa_mib_storage:Module:match_delete/2"
               ("http://www.erlang.org/doc/man/snmpa_mib_storage.html#Module:match_delete-2" "Module:match_delete(TabId, Pattern) -> {ok, Recs} | {error, Reason}")
               "snmpa_mib_storage:Module:match_object/2"
               ("http://www.erlang.org/doc/man/snmpa_mib_storage.html#Module:match_object-2" "Module:match_object(TabId, Pattern) -> {ok, Recs} | {error, Reason}")
               "snmpa_mib_storage:Module:delete/2"
               ("http://www.erlang.org/doc/man/snmpa_mib_storage.html#Module:delete-2" "Module:delete(TabId, Key) -> ok | {error, Reason}")
               "snmpa_mib_storage:Module:delete/1"
               ("http://www.erlang.org/doc/man/snmpa_mib_storage.html#Module:delete-1" "Module:delete(TabId) -> void()")
               "snmpa_mib_storage:Module:write/2"
               ("http://www.erlang.org/doc/man/snmpa_mib_storage.html#Module:write-2" "Module:write(TabId, Record) -> ok | {error, Reason}")
               "snmpa_mib_storage:Module:read/2"
               ("http://www.erlang.org/doc/man/snmpa_mib_storage.html#Module:read-2" "Module:read(TabId, Key) -> false | {value, Record}")
               "snmpa_mib_storage:Module:close/1"
               ("http://www.erlang.org/doc/man/snmpa_mib_storage.html#Module:close-1" "Module:close(TabId) -> void()")
               "snmpa_mib_storage:Module:open/5"
               ("http://www.erlang.org/doc/man/snmpa_mib_storage.html#Module:open-5" "Module:open(Name, RecordName, Fields, Type, Options) -> {ok, TabId} | {error, Reason}")
               "snmpa_mpd:discarded_pdu/1"
               ("http://www.erlang.org/doc/man/snmpa_mpd.html#discarded_pdu-1" "discarded_pdu(Variable) -> void()")
               "snmpa_mpd:process_taddrs/1"
               ("http://www.erlang.org/doc/man/snmpa_mpd.html#process_taddrs-1" "process_taddrs(TDests) -> Dests")
               "snmpa_mpd:generate_msg/6"
               ("http://www.erlang.org/doc/man/snmpa_mpd.html#generate_msg-6" "generate_msg(Vsn, NoteStore, Pdu, MsgData, LocalEngineID, To) -> {ok, PacketsAndAddresses} | {discarded, Reason}")
               "snmpa_mpd:generate_msg/5"
               ("http://www.erlang.org/doc/man/snmpa_mpd.html#generate_msg-5" "generate_msg(Vsn, NoteStore, Pdu, MsgData, To) -> {ok, PacketsAndAddresses} | {discarded, Reason}")
               "snmpa_mpd:generate_response_msg/6"
               ("http://www.erlang.org/doc/man/snmpa_mpd.html#generate_response_msg-6" "generate_response_msg(Vsn, RePdu, Type, ACMData, LocalEngineID, Log) -> {ok, Packet} | {discarded, Reason}")
               "snmpa_mpd:generate_response_msg/5"
               ("http://www.erlang.org/doc/man/snmpa_mpd.html#generate_response_msg-5" "generate_response_msg(Vsn, RePdu, Type, ACMData, Log) -> {ok, Packet} | {discarded, Reason}")
               "snmpa_mpd:process_packet/6"
               ("http://www.erlang.org/doc/man/snmpa_mpd.html#process_packet-6" "process_packet(Packet, From, LocalEngineID, State, NoteStore, Log) -> {ok, Vsn, Pdu, PduMS, ACMData} | {discarded, Reason} | {discovery, DiscoPacket}")
               "snmpa_mpd:process_packet/5"
               ("http://www.erlang.org/doc/man/snmpa_mpd.html#process_packet-5" "process_packet(Packet, From, State, NoteStore, Log) -> {ok, Vsn, Pdu, PduMS, ACMData} | {discarded, Reason} | {discovery, DiscoPacket}")
               "snmpa_mpd:init/1"
               ("http://www.erlang.org/doc/man/snmpa_mpd.html#init-1" "init(Vsns) -> mpd_state()")
               "snmpa_network_interface:set_log_type/2"
               ("http://www.erlang.org/doc/man/snmpa_network_interface.html#set_log_type-2" "set_log_type(Pid, NewType) -> {ok, OldType} | {error, Reason}")
               "snmpa_network_interface:get_log_type/1"
               ("http://www.erlang.org/doc/man/snmpa_network_interface.html#get_log_type-1" "get_log_type(Pid) -> {ok, LogType} | {error, Reason}")
               "snmpa_network_interface:verbosity/2"
               ("http://www.erlang.org/doc/man/snmpa_network_interface.html#verbosity-2" "verbosity(Pid, Verbosity) -> void()")
               "snmpa_network_interface:info/1"
               ("http://www.erlang.org/doc/man/snmpa_network_interface.html#info-1" "info(Pid) -> [{Key, Value}]")
               "snmpa_network_interface:start_link/4"
               ("http://www.erlang.org/doc/man/snmpa_network_interface.html#start_link-4" "start_link(Prio, NoteStore, MasterAgent, Opts) -> {ok, Pid} | {error, Reason}")
               "snmpa_network_interface_filter:accept_send_pdu/2"
               ("http://www.erlang.org/doc/man/snmpa_network_interface_filter.html#accept_send_pdu-2" "accept_send_pdu(Targets, PduType) -> Reply")
               "snmpa_network_interface_filter:accept_recv_pdu/3"
               ("http://www.erlang.org/doc/man/snmpa_network_interface_filter.html#accept_recv_pdu-3" "accept_recv_pdu(Domain, Addr, PduType) -> boolean()")
               "snmpa_network_interface_filter:accept_send/2"
               ("http://www.erlang.org/doc/man/snmpa_network_interface_filter.html#accept_send-2" "accept_send(Domain, Addr) -> boolean()")
               "snmpa_network_interface_filter:accept_recv/2"
               ("http://www.erlang.org/doc/man/snmpa_network_interface_filter.html#accept_recv-2" "accept_recv(Domain, Addr) -> boolean()")
               "snmpa_notification_delivery_info_receiver:delivery_info/4"
               ("http://www.erlang.org/doc/man/snmpa_notification_delivery_info_receiver.html#delivery_info-4" "delivery_info(Tag, Target, DeliveryResult, Extra) -> void()")
               "snmpa_notification_delivery_info_receiver:delivery_targets/3"
               ("http://www.erlang.org/doc/man/snmpa_notification_delivery_info_receiver.html#delivery_targets-3" "delivery_targets(Tag, Targets, Extra) -> void()")
               "snmpa_notification_filter:handle_notification/2"
               ("http://www.erlang.org/doc/man/snmpa_notification_filter.html#handle_notification-2" "handle_notification(Notif, Data) -> Reply")
               "snmpa_supervisor:stop_sub_agent/1"
               ("http://www.erlang.org/doc/man/snmpa_supervisor.html#stop_sub_agent-1" "stop_sub_agent(SubAgent) -> ok | no_such_child")
               "snmpa_supervisor:start_sub_agent/3"
               ("http://www.erlang.org/doc/man/snmpa_supervisor.html#start_sub_agent-3" "start_sub_agent(ParentAgent,Subtree,Mibs) -> {ok, pid()} | {error, Reason}")
               "snmpa_supervisor:start_master_sup/1"
               ("http://www.erlang.org/doc/man/snmpa_supervisor.html#start_master_sup-1" "start_master_sup(Opts) -> {ok, pid()} |  {error, {already_started, pid()}} | {error, Reason}")
               "snmpa_supervisor:start_sub_sup/1"
               ("http://www.erlang.org/doc/man/snmpa_supervisor.html#start_sub_sup-1" "start_sub_sup(Opts) -> {ok, pid()} | {error, {already_started, pid()}} | {error, Reason}")
               "snmpc:mib_to_hrl/1"
               ("http://www.erlang.org/doc/man/snmpc.html#mib_to_hrl-1" "mib_to_hrl(MibName) -> ok | {error, Reason}")
               "snmpc:is_consistent/1"
               ("http://www.erlang.org/doc/man/snmpc.html#is_consistent-1" "is_consistent(Mibs) -> ok | {error, Reason}")
               "snmpc:compile/2"
               ("http://www.erlang.org/doc/man/snmpc.html#compile-2" "compile(File, Options) -> {ok, BinFileName} | {error, Reason}")
               "snmpc:compile/1"
               ("http://www.erlang.org/doc/man/snmpc.html#compile-1" "compile(File)")
               "snmpm:format_reason/2"
               ("http://www.erlang.org/doc/man/snmpm.html#format_reason-2" "format_reason(Prefix, Reason) -> string()")
               "snmpm:format_reason/1"
               ("http://www.erlang.org/doc/man/snmpm.html#format_reason-1" "format_reason(Reason) -> string()")
               "snmpm:verbosity/2"
               ("http://www.erlang.org/doc/man/snmpm.html#verbosity-2" "verbosity(Ref, Verbosity) -> void()")
               "snmpm:info/0"
               ("http://www.erlang.org/doc/man/snmpm.html#info-0" "info() -> [{Key, Value}]")
               "snmpm:backup/1"
               ("http://www.erlang.org/doc/man/snmpm.html#backup-1" "backup(BackupDir) -> ok | {error, Reason}")
               "snmpm:oid_to_type/1"
               ("http://www.erlang.org/doc/man/snmpm.html#oid_to_type-1" "oid_to_type(Oid) -> {ok, Type} | {error, Reason}")
               "snmpm:oid_to_name/1"
               ("http://www.erlang.org/doc/man/snmpm.html#oid_to_name-1" "oid_to_name(Oid) -> {ok, Name} | {error, Reason}")
               "snmpm:name_to_oid/1"
               ("http://www.erlang.org/doc/man/snmpm.html#name_to_oid-1" "name_to_oid(Name) -> {ok, Oids} | {error, Reason}")
               "snmpm:which_mibs/0"
               ("http://www.erlang.org/doc/man/snmpm.html#which_mibs-0" "which_mibs() -> Mibs")
               "snmpm:unload_mib/1"
               ("http://www.erlang.org/doc/man/snmpm.html#unload_mib-1" "unload_mib(Mib) -> ok | {error, Reason}")
               "snmpm:load_mib/1"
               ("http://www.erlang.org/doc/man/snmpm.html#load_mib-1" "load_mib(Mib) -> ok | {error, Reason}")
               "snmpm:set_log_type/1"
               ("http://www.erlang.org/doc/man/snmpm.html#set_log_type-1" "set_log_type(NewType) -> {ok, OldType} | {error, Reason}")
               "snmpm:change_log_size/1"
               ("http://www.erlang.org/doc/man/snmpm.html#change_log_size-1" "change_log_size(NewSize) -> ok | {error, Reason}")
               "snmpm:log_to_io/7"
               ("http://www.erlang.org/doc/man/snmpm.html#log_to_io-7" "log_to_io(LogDir, Mibs, LogName, LogFile, Block, Start, Stop)  -> ok | {error, Reason}")
               "snmpm:log_to_io/6"
               ("http://www.erlang.org/doc/man/snmpm.html#log_to_io-6" "log_to_io(LogDir, Mibs, LogName, LogFile, Block, Start)  -> ok | {error, Reason}")
               "snmpm:log_to_io/5"
               ("http://www.erlang.org/doc/man/snmpm.html#log_to_io-5" "log_to_io(LogDir, Mibs, LogName, LogFile, Block | Start) ->  ok | {error, Reason}")
               "snmpm:log_to_io/4"
               ("http://www.erlang.org/doc/man/snmpm.html#log_to_io-4" "log_to_io(LogDir, Mibs, LogName, Block | LogFile) ->  ok | {error, Reason}")
               "snmpm:log_to_io/3"
               ("http://www.erlang.org/doc/man/snmpm.html#log_to_io-3" "log_to_io(LogDir, Mibs, Block | LogName) ->  ok | {error, Reason}")
               "snmpm:log_to_io/2"
               ("http://www.erlang.org/doc/man/snmpm.html#log_to_io-2" "log_to_io(LogDir, Block | Mibs) -> ok | {error, Reason}")
               "snmpm:log_to_io/1"
               ("http://www.erlang.org/doc/man/snmpm.html#log_to_io-1" "log_to_io(LogDir) -> ok | {error, Reason}")
               "snmpm:log_to_txt/8"
               ("http://www.erlang.org/doc/man/snmpm.html#log_to_txt-8" "log_to_txt(LogDir, Mibs, OutFile, LogName, LogFile, Block, Start, Stop)  -> ok | {error, Reason}")
               "snmpm:log_to_txt/7"
               ("http://www.erlang.org/doc/man/snmpm.html#log_to_txt-7" "log_to_txt(LogDir, Mibs, OutFile, LogName, LogFile, Block, Start)  -> ok | {error, Reason}")
               "snmpm:log_to_txt/6"
               ("http://www.erlang.org/doc/man/snmpm.html#log_to_txt-6" "log_to_txt(LogDir, Mibs, OutFile, LogName, LogFile, Block | Start) ->  ok | {error, Reason}")
               "snmpm:log_to_txt/5"
               ("http://www.erlang.org/doc/man/snmpm.html#log_to_txt-5" "log_to_txt(LogDir, Mibs, OutFile, LogName, Block | LogFile) ->  ok | {error, Reason}")
               "snmpm:log_to_txt/4"
               ("http://www.erlang.org/doc/man/snmpm.html#log_to_txt-4" "log_to_txt(LogDir, Mibs, OutFile, Block | LogName) ->  ok | {error, Reason}")
               "snmpm:log_to_txt/3"
               ("http://www.erlang.org/doc/man/snmpm.html#log_to_txt-3" "log_to_txt(LogDir, Mibs, Block | OutFile) -> ok | {error, Reason}")
               "snmpm:log_to_txt/2"
               ("http://www.erlang.org/doc/man/snmpm.html#log_to_txt-2" "log_to_txt(LogDir, Block | Mibs)")
               "snmpm:log_to_txt/1"
               ("http://www.erlang.org/doc/man/snmpm.html#log_to_txt-1" "log_to_txt(LogDir)")
               "snmpm:cancel_async_request/2"
               ("http://www.erlang.org/doc/man/snmpm.html#cancel_async_request-2" "cancel_async_request(UserId, ReqId) -> ok | {error, Reason}")
               "snmpm:async_get_bulk/8"
               ("http://www.erlang.org/doc/man/snmpm.html#async_get_bulk-8" "async_get_bulk(UserId, TargetName, NonRep, MaxRep, ContextName, Oids, Expire, ExtraInfo) -> {ok, ReqId} | {error, Reason}")
               "snmpm:async_get_bulk/7"
               ("http://www.erlang.org/doc/man/snmpm.html#async_get_bulk-7" "async_get_bulk(UserId, TargetName, NonRep, MaxRep, ContextName, Oids, Expire) -> {ok, ReqId} | {error, Reason}")
               "snmpm:async_get_bulk/6"
               ("http://www.erlang.org/doc/man/snmpm.html#async_get_bulk-6" "async_get_bulk(UserId, TargetName, NonRep, MaxRep, ContextName, Oids) -> {ok, ReqId} | {error, Reason}")
               "snmpm:async_get_bulk/5"
               ("http://www.erlang.org/doc/man/snmpm.html#async_get_bulk-5" "async_get_bulk(UserId, TargetName, NonRep, MaxRep, Oids) -> {ok, ReqId} | {error, Reason}")
               "snmpm:async_get_bulk2/6"
               ("http://www.erlang.org/doc/man/snmpm.html#async_get_bulk2-6" "async_get_bulk2(UserId, TargetName, NonRep, MaxRep, Oids, SendOpts) -> {ok, ReqId} | {error, Reason}")
               "snmpm:async_get_bulk2/5"
               ("http://www.erlang.org/doc/man/snmpm.html#async_get_bulk2-5" "async_get_bulk2(UserId, TargetName, NonRep, MaxRep, Oids) -> {ok, ReqId} | {error, Reason}")
               "snmpm:sync_get_bulk/8"
               ("http://www.erlang.org/doc/man/snmpm.html#sync_get_bulk-8" "sync_get_bulk(UserId, TragetName, NonRep, MaxRep, ContextName, Oids, Timeout, ExtraInfo) -> {ok, SnmpReply, Remaining} | {error, Reason}")
               "snmpm:sync_get_bulk/7"
               ("http://www.erlang.org/doc/man/snmpm.html#sync_get_bulk-7" "sync_get_bulk(UserId, TragetName, NonRep, MaxRep, ContextName, Oids, Timeout) -> {ok, SnmpReply, Remaining} | {error, Reason}")
               "snmpm:sync_get_bulk/6"
               ("http://www.erlang.org/doc/man/snmpm.html#sync_get_bulk-6" "sync_get_bulk(UserId, TragetName, NonRep, MaxRep, ContextName, Oids) -> {ok, SnmpReply, Remaining} | {error, Reason}")
               "snmpm:sync_get_bulk/5"
               ("http://www.erlang.org/doc/man/snmpm.html#sync_get_bulk-5" "sync_get_bulk(UserId, TragetName, NonRep, MaxRep, Oids) -> {ok, SnmpReply, Remaining} | {error, Reason}")
               "snmpm:sync_get_bulk2/6"
               ("http://www.erlang.org/doc/man/snmpm.html#sync_get_bulk2-6" "sync_get_bulk2(UserId, TragetName, NonRep, MaxRep, Oids, SendOpts) -> {ok, SnmpReply, Remaining} | {error, Reason}")
               "snmpm:sync_get_bulk2/5"
               ("http://www.erlang.org/doc/man/snmpm.html#sync_get_bulk2-5" "sync_get_bulk2(UserId, TragetName, NonRep, MaxRep, Oids) -> {ok, SnmpReply, Remaining} | {error, Reason}")
               "snmpm:async_set/6"
               ("http://www.erlang.org/doc/man/snmpm.html#async_set-6" "async_set(UserId, TargetName, ContextName, VarsAndVals, Expire, ExtraInfo) -> {ok, ReqId} | {error, Reason}")
               "snmpm:async_set/5"
               ("http://www.erlang.org/doc/man/snmpm.html#async_set-5" "async_set(UserId, TargetName, ContextName, VarsAndVals, Expire) -> {ok, ReqId} | {error, Reason}")
               "snmpm:async_set/4"
               ("http://www.erlang.org/doc/man/snmpm.html#async_set-4" "async_set(UserId, TargetName, ContextName, VarsAndVals) -> {ok, ReqId} | {error, Reason}")
               "snmpm:async_set/3"
               ("http://www.erlang.org/doc/man/snmpm.html#async_set-3" "async_set(UserId, TargetName, VarsAndVals) -> {ok, ReqId} | {error, Reason}")
               "snmpm:async_set2/4"
               ("http://www.erlang.org/doc/man/snmpm.html#async_set2-4" "async_set2(UserId, TargetName, VarsAndVals, SendOpts) -> {ok, ReqId} | {error, Reason}")
               "snmpm:async_set2/3"
               ("http://www.erlang.org/doc/man/snmpm.html#async_set2-3" "async_set2(UserId, TargetName, VarsAndVals) -> {ok, ReqId} | {error, Reason}")
               "snmpm:sync_set/6"
               ("http://www.erlang.org/doc/man/snmpm.html#sync_set-6" "sync_set(UserId, TargetName, ContextName, VarsAndVals, Timeout, ExtraInfo) -> {ok, SnmpReply, Remaining} | {error, Reason}")
               "snmpm:sync_set/5"
               ("http://www.erlang.org/doc/man/snmpm.html#sync_set-5" "sync_set(UserId, TargetName, ContextName, VarsAndVals, Timeout) -> {ok, SnmpReply, Remaining} | {error, Reason}")
               "snmpm:sync_set/4"
               ("http://www.erlang.org/doc/man/snmpm.html#sync_set-4" "sync_set(UserId, TargetName, ContextName, VarsAndVals) -> {ok, SnmpReply, Remaining} | {error, Reason}")
               "snmpm:sync_set/3"
               ("http://www.erlang.org/doc/man/snmpm.html#sync_set-3" "sync_set(UserId, TargetName, VarsAndVals) -> {ok, SnmpReply, Remaining} | {error, Reason}")
               "snmpm:sync_set2/4"
               ("http://www.erlang.org/doc/man/snmpm.html#sync_set2-4" "sync_set2(UserId, TargetName, VarsAndVals, SendOpts) -> {ok, SnmpReply, Remaining} | {error, Reason}")
               "snmpm:sync_set2/3"
               ("http://www.erlang.org/doc/man/snmpm.html#sync_set2-3" "sync_set2(UserId, TargetName, VarsAndVals) -> {ok, SnmpReply, Remaining} | {error, Reason}")
               "snmpm:async_get_next/6"
               ("http://www.erlang.org/doc/man/snmpm.html#async_get_next-6" "async_get_next(UserId, TargetName, ContextName, Oids, Expire, ExtraInfo) -> {ok, ReqId} | {error, Reason}")
               "snmpm:async_get_next/5"
               ("http://www.erlang.org/doc/man/snmpm.html#async_get_next-5" "async_get_next(UserId, TargetName, ContextName, Oids, Expire) -> {ok, ReqId} | {error, Reason}")
               "snmpm:async_get_next/4"
               ("http://www.erlang.org/doc/man/snmpm.html#async_get_next-4" "async_get_next(UserId, TargetName, ContextName, Oids) -> {ok, ReqId} | {error, Reason}")
               "snmpm:async_get_next/3"
               ("http://www.erlang.org/doc/man/snmpm.html#async_get_next-3" "async_get_next(UserId, TargetName, Oids) -> {ok, ReqId} | {error, Reason}")
               "snmpm:async_get_next2/4"
               ("http://www.erlang.org/doc/man/snmpm.html#async_get_next2-4" "async_get_next2(UserId, TargetName, Oids, SendOpts) -> {ok, ReqId} | {error, Reason}")
               "snmpm:async_get_next2/3"
               ("http://www.erlang.org/doc/man/snmpm.html#async_get_next2-3" "async_get_next2(UserId, TargetName, Oids) -> {ok, ReqId} | {error, Reason}")
               "snmpm:sync_get_next/6"
               ("http://www.erlang.org/doc/man/snmpm.html#sync_get_next-6" "sync_get_next(UserId, TargetName, ContextName, Oids, Timeout, ExtraInfo) -> {ok, SnmpReply, Remaining} | {error, Reason}")
               "snmpm:sync_get_next/5"
               ("http://www.erlang.org/doc/man/snmpm.html#sync_get_next-5" "sync_get_next(UserId, TargetName, ContextName, Oids, Timeout) -> {ok, SnmpReply, Remaining} | {error, Reason}")
               "snmpm:sync_get_next/4"
               ("http://www.erlang.org/doc/man/snmpm.html#sync_get_next-4" "sync_get_next(UserId, TargetName, ContextName, Oids) -> {ok, SnmpReply, Remaining} | {error, Reason}")
               "snmpm:sync_get_next/3"
               ("http://www.erlang.org/doc/man/snmpm.html#sync_get_next-3" "sync_get_next(UserId, TargetName, Oids) -> {ok, SnmpReply, Remaining} | {error, Reason}")
               "snmpm:sync_get_next2/4"
               ("http://www.erlang.org/doc/man/snmpm.html#sync_get_next2-4" "sync_get_next2(UserId, TargetName, Oids, SendOpts) -> {ok, SnmpReply, Remaining} | {error, Reason}")
               "snmpm:sync_get_next2/3"
               ("http://www.erlang.org/doc/man/snmpm.html#sync_get_next2-3" "sync_get_next2(UserId, TargetName, Oids) -> {ok, SnmpReply, Remaining} | {error, Reason}")
               "snmpm:async_get/6"
               ("http://www.erlang.org/doc/man/snmpm.html#async_get-6" "async_get(UserId, TargetName, ContextName, Oids, Expire, ExtraInfo) -> {ok, ReqId} | {error, Reason}")
               "snmpm:async_get/5"
               ("http://www.erlang.org/doc/man/snmpm.html#async_get-5" "async_get(UserId, TargetName, ContextName, Oids, Expire) -> {ok, ReqId} | {error, Reason}")
               "snmpm:async_get/4"
               ("http://www.erlang.org/doc/man/snmpm.html#async_get-4" "async_get(UserId, TargetName, ContextName, Oids) -> {ok, ReqId} | {error, Reason}")
               "snmpm:async_get/3"
               ("http://www.erlang.org/doc/man/snmpm.html#async_get-3" "async_get(UserId, TargetName, Oids) -> {ok, ReqId} | {error, Reason}")
               "snmpm:async_get2/4"
               ("http://www.erlang.org/doc/man/snmpm.html#async_get2-4" "async_get2(UserId, TargetName, Oids, SendOpts) -> {ok, ReqId} | {error, Reason}")
               "snmpm:async_get2/3"
               ("http://www.erlang.org/doc/man/snmpm.html#async_get2-3" "async_get2(UserId, TargetName, Oids) -> {ok, ReqId} | {error, Reason}")
               "snmpm:sync_get/6"
               ("http://www.erlang.org/doc/man/snmpm.html#sync_get-6" "sync_get(UserId, TargetName, ContextName, Oids, Timeout, ExtraInfo) -> {ok, SnmpReply, Remaining} | {error, Reason}")
               "snmpm:sync_get/5"
               ("http://www.erlang.org/doc/man/snmpm.html#sync_get-5" "sync_get(UserId, TargetName, ContextName, Oids, Timeout) -> {ok, SnmpReply, Remaining} | {error, Reason}")
               "snmpm:sync_get/4"
               ("http://www.erlang.org/doc/man/snmpm.html#sync_get-4" "sync_get(UserId, TargetName, ContextName, Oids) -> {ok, SnmpReply, Remaining} | {error, Reason}")
               "snmpm:sync_get/3"
               ("http://www.erlang.org/doc/man/snmpm.html#sync_get-3" "sync_get(UserId, TargetName, Oids) -> {ok, SnmpReply, Remaining} | {error, Reason}")
               "snmpm:sync_get2/4"
               ("http://www.erlang.org/doc/man/snmpm.html#sync_get2-4" "sync_get2(UserId, TargetName, Oids, SendOpts) -> {ok, SnmpReply, Remaining} | {error, Reason}")
               "snmpm:sync_get2/3"
               ("http://www.erlang.org/doc/man/snmpm.html#sync_get2-3" "sync_get2(UserId, TargetName, Oids) -> {ok, SnmpReply, Remaining} | {error, Reason}")
               "snmpm:which_usm_users/1"
               ("http://www.erlang.org/doc/man/snmpm.html#which_usm_users-1" "which_usm_users(EngineID) -> UsmUsers")
               "snmpm:which_usm_users/0"
               ("http://www.erlang.org/doc/man/snmpm.html#which_usm_users-0" "which_usm_users() -> UsmUsers")
               "snmpm:update_usm_user_info/4"
               ("http://www.erlang.org/doc/man/snmpm.html#update_usm_user_info-4" "update_usm_user_info(EngineID, UserName, Item, Val) -> ok | {error, Reason}")
               "snmpm:usm_user_info/3"
               ("http://www.erlang.org/doc/man/snmpm.html#usm_user_info-3" "usm_user_info(EngineID, UserName, Item) -> {ok, Val} | {error, Reason}")
               "snmpm:unregister_usm_user/2"
               ("http://www.erlang.org/doc/man/snmpm.html#unregister_usm_user-2" "unregister_usm_user(EngineID, UserName) -> ok | {error, Reason}")
               "snmpm:register_usm_user/3"
               ("http://www.erlang.org/doc/man/snmpm.html#register_usm_user-3" "register_usm_user(EngineID, UserName, Conf) -> ok | {error, Reason}")
               "snmpm:which_agents/1"
               ("http://www.erlang.org/doc/man/snmpm.html#which_agents-1" "which_agents(UserId) -> Agents")
               "snmpm:which_agents/0"
               ("http://www.erlang.org/doc/man/snmpm.html#which_agents-0" "which_agents() -> Agents")
               "snmpm:update_agent_info/4"
               ("http://www.erlang.org/doc/man/snmpm.html#update_agent_info-4" "update_agent_info(UserId, TargetName, Item, Val) -> ok | {error, Reason}")
               "snmpm:update_agent_info/3"
               ("http://www.erlang.org/doc/man/snmpm.html#update_agent_info-3" "update_agent_info(UserId, TargetName, Info) -> ok | {error, Reason}")
               "snmpm:agent_info/2"
               ("http://www.erlang.org/doc/man/snmpm.html#agent_info-2" "agent_info(TargetName, Item) -> {ok, Val} | {error, Reason}")
               "snmpm:unregister_agent/2"
               ("http://www.erlang.org/doc/man/snmpm.html#unregister_agent-2" "unregister_agent(UserId, TargetName) -> ok | {error, Reason}")
               "snmpm:register_agent/3"
               ("http://www.erlang.org/doc/man/snmpm.html#register_agent-3" "register_agent(UserId, TargetName, Config) -> ok | {error, Reason}")
               "snmpm:which_users/0"
               ("http://www.erlang.org/doc/man/snmpm.html#which_users-0" "which_users() -> Users")
               "snmpm:unregister_user/1"
               ("http://www.erlang.org/doc/man/snmpm.html#unregister_user-1" "unregister_user(Id) -> ok | {error, Reason}")
               "snmpm:register_user_monitor/4"
               ("http://www.erlang.org/doc/man/snmpm.html#register_user_monitor-4" "register_user_monitor(Id, Module, Data, DefaultAgentConfig) -> ok | {error, Reason}")
               "snmpm:register_user_monitor/3"
               ("http://www.erlang.org/doc/man/snmpm.html#register_user_monitor-3" "register_user_monitor(Id, Module, Data) -> ok | {error, Reason}")
               "snmpm:register_user/4"
               ("http://www.erlang.org/doc/man/snmpm.html#register_user-4" "register_user(Id, Module, Data, DefaultAgentConfig) -> ok | {error, Reason}")
               "snmpm:register_user/3"
               ("http://www.erlang.org/doc/man/snmpm.html#register_user-3" "register_user(Id, Module, Data) -> ok | {error, Reason}")
               "snmpm:cancel_notify_started/1"
               ("http://www.erlang.org/doc/man/snmpm.html#cancel_notify_started-1" "cancel_notify_started(Pid) -> void()")
               "snmpm:notify_started/1"
               ("http://www.erlang.org/doc/man/snmpm.html#notify_started-1" "notify_started(Timeout) -> Pid")
               "snmpm:demonitor/1"
               ("http://www.erlang.org/doc/man/snmpm.html#demonitor-1" "demonitor(Ref) -> void()")
               "snmpm:monitor/0"
               ("http://www.erlang.org/doc/man/snmpm.html#monitor-0" "monitor() -> Ref")
               "snmpm_conf:read_usm_config/1"
               ("http://www.erlang.org/doc/man/snmpm_conf.html#read_usm_config-1" "read_usm_config(Dir) -> Conf")
               "snmpm_conf:append_usm_config/2"
               ("http://www.erlang.org/doc/man/snmpm_conf.html#append_usm_config-2" "append_usm_config(Dir, Conf) -> ok")
               "snmpm_conf:write_usm_config/3"
               ("http://www.erlang.org/doc/man/snmpm_conf.html#write_usm_config-3" "write_usm_config(Dir, Hdr, Conf) -> ok")
               "snmpm_conf:write_usm_config/2"
               ("http://www.erlang.org/doc/man/snmpm_conf.html#write_usm_config-2" "write_usm_config(Dir, Conf) -> ok")
               "snmpm_conf:usm_entry/7"
               ("http://www.erlang.org/doc/man/snmpm_conf.html#usm_entry-7" "usm_entry(EngineID, UserName, SecName, AuthP, AuthKey, PrivP, PrivKey) -> usm_entry()")
               "snmpm_conf:usm_entry/6"
               ("http://www.erlang.org/doc/man/snmpm_conf.html#usm_entry-6" "usm_entry(EngineID, UserName, AuthP, AuthKey, PrivP, PrivKey) -> usm_entry()")
               "snmpm_conf:read_agents_config/1"
               ("http://www.erlang.org/doc/man/snmpm_conf.html#read_agents_config-1" "read_agents_config(Dir) -> Conf")
               "snmpm_conf:append_agents_config/2"
               ("http://www.erlang.org/doc/man/snmpm_conf.html#append_agents_config-2" "append_agents_config(Dir, Conf) -> ok")
               "snmpm_conf:write_agents_config/3"
               ("http://www.erlang.org/doc/man/snmpm_conf.html#write_agents_config-3" "write_agents_config(Dir, Hdr, Conf) -> ok")
               "snmpm_conf:write_agents_config/2"
               ("http://www.erlang.org/doc/man/snmpm_conf.html#write_agents_config-2" "write_agents_config(Dir, Conf) -> ok")
               "snmpm_conf:agents_entry/12"
               ("http://www.erlang.org/doc/man/snmpm_conf.html#agents_entry-12" "agents_entry(UserId, TargetName, Comm, Domain, Addr, EngineID, Timeout, MaxMessageSize, Version, SecModel, SecName, SecLevel) -> agents_entry()")
               "snmpm_conf:read_users_config/1"
               ("http://www.erlang.org/doc/man/snmpm_conf.html#read_users_config-1" "read_users_config(Dir) -> Conf")
               "snmpm_conf:append_users_config/2"
               ("http://www.erlang.org/doc/man/snmpm_conf.html#append_users_config-2" "append_users_config(Dir, Conf) -> ok")
               "snmpm_conf:write_users_config/3"
               ("http://www.erlang.org/doc/man/snmpm_conf.html#write_users_config-3" "write_users_config(Dir, Hdr, Conf) -> ok")
               "snmpm_conf:write_users_config/2"
               ("http://www.erlang.org/doc/man/snmpm_conf.html#write_users_config-2" "write_users_config(Dir, Conf) -> ok")
               "snmpm_conf:users_entry/3"
               ("http://www.erlang.org/doc/man/snmpm_conf.html#users_entry-3" "users_entry(UserId, UserMod, UserData) -> users_entry()")
               "snmpm_conf:users_entry/2"
               ("http://www.erlang.org/doc/man/snmpm_conf.html#users_entry-2" "users_entry(UserId, UserMod) -> users_entry()")
               "snmpm_conf:users_entry/1"
               ("http://www.erlang.org/doc/man/snmpm_conf.html#users_entry-1" "users_entry(UserId) -> users_entry()")
               "snmpm_conf:read_manager_config/1"
               ("http://www.erlang.org/doc/man/snmpm_conf.html#read_manager_config-1" "read_manager_config(Dir) -> Conf")
               "snmpm_conf:append_manager_config/2"
               ("http://www.erlang.org/doc/man/snmpm_conf.html#append_manager_config-2" "append_manager_config(Dir, Conf) -> ok")
               "snmpm_conf:write_manager_config/3"
               ("http://www.erlang.org/doc/man/snmpm_conf.html#write_manager_config-3" "write_manager_config(Dir, Hdr, Conf) -> ok")
               "snmpm_conf:write_manager_config/2"
               ("http://www.erlang.org/doc/man/snmpm_conf.html#write_manager_config-2" "write_manager_config(Dir, Conf) -> ok")
               "snmpm_conf:manager_entry/2"
               ("http://www.erlang.org/doc/man/snmpm_conf.html#manager_entry-2" "manager_entry(Tag, Val) -> manager_entry()")
               "snmpm_mpd:generate_response_msg/4"
               ("http://www.erlang.org/doc/man/snmpm_mpd.html#generate_response_msg-4" "generate_response_msg(Vsn, Pdu, MsgData, Logger) -> {ok, Packet} | {discarded, Reason}")
               "snmpm_mpd:generate_msg/5"
               ("http://www.erlang.org/doc/man/snmpm_mpd.html#generate_msg-5" "generate_msg(Vsn, NoteStore, Pdu, MsgData, Logger) -> {ok, Packet} | {discarded, Reason}")
               "snmpm_mpd:process_msg/6"
               ("http://www.erlang.org/doc/man/snmpm_mpd.html#process_msg-6" "process_msg(Msg, Domain, Addr, State, NoteStore, Logger) -> {ok, Vsn, Pdu, PduMS, MsgData} | {discarded, Reason}")
               "snmpm_mpd:init_mpd/1"
               ("http://www.erlang.org/doc/man/snmpm_mpd.html#init_mpd-1" "init_mpd(Vsns) -> mpd_state()")
               "snmpm_network_interface:set_log_type/2"
               ("http://www.erlang.org/doc/man/snmpm_network_interface.html#set_log_type-2" "set_log_type(Pid, NewType) -> {ok, OldType} | {error, Reason}")
               "snmpm_network_interface:get_log_type/1"
               ("http://www.erlang.org/doc/man/snmpm_network_interface.html#get_log_type-1" "get_log_type(Pid) -> {ok, LogType} | {error, Reason}")
               "snmpm_network_interface:verbosity/2"
               ("http://www.erlang.org/doc/man/snmpm_network_interface.html#verbosity-2" "verbosity(Pid, Verbosity) -> void()")
               "snmpm_network_interface:info/1"
               ("http://www.erlang.org/doc/man/snmpm_network_interface.html#info-1" "info(Pid) -> [{Key, Value}]")
               "snmpm_network_interface:note_store/2"
               ("http://www.erlang.org/doc/man/snmpm_network_interface.html#note_store-2" "note_store(Pid, NoteStore) -> void()")
               "snmpm_network_interface:inform_response/4"
               ("http://www.erlang.org/doc/man/snmpm_network_interface.html#inform_response-4" "inform_response(Pid, Ref, Addr, Port) -> void()")
               "snmpm_network_interface:send_pdu/7"
               ("http://www.erlang.org/doc/man/snmpm_network_interface.html#send_pdu-7" "send_pdu(Pid, Pdu, Vsn, MsgData, Domain, Addr, ExtraInfo) -> void()")
               "snmpm_network_interface:stop/1"
               ("http://www.erlang.org/doc/man/snmpm_network_interface.html#stop-1" "stop(Pid) -> void()")
               "snmpm_network_interface:start_link/2"
               ("http://www.erlang.org/doc/man/snmpm_network_interface.html#start_link-2" "start_link(Server, NoteStore) -> {ok, Pid} | {error, Reason}")
               "snmpm_network_interface_filter:accept_send_pdu/3"
               ("http://www.erlang.org/doc/man/snmpm_network_interface_filter.html#accept_send_pdu-3" "accept_send_pdu(Domain, Addr, PduType) -> boolean()")
               "snmpm_network_interface_filter:accept_recv_pdu/3"
               ("http://www.erlang.org/doc/man/snmpm_network_interface_filter.html#accept_recv_pdu-3" "accept_recv_pdu(Domain, Addr, PduType) -> boolean()")
               "snmpm_network_interface_filter:accept_send/2"
               ("http://www.erlang.org/doc/man/snmpm_network_interface_filter.html#accept_send-2" "accept_send(Domain, Addr) -> boolean()")
               "snmpm_network_interface_filter:accept_recv/2"
               ("http://www.erlang.org/doc/man/snmpm_network_interface_filter.html#accept_recv-2" "accept_recv(Domain, Addr) -> boolean()")
               "snmpm_user:handle_invalid_result/2"
               ("http://www.erlang.org/doc/man/snmpm_user.html#handle_invalid_result-2" "handle_invalid_result(IN, OUT) -> void()")
               "snmpm_user:handle_report/3"
               ("http://www.erlang.org/doc/man/snmpm_user.html#handle_report-3" "handle_report(TargetName, SnmpReportInfo, UserData) -> Reply")
               "snmpm_user:handle_inform/3"
               ("http://www.erlang.org/doc/man/snmpm_user.html#handle_inform-3" "handle_inform(TargetName, SnmpInformInfo, UserData) -> Reply")
               "snmpm_user:handle_trap/3"
               ("http://www.erlang.org/doc/man/snmpm_user.html#handle_trap-3" "handle_trap(TargetName, SnmpTrapInfo, UserData) -> Reply")
               "snmpm_user:handle_pdu/4"
               ("http://www.erlang.org/doc/man/snmpm_user.html#handle_pdu-4" "handle_pdu(TargetName, ReqId, SnmpPduInfo, UserData) -> void()")
               "snmpm_user:handle_agent/5"
               ("http://www.erlang.org/doc/man/snmpm_user.html#handle_agent-5" "handle_agent(Domain, Addr, Type, SnmpInfo, UserData) -> Reply")
               "snmpm_user:handle_error/3"
               ("http://www.erlang.org/doc/man/snmpm_user.html#handle_error-3" "handle_error(ReqId, Reason, UserData) -> void()")
               "sofs:weak_relation/1"
               ("http://www.erlang.org/doc/man/sofs.html#weak_relation-1" "weak_relation(BinRel1) -> BinRel2")
               "sofs:union_of_family/1"
               ("http://www.erlang.org/doc/man/sofs.html#union_of_family-1" "union_of_family(Family) -> Set")
               "sofs:union/2"
               ("http://www.erlang.org/doc/man/sofs.html#union-2" "union(Set1, Set2) -> Set3")
               "sofs:union/1"
               ("http://www.erlang.org/doc/man/sofs.html#union-1" "union(SetOfSets) -> Set")
               "sofs:"
               ("http://www.erlang.org/doc/man/sofs.html#type-tuple_of" "tuple_of(T)")
               "sofs:type/1"
               ("http://www.erlang.org/doc/man/sofs.html#type-1" "type(AnySet) -> Type")
               "sofs:to_sets/1"
               ("http://www.erlang.org/doc/man/sofs.html#to_sets-1" "to_sets(ASet) -> Sets")
               "sofs:to_external/1"
               ("http://www.erlang.org/doc/man/sofs.html#to_external-1" "to_external(AnySet) -> ExternalSet")
               "sofs:symmetric_partition/2"
               ("http://www.erlang.org/doc/man/sofs.html#symmetric_partition-2" "symmetric_partition(Set1, Set2) -> {Set3, Set4, Set5}")
               "sofs:symdiff/2"
               ("http://www.erlang.org/doc/man/sofs.html#symdiff-2" "symdiff(Set1, Set2) -> Set3")
               "sofs:substitution/2"
               ("http://www.erlang.org/doc/man/sofs.html#substitution-2" "substitution(SetFun, Set1) -> Set2")
               "sofs:strict_relation/1"
               ("http://www.erlang.org/doc/man/sofs.html#strict_relation-1" "strict_relation(BinRel1) -> BinRel2")
               "sofs:specification/2"
               ("http://www.erlang.org/doc/man/sofs.html#specification-2" "specification(Fun, Set1) -> Set2")
               "sofs:set/2"
               ("http://www.erlang.org/doc/man/sofs.html#set-2" "set(Terms, Type) -> Set")
               "sofs:set/1"
               ("http://www.erlang.org/doc/man/sofs.html#set-1" "set(Terms) -> Set")
               "sofs:restriction/3"
               ("http://www.erlang.org/doc/man/sofs.html#restriction-3" "restriction(SetFun, Set1, Set2) -> Set3")
               "sofs:restriction/2"
               ("http://www.erlang.org/doc/man/sofs.html#restriction-2" "restriction(BinRel1, Set) -> BinRel2")
               "sofs:relative_product1/2"
               ("http://www.erlang.org/doc/man/sofs.html#relative_product1-2" "relative_product1(BinRel1, BinRel2) -> BinRel3")
               "sofs:relative_product/2"
               ("http://www.erlang.org/doc/man/sofs.html#relative_product-2" "relative_product(ListOfBinRels, BinRel1) -> BinRel2")
               "sofs:relative_product/1"
               ("http://www.erlang.org/doc/man/sofs.html#relative_product-1" "relative_product(ListOfBinRels) -> BinRel2")
               "sofs:relation_to_family/1"
               ("http://www.erlang.org/doc/man/sofs.html#relation_to_family-1" "relation_to_family(BinRel) -> Family")
               "sofs:relation/2"
               ("http://www.erlang.org/doc/man/sofs.html#relation-2" "relation(Tuples, Type) -> Relation")
               "sofs:relation/1"
               ("http://www.erlang.org/doc/man/sofs.html#relation-1" "relation(Tuples) -> Relation")
               "sofs:range/1"
               ("http://www.erlang.org/doc/man/sofs.html#range-1" "range(BinRel) -> Set")
               "sofs:projection/2"
               ("http://www.erlang.org/doc/man/sofs.html#projection-2" "projection(SetFun, Set1) -> Set2")
               "sofs:product/2"
               ("http://www.erlang.org/doc/man/sofs.html#product-2" "product(Set1, Set2) -> BinRel")
               "sofs:product/1"
               ("http://www.erlang.org/doc/man/sofs.html#product-1" "product(TupleOfSets) -> Relation")
               "sofs:partition_family/2"
               ("http://www.erlang.org/doc/man/sofs.html#partition_family-2" "partition_family(SetFun, Set) -> Family")
               "sofs:partition/3"
               ("http://www.erlang.org/doc/man/sofs.html#partition-3" "partition(SetFun, Set1, Set2) -> {Set3, Set4}")
               "sofs:partition/2"
               ("http://www.erlang.org/doc/man/sofs.html#partition-2" "partition(SetFun, Set) -> Partition")
               "sofs:partition/1"
               ("http://www.erlang.org/doc/man/sofs.html#partition-1" "partition(SetOfSets) -> Partition")
               "sofs:no_elements/1"
               ("http://www.erlang.org/doc/man/sofs.html#no_elements-1" "no_elements(ASet) -> NoElements")
               "sofs:multiple_relative_product/2"
               ("http://www.erlang.org/doc/man/sofs.html#multiple_relative_product-2" "multiple_relative_product(TupleOfBinRels, BinRel1) -> BinRel2")
               "sofs:join/4"
               ("http://www.erlang.org/doc/man/sofs.html#join-4" "join(Relation1, I, Relation2, J) -> Relation3")
               "sofs:is_type/1"
               ("http://www.erlang.org/doc/man/sofs.html#is_type-1" "is_type(Term) -> Bool")
               "sofs:is_subset/2"
               ("http://www.erlang.org/doc/man/sofs.html#is_subset-2" "is_subset(Set1, Set2) -> Bool")
               "sofs:is_sofs_set/1"
               ("http://www.erlang.org/doc/man/sofs.html#is_sofs_set-1" "is_sofs_set(Term) -> Bool")
               "sofs:is_set/1"
               ("http://www.erlang.org/doc/man/sofs.html#is_set-1" "is_set(AnySet) -> Bool")
               "sofs:is_equal/2"
               ("http://www.erlang.org/doc/man/sofs.html#is_equal-2" "is_equal(AnySet1, AnySet2) -> Bool")
               "sofs:is_empty_set/1"
               ("http://www.erlang.org/doc/man/sofs.html#is_empty_set-1" "is_empty_set(AnySet) -> Bool")
               "sofs:is_disjoint/2"
               ("http://www.erlang.org/doc/man/sofs.html#is_disjoint-2" "is_disjoint(Set1, Set2) -> Bool")
               "sofs:is_a_function/1"
               ("http://www.erlang.org/doc/man/sofs.html#is_a_function-1" "is_a_function(BinRel) -> Bool")
               "sofs:inverse_image/2"
               ("http://www.erlang.org/doc/man/sofs.html#inverse_image-2" "inverse_image(BinRel, Set1) -> Set2")
               "sofs:inverse/1"
               ("http://www.erlang.org/doc/man/sofs.html#inverse-1" "inverse(Function1) -> Function2")
               "sofs:intersection_of_family/1"
               ("http://www.erlang.org/doc/man/sofs.html#intersection_of_family-1" "intersection_of_family(Family) -> Set")
               "sofs:intersection/2"
               ("http://www.erlang.org/doc/man/sofs.html#intersection-2" "intersection(Set1, Set2) -> Set3")
               "sofs:intersection/1"
               ("http://www.erlang.org/doc/man/sofs.html#intersection-1" "intersection(SetOfSets) -> Set")
               "sofs:image/2"
               ("http://www.erlang.org/doc/man/sofs.html#image-2" "image(BinRel, Set1) -> Set2")
               "sofs:from_term/2"
               ("http://www.erlang.org/doc/man/sofs.html#from_term-2" "from_term(Term, Type) -> AnySet")
               "sofs:from_term/1"
               ("http://www.erlang.org/doc/man/sofs.html#from_term-1" "from_term(Term) -> AnySet")
               "sofs:from_sets/1"
               ("http://www.erlang.org/doc/man/sofs.html#from_sets-1" "from_sets(ListOfSets) -> Set")
               "sofs:from_external/2"
               ("http://www.erlang.org/doc/man/sofs.html#from_external-2" "from_external(ExternalSet, Type) -> AnySet")
               "sofs:field/1"
               ("http://www.erlang.org/doc/man/sofs.html#field-1" "field(BinRel) -> Set")
               "sofs:family_union/2"
               ("http://www.erlang.org/doc/man/sofs.html#family_union-2" "family_union(Family1, Family2) -> Family3")
               "sofs:family_union/1"
               ("http://www.erlang.org/doc/man/sofs.html#family_union-1" "family_union(Family1) -> Family2")
               "sofs:family_to_relation/1"
               ("http://www.erlang.org/doc/man/sofs.html#family_to_relation-1" "family_to_relation(Family) -> BinRel")
               "sofs:family_to_digraph/2"
               ("http://www.erlang.org/doc/man/sofs.html#family_to_digraph-2" "family_to_digraph(Family, GraphType) -> Graph")
               "sofs:family_to_digraph/1"
               ("http://www.erlang.org/doc/man/sofs.html#family_to_digraph-1" "family_to_digraph(Family) -> Graph")
               "sofs:family_specification/2"
               ("http://www.erlang.org/doc/man/sofs.html#family_specification-2" "family_specification(Fun, Family1) -> Family2")
               "sofs:family_range/1"
               ("http://www.erlang.org/doc/man/sofs.html#family_range-1" "family_range(Family1) -> Family2")
               "sofs:family_projection/2"
               ("http://www.erlang.org/doc/man/sofs.html#family_projection-2" "family_projection(SetFun, Family1) -> Family2")
               "sofs:family_intersection/2"
               ("http://www.erlang.org/doc/man/sofs.html#family_intersection-2" "family_intersection(Family1, Family2) -> Family3")
               "sofs:family_intersection/1"
               ("http://www.erlang.org/doc/man/sofs.html#family_intersection-1" "family_intersection(Family1) -> Family2")
               "sofs:family_field/1"
               ("http://www.erlang.org/doc/man/sofs.html#family_field-1" "family_field(Family1) -> Family2")
               "sofs:family_domain/1"
               ("http://www.erlang.org/doc/man/sofs.html#family_domain-1" "family_domain(Family1) -> Family2")
               "sofs:family_difference/2"
               ("http://www.erlang.org/doc/man/sofs.html#family_difference-2" "family_difference(Family1, Family2) -> Family3")
               "sofs:family/2"
               ("http://www.erlang.org/doc/man/sofs.html#family-2" "family(Tuples, Type) -> Family")
               "sofs:family/1"
               ("http://www.erlang.org/doc/man/sofs.html#family-1" "family(Tuples) -> Family")
               "sofs:extension/3"
               ("http://www.erlang.org/doc/man/sofs.html#extension-3" "extension(BinRel1, Set, AnySet) -> BinRel2")
               "sofs:empty_set/0"
               ("http://www.erlang.org/doc/man/sofs.html#empty_set-0" "empty_set() -> Set")
               "sofs:drestriction/3"
               ("http://www.erlang.org/doc/man/sofs.html#drestriction-3" "drestriction(SetFun, Set1, Set2) -> Set3")
               "sofs:drestriction/2"
               ("http://www.erlang.org/doc/man/sofs.html#drestriction-2" "drestriction(BinRel1, Set) -> BinRel2")
               "sofs:domain/1"
               ("http://www.erlang.org/doc/man/sofs.html#domain-1" "domain(BinRel) -> Set")
               "sofs:digraph_to_family/2"
               ("http://www.erlang.org/doc/man/sofs.html#digraph_to_family-2" "digraph_to_family(Graph, Type) -> Family")
               "sofs:digraph_to_family/1"
               ("http://www.erlang.org/doc/man/sofs.html#digraph_to_family-1" "digraph_to_family(Graph) -> Family")
               "sofs:difference/2"
               ("http://www.erlang.org/doc/man/sofs.html#difference-2" "difference(Set1, Set2) -> Set3")
               "sofs:converse/1"
               ("http://www.erlang.org/doc/man/sofs.html#converse-1" "converse(BinRel1) -> BinRel2")
               "sofs:constant_function/2"
               ("http://www.erlang.org/doc/man/sofs.html#constant_function-2" "constant_function(Set, AnySet) -> Function")
               "sofs:composite/2"
               ("http://www.erlang.org/doc/man/sofs.html#composite-2" "composite(Function1, Function2) -> Function3")
               "sofs:canonical_relation/1"
               ("http://www.erlang.org/doc/man/sofs.html#canonical_relation-1" "canonical_relation(SetOfSets) -> BinRel")
               "sofs:a_function/2"
               ("http://www.erlang.org/doc/man/sofs.html#a_function-2" "a_function(Tuples, Type) -> Function")
               "sofs:a_function/1"
               ("http://www.erlang.org/doc/man/sofs.html#a_function-1" "a_function(Tuples) -> Function")
               "sofs:type()"
               ("http://www.erlang.org/doc/man/sofs.html#type-type" "type() = term()")
               "sofs:spec_fun()"
               ("http://www.erlang.org/doc/man/sofs.html#type-spec_fun" "spec_fun() = {external, fun(( external_set() ) -> boolean())} | fun(( anyset() ) -> boolean())")
               "sofs:set_fun()"
               ("http://www.erlang.org/doc/man/sofs.html#type-set_fun" "set_fun() = integer() >= 1 | {external, fun(( external_set() ) -> external_set() )} | fun(( anyset() ) -> anyset() )")
               "sofs:set_of_sets()"
               ("http://www.erlang.org/doc/man/sofs.html#type-set_of_sets" "set_of_sets() = a_set()")
               "sofs:a_set()"
               ("http://www.erlang.org/doc/man/sofs.html#type-a_set" "a_set()")
               "sofs:relation()"
               ("http://www.erlang.org/doc/man/sofs.html#type-relation" "relation() = a_set()")
               "sofs:ordset()"
               ("http://www.erlang.org/doc/man/sofs.html#type-ordset" "ordset()")
               "sofs:a_function()"
               ("http://www.erlang.org/doc/man/sofs.html#type-a_function" "a_function() = relation()")
               "sofs:family()"
               ("http://www.erlang.org/doc/man/sofs.html#type-family" "family() = a_function()")
               "sofs:external_set()"
               ("http://www.erlang.org/doc/man/sofs.html#type-external_set" "external_set() = term()")
               "sofs:binary_relation()"
               ("http://www.erlang.org/doc/man/sofs.html#type-binary_relation" "binary_relation() = relation()")
               "sofs:anyset()"
               ("http://www.erlang.org/doc/man/sofs.html#type-anyset" "anyset() = ordset() | a_set()")
               "ssh:stop_listener/2"
               ("http://www.erlang.org/doc/man/ssh.html#stop_listener-2" "stop_listener(Address, Port) -> ok")
               "ssh:stop_listener/1"
               ("http://www.erlang.org/doc/man/ssh.html#stop_listener-1" "stop_listener(DaemonRef) ->")
               "ssh:stop_daemon/2"
               ("http://www.erlang.org/doc/man/ssh.html#stop_daemon-2" "stop_daemon(Address, Port) -> ok")
               "ssh:stop_daemon/1"
               ("http://www.erlang.org/doc/man/ssh.html#stop_daemon-1" "stop_daemon(DaemonRef) ->")
               "ssh:stop/0"
               ("http://www.erlang.org/doc/man/ssh.html#stop-0" "stop() -> ok | {error, Reason}")
               "ssh:start/1"
               ("http://www.erlang.org/doc/man/ssh.html#start-1" "start(Type) -> ok | {error, Reason}")
               "ssh:start/0"
               ("http://www.erlang.org/doc/man/ssh.html#start-0" "start() ->")
               "ssh:shell/1"
               ("http://www.erlang.org/doc/man/ssh.html#shell-1" "shell(Host) ->")
               "ssh:shell/3"
               ("http://www.erlang.org/doc/man/ssh.html#shell-3" "shell(Host, Port, Option) ->")
               "ssh:shell/2"
               ("http://www.erlang.org/doc/man/ssh.html#shell-2" "shell(Host, Option) ->")
               "ssh:default_algorithms/0"
               ("http://www.erlang.org/doc/man/ssh.html#default_algorithms-0" "default_algorithms() -> algs_list()")
               "ssh:daemon_info/1"
               ("http://www.erlang.org/doc/man/ssh.html#daemon_info-1" "daemon_info(Daemon) -> {ok, [{port,Port}]} | {error,Error}")
               "ssh:daemon/2"
               ("http://www.erlang.org/doc/man/ssh.html#daemon-2" "daemon(Port, Options) ->")
               "ssh:daemon/1"
               ("http://www.erlang.org/doc/man/ssh.html#daemon-1" "daemon(Port) ->")
               "ssh:daemon/3"
               ("http://www.erlang.org/doc/man/ssh.html#daemon-3" "daemon(HostAddress, Port, Options) ->")
               "ssh:connection_info/2"
               ("http://www.erlang.org/doc/man/ssh.html#connection_info-2" "connection_info(ConnectionRef, [Option]) ->[{Option,\n      Value}]")
               "ssh:connect/3"
               ("http://www.erlang.org/doc/man/ssh.html#connect-3" "connect(Host, Port, Options) ->")
               "ssh:connect/2"
               ("http://www.erlang.org/doc/man/ssh.html#connect-2" "connect(TcpSocket, Options) ->")
               "ssh:connect/4"
               ("http://www.erlang.org/doc/man/ssh.html#connect-4" "connect(Host, Port, Options, Timeout) ->")
               "ssh:close/1"
               ("http://www.erlang.org/doc/man/ssh.html#close-1" "close(ConnectionRef) -> ok")
               "ssh_channel:Module:terminate/2"
               ("http://www.erlang.org/doc/man/ssh_channel.html#Module:terminate-2" "Module:terminate(Reason, State) -> _")
               "ssh_channel:Module:handle_ssh_msg/2"
               ("http://www.erlang.org/doc/man/ssh_channel.html#Module:handle_ssh_msg-2" "Module:handle_ssh_msg(Msg, State) -> {ok, State} | {stop,\n      ChannelId, State}")
               "ssh_channel:Module:handle_msg/2"
               ("http://www.erlang.org/doc/man/ssh_channel.html#Module:handle_msg-2" "Module:handle_msg(Msg, State) -> {ok, State} |\n      {stop, ChannelId, State}")
               "ssh_channel:Module:handle_cast/2"
               ("http://www.erlang.org/doc/man/ssh_channel.html#Module:handle_cast-2" "Module:handle_cast(Msg, State) -> Result")
               "ssh_channel:Module:handle_call/3"
               ("http://www.erlang.org/doc/man/ssh_channel.html#Module:handle_call-3" "Module:handle_call(Msg, From, State) -> Result")
               "ssh_channel:Module:init/1"
               ("http://www.erlang.org/doc/man/ssh_channel.html#Module:init-1" "Module:init(Args) -> {ok, State} | {ok, State, timeout()} |\n      {stop, Reason}")
               "ssh_channel:Module:code_change/3"
               ("http://www.erlang.org/doc/man/ssh_channel.html#Module:code_change-3" "Module:code_change(OldVsn, State, Extra) -> {ok,\n      NewState}")
               "ssh_channel:start_link/4"
               ("http://www.erlang.org/doc/man/ssh_channel.html#start_link-4" "start_link(SshConnection, ChannelId, ChannelCb, CbInitArgs) ->\n      {ok, ChannelRef} | {error, Reason}")
               "ssh_channel:start/4"
               ("http://www.erlang.org/doc/man/ssh_channel.html#start-4" "start(SshConnection, ChannelId, ChannelCb, CbInitArgs) ->")
               "ssh_channel:reply/2"
               ("http://www.erlang.org/doc/man/ssh_channel.html#reply-2" "reply(Client, Reply) -> _")
               "ssh_channel:init/1"
               ("http://www.erlang.org/doc/man/ssh_channel.html#init-1" "init(Options) -> {ok, State} |  {ok, State, Timeout} | {stop, Reason}")
               "ssh_channel:enter_loop/1"
               ("http://www.erlang.org/doc/man/ssh_channel.html#enter_loop-1" "enter_loop(State) -> _")
               "ssh_channel:cast/2"
               ("http://www.erlang.org/doc/man/ssh_channel.html#cast-2" "cast(ChannelRef, Msg) -> ok")
               "ssh_channel:call/3"
               ("http://www.erlang.org/doc/man/ssh_channel.html#call-3" "call(ChannelRef, Msg, Timeout) -> Reply | {error, Reason}")
               "ssh_channel:call/2"
               ("http://www.erlang.org/doc/man/ssh_channel.html#call-2" "call(ChannelRef, Msg) ->")
               "ssh_client_key_api:Module:user_key/2"
               ("http://www.erlang.org/doc/man/ssh_client_key_api.html#Module:user_key-2" "Module:user_key(Algorithm, ConnectOptions) ->\n      {ok,  PrivateKey}  | {error, Reason}")
               "ssh_client_key_api:Module:is_host_key/4"
               ("http://www.erlang.org/doc/man/ssh_client_key_api.html#Module:is_host_key-4" "Module:is_host_key(Key, Host, Algorithm, ConnectOptions) -> Result")
               "ssh_client_key_api:Module:add_host_key/3"
               ("http://www.erlang.org/doc/man/ssh_client_key_api.html#Module:add_host_key-3" "Module:add_host_key(HostNames, Key, ConnectOptions) -> ok | {error, Reason}")
               "ssh_connection:subsystem/4"
               ("http://www.erlang.org/doc/man/ssh_connection.html#subsystem-4" "subsystem(ConnectionRef, ChannelId, Subsystem, Timeout) -> ssh_request_status() |\n      {error, reason()}")
               "ssh_connection:shell/2"
               ("http://www.erlang.org/doc/man/ssh_connection.html#shell-2" "shell(ConnectionRef, ChannelId) -> ssh_request_status() | {error, closed}")
               "ssh_connection:setenv/5"
               ("http://www.erlang.org/doc/man/ssh_connection.html#setenv-5" "setenv(ConnectionRef, ChannelId, Var, Value, TimeOut) -> ssh_request_status() |\n      {error, reason()}")
               "ssh_connection:session_channel/4"
               ("http://www.erlang.org/doc/man/ssh_connection.html#session_channel-4" "session_channel(ConnectionRef, InitialWindowSize,\n       MaxPacketSize, Timeout) -> {ok, ssh_channel_id()} | {error, reason()}")
               "ssh_connection:session_channel/2"
               ("http://www.erlang.org/doc/man/ssh_connection.html#session_channel-2" "session_channel(ConnectionRef, Timeout) ->")
               "ssh_connection:send_eof/2"
               ("http://www.erlang.org/doc/man/ssh_connection.html#send_eof-2" "send_eof(ConnectionRef, ChannelId) -> ok | {error, closed}")
               "ssh_connection:send/5"
               ("http://www.erlang.org/doc/man/ssh_connection.html#send-5" "send(ConnectionRef, ChannelId, Type, Data, TimeOut) ->\n       ok | {error, timeout} | {error, closed}")
               "ssh_connection:send/4"
               ("http://www.erlang.org/doc/man/ssh_connection.html#send-4" "send(ConnectionRef, ChannelId, Data, Timeout) ->")
               "ssh_connection:send/3"
               ("http://www.erlang.org/doc/man/ssh_connection.html#send-3" "send(ConnectionRef, ChannelId, Data) ->")
               "ssh_connection:reply_request/4"
               ("http://www.erlang.org/doc/man/ssh_connection.html#reply_request-4" "reply_request(ConnectionRef, WantReply, Status, ChannelId) -> ok")
               "ssh_connection:ptty_alloc/4"
               ("http://www.erlang.org/doc/man/ssh_connection.html#ptty_alloc-4" "ptty_alloc(ConnectionRef, ChannelId, Options, Timeout) ->  > ssh_request_status() |\n     {error, reason()}")
               "ssh_connection:ptty_alloc/3"
               ("http://www.erlang.org/doc/man/ssh_connection.html#ptty_alloc-3" "ptty_alloc(ConnectionRef, ChannelId, Options) ->")
               "ssh_connection:exit_status/3"
               ("http://www.erlang.org/doc/man/ssh_connection.html#exit_status-3" "exit_status(ConnectionRef, ChannelId, Status) -> ok")
               "ssh_connection:exec/4"
               ("http://www.erlang.org/doc/man/ssh_connection.html#exec-4" "exec(ConnectionRef, ChannelId, Command, TimeOut) -> ssh_request_status() |\n     {error, reason()}")
               "ssh_connection:close/2"
               ("http://www.erlang.org/doc/man/ssh_connection.html#close-2" "close(ConnectionRef, ChannelId) -> ok")
               "ssh_connection:adjust_window/3"
               ("http://www.erlang.org/doc/man/ssh_connection.html#adjust_window-3" "adjust_window(ConnectionRef, ChannelId, NumOfBytes) -> ok")
               "ssh_server_key_api:Module:is_auth_key/3"
               ("http://www.erlang.org/doc/man/ssh_server_key_api.html#Module:is_auth_key-3" "Module:is_auth_key(Key, User, DaemonOptions) -> Result")
               "ssh_server_key_api:Module:host_key/2"
               ("http://www.erlang.org/doc/man/ssh_server_key_api.html#Module:host_key-2" "Module:host_key(Algorithm, DaemonOptions) ->\n      {ok, Key} | {error, Reason}")
               "ssh_sftp:write_file_info/4"
               ("http://www.erlang.org/doc/man/ssh_sftp.html#write_file_info-4" "write_file_info(ChannelPid, Name, Info, Timeout) -> ok | {error, reason()}")
               "ssh_sftp:write_file_info/3"
               ("http://www.erlang.org/doc/man/ssh_sftp.html#write_file_info-3" "write_file_info(ChannelPid, Name, Info) ->")
               "ssh_sftp:write_file/4"
               ("http://www.erlang.org/doc/man/ssh_sftp.html#write_file-4" "write_file(ChannelPid, File, Iolist, Timeout) -> ok | {error, reason()}")
               "ssh_sftp:write_file/3"
               ("http://www.erlang.org/doc/man/ssh_sftp.html#write_file-3" "write_file(ChannelPid, File, Iolist) ->")
               "ssh_sftp:write/4"
               ("http://www.erlang.org/doc/man/ssh_sftp.html#write-4" "write(ChannelPid, Handle, Data, Timeout) -> ok | {error, reason()}")
               "ssh_sftp:write/3"
               ("http://www.erlang.org/doc/man/ssh_sftp.html#write-3" "write(ChannelPid, Handle, Data) ->")
               "ssh_sftp:stop_channel/1"
               ("http://www.erlang.org/doc/man/ssh_sftp.html#stop_channel-1" "stop_channel(ChannelPid) -> ok")
               "ssh_sftp:start_channel/2"
               ("http://www.erlang.org/doc/man/ssh_sftp.html#start_channel-2" "start_channel(ConnectionRef, Options) ->\n      {ok, Pid} | {error, reason()|term()}")
               "ssh_sftp:start_channel/1"
               ("http://www.erlang.org/doc/man/ssh_sftp.html#start_channel-1" "start_channel(ConnectionRef) ->")
               "ssh_sftp:start_channel/3"
               ("http://www.erlang.org/doc/man/ssh_sftp.html#start_channel-3" "start_channel(Host, Port, Options) -> \n      {ok, Pid, ConnectionRef} | {error, reason()|term()}")
               "ssh_sftp:rename/4"
               ("http://www.erlang.org/doc/man/ssh_sftp.html#rename-4" "rename(ChannelPid, OldName, NewName, Timeout) -> ok | {error, reason()}")
               "ssh_sftp:rename/3"
               ("http://www.erlang.org/doc/man/ssh_sftp.html#rename-3" "rename(ChannelPid, OldName, NewName) ->")
               "ssh_sftp:read_link_info/3"
               ("http://www.erlang.org/doc/man/ssh_sftp.html#read_link_info-3" "read_link_info(ChannelPid, Name, Timeout) -> {ok, FileInfo} | {error, reason()}")
               "ssh_sftp:read_link_info/2"
               ("http://www.erlang.org/doc/man/ssh_sftp.html#read_link_info-2" "read_link_info(ChannelPid, Name) -> {ok, FileInfo} | {error, reason()}")
               "ssh_sftp:read_link/3"
               ("http://www.erlang.org/doc/man/ssh_sftp.html#read_link-3" "read_link(ChannelPid, Name, Timeout) -> {ok, Target} | {error, reason()}")
               "ssh_sftp:read_link/2"
               ("http://www.erlang.org/doc/man/ssh_sftp.html#read_link-2" "read_link(ChannelPid, Name) ->")
               "ssh_sftp:read_file_info/3"
               ("http://www.erlang.org/doc/man/ssh_sftp.html#read_file_info-3" "read_file_info(ChannelPid, Name, Timeout) -> {ok, FileInfo} | {error, reason()}")
               "ssh_sftp:read_file_info/2"
               ("http://www.erlang.org/doc/man/ssh_sftp.html#read_file_info-2" "read_file_info(ChannelPid, Name) ->")
               "ssh_sftp:read_file/3"
               ("http://www.erlang.org/doc/man/ssh_sftp.html#read_file-3" "read_file(ChannelPid, File, Timeout) -> {ok, Data} | {error, reason()}")
               "ssh_sftp:read_file/2"
               ("http://www.erlang.org/doc/man/ssh_sftp.html#read_file-2" "read_file(ChannelPid, File) ->")
               "ssh_sftp:read/4"
               ("http://www.erlang.org/doc/man/ssh_sftp.html#read-4" "read(ChannelPid, Handle, Len, Timeout) -> {ok, Data} | eof | {error, reason()}")
               "ssh_sftp:read/3"
               ("http://www.erlang.org/doc/man/ssh_sftp.html#read-3" "read(ChannelPid, Handle, Len) ->")
               "ssh_sftp:pwrite/5"
               ("http://www.erlang.org/doc/man/ssh_sftp.html#pwrite-5" "pwrite(ChannelPid, Handle, Position, Data, Timeout) -> ok | {error, reason()}")
               "ssh_sftp:pwrite/4"
               ("http://www.erlang.org/doc/man/ssh_sftp.html#pwrite-4" "pwrite(ChannelPid, Handle, Position, Data) -> ok")
               "ssh_sftp:pread/5"
               ("http://www.erlang.org/doc/man/ssh_sftp.html#pread-5" "pread(ChannelPid, Handle, Position, Len, Timeout) -> {ok, Data} | eof | {error, reason()}")
               "ssh_sftp:pread/4"
               ("http://www.erlang.org/doc/man/ssh_sftp.html#pread-4" "pread(ChannelPid, Handle, Position, Len) ->")
               "ssh_sftp:position/4"
               ("http://www.erlang.org/doc/man/ssh_sftp.html#position-4" "position(ChannelPid, Handle, Location, Timeout) -> {ok, NewPosition | {error, reason()}")
               "ssh_sftp:position/3"
               ("http://www.erlang.org/doc/man/ssh_sftp.html#position-3" "position(ChannelPid, Handle, Location) ->")
               "ssh_sftp:open_tar/4"
               ("http://www.erlang.org/doc/man/ssh_sftp.html#open_tar-4" "open_tar(ChannelPid, Path, Mode, Timeout) -> {ok, Handle} | {error, reason()}")
               "ssh_sftp:open_tar/3"
               ("http://www.erlang.org/doc/man/ssh_sftp.html#open_tar-3" "open_tar(ChannelPid, Path, Mode) ->")
               "ssh_sftp:opendir/3"
               ("http://www.erlang.org/doc/man/ssh_sftp.html#opendir-3" "opendir(ChannelPid, Path, Timeout) -> {ok, Handle} | {error, reason()}")
               "ssh_sftp:opendir/2"
               ("http://www.erlang.org/doc/man/ssh_sftp.html#opendir-2" "opendir(ChannelPid, Path) ->")
               "ssh_sftp:open/4"
               ("http://www.erlang.org/doc/man/ssh_sftp.html#open-4" "open(ChannelPid, File, Mode, Timeout) -> {ok, Handle} | {error, reason()}")
               "ssh_sftp:open/3"
               ("http://www.erlang.org/doc/man/ssh_sftp.html#open-3" "open(ChannelPid, File, Mode) ->")
               "ssh_sftp:make_symlink/4"
               ("http://www.erlang.org/doc/man/ssh_sftp.html#make_symlink-4" "make_symlink(ChannelPid, Name, Target, Timeout) -> ok | {error, reason()}")
               "ssh_sftp:make_symlink/3"
               ("http://www.erlang.org/doc/man/ssh_sftp.html#make_symlink-3" "make_symlink(ChannelPid, Name, Target) ->")
               "ssh_sftp:make_dir/3"
               ("http://www.erlang.org/doc/man/ssh_sftp.html#make_dir-3" "make_dir(ChannelPid, Name, Timeout) -> ok | {error, reason()}")
               "ssh_sftp:make_dir/2"
               ("http://www.erlang.org/doc/man/ssh_sftp.html#make_dir-2" "make_dir(ChannelPid, Name) ->")
               "ssh_sftp:list_dir/3"
               ("http://www.erlang.org/doc/man/ssh_sftp.html#list_dir-3" "list_dir(ChannelPid, Path, Timeout) -> {ok, Filenames} | {error, reason()}")
               "ssh_sftp:list_dir/2"
               ("http://www.erlang.org/doc/man/ssh_sftp.html#list_dir-2" "list_dir(ChannelPid, Path) ->")
               "ssh_sftp:del_dir/3"
               ("http://www.erlang.org/doc/man/ssh_sftp.html#del_dir-3" "del_dir(ChannelPid, Name, Timeout) -> ok | {error, reason()}")
               "ssh_sftp:del_dir/2"
               ("http://www.erlang.org/doc/man/ssh_sftp.html#del_dir-2" "del_dir(ChannelPid, Name) ->")
               "ssh_sftp:delete/3"
               ("http://www.erlang.org/doc/man/ssh_sftp.html#delete-3" "delete(ChannelPid, Name, Timeout) -> ok | {error, reason()}")
               "ssh_sftp:delete/2"
               ("http://www.erlang.org/doc/man/ssh_sftp.html#delete-2" "delete(ChannelPid, Name) ->")
               "ssh_sftp:close/3"
               ("http://www.erlang.org/doc/man/ssh_sftp.html#close-3" "close(ChannelPid, Handle, Timeout) -> ok | {error, reason()}")
               "ssh_sftp:close/2"
               ("http://www.erlang.org/doc/man/ssh_sftp.html#close-2" "close(ChannelPid, Handle) ->")
               "ssh_sftp:awrite/3"
               ("http://www.erlang.org/doc/man/ssh_sftp.html#awrite-3" "awrite(ChannelPid, Handle, Data) -> {async, N} | {error, reason()}")
               "ssh_sftp:aread/3"
               ("http://www.erlang.org/doc/man/ssh_sftp.html#aread-3" "aread(ChannelPid, Handle, Len) -> {async, N} | {error, reason()}")
               "ssh_sftp:apwrite/4"
               ("http://www.erlang.org/doc/man/ssh_sftp.html#apwrite-4" "apwrite(ChannelPid, Handle, Position, Data) -> {async, N} | {error, reason()}")
               "ssh_sftp:apread/4"
               ("http://www.erlang.org/doc/man/ssh_sftp.html#apread-4" "apread(ChannelPid, Handle, Position, Len) -> {async, N} | {error, reason()}")
               "ssh_sftpd:subsystem_spec/1"
               ("http://www.erlang.org/doc/man/ssh_sftpd.html#subsystem_spec-1" "subsystem_spec(Options) -> subsystem_spec()")
               "ssl:versions/0"
               ("http://www.erlang.org/doc/man/ssl.html#versions-0" "versions() -> [versions_info()]")
               "ssl:transport_accept/2"
               ("http://www.erlang.org/doc/man/ssl.html#transport_accept-2" "transport_accept(ListenSocket, Timeout) ->\n	{ok, NewSocket} | {error, Reason}")
               "ssl:transport_accept/1"
               ("http://www.erlang.org/doc/man/ssl.html#transport_accept-1" "transport_accept(ListenSocket) ->")
               "ssl:stop/0"
               ("http://www.erlang.org/doc/man/ssl.html#stop-0" "stop() -> ok")
               "ssl:start/1"
               ("http://www.erlang.org/doc/man/ssl.html#start-1" "start(Type) -> ok | {error, Reason}")
               "ssl:start/0"
               ("http://www.erlang.org/doc/man/ssl.html#start-0" "start() ->")
               "ssl:sockname/1"
               ("http://www.erlang.org/doc/man/ssl.html#sockname-1" "sockname(Socket) -> {ok, {Address, Port}} |\n	{error, Reason}")
               "ssl:ssl_accept/3"
               ("http://www.erlang.org/doc/man/ssl.html#ssl_accept-3" "ssl_accept(Socket, SslOptions, Timeout) -> {ok, Socket} | ok | {error, Reason}")
               "ssl:ssl_accept/2"
               ("http://www.erlang.org/doc/man/ssl.html#ssl_accept-2" "ssl_accept(Socket, Timeout) -> ok | {error, Reason}")
               "ssl:ssl_accept/1"
               ("http://www.erlang.org/doc/man/ssl.html#ssl_accept-1" "ssl_accept(Socket) ->")
               "ssl:shutdown/2"
               ("http://www.erlang.org/doc/man/ssl.html#shutdown-2" "shutdown(Socket, How) -> ok | {error, Reason}")
               "ssl:setopts/2"
               ("http://www.erlang.org/doc/man/ssl.html#setopts-2" "setopts(Socket, Options) -> ok | {error, Reason}")
               "ssl:send/2"
               ("http://www.erlang.org/doc/man/ssl.html#send-2" "send(Socket, Data) -> ok | {error, Reason}")
               "ssl:renegotiate/1"
               ("http://www.erlang.org/doc/man/ssl.html#renegotiate-1" "renegotiate(Socket) -> ok | {error, Reason}")
               "ssl:recv/3"
               ("http://www.erlang.org/doc/man/ssl.html#recv-3" "recv(Socket, Length, Timeout) -> {ok, Data} | {error,\n	Reason}")
               "ssl:recv/2"
               ("http://www.erlang.org/doc/man/ssl.html#recv-2" "recv(Socket, Length) ->")
               "ssl:prf/5"
               ("http://www.erlang.org/doc/man/ssl.html#prf-5" "prf(Socket, Secret, Label, Seed, WantedLength) -> {ok, binary()} | {error, reason()}")
               "ssl:peername/1"
               ("http://www.erlang.org/doc/man/ssl.html#peername-1" "peername(Socket) -> {ok, {Address, Port}} |\n	{error, Reason}")
               "ssl:peercert/1"
               ("http://www.erlang.org/doc/man/ssl.html#peercert-1" "peercert(Socket) -> {ok, Cert} | {error, Reason}")
               "ssl:negotiated_protocol/1"
               ("http://www.erlang.org/doc/man/ssl.html#negotiated_protocol-1" "negotiated_protocol(Socket) -> {ok, Protocol} | {error, protocol_not_negotiated}")
               "ssl:listen/2"
               ("http://www.erlang.org/doc/man/ssl.html#listen-2" "listen(Port, Options) ->\n	{ok, ListenSocket} | {error, Reason}")
               "ssl:getstat/2"
               ("http://www.erlang.org/doc/man/ssl.html#getstat-2" "getstat(Socket, OptionNames) ->\n        {ok, OptionValues} | {error, inet:posix()}")
               "ssl:getstat/1"
               ("http://www.erlang.org/doc/man/ssl.html#getstat-1" "getstat(Socket) ->\n        {ok, OptionValues} | {error, inet:posix()}")
               "ssl:getopts/2"
               ("http://www.erlang.org/doc/man/ssl.html#getopts-2" "getopts(Socket, OptionNames) ->\n	{ok, [socketoption()]} | {error, Reason}")
               "ssl:format_error/1"
               ("http://www.erlang.org/doc/man/ssl.html#format_error-1" "format_error(Reason) -> string()")
               "ssl:connection_information/2"
               ("http://www.erlang.org/doc/man/ssl.html#connection_information-2" "connection_information(SslSocket, Items) ->\n        {ok, Result} |  {error, Reason}")
               "ssl:connection_information/1"
               ("http://www.erlang.org/doc/man/ssl.html#connection_information-1" "connection_information(SslSocket) ->\n        {ok, Result} |  {error, Reason}")
               "ssl:controlling_process/2"
               ("http://www.erlang.org/doc/man/ssl.html#controlling_process-2" "controlling_process(SslSocket, NewOwner) ->\n	ok | {error, Reason}")
               "ssl:close/2"
               ("http://www.erlang.org/doc/man/ssl.html#close-2" "close(SslSocket, How) -> ok | {ok, port()} | {error, Reason}")
               "ssl:close/1"
               ("http://www.erlang.org/doc/man/ssl.html#close-1" "close(SslSocket) -> ok | {error, Reason}")
               "ssl:connect/4"
               ("http://www.erlang.org/doc/man/ssl.html#connect-4" "connect(Host, Port, Options, Timeout) ->\n	  {ok, SslSocket} | {error, Reason}")
               "ssl:connect/3"
               ("http://www.erlang.org/doc/man/ssl.html#connect-3" "connect(Socket, SslOptions, Timeout) -> {ok, SslSocket}\n	| {error, Reason}")
               "ssl:connect/2"
               ("http://www.erlang.org/doc/man/ssl.html#connect-2" "connect(Socket, SslOptions) ->")
               "ssl:clear_pem_cache/0"
               ("http://www.erlang.org/doc/man/ssl.html#clear_pem_cache-0" "clear_pem_cache() -> ok")
               "ssl:eccs/1"
               ("http://www.erlang.org/doc/man/ssl.html#eccs-1" "eccs(protocol()) -> [named_curve()]")
               "ssl:eccs/0"
               ("http://www.erlang.org/doc/man/ssl.html#eccs-0" "eccs() ->")
               "ssl:cipher_suites/1"
               ("http://www.erlang.org/doc/man/ssl.html#cipher_suites-1" "cipher_suites(Type) -> ciphers()")
               "ssl:cipher_suites/0"
               ("http://www.erlang.org/doc/man/ssl.html#cipher_suites-0" "cipher_suites() ->")
               "ssl:"
               ("http://www.erlang.org/doc/man/ssl.html#type-ssloption" "ssl_option() =")
               "ssl_crl_cache:insert/2"
               ("http://www.erlang.org/doc/man/ssl_crl_cache.html#insert-2" "insert(URI, CRLSrc) -> ok | {error, Reason}")
               "ssl_crl_cache:insert/1"
               ("http://www.erlang.org/doc/man/ssl_crl_cache.html#insert-1" "insert(CRLSrc) -> ok | {error, Reason}")
               "ssl_crl_cache:delete/1"
               ("http://www.erlang.org/doc/man/ssl_crl_cache.html#delete-1" "delete(Entries) -> ok |  {error, Reason}")
               "ssl_crl_cache_api:select/2"
               ("http://www.erlang.org/doc/man/ssl_crl_cache_api.html#select-2" "select(Issuer, DbHandle) -> CRLs")
               "ssl_crl_cache_api:lookup/2"
               ("http://www.erlang.org/doc/man/ssl_crl_cache_api.html#lookup-2" "lookup(DistributionPoint, DbHandle) -> not_available | CRLs")
               "ssl_crl_cache_api:lookup/3"
               ("http://www.erlang.org/doc/man/ssl_crl_cache_api.html#lookup-3" "lookup(DistributionPoint, Issuer, DbHandle) -> not_available | CRLs")
               "ssl_crl_cache_api:fresh_crl/2"
               ("http://www.erlang.org/doc/man/ssl_crl_cache_api.html#fresh_crl-2" "fresh_crl(DistributionPoint, CRL) -> FreshCRL")
               "ssl_session_cache_api:update/3"
               ("http://www.erlang.org/doc/man/ssl_session_cache_api.html#update-3" "update(Cache, Key, Session) -> _")
               "ssl_session_cache_api:terminate/1"
               ("http://www.erlang.org/doc/man/ssl_session_cache_api.html#terminate-1" "terminate(Cache) -> _")
               "ssl_session_cache_api:select_session/2"
               ("http://www.erlang.org/doc/man/ssl_session_cache_api.html#select_session-2" "select_session(Cache, PartialKey) -> [session()]")
               "ssl_session_cache_api:lookup/2"
               ("http://www.erlang.org/doc/man/ssl_session_cache_api.html#lookup-2" "lookup(Cache, Key) -> Entry")
               "ssl_session_cache_api:init/1"
               ("http://www.erlang.org/doc/man/ssl_session_cache_api.html#init-1" "init(Args) -> opaque()")
               "ssl_session_cache_api:foldl/3"
               ("http://www.erlang.org/doc/man/ssl_session_cache_api.html#foldl-3" "foldl(Fun, Acc0, Cache) -> Acc")
               "ssl_session_cache_api:delete/2"
               ("http://www.erlang.org/doc/man/ssl_session_cache_api.html#delete-2" "delete(Cache, Key) -> _")
               "string:words/2"
               ("http://www.erlang.org/doc/man/string.html#words-2" "words(String, Character) -> Count")
               "string:words/1"
               ("http://www.erlang.org/doc/man/string.html#words-1" "words(String) -> Count")
               "string:tokens/2"
               ("http://www.erlang.org/doc/man/string.html#tokens-2" "tokens(String, SeparatorList) -> Tokens")
               "string:to_upper/1"
               ("http://www.erlang.org/doc/man/string.html#to_upper-1" "to_upper(String) -> Result")
               "string:to_lower/1"
               ("http://www.erlang.org/doc/man/string.html#to_lower-1" "to_lower(String) -> Result")
               "string:to_integer/1"
               ("http://www.erlang.org/doc/man/string.html#to_integer-1" "to_integer(String) -> {Int, Rest} | {error, Reason}")
               "string:to_float/1"
               ("http://www.erlang.org/doc/man/string.html#to_float-1" "to_float(String) -> {Float, Rest} | {error, Reason}")
               "string:sub_word/3"
               ("http://www.erlang.org/doc/man/string.html#sub_word-3" "sub_word(String, Number, Character) -> Word")
               "string:sub_word/2"
               ("http://www.erlang.org/doc/man/string.html#sub_word-2" "sub_word(String, Number) -> Word")
               "string:substr/3"
               ("http://www.erlang.org/doc/man/string.html#substr-3" "substr(String, Start, Length) -> SubString")
               "string:substr/2"
               ("http://www.erlang.org/doc/man/string.html#substr-2" "substr(String, Start) -> SubString")
               "string:sub_string/3"
               ("http://www.erlang.org/doc/man/string.html#sub_string-3" "sub_string(String, Start, Stop) -> SubString")
               "string:sub_string/2"
               ("http://www.erlang.org/doc/man/string.html#sub_string-2" "sub_string(String, Start) -> SubString")
               "string:strip/3"
               ("http://www.erlang.org/doc/man/string.html#strip-3" "strip(String, Direction, Character) -> Stripped")
               "string:strip/2"
               ("http://www.erlang.org/doc/man/string.html#strip-2" "strip(String, Direction) -> Stripped")
               "string:strip/1"
               ("http://www.erlang.org/doc/man/string.html#strip-1" "strip(String :: string()) -> string()")
               "string:str/2"
               ("http://www.erlang.org/doc/man/string.html#str-2" "str(String, SubString) -> Index")
               "string:span/2"
               ("http://www.erlang.org/doc/man/string.html#span-2" "span(String, Chars) -> Length")
               "string:rstr/2"
               ("http://www.erlang.org/doc/man/string.html#rstr-2" "rstr(String, SubString) -> Index")
               "string:right/3"
               ("http://www.erlang.org/doc/man/string.html#right-3" "right(String, Number, Character) -> Right")
               "string:right/2"
               ("http://www.erlang.org/doc/man/string.html#right-2" "right(String, Number) -> Right")
               "string:rchr/2"
               ("http://www.erlang.org/doc/man/string.html#rchr-2" "rchr(String, Character) -> Index")
               "string:len/1"
               ("http://www.erlang.org/doc/man/string.html#len-1" "len(String) -> Length")
               "string:left/3"
               ("http://www.erlang.org/doc/man/string.html#left-3" "left(String, Number, Character) -> Left")
               "string:left/2"
               ("http://www.erlang.org/doc/man/string.html#left-2" "left(String, Number) -> Left")
               "string:join/2"
               ("http://www.erlang.org/doc/man/string.html#join-2" "join(StringList, Separator) -> String")
               "string:equal/2"
               ("http://www.erlang.org/doc/man/string.html#equal-2" "equal(String1, String2) -> boolean()")
               "string:cspan/2"
               ("http://www.erlang.org/doc/man/string.html#cspan-2" "cspan(String, Chars) -> Length")
               "string:copies/2"
               ("http://www.erlang.org/doc/man/string.html#copies-2" "copies(String, Number) -> Copies")
               "string:concat/2"
               ("http://www.erlang.org/doc/man/string.html#concat-2" "concat(String1, String2) -> String3")
               "string:chr/2"
               ("http://www.erlang.org/doc/man/string.html#chr-2" "chr(String, Character) -> Index")
               "string:chars/3"
               ("http://www.erlang.org/doc/man/string.html#chars-3" "chars(Character, Number, Tail) -> String")
               "string:chars/2"
               ("http://www.erlang.org/doc/man/string.html#chars-2" "chars(Character, Number) -> String")
               "string:centre/3"
               ("http://www.erlang.org/doc/man/string.html#centre-3" "centre(String, Number, Character) -> Centered")
               "string:centre/2"
               ("http://www.erlang.org/doc/man/string.html#centre-2" "centre(String, Number) -> Centered")
               "supervisor:Module:init/1"
               ("http://www.erlang.org/doc/man/supervisor.html#Module:init-1" "Module:init(Args) -> Result")
               "supervisor:which_children/1"
               ("http://www.erlang.org/doc/man/supervisor.html#which_children-1" "which_children(SupRef) -> [{Id, Child, Type, Modules}]")
               "supervisor:terminate_child/2"
               ("http://www.erlang.org/doc/man/supervisor.html#terminate_child-2" "terminate_child(SupRef, Id) -> Result")
               "supervisor:start_link/3"
               ("http://www.erlang.org/doc/man/supervisor.html#start_link-3" "start_link(SupName, Module, Args) -> startlink_ret()")
               "supervisor:start_link/2"
               ("http://www.erlang.org/doc/man/supervisor.html#start_link-2" "start_link(Module, Args) -> startlink_ret()")
               "supervisor:start_child/2"
               ("http://www.erlang.org/doc/man/supervisor.html#start_child-2" "start_child(SupRef, ChildSpec) -> startchild_ret()")
               "supervisor:restart_child/2"
               ("http://www.erlang.org/doc/man/supervisor.html#restart_child-2" "restart_child(SupRef, Id) -> Result")
               "supervisor:get_childspec/2"
               ("http://www.erlang.org/doc/man/supervisor.html#get_childspec-2" "get_childspec(SupRef, Id) -> Result")
               "supervisor:delete_child/2"
               ("http://www.erlang.org/doc/man/supervisor.html#delete_child-2" "delete_child(SupRef, Id) -> Result")
               "supervisor:count_children/1"
               ("http://www.erlang.org/doc/man/supervisor.html#count_children-1" "count_children(SupRef) -> PropListOfCounts")
               "supervisor:check_childspecs/1"
               ("http://www.erlang.org/doc/man/supervisor.html#check_childspecs-1" "check_childspecs(ChildSpecs) -> Result")
               "supervisor:worker()"
               ("http://www.erlang.org/doc/man/supervisor.html#type-worker" "worker() = worker | supervisor")
               "supervisor:sup_ref()"
               ("http://www.erlang.org/doc/man/supervisor.html#type-sup_ref" "sup_ref() = (Name :: atom()) | {Name :: atom(), Node :: node()} | {global, Name :: atom()} | {via, Module :: module(), Name :: any()} | pid()")
               "supervisor:sup_flags()"
               ("http://www.erlang.org/doc/man/supervisor.html#type-sup_flags" "sup_flags() = #{strategy => strategy() , intensity => integer() >= 0, period => integer() >= 1} | {RestartStrategy :: strategy() , Intensity :: integer() >= 0, Period :: integer() >= 1}")
               "supervisor:strategy()"
               ("http://www.erlang.org/doc/man/supervisor.html#type-strategy" "strategy() = one_for_all | one_for_one | rest_for_one | simple_one_for_one")
               "supervisor:shutdown()"
               ("http://www.erlang.org/doc/man/supervisor.html#type-shutdown" "shutdown() = brutal_kill | timeout()")
               "supervisor:restart()"
               ("http://www.erlang.org/doc/man/supervisor.html#type-restart" "restart() = permanent | transient | temporary")
               "supervisor:modules()"
               ("http://www.erlang.org/doc/man/supervisor.html#type-modules" "modules() = [module()] | dynamic")
               "supervisor:mfargs()"
               ("http://www.erlang.org/doc/man/supervisor.html#type-mfargs" "mfargs() = {M :: module(), F :: atom(), A :: [term()] | undefined}")
               "supervisor:child_spec()"
               ("http://www.erlang.org/doc/man/supervisor.html#type-child_spec" "child_spec() = #{id := child_id() , start := mfargs() , restart => restart() , shutdown => shutdown() , type => worker() , modules => modules() } | {Id :: child_id() , StartFunc :: mfargs() , Restart :: restart() , Shutdown :: shutdown() , Type :: worker() , Modules :: modules() }")
               "supervisor:child_id()"
               ("http://www.erlang.org/doc/man/supervisor.html#type-child_id" "child_id() = term()")
               "supervisor:child()"
               ("http://www.erlang.org/doc/man/supervisor.html#type-child" "child() = undefined | pid()")
               "supervisor_bridge:Module:terminate/2"
               ("http://www.erlang.org/doc/man/supervisor_bridge.html#Module:terminate-2" "Module:terminate(Reason, State)")
               "supervisor_bridge:Module:init/1"
               ("http://www.erlang.org/doc/man/supervisor_bridge.html#Module:init-1" "Module:init(Args) -> Result")
               "supervisor_bridge:start_link/3"
               ("http://www.erlang.org/doc/man/supervisor_bridge.html#start_link-3" "start_link(SupBridgeName, Module, Args) -> Result")
               "supervisor_bridge:start_link/2"
               ("http://www.erlang.org/doc/man/supervisor_bridge.html#start_link-2" "start_link(Module, Args) -> Result")
               "sys:Module:system_terminate/4"
               ("http://www.erlang.org/doc/man/sys.html#Module:system_terminate-4" "Module:system_terminate(Reason, Parent, Debug, Misc) -> none()")
               "sys:Module:system_replace_state/2"
               ("http://www.erlang.org/doc/man/sys.html#Module:system_replace_state-2" "Module:system_replace_state(StateFun, Misc) ->\n        {ok, NState, NMisc}")
               "sys:Module:system_get_state/1"
               ("http://www.erlang.org/doc/man/sys.html#Module:system_get_state-1" "Module:system_get_state(Misc) -> {ok, State}")
               "sys:Module:system_continue/3"
               ("http://www.erlang.org/doc/man/sys.html#Module:system_continue-3" "Module:system_continue(Parent, Debug, Misc) -> none()")
               "sys:Module:system_code_change/4"
               ("http://www.erlang.org/doc/man/sys.html#Module:system_code_change-4" "Module:system_code_change(Misc, Module, OldVsn, Extra) ->\n        {ok, NMisc}")
               "sys:print_log/1"
               ("http://www.erlang.org/doc/man/sys.html#print_log-1" "print_log(Debug) -> ok")
               "sys:handle_system_msg/6"
               ("http://www.erlang.org/doc/man/sys.html#handle_system_msg-6" "handle_system_msg(Msg, From, Parent, Module, Debug, Misc) -> no_return()")
               "sys:handle_debug/4"
               ("http://www.erlang.org/doc/man/sys.html#handle_debug-4" "handle_debug(Debug, FormFunc, Extra, Event) -> [ dbg_opt() ]")
               "sys:get_debug/3"
               ("http://www.erlang.org/doc/man/sys.html#get_debug-3" "get_debug(Item, Debug, Default) -> term()")
               "sys:debug_options/1"
               ("http://www.erlang.org/doc/man/sys.html#debug_options-1" "debug_options(Options) -> [ dbg_opt() ]")
               "sys:trace/3"
               ("http://www.erlang.org/doc/man/sys.html#trace-3" "trace(Name, Flag, Timeout) -> ok")
               "sys:trace/2"
               ("http://www.erlang.org/doc/man/sys.html#trace-2" "trace(Name, Flag) -> ok")
               "sys:terminate/3"
               ("http://www.erlang.org/doc/man/sys.html#terminate-3" "terminate(Name, Reason, Timeout) -> ok")
               "sys:terminate/2"
               ("http://www.erlang.org/doc/man/sys.html#terminate-2" "terminate(Name, Reason) -> ok")
               "sys:suspend/2"
               ("http://www.erlang.org/doc/man/sys.html#suspend-2" "suspend(Name, Timeout) -> ok")
               "sys:suspend/1"
               ("http://www.erlang.org/doc/man/sys.html#suspend-1" "suspend(Name) -> ok")
               "sys:statistics/3"
               ("http://www.erlang.org/doc/man/sys.html#statistics-3" "statistics(Name, Flag, Timeout) -> ok | {ok, Statistics}")
               "sys:statistics/2"
               ("http://www.erlang.org/doc/man/sys.html#statistics-2" "statistics(Name, Flag) -> ok | {ok, Statistics}")
               "sys:resume/2"
               ("http://www.erlang.org/doc/man/sys.html#resume-2" "resume(Name, Timeout) -> ok")
               "sys:resume/1"
               ("http://www.erlang.org/doc/man/sys.html#resume-1" "resume(Name) -> ok")
               "sys:replace_state/3"
               ("http://www.erlang.org/doc/man/sys.html#replace_state-3" "replace_state(Name, StateFun, Timeout) -> NewState")
               "sys:replace_state/2"
               ("http://www.erlang.org/doc/man/sys.html#replace_state-2" "replace_state(Name, StateFun) -> NewState")
               "sys:remove/3"
               ("http://www.erlang.org/doc/man/sys.html#remove-3" "remove(Name, Func, Timeout) -> ok")
               "sys:remove/2"
               ("http://www.erlang.org/doc/man/sys.html#remove-2" "remove(Name, Func) -> ok")
               "sys:no_debug/2"
               ("http://www.erlang.org/doc/man/sys.html#no_debug-2" "no_debug(Name, Timeout) -> ok")
               "sys:no_debug/1"
               ("http://www.erlang.org/doc/man/sys.html#no_debug-1" "no_debug(Name) -> ok")
               "sys:log_to_file/3"
               ("http://www.erlang.org/doc/man/sys.html#log_to_file-3" "log_to_file(Name, Flag, Timeout) -> ok | {error, open_file}")
               "sys:log_to_file/2"
               ("http://www.erlang.org/doc/man/sys.html#log_to_file-2" "log_to_file(Name, Flag) -> ok | {error, open_file}")
               "sys:log/3"
               ("http://www.erlang.org/doc/man/sys.html#log-3" "log(Name, Flag, Timeout) -> ok | {ok, [ system_event() ]}")
               "sys:log/2"
               ("http://www.erlang.org/doc/man/sys.html#log-2" "log(Name, Flag) -> ok | {ok, [ system_event() ]}")
               "sys:install/3"
               ("http://www.erlang.org/doc/man/sys.html#install-3" "install(Name, FuncSpec, Timeout) -> ok")
               "sys:install/2"
               ("http://www.erlang.org/doc/man/sys.html#install-2" "install(Name, FuncSpec) -> ok")
               "sys:get_status/2"
               ("http://www.erlang.org/doc/man/sys.html#get_status-2" "get_status(Name, Timeout) -> Status")
               "sys:get_status/1"
               ("http://www.erlang.org/doc/man/sys.html#get_status-1" "get_status(Name) -> Status")
               "sys:get_state/2"
               ("http://www.erlang.org/doc/man/sys.html#get_state-2" "get_state(Name, Timeout) -> State")
               "sys:get_state/1"
               ("http://www.erlang.org/doc/man/sys.html#get_state-1" "get_state(Name) -> State")
               "sys:change_code/5"
               ("http://www.erlang.org/doc/man/sys.html#change_code-5" "change_code(Name, Module, OldVsn, Extra, Timeout) -> ok | {error, Reason}")
               "sys:change_code/4"
               ("http://www.erlang.org/doc/man/sys.html#change_code-4" "change_code(Name, Module, OldVsn, Extra) -> ok | {error, Reason}")
               "sys:format_fun()"
               ("http://www.erlang.org/doc/man/sys.html#type-format_fun" "format_fun() = fun((Device :: io:device() | file:io_device() , Event :: system_event() , Extra :: term()) -> any())")
               "sys:dbg_fun()"
               ("http://www.erlang.org/doc/man/sys.html#type-dbg_fun" "dbg_fun() = fun((FuncState :: term(), Event :: system_event() , ProcState :: term()) -> done | (NewFuncState :: term()))")
               "sys:dbg_opt()"
               ("http://www.erlang.org/doc/man/sys.html#type-dbg_opt" "dbg_opt()")
               "sys:system_event()"
               ("http://www.erlang.org/doc/man/sys.html#type-system_event" "system_event() = {in, Msg :: term()} | {in, Msg :: term(), From :: term()} | {out, Msg :: term(), To :: term()} | term()")
               "sys:name()"
               ("http://www.erlang.org/doc/man/sys.html#type-name" "name() = pid() | atom() | {global, atom()}")
               "system_information:to_file/1"
               ("http://www.erlang.org/doc/man/system_information.html#to_file-1" "to_file(FileName) -> ok | {error, Reason}")
               "system_information:sanity_check/0"
               ("http://www.erlang.org/doc/man/system_information.html#sanity_check-0" "sanity_check() -> ok | {failed, Failures}")
               "systools:script2boot/1"
               ("http://www.erlang.org/doc/man/systools.html#script2boot-1" "script2boot(File) -> ok | error")
               "systools:make_tar/2"
               ("http://www.erlang.org/doc/man/systools.html#make_tar-2" "make_tar(Name, [Opt]) -> Result")
               "systools:make_tar/1"
               ("http://www.erlang.org/doc/man/systools.html#make_tar-1" "make_tar(Name) -> Result")
               "systools:make_script/2"
               ("http://www.erlang.org/doc/man/systools.html#make_script-2" "make_script(Name, [Opt]) -> Result")
               "systools:make_script/1"
               ("http://www.erlang.org/doc/man/systools.html#make_script-1" "make_script(Name) -> Result")
               "systools:make_relup/4"
               ("http://www.erlang.org/doc/man/systools.html#make_relup-4" "make_relup(Name, UpFrom, DownTo, [Opt]) -> Result")
               "systools:make_relup/3"
               ("http://www.erlang.org/doc/man/systools.html#make_relup-3" "make_relup(Name, UpFrom, DownTo) -> Result")
               "tags:root/1"
               ("http://www.erlang.org/doc/man/tags.html#root-1" "root([Options])")
               "tags:subdirs/1"
               ("http://www.erlang.org/doc/man/tags.html#subdirs-1" "subdirs(DirList [, Options])")
               "tags:subdir/1"
               ("http://www.erlang.org/doc/man/tags.html#subdir-1" "subdir(Dir [, Options])")
               "tags:dirs/1"
               ("http://www.erlang.org/doc/man/tags.html#dirs-1" "dirs(DirList [, Options])")
               "tags:dir/1"
               ("http://www.erlang.org/doc/man/tags.html#dir-1" "dir(Dir [, Options])")
               "tags:files/1"
               ("http://www.erlang.org/doc/man/tags.html#files-1" "files(FileList [, Options])")
               "tags:file/1"
               ("http://www.erlang.org/doc/man/tags.html#file-1" "file(File [, Options])")
               "tftp:Logger:warning_msg/2"
               ("http://www.erlang.org/doc/man/tftp.html#Logger:warning_msg-2" "Logger:warning_msg(Format, Data) -> ok | exit(Reason)")
               "tftp:Logger:info_msg/2"
               ("http://www.erlang.org/doc/man/tftp.html#Logger:info_msg-2" "Logger:info_msg(Format, Data) -> ok | exit(Reason)")
               "tftp:Logger:error_msg/2"
               ("http://www.erlang.org/doc/man/tftp.html#Logger:error_msg-2" "Logger:error_msg(Format, Data) -> ok | exit(Reason)")
               "tftp:Module:write/2"
               ("http://www.erlang.org/doc/man/tftp.html#Module:write-2" "Module:write(Bin, State) -> {more, NewState} | {last, FileSize} | {error, {Code, Text}}")
               "tftp:Module:read/1"
               ("http://www.erlang.org/doc/man/tftp.html#Module:read-1" "Module:read(State) -> {more, Bin, NewState} | {last, Bin, FileSize} | {error, {Code, Text}}")
               "tftp:Module:prepare/6"
               ("http://www.erlang.org/doc/man/tftp.html#Module:prepare-6" "Module:prepare(Peer, Access, Filename, Mode, SuggestedOptions, InitialState) -> {ok, AcceptedOptions, NewState} | {error, {Code, Text}}")
               "tftp:Module:open/6"
               ("http://www.erlang.org/doc/man/tftp.html#Module:open-6" "Module:open(Peer, Access, Filename, Mode, SuggestedOptions, State) -> {ok, AcceptedOptions, NewState} | {error, {Code, Text}}")
               "tftp:Module:abort/3"
               ("http://www.erlang.org/doc/man/tftp.html#Module:abort-3" "Module:abort(Code, Text, State) -> ok")
               "tftp:write_file/3"
               ("http://www.erlang.org/doc/man/tftp.html#write_file-3" "write_file(RemoteFilename, LocalFilename, Options) -> {ok, LastCallbackState} | {error, Reason}")
               "tftp:start/1"
               ("http://www.erlang.org/doc/man/tftp.html#start-1" "start(Options) -> {ok, Pid} | {error, Reason}")
               "tftp:read_file/3"
               ("http://www.erlang.org/doc/man/tftp.html#read_file-3" "read_file(RemoteFilename, LocalFilename, Options) -> {ok, LastCallbackState} | {error, Reason}")
               "tftp:info/1"
               ("http://www.erlang.org/doc/man/tftp.html#info-1" "info(daemons) -> [{Pid, Options}]")
               "tftp:change_config/2"
               ("http://www.erlang.org/doc/man/tftp.html#change_config-2" "change_config(daemons, Options) -> [{Pid, Result}]")
               "timer:tc/3"
               ("http://www.erlang.org/doc/man/timer.html#tc-3" "tc(Module, Function, Arguments) -> {Time, Value}")
               "timer:tc/2"
               ("http://www.erlang.org/doc/man/timer.html#tc-2" "tc(Fun, Arguments) -> {Time, Value}")
               "timer:tc/1"
               ("http://www.erlang.org/doc/man/timer.html#tc-1" "tc(Fun) -> {Time, Value}")
               "timer:start/0"
               ("http://www.erlang.org/doc/man/timer.html#start-0" "start() -> ok")
               "timer:sleep/1"
               ("http://www.erlang.org/doc/man/timer.html#sleep-1" "sleep(Time) -> ok")
               "timer:send_interval/3"
               ("http://www.erlang.org/doc/man/timer.html#send_interval-3" "send_interval(Time, Pid, Message) -> {ok, TRef} | {error, Reason}")
               "timer:send_interval/2"
               ("http://www.erlang.org/doc/man/timer.html#send_interval-2" "send_interval(Time, Message) -> {ok, TRef} | {error, Reason}")
               "timer:send_after/3"
               ("http://www.erlang.org/doc/man/timer.html#send_after-3" "send_after(Time, Pid, Message) -> {ok, TRef} | {error, Reason}")
               "timer:send_after/2"
               ("http://www.erlang.org/doc/man/timer.html#send_after-2" "send_after(Time, Message) -> {ok, TRef} | {error, Reason}")
               "timer:seconds/1"
               ("http://www.erlang.org/doc/man/timer.html#seconds-1" "seconds(Seconds) -> MilliSeconds")
               "timer:now_diff/2"
               ("http://www.erlang.org/doc/man/timer.html#now_diff-2" "now_diff(T2, T1) -> Tdiff")
               "timer:minutes/1"
               ("http://www.erlang.org/doc/man/timer.html#minutes-1" "minutes(Minutes) -> MilliSeconds")
               "timer:kill_after/2"
               ("http://www.erlang.org/doc/man/timer.html#kill_after-2" "kill_after(Time, Pid) -> {ok, TRef} | {error, Reason2}")
               "timer:kill_after/1"
               ("http://www.erlang.org/doc/man/timer.html#kill_after-1" "kill_after(Time) -> {ok, TRef} | {error, Reason2}")
               "timer:hours/1"
               ("http://www.erlang.org/doc/man/timer.html#hours-1" "hours(Hours) -> MilliSeconds")
               "timer:hms/3"
               ("http://www.erlang.org/doc/man/timer.html#hms-3" "hms(Hours, Minutes, Seconds) -> MilliSeconds")
               "timer:exit_after/3"
               ("http://www.erlang.org/doc/man/timer.html#exit_after-3" "exit_after(Time, Pid, Reason1) -> {ok, TRef} | {error, Reason2}")
               "timer:exit_after/2"
               ("http://www.erlang.org/doc/man/timer.html#exit_after-2" "exit_after(Time, Reason1) -> {ok, TRef} | {error, Reason2}")
               "timer:cancel/1"
               ("http://www.erlang.org/doc/man/timer.html#cancel-1" "cancel(TRef) -> {ok, cancel} | {error, Reason}")
               "timer:apply_interval/4"
               ("http://www.erlang.org/doc/man/timer.html#apply_interval-4" "apply_interval(Time, Module, Function, Arguments) -> {ok, TRef} | {error, Reason}")
               "timer:apply_after/4"
               ("http://www.erlang.org/doc/man/timer.html#apply_after-4" "apply_after(Time, Module, Function, Arguments) -> {ok, TRef} | {error, Reason}")
               "timer:tref()"
               ("http://www.erlang.org/doc/man/timer.html#type-tref" "tref()")
               "timer:time()"
               ("http://www.erlang.org/doc/man/timer.html#type-time" "time() = integer() >= 0")
               "ttb:format/2"
               ("http://www.erlang.org/doc/man/ttb.html#format-2" "format(File,Options) -> ok | {error, Reason}")
               "ttb:format/1"
               ("http://www.erlang.org/doc/man/ttb.html#format-1" "format(File)")
               "ttb:get_et_handler/0"
               ("http://www.erlang.org/doc/man/ttb.html#get_et_handler-0" "get_et_handler()")
               "ttb:stop/1"
               ("http://www.erlang.org/doc/man/ttb.html#stop-1" "stop(Opts) -> stopped | {stopped, Dir}")
               "ttb:stop/0"
               ("http://www.erlang.org/doc/man/ttb.html#stop-0" "stop()")
               "ttb:seq_trigger_ms/1"
               ("http://www.erlang.org/doc/man/ttb.html#seq_trigger_ms-1" "seq_trigger_ms(Flags) -> MatchSpec")
               "ttb:seq_trigger_ms/0"
               ("http://www.erlang.org/doc/man/ttb.html#seq_trigger_ms-0" "seq_trigger_ms() -> MatchSpec")
               "ttb:write_trace_info/2"
               ("http://www.erlang.org/doc/man/ttb.html#write_trace_info-2" "write_trace_info(Key,Info) -> ok")
               "ttb:list_config/1"
               ("http://www.erlang.org/doc/man/ttb.html#list_config-1" "list_config(ConfigFile) -> Config | {error,Reason}")
               "ttb:run_config/2"
               ("http://www.erlang.org/doc/man/ttb.html#run_config-2" "run_config(ConfigFile,NumList) -> ok | {error,Reason}")
               "ttb:run_config/1"
               ("http://www.erlang.org/doc/man/ttb.html#run_config-1" "run_config(ConfigFile) -> ok | {error,Reason}")
               "ttb:write_config/3"
               ("http://www.erlang.org/doc/man/ttb.html#write_config-3" "write_config(ConfigFile,Config,Opts) -> ok | {error,Reason}")
               "ttb:write_config/2"
               ("http://www.erlang.org/doc/man/ttb.html#write_config-2" "write_config(ConfigFile,Config)")
               "ttb:run_history/1"
               ("http://www.erlang.org/doc/man/ttb.html#run_history-1" "run_history(N) -> ok | {error, Reason}")
               "ttb:list_history/0"
               ("http://www.erlang.org/doc/man/ttb.html#list_history-0" "list_history() -> History")
               "ttb:/0"
               ("http://www.erlang.org/doc/man/ttb.html#-0" "tp, tpl, tpe, ctp, ctpl, ctpg, ctpe")
               "ttb:p/2"
               ("http://www.erlang.org/doc/man/ttb.html#p-2" "p(Item,Flags) -> Return")
               "ttb:tracer/2"
               ("http://www.erlang.org/doc/man/ttb.html#tracer-2" "tracer(Nodes,Opts) -> Result")
               "ttb:tracer/1"
               ("http://www.erlang.org/doc/man/ttb.html#tracer-1" "tracer(Shortcut) -> Result")
               "ttb:tracer/0"
               ("http://www.erlang.org/doc/man/ttb.html#tracer-0" "tracer() -> Result")
               "ttb:start_trace/4"
               ("http://www.erlang.org/doc/man/ttb.html#start_trace-4" "start_trace(Nodes, Patterns, FlagSpec, Opts) -> Result")
               "unicode:encoding_to_bom/1"
               ("http://www.erlang.org/doc/man/unicode.html#encoding_to_bom-1" "encoding_to_bom(InEncoding) -> Bin")
               "unicode:characters_to_list/2"
               ("http://www.erlang.org/doc/man/unicode.html#characters_to_list-2" "characters_to_list(Data, InEncoding) -> Result")
               "unicode:characters_to_list/1"
               ("http://www.erlang.org/doc/man/unicode.html#characters_to_list-1" "characters_to_list(Data) -> Result")
               "unicode:characters_to_binary/3"
               ("http://www.erlang.org/doc/man/unicode.html#characters_to_binary-3" "characters_to_binary(Data, InEncoding, OutEncoding) -> Result")
               "unicode:characters_to_binary/2"
               ("http://www.erlang.org/doc/man/unicode.html#characters_to_binary-2" "characters_to_binary(Data, InEncoding) -> Result")
               "unicode:characters_to_binary/1"
               ("http://www.erlang.org/doc/man/unicode.html#characters_to_binary-1" "characters_to_binary(Data) -> Result")
               "unicode:bom_to_encoding/1"
               ("http://www.erlang.org/doc/man/unicode.html#bom_to_encoding-1" "bom_to_encoding(Bin) -> {Encoding, Length}")
               "unicode:latin1_charlist()"
               ("http://www.erlang.org/doc/man/unicode.html#type-latin1_charlist" "latin1_charlist() = maybe_improper_list( latin1_char() |  latin1_binary() |  latin1_charlist() ,  latin1_binary() | [])")
               "unicode:latin1_chardata()"
               ("http://www.erlang.org/doc/man/unicode.html#type-latin1_chardata" "latin1_chardata() = latin1_charlist() | latin1_binary()")
               "unicode:latin1_char()"
               ("http://www.erlang.org/doc/man/unicode.html#type-latin1_char" "latin1_char() = byte()")
               "unicode:latin1_binary()"
               ("http://www.erlang.org/doc/man/unicode.html#type-latin1_binary" "latin1_binary() = binary()")
               "unicode:external_charlist()"
               ("http://www.erlang.org/doc/man/unicode.html#type-external_charlist" "external_charlist() = maybe_improper_list(char() |  external_unicode_binary() |  external_charlist() ,  external_unicode_binary() | [])")
               "unicode:external_chardata()"
               ("http://www.erlang.org/doc/man/unicode.html#type-external_chardata" "external_chardata() =  external_charlist() | external_unicode_binary()")
               "unicode:external_unicode_binary()"
               ("http://www.erlang.org/doc/man/unicode.html#type-external_unicode_binary" "external_unicode_binary() = binary()")
               "unicode:charlist()"
               ("http://www.erlang.org/doc/man/unicode.html#type-charlist" "charlist() = maybe_improper_list(char() | unicode_binary() | charlist() ,  unicode_binary() | [])")
               "unicode:chardata()"
               ("http://www.erlang.org/doc/man/unicode.html#type-chardata" "chardata() = charlist() | unicode_binary()")
               "unicode:unicode_binary()"
               ("http://www.erlang.org/doc/man/unicode.html#type-unicode_binary" "unicode_binary() = binary()")
               "unicode:endian()"
               ("http://www.erlang.org/doc/man/unicode.html#type-endian" "endian() = big | little")
               "unicode:encoding()"
               ("http://www.erlang.org/doc/man/unicode.html#type-encoding" "encoding() = latin1 | unicode | utf8 | utf16 | {utf16, endian() } | utf32 | {utf32, endian() }")
               "unix_telnet:get_prompt_regexp/0"
               ("http://www.erlang.org/doc/man/unix_telnet.html#get_prompt_regexp-0" "get_prompt_regexp() -> PromptRegexp")
               "unix_telnet:connect/7"
               ("http://www.erlang.org/doc/man/unix_telnet.html#connect-7" "connect(ConnName, Ip, Port, Timeout, KeepAlive, TCPNoDelay, Extra) -> {ok, Handle} | {error, Reason}")
               "win32reg:values/1"
               ("http://www.erlang.org/doc/man/win32reg.html#values-1" "values(RegHandle) -> ReturnValue")
               "win32reg:value/2"
               ("http://www.erlang.org/doc/man/win32reg.html#value-2" "value(RegHandle, Name) -> ReturnValue")
               "win32reg:sub_keys/1"
               ("http://www.erlang.org/doc/man/win32reg.html#sub_keys-1" "sub_keys(RegHandle) -> ReturnValue")
               "win32reg:set_value/3"
               ("http://www.erlang.org/doc/man/win32reg.html#set_value-3" "set_value(RegHandle, Name, Value) -> ReturnValue")
               "win32reg:open/1"
               ("http://www.erlang.org/doc/man/win32reg.html#open-1" "open(OpenModeList) -> ReturnValue")
               "win32reg:format_error/1"
               ("http://www.erlang.org/doc/man/win32reg.html#format_error-1" "format_error(ErrorId) -> ErrorString")
               "win32reg:expand/1"
               ("http://www.erlang.org/doc/man/win32reg.html#expand-1" "expand(String) -> ExpandedString")
               "win32reg:delete_value/2"
               ("http://www.erlang.org/doc/man/win32reg.html#delete_value-2" "delete_value(RegHandle, Name) -> ReturnValue")
               "win32reg:delete_key/1"
               ("http://www.erlang.org/doc/man/win32reg.html#delete_key-1" "delete_key(RegHandle) -> ReturnValue")
               "win32reg:current_key/1"
               ("http://www.erlang.org/doc/man/win32reg.html#current_key-1" "current_key(RegHandle) -> ReturnValue")
               "win32reg:close/1"
               ("http://www.erlang.org/doc/man/win32reg.html#close-1" "close(RegHandle) -> ok")
               "win32reg:change_key_create/2"
               ("http://www.erlang.org/doc/man/win32reg.html#change_key_create-2" "change_key_create(RegHandle, Key) -> ReturnValue")
               "win32reg:change_key/2"
               ("http://www.erlang.org/doc/man/win32reg.html#change_key-2" "change_key(RegHandle, Key) -> ReturnValue")
               "win32reg:value()"
               ("http://www.erlang.org/doc/man/win32reg.html#type-value" "value() = string() | integer() | binary()")
               "win32reg:name()"
               ("http://www.erlang.org/doc/man/win32reg.html#type-name" "name() = string() | default")
               "win32reg:reg_handle()"
               ("http://www.erlang.org/doc/man/win32reg.html#type-reg_handle" "reg_handle()")
               "wrap_log_reader:open/2"
               ("http://www.erlang.org/doc/man/wrap_log_reader.html#open-2" "open(Filename, N) -> open_ret()")
               "wrap_log_reader:open/1"
               ("http://www.erlang.org/doc/man/wrap_log_reader.html#open-1" "open(Filename) -> open_ret()")
               "wrap_log_reader:close/1"
               ("http://www.erlang.org/doc/man/wrap_log_reader.html#close-1" "close(Continuation) -> ok | {error, Reason}")
               "wrap_log_reader:chunk/2"
               ("http://www.erlang.org/doc/man/wrap_log_reader.html#chunk-2" "chunk(Continuation, N) -> chunk_ret()")
               "wrap_log_reader:chunk/1"
               ("http://www.erlang.org/doc/man/wrap_log_reader.html#chunk-1" "chunk(Continuation) -> chunk_ret()")
               "wrap_log_reader:continuation()"
               ("http://www.erlang.org/doc/man/wrap_log_reader.html#type-continuation" "continuation()")
               "wx:demo/0"
               ("http://www.erlang.org/doc/man/wx.html#demo-0" "demo() -> ok | {error, atom()}")
               "wx:debug/1"
               ("http://www.erlang.org/doc/man/wx.html#debug-1" "debug(Debug::Level | [Level]) -> ok")
               "wx:release_memory/1"
               ("http://www.erlang.org/doc/man/wx.html#release_memory-1" "release_memory(Wx_mem:: wx_memory() ) -> ok")
               "wx:retain_memory/1"
               ("http://www.erlang.org/doc/man/wx.html#retain_memory-1" "retain_memory(Wx_mem:: wx_memory() ) -> ok")
               "wx:get_memory_bin/1"
               ("http://www.erlang.org/doc/man/wx.html#get_memory_bin-1" "get_memory_bin(Wx_mem:: wx_memory() ) -> binary()")
               "wx:create_memory/1"
               ("http://www.erlang.org/doc/man/wx.html#create_memory-1" "create_memory(Size::integer()) -> wx_memory()")
               "wx:foldr/3"
               ("http://www.erlang.org/doc/man/wx.html#foldr-3" "foldr(Fun::function(), Acc::term(), List::list()) -> term()")
               "wx:foldl/3"
               ("http://www.erlang.org/doc/man/wx.html#foldl-3" "foldl(Fun::function(), Acc::term(), List::list()) -> term()")
               "wx:map/2"
               ("http://www.erlang.org/doc/man/wx.html#map-2" "map(Fun::function(), List::list()) -> list()")
               "wx:foreach/2"
               ("http://www.erlang.org/doc/man/wx.html#foreach-2" "foreach(Fun::function(), List::list()) -> ok")
               "wx:batch/1"
               ("http://www.erlang.org/doc/man/wx.html#batch-1" "batch(Fun::function()) -> term()")
               "wx:typeCast/2"
               ("http://www.erlang.org/doc/man/wx.html#typeCast-2" "typeCast(Old:: wx_object() , NewType::atom()) -> wx_object()")
               "wx:getObjectType/1"
               ("http://www.erlang.org/doc/man/wx.html#getObjectType-1" "getObjectType(Wx_ref:: wx_object() ) -> atom()")
               "wx:equal/2"
               ("http://www.erlang.org/doc/man/wx.html#equal-2" "equal(Wx_ref:: wx_object() , X2:: wx_object() ) -> boolean()")
               "wx:is_null/1"
               ("http://www.erlang.org/doc/man/wx.html#is_null-1" "is_null(Wx_ref:: wx_object() ) -> boolean()")
               "wx:null/0"
               ("http://www.erlang.org/doc/man/wx.html#null-0" "null() -> wx_object()")
               "wx:set_env/1"
               ("http://www.erlang.org/doc/man/wx.html#set_env-1" "set_env(Wx_env:: wx_env() ) -> ok")
               "wx:get_env/0"
               ("http://www.erlang.org/doc/man/wx.html#get_env-0" "get_env() -> wx_env()")
               "wx:destroy/0"
               ("http://www.erlang.org/doc/man/wx.html#destroy-0" "destroy() -> ok")
               "wx:new/1"
               ("http://www.erlang.org/doc/man/wx.html#new-1" "new(Options::[Option]) -> wx_object()")
               "wx:new/0"
               ("http://www.erlang.org/doc/man/wx.html#new-0" "new() -> wx_object()")
               "wx:parent_class/1"
               ("http://www.erlang.org/doc/man/wx.html#parent_class-1" "parent_class(X1) -> term()")
               "wx:"
               ("http://www.erlang.org/doc/man/wx.html#type-wx_colour" "wx_colour() = {R::byte(), G::byte(), B::byte()} | wx_colour4()")
               "wx_misc:setCursor/1"
               ("http://www.erlang.org/doc/man/wx_misc.html#setCursor-1" "setCursor(Cursor) -> ok")
               "wx_misc:displaySize/0"
               ("http://www.erlang.org/doc/man/wx_misc.html#displaySize-0" "displaySize() -> {Width::integer(), Height::integer()}")
               "wx_misc:isPlatform64Bit/0"
               ("http://www.erlang.org/doc/man/wx_misc.html#isPlatform64Bit-0" "isPlatform64Bit() -> boolean()")
               "wx_misc:isPlatformLittleEndian/0"
               ("http://www.erlang.org/doc/man/wx_misc.html#isPlatformLittleEndian-0" "isPlatformLittleEndian() -> boolean()")
               "wx_misc:getOsDescription/0"
               ("http://www.erlang.org/doc/man/wx_misc.html#getOsDescription-0" "getOsDescription() -> unicode:charlist()")
               "wx_misc:getCurrentId/0"
               ("http://www.erlang.org/doc/man/wx_misc.html#getCurrentId-0" "getCurrentId() -> integer()")
               "wx_misc:registerId/1"
               ("http://www.erlang.org/doc/man/wx_misc.html#registerId-1" "registerId(Id) -> ok")
               "wx_misc:newId/0"
               ("http://www.erlang.org/doc/man/wx_misc.html#newId-0" "newId() -> integer()")
               "wx_misc:getHomeDir/0"
               ("http://www.erlang.org/doc/man/wx_misc.html#getHomeDir-0" "getHomeDir() -> unicode:charlist()")
               "wx_misc:getUserId/0"
               ("http://www.erlang.org/doc/man/wx_misc.html#getUserId-0" "getUserId() -> unicode:charlist()")
               "wx_misc:getEmailAddress/0"
               ("http://www.erlang.org/doc/man/wx_misc.html#getEmailAddress-0" "getEmailAddress() -> unicode:charlist()")
               "wx_misc:launchDefaultBrowser/2"
               ("http://www.erlang.org/doc/man/wx_misc.html#launchDefaultBrowser-2" "launchDefaultBrowser(Url, Options::[Option]) -> boolean()")
               "wx_misc:launchDefaultBrowser/1"
               ("http://www.erlang.org/doc/man/wx_misc.html#launchDefaultBrowser-1" "launchDefaultBrowser(Url) -> boolean()")
               "wx_misc:shell/1"
               ("http://www.erlang.org/doc/man/wx_misc.html#shell-1" "shell(Options::[Option]) -> boolean()")
               "wx_misc:shell/0"
               ("http://www.erlang.org/doc/man/wx_misc.html#shell-0" "shell() -> boolean()")
               "wx_misc:shutdown/1"
               ("http://www.erlang.org/doc/man/wx_misc.html#shutdown-1" "shutdown(WFlags) -> boolean()")
               "wx_misc:isBusy/0"
               ("http://www.erlang.org/doc/man/wx_misc.html#isBusy-0" "isBusy() -> boolean()")
               "wx_misc:endBusyCursor/0"
               ("http://www.erlang.org/doc/man/wx_misc.html#endBusyCursor-0" "endBusyCursor() -> ok")
               "wx_misc:beginBusyCursor/1"
               ("http://www.erlang.org/doc/man/wx_misc.html#beginBusyCursor-1" "beginBusyCursor(Options::[Option]) -> ok")
               "wx_misc:beginBusyCursor/0"
               ("http://www.erlang.org/doc/man/wx_misc.html#beginBusyCursor-0" "beginBusyCursor() -> ok")
               "wx_misc:findWindowAtPoint/1"
               ("http://www.erlang.org/doc/man/wx_misc.html#findWindowAtPoint-1" "findWindowAtPoint(Pt) -> wxWindow:wxWindow()")
               "wx_misc:genericFindWindowAtPoint/1"
               ("http://www.erlang.org/doc/man/wx_misc.html#genericFindWindowAtPoint-1" "genericFindWindowAtPoint(Pt) -> wxWindow:wxWindow()")
               "wx_misc:findMenuItemId/3"
               ("http://www.erlang.org/doc/man/wx_misc.html#findMenuItemId-3" "findMenuItemId(Frame, MenuString, ItemString) -> integer()")
               "wx_misc:bell/0"
               ("http://www.erlang.org/doc/man/wx_misc.html#bell-0" "bell() -> ok")
               "wx_misc:setDetectableAutoRepeat/1"
               ("http://www.erlang.org/doc/man/wx_misc.html#setDetectableAutoRepeat-1" "setDetectableAutoRepeat(Flag) -> boolean()")
               "wx_misc:getMouseState/0"
               ("http://www.erlang.org/doc/man/wx_misc.html#getMouseState-0" "getMouseState() -> wx:wx_wxMouseState()")
               "wx_misc:getMousePosition/0"
               ("http://www.erlang.org/doc/man/wx_misc.html#getMousePosition-0" "getMousePosition() -> {X::integer(), Y::integer()}")
               "wx_misc:getKeyState/1"
               ("http://www.erlang.org/doc/man/wx_misc.html#getKeyState-1" "getKeyState(Key) -> boolean()")
               "wx_object:reply/2"
               ("http://www.erlang.org/doc/man/wx_object.html#reply-2" "reply(X1::{pid(), Tag::term()}, Reply::term()) -> pid()")
               "wx_object:set_pid/2"
               ("http://www.erlang.org/doc/man/wx_object.html#set_pid-2" "set_pid(Obj, Pid::pid()) -> wx:wx_object()")
               "wx_object:get_pid/1"
               ("http://www.erlang.org/doc/man/wx_object.html#get_pid-1" "get_pid(Obj) -> pid()")
               "wx_object:cast/2"
               ("http://www.erlang.org/doc/man/wx_object.html#cast-2" "cast(Obj, Request) -> ok")
               "wx_object:call/3"
               ("http://www.erlang.org/doc/man/wx_object.html#call-3" "call(Obj, Request, Timeout) -> term()")
               "wx_object:call/2"
               ("http://www.erlang.org/doc/man/wx_object.html#call-2" "call(Obj, Request) -> term()")
               "wx_object:stop/3"
               ("http://www.erlang.org/doc/man/wx_object.html#stop-3" "stop(Obj, Reason, Timeout) -> ok")
               "wx_object:stop/1"
               ("http://www.erlang.org/doc/man/wx_object.html#stop-1" "stop(Obj) -> ok")
               "wx_object:start_link/4"
               ("http://www.erlang.org/doc/man/wx_object.html#start_link-4" "start_link(Name, Mod, Args, Options) -> wxWindow:wxWindow() | {error, term()}")
               "wx_object:start_link/3"
               ("http://www.erlang.org/doc/man/wx_object.html#start_link-3" "start_link(Mod, Args, Options) -> wxWindow:wxWindow() | {error, term()}")
               "wx_object:start/4"
               ("http://www.erlang.org/doc/man/wx_object.html#start-4" "start(Name, Mod, Args, Options) -> wxWindow:wxWindow() | {error, term()}")
               "wxAcceleratorEntry:destroy/1"
               ("http://www.erlang.org/doc/man/wxAcceleratorEntry.html#destroy-1" "destroy(This:: wxAcceleratorEntry() ) -> ok")
               "wxAcceleratorEntry:set/5"
               ("http://www.erlang.org/doc/man/wxAcceleratorEntry.html#set-5" "set(This, Flags, KeyCode, Cmd, Options::[Option]) -> ok")
               "wxAcceleratorEntry:set/4"
               ("http://www.erlang.org/doc/man/wxAcceleratorEntry.html#set-4" "set(This, Flags, KeyCode, Cmd) -> ok")
               "wxAcceleratorEntry:getKeyCode/1"
               ("http://www.erlang.org/doc/man/wxAcceleratorEntry.html#getKeyCode-1" "getKeyCode(This) -> integer()")
               "wxAcceleratorEntry:getFlags/1"
               ("http://www.erlang.org/doc/man/wxAcceleratorEntry.html#getFlags-1" "getFlags(This) -> integer()")
               "wxAcceleratorEntry:getCommand/1"
               ("http://www.erlang.org/doc/man/wxAcceleratorEntry.html#getCommand-1" "getCommand(This) -> integer()")
               "wxAcceleratorEntry:new/1"
               ("http://www.erlang.org/doc/man/wxAcceleratorEntry.html#new-1" "new(Options::[Option]) -> wxAcceleratorEntry()")
               "wxAcceleratorEntry:new/0"
               ("http://www.erlang.org/doc/man/wxAcceleratorEntry.html#new-0" "new() -> wxAcceleratorEntry()")
               "wxAcceleratorEntry:"
               ("http://www.erlang.org/doc/man/wxAcceleratorEntry.html#type-wxAcceleratorEntry" "wxAcceleratorEntry()")
               "wxAcceleratorTable:destroy/1"
               ("http://www.erlang.org/doc/man/wxAcceleratorTable.html#destroy-1" "destroy(This:: wxAcceleratorTable() ) -> ok")
               "wxAcceleratorTable:ok/1"
               ("http://www.erlang.org/doc/man/wxAcceleratorTable.html#ok-1" "ok(This) -> boolean()")
               "wxAcceleratorTable:new/2"
               ("http://www.erlang.org/doc/man/wxAcceleratorTable.html#new-2" "new(N, Entries) -> wxAcceleratorTable()")
               "wxAcceleratorTable:new/0"
               ("http://www.erlang.org/doc/man/wxAcceleratorTable.html#new-0" "new() -> wxAcceleratorTable()")
               "wxAcceleratorTable:"
               ("http://www.erlang.org/doc/man/wxAcceleratorTable.html#type-wxAcceleratorTable" "wxAcceleratorTable()")
               "wxActivateEvent:getActive/1"
               ("http://www.erlang.org/doc/man/wxActivateEvent.html#getActive-1" "getActive(This) -> boolean()")
               "wxActivateEvent:"
               ("http://www.erlang.org/doc/man/wxActivateEvent.html#type-wxActivateEvent" "wxActivateEvent()")
               "wxArtProvider:getIcon/2"
               ("http://www.erlang.org/doc/man/wxArtProvider.html#getIcon-2" "getIcon(Id, Options::[Option]) -> wxIcon:wxIcon()")
               "wxArtProvider:getIcon/1"
               ("http://www.erlang.org/doc/man/wxArtProvider.html#getIcon-1" "getIcon(Id) -> wxIcon:wxIcon()")
               "wxArtProvider:getBitmap/2"
               ("http://www.erlang.org/doc/man/wxArtProvider.html#getBitmap-2" "getBitmap(Id, Options::[Option]) -> wxBitmap:wxBitmap()")
               "wxArtProvider:getBitmap/1"
               ("http://www.erlang.org/doc/man/wxArtProvider.html#getBitmap-1" "getBitmap(Id) -> wxBitmap:wxBitmap()")
               "wxArtProvider:"
               ("http://www.erlang.org/doc/man/wxArtProvider.html#type-wxArtProvider" "wxArtProvider()")
               "wxAuiDockArt:setMetric/3"
               ("http://www.erlang.org/doc/man/wxAuiDockArt.html#setMetric-3" "setMetric(This, Id, New_val) -> ok")
               "wxAuiDockArt:setFont/3"
               ("http://www.erlang.org/doc/man/wxAuiDockArt.html#setFont-3" "setFont(This, Id, Font) -> ok")
               "wxAuiDockArt:setColour/3"
               ("http://www.erlang.org/doc/man/wxAuiDockArt.html#setColour-3" "setColour(This, Id, Colour) -> ok")
               "wxAuiDockArt:getMetric/2"
               ("http://www.erlang.org/doc/man/wxAuiDockArt.html#getMetric-2" "getMetric(This, Id) -> integer()")
               "wxAuiDockArt:getFont/2"
               ("http://www.erlang.org/doc/man/wxAuiDockArt.html#getFont-2" "getFont(This, Id) -> wxFont:wxFont()")
               "wxAuiDockArt:getColour/2"
               ("http://www.erlang.org/doc/man/wxAuiDockArt.html#getColour-2" "getColour(This, Id) -> wx:wx_colour4()")
               "wxAuiDockArt:"
               ("http://www.erlang.org/doc/man/wxAuiDockArt.html#type-wxAuiDockArt" "wxAuiDockArt()")
               "wxAuiManager:destroy/1"
               ("http://www.erlang.org/doc/man/wxAuiManager.html#destroy-1" "destroy(This:: wxAuiManager() ) -> ok")
               "wxAuiManager:update/1"
               ("http://www.erlang.org/doc/man/wxAuiManager.html#update-1" "update(This) -> ok")
               "wxAuiManager:unInit/1"
               ("http://www.erlang.org/doc/man/wxAuiManager.html#unInit-1" "unInit(This) -> ok")
               "wxAuiManager:showHint/2"
               ("http://www.erlang.org/doc/man/wxAuiManager.html#showHint-2" "showHint(This, Rect) -> ok")
               "wxAuiManager:setManagedWindow/2"
               ("http://www.erlang.org/doc/man/wxAuiManager.html#setManagedWindow-2" "setManagedWindow(This, Managed_wnd) -> ok")
               "wxAuiManager:setFlags/2"
               ("http://www.erlang.org/doc/man/wxAuiManager.html#setFlags-2" "setFlags(This, Flags) -> ok")
               "wxAuiManager:setDockSizeConstraint/3"
               ("http://www.erlang.org/doc/man/wxAuiManager.html#setDockSizeConstraint-3" "setDockSizeConstraint(This, Width_pct, Height_pct) -> ok")
               "wxAuiManager:setArtProvider/2"
               ("http://www.erlang.org/doc/man/wxAuiManager.html#setArtProvider-2" "setArtProvider(This, Art_provider) -> ok")
               "wxAuiManager:savePerspective/1"
               ("http://www.erlang.org/doc/man/wxAuiManager.html#savePerspective-1" "savePerspective(This) -> unicode:charlist()")
               "wxAuiManager:savePaneInfo/2"
               ("http://www.erlang.org/doc/man/wxAuiManager.html#savePaneInfo-2" "savePaneInfo(This, Pane) -> unicode:charlist()")
               "wxAuiManager:loadPerspective/3"
               ("http://www.erlang.org/doc/man/wxAuiManager.html#loadPerspective-3" "loadPerspective(This, Perspective, Options::[Option]) -> boolean()")
               "wxAuiManager:loadPerspective/2"
               ("http://www.erlang.org/doc/man/wxAuiManager.html#loadPerspective-2" "loadPerspective(This, Perspective) -> boolean()")
               "wxAuiManager:loadPaneInfo/3"
               ("http://www.erlang.org/doc/man/wxAuiManager.html#loadPaneInfo-3" "loadPaneInfo(This, Pane_part, Pane) -> ok")
               "wxAuiManager:insertPane/4"
               ("http://www.erlang.org/doc/man/wxAuiManager.html#insertPane-4" "insertPane(This, Window, Insert_location, Options::[Option]) -> boolean()")
               "wxAuiManager:insertPane/3"
               ("http://www.erlang.org/doc/man/wxAuiManager.html#insertPane-3" "insertPane(This, Window, Insert_location) -> boolean()")
               "wxAuiManager:hideHint/1"
               ("http://www.erlang.org/doc/man/wxAuiManager.html#hideHint-1" "hideHint(This) -> ok")
               "wxAuiManager:getPane/2"
               ("http://www.erlang.org/doc/man/wxAuiManager.html#getPane-2" "getPane(This, Name) -> wxAuiPaneInfo:wxAuiPaneInfo()")
               "wxAuiManager:getManager/1"
               ("http://www.erlang.org/doc/man/wxAuiManager.html#getManager-1" "getManager(Window) -> wxAuiManager()")
               "wxAuiManager:getManagedWindow/1"
               ("http://www.erlang.org/doc/man/wxAuiManager.html#getManagedWindow-1" "getManagedWindow(This) -> wxWindow:wxWindow()")
               "wxAuiManager:getFlags/1"
               ("http://www.erlang.org/doc/man/wxAuiManager.html#getFlags-1" "getFlags(This) -> integer()")
               "wxAuiManager:getDockSizeConstraint/1"
               ("http://www.erlang.org/doc/man/wxAuiManager.html#getDockSizeConstraint-1" "getDockSizeConstraint(This) -> {Width_pct::number(), Height_pct::number()}")
               "wxAuiManager:getArtProvider/1"
               ("http://www.erlang.org/doc/man/wxAuiManager.html#getArtProvider-1" "getArtProvider(This) -> wxAuiDockArt:wxAuiDockArt()")
               "wxAuiManager:getAllPanes/1"
               ("http://www.erlang.org/doc/man/wxAuiManager.html#getAllPanes-1" "getAllPanes(This) -> [ wxAuiPaneInfo:wxAuiPaneInfo() ]")
               "wxAuiManager:detachPane/2"
               ("http://www.erlang.org/doc/man/wxAuiManager.html#detachPane-2" "detachPane(This, Window) -> boolean()")
               "wxAuiManager:addPane/4"
               ("http://www.erlang.org/doc/man/wxAuiManager.html#addPane-4" "addPane(This, Window, Pane_info, Drop_pos) -> boolean()")
               "wxAuiManager:addPane/3"
               ("http://www.erlang.org/doc/man/wxAuiManager.html#addPane-3" "addPane(This, Window, Options::[Option]) -> boolean()")
               "wxAuiManager:addPane/2"
               ("http://www.erlang.org/doc/man/wxAuiManager.html#addPane-2" "addPane(This, Window) -> boolean()")
               "wxAuiManager:new/1"
               ("http://www.erlang.org/doc/man/wxAuiManager.html#new-1" "new(Options::[Option]) -> wxAuiManager()")
               "wxAuiManager:new/0"
               ("http://www.erlang.org/doc/man/wxAuiManager.html#new-0" "new() -> wxAuiManager()")
               "wxAuiManager:"
               ("http://www.erlang.org/doc/man/wxAuiManager.html#type-wxAuiManager" "wxAuiManager()")
               "wxAuiManagerEvent:canVeto/1"
               ("http://www.erlang.org/doc/man/wxAuiManagerEvent.html#canVeto-1" "canVeto(This) -> boolean()")
               "wxAuiManagerEvent:setCanVeto/2"
               ("http://www.erlang.org/doc/man/wxAuiManagerEvent.html#setCanVeto-2" "setCanVeto(This, Can_veto) -> ok")
               "wxAuiManagerEvent:getVeto/1"
               ("http://www.erlang.org/doc/man/wxAuiManagerEvent.html#getVeto-1" "getVeto(This) -> boolean()")
               "wxAuiManagerEvent:veto/2"
               ("http://www.erlang.org/doc/man/wxAuiManagerEvent.html#veto-2" "veto(This, Options::[Option]) -> ok")
               "wxAuiManagerEvent:veto/1"
               ("http://www.erlang.org/doc/man/wxAuiManagerEvent.html#veto-1" "veto(This) -> ok")
               "wxAuiManagerEvent:getDC/1"
               ("http://www.erlang.org/doc/man/wxAuiManagerEvent.html#getDC-1" "getDC(This) -> wxDC:wxDC()")
               "wxAuiManagerEvent:setDC/2"
               ("http://www.erlang.org/doc/man/wxAuiManagerEvent.html#setDC-2" "setDC(This, Pdc) -> ok")
               "wxAuiManagerEvent:getButton/1"
               ("http://www.erlang.org/doc/man/wxAuiManagerEvent.html#getButton-1" "getButton(This) -> integer()")
               "wxAuiManagerEvent:setButton/2"
               ("http://www.erlang.org/doc/man/wxAuiManagerEvent.html#setButton-2" "setButton(This, B) -> ok")
               "wxAuiManagerEvent:getPane/1"
               ("http://www.erlang.org/doc/man/wxAuiManagerEvent.html#getPane-1" "getPane(This) -> wxAuiPaneInfo:wxAuiPaneInfo()")
               "wxAuiManagerEvent:setPane/2"
               ("http://www.erlang.org/doc/man/wxAuiManagerEvent.html#setPane-2" "setPane(This, P) -> ok")
               "wxAuiManagerEvent:getManager/1"
               ("http://www.erlang.org/doc/man/wxAuiManagerEvent.html#getManager-1" "getManager(This) -> wxAuiManager:wxAuiManager()")
               "wxAuiManagerEvent:setManager/2"
               ("http://www.erlang.org/doc/man/wxAuiManagerEvent.html#setManager-2" "setManager(This, Mgr) -> ok")
               "wxAuiManagerEvent:"
               ("http://www.erlang.org/doc/man/wxAuiManagerEvent.html#type-wxAuiManagerEvent" "wxAuiManagerEvent()")
               "wxAuiNotebook:destroy/1"
               ("http://www.erlang.org/doc/man/wxAuiNotebook.html#destroy-1" "destroy(This:: wxAuiNotebook() ) -> ok")
               "wxAuiNotebook:setUniformBitmapSize/2"
               ("http://www.erlang.org/doc/man/wxAuiNotebook.html#setUniformBitmapSize-2" "setUniformBitmapSize(This, Size) -> ok")
               "wxAuiNotebook:setTabCtrlHeight/2"
               ("http://www.erlang.org/doc/man/wxAuiNotebook.html#setTabCtrlHeight-2" "setTabCtrlHeight(This, Height) -> ok")
               "wxAuiNotebook:setSelection/2"
               ("http://www.erlang.org/doc/man/wxAuiNotebook.html#setSelection-2" "setSelection(This, New_page) -> integer()")
               "wxAuiNotebook:setPageText/3"
               ("http://www.erlang.org/doc/man/wxAuiNotebook.html#setPageText-3" "setPageText(This, Page, Text) -> boolean()")
               "wxAuiNotebook:setPageBitmap/3"
               ("http://www.erlang.org/doc/man/wxAuiNotebook.html#setPageBitmap-3" "setPageBitmap(This, Page, Bitmap) -> boolean()")
               "wxAuiNotebook:setFont/2"
               ("http://www.erlang.org/doc/man/wxAuiNotebook.html#setFont-2" "setFont(This, Font) -> boolean()")
               "wxAuiNotebook:setArtProvider/2"
               ("http://www.erlang.org/doc/man/wxAuiNotebook.html#setArtProvider-2" "setArtProvider(This, Art) -> ok")
               "wxAuiNotebook:removePage/2"
               ("http://www.erlang.org/doc/man/wxAuiNotebook.html#removePage-2" "removePage(This, Page) -> boolean()")
               "wxAuiNotebook:insertPage/5"
               ("http://www.erlang.org/doc/man/wxAuiNotebook.html#insertPage-5" "insertPage(This, Page_idx, Page, Caption, Options::[Option]) -> boolean()")
               "wxAuiNotebook:insertPage/4"
               ("http://www.erlang.org/doc/man/wxAuiNotebook.html#insertPage-4" "insertPage(This, Page_idx, Page, Caption) -> boolean()")
               "wxAuiNotebook:getSelection/1"
               ("http://www.erlang.org/doc/man/wxAuiNotebook.html#getSelection-1" "getSelection(This) -> integer()")
               "wxAuiNotebook:getPageText/2"
               ("http://www.erlang.org/doc/man/wxAuiNotebook.html#getPageText-2" "getPageText(This, Page_idx) -> unicode:charlist()")
               "wxAuiNotebook:getPageIndex/2"
               ("http://www.erlang.org/doc/man/wxAuiNotebook.html#getPageIndex-2" "getPageIndex(This, Page_wnd) -> integer()")
               "wxAuiNotebook:getPageCount/1"
               ("http://www.erlang.org/doc/man/wxAuiNotebook.html#getPageCount-1" "getPageCount(This) -> integer()")
               "wxAuiNotebook:getPageBitmap/2"
               ("http://www.erlang.org/doc/man/wxAuiNotebook.html#getPageBitmap-2" "getPageBitmap(This, Page_idx) -> wxBitmap:wxBitmap()")
               "wxAuiNotebook:getPage/2"
               ("http://www.erlang.org/doc/man/wxAuiNotebook.html#getPage-2" "getPage(This, Page_idx) -> wxWindow:wxWindow()")
               "wxAuiNotebook:getArtProvider/1"
               ("http://www.erlang.org/doc/man/wxAuiNotebook.html#getArtProvider-1" "getArtProvider(This) -> wxAuiTabArt:wxAuiTabArt()")
               "wxAuiNotebook:deletePage/2"
               ("http://www.erlang.org/doc/man/wxAuiNotebook.html#deletePage-2" "deletePage(This, Page) -> boolean()")
               "wxAuiNotebook:create/3"
               ("http://www.erlang.org/doc/man/wxAuiNotebook.html#create-3" "create(This, Parent, Options::[Option]) -> boolean()")
               "wxAuiNotebook:create/2"
               ("http://www.erlang.org/doc/man/wxAuiNotebook.html#create-2" "create(This, Parent) -> boolean()")
               "wxAuiNotebook:addPage/4"
               ("http://www.erlang.org/doc/man/wxAuiNotebook.html#addPage-4" "addPage(This, Page, Caption, Options::[Option]) -> boolean()")
               "wxAuiNotebook:addPage/3"
               ("http://www.erlang.org/doc/man/wxAuiNotebook.html#addPage-3" "addPage(This, Page, Caption) -> boolean()")
               "wxAuiNotebook:new/2"
               ("http://www.erlang.org/doc/man/wxAuiNotebook.html#new-2" "new(Parent, Options::[Option]) -> wxAuiNotebook()")
               "wxAuiNotebook:new/1"
               ("http://www.erlang.org/doc/man/wxAuiNotebook.html#new-1" "new(Parent) -> wxAuiNotebook()")
               "wxAuiNotebook:new/0"
               ("http://www.erlang.org/doc/man/wxAuiNotebook.html#new-0" "new() -> wxAuiNotebook()")
               "wxAuiNotebook:"
               ("http://www.erlang.org/doc/man/wxAuiNotebook.html#type-wxAuiNotebook" "wxAuiNotebook()")
               "wxAuiNotebookEvent:getDragSource/1"
               ("http://www.erlang.org/doc/man/wxAuiNotebookEvent.html#getDragSource-1" "getDragSource(This) -> wxAuiNotebook:wxAuiNotebook()")
               "wxAuiNotebookEvent:setDragSource/2"
               ("http://www.erlang.org/doc/man/wxAuiNotebookEvent.html#setDragSource-2" "setDragSource(This, S) -> ok")
               "wxAuiNotebookEvent:getOldSelection/1"
               ("http://www.erlang.org/doc/man/wxAuiNotebookEvent.html#getOldSelection-1" "getOldSelection(This) -> integer()")
               "wxAuiNotebookEvent:setOldSelection/2"
               ("http://www.erlang.org/doc/man/wxAuiNotebookEvent.html#setOldSelection-2" "setOldSelection(This, S) -> ok")
               "wxAuiNotebookEvent:getSelection/1"
               ("http://www.erlang.org/doc/man/wxAuiNotebookEvent.html#getSelection-1" "getSelection(This) -> integer()")
               "wxAuiNotebookEvent:setSelection/2"
               ("http://www.erlang.org/doc/man/wxAuiNotebookEvent.html#setSelection-2" "setSelection(This, S) -> ok")
               "wxAuiNotebookEvent:"
               ("http://www.erlang.org/doc/man/wxAuiNotebookEvent.html#type-wxAuiNotebookEvent" "wxAuiNotebookEvent()")
               "wxAuiPaneInfo:destroy/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#destroy-1" "destroy(This:: wxAuiPaneInfo() ) -> ok")
               "wxAuiPaneInfo:getFloatingSize/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#getFloatingSize-1" "getFloatingSize(This) -> {W::integer(), H::integer()}")
               "wxAuiPaneInfo:getFloatingPosition/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#getFloatingPosition-1" "getFloatingPosition(This) -> {X::integer(), Y::integer()}")
               "wxAuiPaneInfo:getPosition/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#getPosition-1" "getPosition(This) -> integer()")
               "wxAuiPaneInfo:getRow/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#getRow-1" "getRow(This) -> integer()")
               "wxAuiPaneInfo:getLayer/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#getLayer-1" "getLayer(This) -> integer()")
               "wxAuiPaneInfo:getDirection/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#getDirection-1" "getDirection(This) -> integer()")
               "wxAuiPaneInfo:getFrame/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#getFrame-1" "getFrame(This) -> wxFrame:wxFrame()")
               "wxAuiPaneInfo:getWindow/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#getWindow-1" "getWindow(This) -> wxWindow:wxWindow()")
               "wxAuiPaneInfo:window/2"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#window-2" "window(This, W) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:topDockable/2"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#topDockable-2" "topDockable(This, Options::[Option]) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:topDockable/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#topDockable-1" "topDockable(This) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:top/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#top-1" "top(This) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:toolbarPane/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#toolbarPane-1" "toolbarPane(This) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:show/2"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#show-2" "show(This, Options::[Option]) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:show/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#show-1" "show(This) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:setFlag/3"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#setFlag-3" "setFlag(This, Flag, Option_state) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:safeSet/2"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#safeSet-2" "safeSet(This, Source) -> ok")
               "wxAuiPaneInfo:row/2"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#row-2" "row(This, Row) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:rightDockable/2"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#rightDockable-2" "rightDockable(This, Options::[Option]) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:rightDockable/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#rightDockable-1" "rightDockable(This) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:right/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#right-1" "right(This) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:resizable/2"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#resizable-2" "resizable(This, Options::[Option]) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:resizable/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#resizable-1" "resizable(This) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:position/2"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#position-2" "position(This, Pos) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:pinButton/2"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#pinButton-2" "pinButton(This, Options::[Option]) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:pinButton/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#pinButton-1" "pinButton(This) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:paneBorder/2"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#paneBorder-2" "paneBorder(This, Options::[Option]) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:paneBorder/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#paneBorder-1" "paneBorder(This) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:name/2"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#name-2" "name(This, N) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:movable/2"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#movable-2" "movable(This, Options::[Option]) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:movable/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#movable-1" "movable(This) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:minimizeButton/2"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#minimizeButton-2" "minimizeButton(This, Options::[Option]) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:minimizeButton/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#minimizeButton-1" "minimizeButton(This) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:minSize/3"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#minSize-3" "minSize(This, X, Y) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:minSize/2"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#minSize-2" "minSize(This, Size) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:maximizeButton/2"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#maximizeButton-2" "maximizeButton(This, Options::[Option]) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:maximizeButton/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#maximizeButton-1" "maximizeButton(This) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:maxSize/3"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#maxSize-3" "maxSize(This, X, Y) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:maxSize/2"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#maxSize-2" "maxSize(This, Size) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:leftDockable/2"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#leftDockable-2" "leftDockable(This, Options::[Option]) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:leftDockable/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#leftDockable-1" "leftDockable(This) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:left/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#left-1" "left(This) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:layer/2"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#layer-2" "layer(This, Layer) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:isTopDockable/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#isTopDockable-1" "isTopDockable(This) -> boolean()")
               "wxAuiPaneInfo:isToolbar/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#isToolbar-1" "isToolbar(This) -> boolean()")
               "wxAuiPaneInfo:isShown/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#isShown-1" "isShown(This) -> boolean()")
               "wxAuiPaneInfo:isRightDockable/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#isRightDockable-1" "isRightDockable(This) -> boolean()")
               "wxAuiPaneInfo:isResizable/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#isResizable-1" "isResizable(This) -> boolean()")
               "wxAuiPaneInfo:isOk/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#isOk-1" "isOk(This) -> boolean()")
               "wxAuiPaneInfo:isMovable/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#isMovable-1" "isMovable(This) -> boolean()")
               "wxAuiPaneInfo:isLeftDockable/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#isLeftDockable-1" "isLeftDockable(This) -> boolean()")
               "wxAuiPaneInfo:isFloating/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#isFloating-1" "isFloating(This) -> boolean()")
               "wxAuiPaneInfo:isFloatable/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#isFloatable-1" "isFloatable(This) -> boolean()")
               "wxAuiPaneInfo:isFixed/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#isFixed-1" "isFixed(This) -> boolean()")
               "wxAuiPaneInfo:isDocked/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#isDocked-1" "isDocked(This) -> boolean()")
               "wxAuiPaneInfo:isBottomDockable/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#isBottomDockable-1" "isBottomDockable(This) -> boolean()")
               "wxAuiPaneInfo:hide/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#hide-1" "hide(This) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:hasPinButton/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#hasPinButton-1" "hasPinButton(This) -> boolean()")
               "wxAuiPaneInfo:hasMinimizeButton/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#hasMinimizeButton-1" "hasMinimizeButton(This) -> boolean()")
               "wxAuiPaneInfo:hasMaximizeButton/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#hasMaximizeButton-1" "hasMaximizeButton(This) -> boolean()")
               "wxAuiPaneInfo:hasGripperTop/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#hasGripperTop-1" "hasGripperTop(This) -> boolean()")
               "wxAuiPaneInfo:hasGripper/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#hasGripper-1" "hasGripper(This) -> boolean()")
               "wxAuiPaneInfo:hasFlag/2"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#hasFlag-2" "hasFlag(This, Flag) -> boolean()")
               "wxAuiPaneInfo:hasCloseButton/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#hasCloseButton-1" "hasCloseButton(This) -> boolean()")
               "wxAuiPaneInfo:hasCaption/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#hasCaption-1" "hasCaption(This) -> boolean()")
               "wxAuiPaneInfo:hasBorder/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#hasBorder-1" "hasBorder(This) -> boolean()")
               "wxAuiPaneInfo:gripperTop/2"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#gripperTop-2" "gripperTop(This, Options::[Option]) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:gripperTop/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#gripperTop-1" "gripperTop(This) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:gripper/2"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#gripper-2" "gripper(This, Options::[Option]) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:gripper/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#gripper-1" "gripper(This) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:floatingSize/3"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#floatingSize-3" "floatingSize(This, X, Y) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:floatingSize/2"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#floatingSize-2" "floatingSize(This, Size) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:floatingPosition/3"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#floatingPosition-3" "floatingPosition(This, X, Y) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:floatingPosition/2"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#floatingPosition-2" "floatingPosition(This, Pos) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:floatable/2"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#floatable-2" "floatable(This, Options::[Option]) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:floatable/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#floatable-1" "floatable(This) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:float/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#float-1" "float(This) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:fixed/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#fixed-1" "fixed(This) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:dockable/2"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#dockable-2" "dockable(This, Options::[Option]) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:dockable/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#dockable-1" "dockable(This) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:dock/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#dock-1" "dock(This) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:direction/2"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#direction-2" "direction(This, Direction) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:destroyOnClose/2"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#destroyOnClose-2" "destroyOnClose(This, Options::[Option]) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:destroyOnClose/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#destroyOnClose-1" "destroyOnClose(This) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:defaultPane/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#defaultPane-1" "defaultPane(This) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:closeButton/2"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#closeButton-2" "closeButton(This, Options::[Option]) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:closeButton/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#closeButton-1" "closeButton(This) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:centrePane/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#centrePane-1" "centrePane(This) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:centre/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#centre-1" "centre(This) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:captionVisible/2"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#captionVisible-2" "captionVisible(This, Options::[Option]) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:captionVisible/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#captionVisible-1" "captionVisible(This) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:caption/2"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#caption-2" "caption(This, C) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:bottomDockable/2"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#bottomDockable-2" "bottomDockable(This, Options::[Option]) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:bottomDockable/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#bottomDockable-1" "bottomDockable(This) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:bottom/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#bottom-1" "bottom(This) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:bestSize/3"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#bestSize-3" "bestSize(This, X, Y) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:bestSize/2"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#bestSize-2" "bestSize(This, Size) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:new/1"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#new-1" "new(C) -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:new/0"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#new-0" "new() -> wxAuiPaneInfo()")
               "wxAuiPaneInfo:"
               ("http://www.erlang.org/doc/man/wxAuiPaneInfo.html#type-wxAuiPaneInfo" "wxAuiPaneInfo()")
               "wxAuiSimpleTabArt:destroy/1"
               ("http://www.erlang.org/doc/man/wxAuiSimpleTabArt.html#destroy-1" "destroy(This:: wxAuiSimpleTabArt() ) -> ok")
               "wxAuiSimpleTabArt:new/0"
               ("http://www.erlang.org/doc/man/wxAuiSimpleTabArt.html#new-0" "new() -> wxAuiSimpleTabArt()")
               "wxAuiSimpleTabArt:"
               ("http://www.erlang.org/doc/man/wxAuiSimpleTabArt.html#type-wxAuiSimpleTabArt" "wxAuiSimpleTabArt()")
               "wxAuiTabArt:setActiveColour/2"
               ("http://www.erlang.org/doc/man/wxAuiTabArt.html#setActiveColour-2" "setActiveColour(This, Colour) -> ok")
               "wxAuiTabArt:setColour/2"
               ("http://www.erlang.org/doc/man/wxAuiTabArt.html#setColour-2" "setColour(This, Colour) -> ok")
               "wxAuiTabArt:setSelectedFont/2"
               ("http://www.erlang.org/doc/man/wxAuiTabArt.html#setSelectedFont-2" "setSelectedFont(This, Font) -> ok")
               "wxAuiTabArt:setNormalFont/2"
               ("http://www.erlang.org/doc/man/wxAuiTabArt.html#setNormalFont-2" "setNormalFont(This, Font) -> ok")
               "wxAuiTabArt:setMeasuringFont/2"
               ("http://www.erlang.org/doc/man/wxAuiTabArt.html#setMeasuringFont-2" "setMeasuringFont(This, Font) -> ok")
               "wxAuiTabArt:setFlags/2"
               ("http://www.erlang.org/doc/man/wxAuiTabArt.html#setFlags-2" "setFlags(This, Flags) -> ok")
               "wxAuiTabArt:"
               ("http://www.erlang.org/doc/man/wxAuiTabArt.html#type-wxAuiTabArt" "wxAuiTabArt()")
               "wxBitmap:destroy/1"
               ("http://www.erlang.org/doc/man/wxBitmap.html#destroy-1" "destroy(This:: wxBitmap() ) -> ok")
               "wxBitmap:setWidth/2"
               ("http://www.erlang.org/doc/man/wxBitmap.html#setWidth-2" "setWidth(This, Width) -> ok")
               "wxBitmap:setPalette/2"
               ("http://www.erlang.org/doc/man/wxBitmap.html#setPalette-2" "setPalette(This, Palette) -> ok")
               "wxBitmap:setMask/2"
               ("http://www.erlang.org/doc/man/wxBitmap.html#setMask-2" "setMask(This, Mask) -> ok")
               "wxBitmap:setHeight/2"
               ("http://www.erlang.org/doc/man/wxBitmap.html#setHeight-2" "setHeight(This, Height) -> ok")
               "wxBitmap:setDepth/2"
               ("http://www.erlang.org/doc/man/wxBitmap.html#setDepth-2" "setDepth(This, Depth) -> ok")
               "wxBitmap:saveFile/4"
               ("http://www.erlang.org/doc/man/wxBitmap.html#saveFile-4" "saveFile(This, Name, Type, Options::[Option]) -> boolean()")
               "wxBitmap:saveFile/3"
               ("http://www.erlang.org/doc/man/wxBitmap.html#saveFile-3" "saveFile(This, Name, Type) -> boolean()")
               "wxBitmap:ok/1"
               ("http://www.erlang.org/doc/man/wxBitmap.html#ok-1" "ok(This) -> boolean()")
               "wxBitmap:loadFile/3"
               ("http://www.erlang.org/doc/man/wxBitmap.html#loadFile-3" "loadFile(This, Name, Options::[Option]) -> boolean()")
               "wxBitmap:loadFile/2"
               ("http://www.erlang.org/doc/man/wxBitmap.html#loadFile-2" "loadFile(This, Name) -> boolean()")
               "wxBitmap:getSubBitmap/2"
               ("http://www.erlang.org/doc/man/wxBitmap.html#getSubBitmap-2" "getSubBitmap(This, Rect) -> wxBitmap()")
               "wxBitmap:getWidth/1"
               ("http://www.erlang.org/doc/man/wxBitmap.html#getWidth-1" "getWidth(This) -> integer()")
               "wxBitmap:getMask/1"
               ("http://www.erlang.org/doc/man/wxBitmap.html#getMask-1" "getMask(This) -> wxMask:wxMask()")
               "wxBitmap:getPalette/1"
               ("http://www.erlang.org/doc/man/wxBitmap.html#getPalette-1" "getPalette(This) -> wxPalette:wxPalette()")
               "wxBitmap:getHeight/1"
               ("http://www.erlang.org/doc/man/wxBitmap.html#getHeight-1" "getHeight(This) -> integer()")
               "wxBitmap:getDepth/1"
               ("http://www.erlang.org/doc/man/wxBitmap.html#getDepth-1" "getDepth(This) -> integer()")
               "wxBitmap:create/4"
               ("http://www.erlang.org/doc/man/wxBitmap.html#create-4" "create(This, Width, Height, Options::[Option]) -> boolean()")
               "wxBitmap:create/3"
               ("http://www.erlang.org/doc/man/wxBitmap.html#create-3" "create(This, Width, Height) -> boolean()")
               "wxBitmap:copyFromIcon/2"
               ("http://www.erlang.org/doc/man/wxBitmap.html#copyFromIcon-2" "copyFromIcon(This, Icon) -> boolean()")
               "wxBitmap:convertToImage/1"
               ("http://www.erlang.org/doc/man/wxBitmap.html#convertToImage-1" "convertToImage(This) -> wxImage:wxImage()")
               "wxBitmap:new/4"
               ("http://www.erlang.org/doc/man/wxBitmap.html#new-4" "new(Bits, Width, Height, Options::[Option]) -> wxBitmap()")
               "wxBitmap:new/3"
               ("http://www.erlang.org/doc/man/wxBitmap.html#new-3" "new(Bits, Width, Height) -> wxBitmap()")
               "wxBitmap:new/2"
               ("http://www.erlang.org/doc/man/wxBitmap.html#new-2" "new(Width, Height) -> wxBitmap()")
               "wxBitmap:new/1"
               ("http://www.erlang.org/doc/man/wxBitmap.html#new-1" "new(Filename) -> wxBitmap()")
               "wxBitmap:new/0"
               ("http://www.erlang.org/doc/man/wxBitmap.html#new-0" "new() -> wxBitmap()")
               "wxBitmap:"
               ("http://www.erlang.org/doc/man/wxBitmap.html#type-wxBitmap" "wxBitmap()")
               "wxBitmapButton:destroy/1"
               ("http://www.erlang.org/doc/man/wxBitmapButton.html#destroy-1" "destroy(This:: wxBitmapButton() ) -> ok")
               "wxBitmapButton:setBitmapSelected/2"
               ("http://www.erlang.org/doc/man/wxBitmapButton.html#setBitmapSelected-2" "setBitmapSelected(This, Sel) -> ok")
               "wxBitmapButton:setBitmapLabel/2"
               ("http://www.erlang.org/doc/man/wxBitmapButton.html#setBitmapLabel-2" "setBitmapLabel(This, Bitmap) -> ok")
               "wxBitmapButton:setBitmapFocus/2"
               ("http://www.erlang.org/doc/man/wxBitmapButton.html#setBitmapFocus-2" "setBitmapFocus(This, Focus) -> ok")
               "wxBitmapButton:setBitmapDisabled/2"
               ("http://www.erlang.org/doc/man/wxBitmapButton.html#setBitmapDisabled-2" "setBitmapDisabled(This, Disabled) -> ok")
               "wxBitmapButton:getBitmapSelected/1"
               ("http://www.erlang.org/doc/man/wxBitmapButton.html#getBitmapSelected-1" "getBitmapSelected(This) -> wxBitmap:wxBitmap()")
               "wxBitmapButton:getBitmapLabel/1"
               ("http://www.erlang.org/doc/man/wxBitmapButton.html#getBitmapLabel-1" "getBitmapLabel(This) -> wxBitmap:wxBitmap()")
               "wxBitmapButton:getBitmapFocus/1"
               ("http://www.erlang.org/doc/man/wxBitmapButton.html#getBitmapFocus-1" "getBitmapFocus(This) -> wxBitmap:wxBitmap()")
               "wxBitmapButton:getBitmapDisabled/1"
               ("http://www.erlang.org/doc/man/wxBitmapButton.html#getBitmapDisabled-1" "getBitmapDisabled(This) -> wxBitmap:wxBitmap()")
               "wxBitmapButton:create/5"
               ("http://www.erlang.org/doc/man/wxBitmapButton.html#create-5" "create(This, Parent, Id, Bitmap, Options::[Option]) -> boolean()")
               "wxBitmapButton:create/4"
               ("http://www.erlang.org/doc/man/wxBitmapButton.html#create-4" "create(This, Parent, Id, Bitmap) -> boolean()")
               "wxBitmapButton:new/4"
               ("http://www.erlang.org/doc/man/wxBitmapButton.html#new-4" "new(Parent, Id, Bitmap, Options::[Option]) -> wxBitmapButton()")
               "wxBitmapButton:new/3"
               ("http://www.erlang.org/doc/man/wxBitmapButton.html#new-3" "new(Parent, Id, Bitmap) -> wxBitmapButton()")
               "wxBitmapButton:new/0"
               ("http://www.erlang.org/doc/man/wxBitmapButton.html#new-0" "new() -> wxBitmapButton()")
               "wxBitmapButton:"
               ("http://www.erlang.org/doc/man/wxBitmapButton.html#type-wxBitmapButton" "wxBitmapButton()")
               "wxBitmapDataObject:destroy/1"
               ("http://www.erlang.org/doc/man/wxBitmapDataObject.html#destroy-1" "destroy(This:: wxBitmapDataObject() ) -> ok")
               "wxBitmapDataObject:setBitmap/2"
               ("http://www.erlang.org/doc/man/wxBitmapDataObject.html#setBitmap-2" "setBitmap(This, Bitmap) -> ok")
               "wxBitmapDataObject:getBitmap/1"
               ("http://www.erlang.org/doc/man/wxBitmapDataObject.html#getBitmap-1" "getBitmap(This) -> wxBitmap:wxBitmap()")
               "wxBitmapDataObject:new/1"
               ("http://www.erlang.org/doc/man/wxBitmapDataObject.html#new-1" "new(Options::[Option]) -> wxBitmapDataObject()")
               "wxBitmapDataObject:new/0"
               ("http://www.erlang.org/doc/man/wxBitmapDataObject.html#new-0" "new() -> wxBitmapDataObject()")
               "wxBitmapDataObject:"
               ("http://www.erlang.org/doc/man/wxBitmapDataObject.html#type-wxBitmapDataObject" "wxBitmapDataObject()")
               "wxBoxSizer:destroy/1"
               ("http://www.erlang.org/doc/man/wxBoxSizer.html#destroy-1" "destroy(This:: wxBoxSizer() ) -> ok")
               "wxBoxSizer:getOrientation/1"
               ("http://www.erlang.org/doc/man/wxBoxSizer.html#getOrientation-1" "getOrientation(This) -> integer()")
               "wxBoxSizer:new/1"
               ("http://www.erlang.org/doc/man/wxBoxSizer.html#new-1" "new(Orient) -> wxBoxSizer()")
               "wxBoxSizer:"
               ("http://www.erlang.org/doc/man/wxBoxSizer.html#type-wxBoxSizer" "wxBoxSizer()")
               "wxBrush:destroy/1"
               ("http://www.erlang.org/doc/man/wxBrush.html#destroy-1" "destroy(This:: wxBrush() ) -> ok")
               "wxBrush:setStyle/2"
               ("http://www.erlang.org/doc/man/wxBrush.html#setStyle-2" "setStyle(This, Style) -> ok")
               "wxBrush:setStipple/2"
               ("http://www.erlang.org/doc/man/wxBrush.html#setStipple-2" "setStipple(This, Stipple) -> ok")
               "wxBrush:setColour/4"
               ("http://www.erlang.org/doc/man/wxBrush.html#setColour-4" "setColour(This, R, G, B) -> ok")
               "wxBrush:setColour/2"
               ("http://www.erlang.org/doc/man/wxBrush.html#setColour-2" "setColour(This, Col) -> ok")
               "wxBrush:isOk/1"
               ("http://www.erlang.org/doc/man/wxBrush.html#isOk-1" "isOk(This) -> boolean()")
               "wxBrush:isHatch/1"
               ("http://www.erlang.org/doc/man/wxBrush.html#isHatch-1" "isHatch(This) -> boolean()")
               "wxBrush:getStyle/1"
               ("http://www.erlang.org/doc/man/wxBrush.html#getStyle-1" "getStyle(This) -> integer()")
               "wxBrush:getStipple/1"
               ("http://www.erlang.org/doc/man/wxBrush.html#getStipple-1" "getStipple(This) -> wxBitmap:wxBitmap()")
               "wxBrush:getColour/1"
               ("http://www.erlang.org/doc/man/wxBrush.html#getColour-1" "getColour(This) -> wx:wx_colour4()")
               "wxBrush:new/2"
               ("http://www.erlang.org/doc/man/wxBrush.html#new-2" "new(Colour, Options::[Option]) -> wxBrush()")
               "wxBrush:new/1"
               ("http://www.erlang.org/doc/man/wxBrush.html#new-1" "new(Colour) -> wxBrush()")
               "wxBrush:new/0"
               ("http://www.erlang.org/doc/man/wxBrush.html#new-0" "new() -> wxBrush()")
               "wxBrush:"
               ("http://www.erlang.org/doc/man/wxBrush.html#type-wxBrush" "wxBrush()")
               "wxBufferedDC:destroy/1"
               ("http://www.erlang.org/doc/man/wxBufferedDC.html#destroy-1" "destroy(This:: wxBufferedDC() ) -> ok")
               "wxBufferedDC:init/4"
               ("http://www.erlang.org/doc/man/wxBufferedDC.html#init-4" "init(This, Dc, Area, Options::[Option]) -> ok")
               "wxBufferedDC:init/3"
               ("http://www.erlang.org/doc/man/wxBufferedDC.html#init-3" "init(This, Dc, Area) -> ok")
               "wxBufferedDC:init/2"
               ("http://www.erlang.org/doc/man/wxBufferedDC.html#init-2" "init(This, Dc) -> ok")
               "wxBufferedDC:new/3"
               ("http://www.erlang.org/doc/man/wxBufferedDC.html#new-3" "new(Dc, Area, Options::[Option]) -> wxBufferedDC()")
               "wxBufferedDC:new/2"
               ("http://www.erlang.org/doc/man/wxBufferedDC.html#new-2" "new(Dc, Area) -> wxBufferedDC()")
               "wxBufferedDC:new/1"
               ("http://www.erlang.org/doc/man/wxBufferedDC.html#new-1" "new(Dc) -> wxBufferedDC()")
               "wxBufferedDC:new/0"
               ("http://www.erlang.org/doc/man/wxBufferedDC.html#new-0" "new() -> wxBufferedDC()")
               "wxBufferedDC:"
               ("http://www.erlang.org/doc/man/wxBufferedDC.html#type-wxBufferedDC" "wxBufferedDC()")
               "wxBufferedPaintDC:destroy/1"
               ("http://www.erlang.org/doc/man/wxBufferedPaintDC.html#destroy-1" "destroy(This:: wxBufferedPaintDC() ) -> ok")
               "wxBufferedPaintDC:new/3"
               ("http://www.erlang.org/doc/man/wxBufferedPaintDC.html#new-3" "new(Window, Buffer, Options::[Option]) -> wxBufferedPaintDC()")
               "wxBufferedPaintDC:new/2"
               ("http://www.erlang.org/doc/man/wxBufferedPaintDC.html#new-2" "new(Window, Buffer) -> wxBufferedPaintDC()")
               "wxBufferedPaintDC:new/1"
               ("http://www.erlang.org/doc/man/wxBufferedPaintDC.html#new-1" "new(Window) -> wxBufferedPaintDC()")
               "wxBufferedPaintDC:"
               ("http://www.erlang.org/doc/man/wxBufferedPaintDC.html#type-wxBufferedPaintDC" "wxBufferedPaintDC()")
               "wxButton:destroy/1"
               ("http://www.erlang.org/doc/man/wxButton.html#destroy-1" "destroy(This:: wxButton() ) -> ok")
               "wxButton:setLabel/2"
               ("http://www.erlang.org/doc/man/wxButton.html#setLabel-2" "setLabel(This, Label) -> ok")
               "wxButton:setDefault/1"
               ("http://www.erlang.org/doc/man/wxButton.html#setDefault-1" "setDefault(This) -> ok")
               "wxButton:getDefaultSize/0"
               ("http://www.erlang.org/doc/man/wxButton.html#getDefaultSize-0" "getDefaultSize() -> {W::integer(), H::integer()}")
               "wxButton:create/4"
               ("http://www.erlang.org/doc/man/wxButton.html#create-4" "create(This, Parent, Id, Options::[Option]) -> boolean()")
               "wxButton:create/3"
               ("http://www.erlang.org/doc/man/wxButton.html#create-3" "create(This, Parent, Id) -> boolean()")
               "wxButton:new/3"
               ("http://www.erlang.org/doc/man/wxButton.html#new-3" "new(Parent, Id, Options::[Option]) -> wxButton()")
               "wxButton:new/2"
               ("http://www.erlang.org/doc/man/wxButton.html#new-2" "new(Parent, Id) -> wxButton()")
               "wxButton:new/0"
               ("http://www.erlang.org/doc/man/wxButton.html#new-0" "new() -> wxButton()")
               "wxButton:"
               ("http://www.erlang.org/doc/man/wxButton.html#type-wxButton" "wxButton()")
               "wxCalendarCtrl:destroy/1"
               ("http://www.erlang.org/doc/man/wxCalendarCtrl.html#destroy-1" "destroy(This:: wxCalendarCtrl() ) -> ok")
               "wxCalendarCtrl:hitTest/2"
               ("http://www.erlang.org/doc/man/wxCalendarCtrl.html#hitTest-2" "hitTest(This, Pos) -> Result")
               "wxCalendarCtrl:resetAttr/2"
               ("http://www.erlang.org/doc/man/wxCalendarCtrl.html#resetAttr-2" "resetAttr(This, Day) -> ok")
               "wxCalendarCtrl:setHoliday/2"
               ("http://www.erlang.org/doc/man/wxCalendarCtrl.html#setHoliday-2" "setHoliday(This, Day) -> ok")
               "wxCalendarCtrl:setAttr/3"
               ("http://www.erlang.org/doc/man/wxCalendarCtrl.html#setAttr-3" "setAttr(This, Day, Attr) -> ok")
               "wxCalendarCtrl:getAttr/2"
               ("http://www.erlang.org/doc/man/wxCalendarCtrl.html#getAttr-2" "getAttr(This, Day) -> wxCalendarDateAttr:wxCalendarDateAttr()")
               "wxCalendarCtrl:getHolidayColourBg/1"
               ("http://www.erlang.org/doc/man/wxCalendarCtrl.html#getHolidayColourBg-1" "getHolidayColourBg(This) -> wx:wx_colour4()")
               "wxCalendarCtrl:getHolidayColourFg/1"
               ("http://www.erlang.org/doc/man/wxCalendarCtrl.html#getHolidayColourFg-1" "getHolidayColourFg(This) -> wx:wx_colour4()")
               "wxCalendarCtrl:setHolidayColours/3"
               ("http://www.erlang.org/doc/man/wxCalendarCtrl.html#setHolidayColours-3" "setHolidayColours(This, ColFg, ColBg) -> ok")
               "wxCalendarCtrl:getHighlightColourBg/1"
               ("http://www.erlang.org/doc/man/wxCalendarCtrl.html#getHighlightColourBg-1" "getHighlightColourBg(This) -> wx:wx_colour4()")
               "wxCalendarCtrl:getHighlightColourFg/1"
               ("http://www.erlang.org/doc/man/wxCalendarCtrl.html#getHighlightColourFg-1" "getHighlightColourFg(This) -> wx:wx_colour4()")
               "wxCalendarCtrl:setHighlightColours/3"
               ("http://www.erlang.org/doc/man/wxCalendarCtrl.html#setHighlightColours-3" "setHighlightColours(This, ColFg, ColBg) -> ok")
               "wxCalendarCtrl:getHeaderColourBg/1"
               ("http://www.erlang.org/doc/man/wxCalendarCtrl.html#getHeaderColourBg-1" "getHeaderColourBg(This) -> wx:wx_colour4()")
               "wxCalendarCtrl:getHeaderColourFg/1"
               ("http://www.erlang.org/doc/man/wxCalendarCtrl.html#getHeaderColourFg-1" "getHeaderColourFg(This) -> wx:wx_colour4()")
               "wxCalendarCtrl:setHeaderColours/3"
               ("http://www.erlang.org/doc/man/wxCalendarCtrl.html#setHeaderColours-3" "setHeaderColours(This, ColFg, ColBg) -> ok")
               "wxCalendarCtrl:enableHolidayDisplay/2"
               ("http://www.erlang.org/doc/man/wxCalendarCtrl.html#enableHolidayDisplay-2" "enableHolidayDisplay(This, Options::[Option]) -> ok")
               "wxCalendarCtrl:enableHolidayDisplay/1"
               ("http://www.erlang.org/doc/man/wxCalendarCtrl.html#enableHolidayDisplay-1" "enableHolidayDisplay(This) -> ok")
               "wxCalendarCtrl:enableMonthChange/2"
               ("http://www.erlang.org/doc/man/wxCalendarCtrl.html#enableMonthChange-2" "enableMonthChange(This, Options::[Option]) -> ok")
               "wxCalendarCtrl:enableMonthChange/1"
               ("http://www.erlang.org/doc/man/wxCalendarCtrl.html#enableMonthChange-1" "enableMonthChange(This) -> ok")
               "wxCalendarCtrl:enableYearChange/2"
               ("http://www.erlang.org/doc/man/wxCalendarCtrl.html#enableYearChange-2" "enableYearChange(This, Options::[Option]) -> ok")
               "wxCalendarCtrl:enableYearChange/1"
               ("http://www.erlang.org/doc/man/wxCalendarCtrl.html#enableYearChange-1" "enableYearChange(This) -> ok")
               "wxCalendarCtrl:getDate/1"
               ("http://www.erlang.org/doc/man/wxCalendarCtrl.html#getDate-1" "getDate(This) -> wx:wx_datetime()")
               "wxCalendarCtrl:setDate/2"
               ("http://www.erlang.org/doc/man/wxCalendarCtrl.html#setDate-2" "setDate(This, Date) -> boolean()")
               "wxCalendarCtrl:create/4"
               ("http://www.erlang.org/doc/man/wxCalendarCtrl.html#create-4" "create(This, Parent, Id, Options::[Option]) -> boolean()")
               "wxCalendarCtrl:create/3"
               ("http://www.erlang.org/doc/man/wxCalendarCtrl.html#create-3" "create(This, Parent, Id) -> boolean()")
               "wxCalendarCtrl:new/3"
               ("http://www.erlang.org/doc/man/wxCalendarCtrl.html#new-3" "new(Parent, Id, Options::[Option]) -> wxCalendarCtrl()")
               "wxCalendarCtrl:new/2"
               ("http://www.erlang.org/doc/man/wxCalendarCtrl.html#new-2" "new(Parent, Id) -> wxCalendarCtrl()")
               "wxCalendarCtrl:new/0"
               ("http://www.erlang.org/doc/man/wxCalendarCtrl.html#new-0" "new() -> wxCalendarCtrl()")
               "wxCalendarCtrl:"
               ("http://www.erlang.org/doc/man/wxCalendarCtrl.html#type-wxCalendarCtrl" "wxCalendarCtrl()")
               "wxCalendarDateAttr:destroy/1"
               ("http://www.erlang.org/doc/man/wxCalendarDateAttr.html#destroy-1" "destroy(This:: wxCalendarDateAttr() ) -> ok")
               "wxCalendarDateAttr:getBorder/1"
               ("http://www.erlang.org/doc/man/wxCalendarDateAttr.html#getBorder-1" "getBorder(This) -> wx:wx_enum()")
               "wxCalendarDateAttr:getFont/1"
               ("http://www.erlang.org/doc/man/wxCalendarDateAttr.html#getFont-1" "getFont(This) -> wxFont:wxFont()")
               "wxCalendarDateAttr:getBorderColour/1"
               ("http://www.erlang.org/doc/man/wxCalendarDateAttr.html#getBorderColour-1" "getBorderColour(This) -> wx:wx_colour4()")
               "wxCalendarDateAttr:getBackgroundColour/1"
               ("http://www.erlang.org/doc/man/wxCalendarDateAttr.html#getBackgroundColour-1" "getBackgroundColour(This) -> wx:wx_colour4()")
               "wxCalendarDateAttr:getTextColour/1"
               ("http://www.erlang.org/doc/man/wxCalendarDateAttr.html#getTextColour-1" "getTextColour(This) -> wx:wx_colour4()")
               "wxCalendarDateAttr:isHoliday/1"
               ("http://www.erlang.org/doc/man/wxCalendarDateAttr.html#isHoliday-1" "isHoliday(This) -> boolean()")
               "wxCalendarDateAttr:hasBorder/1"
               ("http://www.erlang.org/doc/man/wxCalendarDateAttr.html#hasBorder-1" "hasBorder(This) -> boolean()")
               "wxCalendarDateAttr:hasFont/1"
               ("http://www.erlang.org/doc/man/wxCalendarDateAttr.html#hasFont-1" "hasFont(This) -> boolean()")
               "wxCalendarDateAttr:hasBorderColour/1"
               ("http://www.erlang.org/doc/man/wxCalendarDateAttr.html#hasBorderColour-1" "hasBorderColour(This) -> boolean()")
               "wxCalendarDateAttr:hasBackgroundColour/1"
               ("http://www.erlang.org/doc/man/wxCalendarDateAttr.html#hasBackgroundColour-1" "hasBackgroundColour(This) -> boolean()")
               "wxCalendarDateAttr:hasTextColour/1"
               ("http://www.erlang.org/doc/man/wxCalendarDateAttr.html#hasTextColour-1" "hasTextColour(This) -> boolean()")
               "wxCalendarDateAttr:setHoliday/2"
               ("http://www.erlang.org/doc/man/wxCalendarDateAttr.html#setHoliday-2" "setHoliday(This, Holiday) -> ok")
               "wxCalendarDateAttr:setBorder/2"
               ("http://www.erlang.org/doc/man/wxCalendarDateAttr.html#setBorder-2" "setBorder(This, Border) -> ok")
               "wxCalendarDateAttr:setFont/2"
               ("http://www.erlang.org/doc/man/wxCalendarDateAttr.html#setFont-2" "setFont(This, Font) -> ok")
               "wxCalendarDateAttr:setBorderColour/2"
               ("http://www.erlang.org/doc/man/wxCalendarDateAttr.html#setBorderColour-2" "setBorderColour(This, Col) -> ok")
               "wxCalendarDateAttr:setBackgroundColour/2"
               ("http://www.erlang.org/doc/man/wxCalendarDateAttr.html#setBackgroundColour-2" "setBackgroundColour(This, ColBack) -> ok")
               "wxCalendarDateAttr:setTextColour/2"
               ("http://www.erlang.org/doc/man/wxCalendarDateAttr.html#setTextColour-2" "setTextColour(This, ColText) -> ok")
               "wxCalendarDateAttr:new/2"
               ("http://www.erlang.org/doc/man/wxCalendarDateAttr.html#new-2" "new(Border, Options::[Option]) -> wxCalendarDateAttr()")
               "wxCalendarDateAttr:new/1"
               ("http://www.erlang.org/doc/man/wxCalendarDateAttr.html#new-1" "new(Border) -> wxCalendarDateAttr()")
               "wxCalendarDateAttr:new/0"
               ("http://www.erlang.org/doc/man/wxCalendarDateAttr.html#new-0" "new() -> wxCalendarDateAttr()")
               "wxCalendarDateAttr:"
               ("http://www.erlang.org/doc/man/wxCalendarDateAttr.html#type-wxCalendarDateAttr" "wxCalendarDateAttr()")
               "wxCalendarEvent:getWeekDay/1"
               ("http://www.erlang.org/doc/man/wxCalendarEvent.html#getWeekDay-1" "getWeekDay(This) -> wx:wx_enum()")
               "wxCalendarEvent:"
               ("http://www.erlang.org/doc/man/wxCalendarEvent.html#type-wxCalendarEvent" "wxCalendarEvent()")
               "wxCaret:destroy/1"
               ("http://www.erlang.org/doc/man/wxCaret.html#destroy-1" "destroy(This:: wxCaret() ) -> ok")
               "wxCaret:show/2"
               ("http://www.erlang.org/doc/man/wxCaret.html#show-2" "show(This, Options::[Option]) -> ok")
               "wxCaret:show/1"
               ("http://www.erlang.org/doc/man/wxCaret.html#show-1" "show(This) -> ok")
               "wxCaret:setSize/3"
               ("http://www.erlang.org/doc/man/wxCaret.html#setSize-3" "setSize(This, Width, Height) -> ok")
               "wxCaret:setSize/2"
               ("http://www.erlang.org/doc/man/wxCaret.html#setSize-2" "setSize(This, Size) -> ok")
               "wxCaret:setBlinkTime/1"
               ("http://www.erlang.org/doc/man/wxCaret.html#setBlinkTime-1" "setBlinkTime(Milliseconds) -> ok")
               "wxCaret:move/3"
               ("http://www.erlang.org/doc/man/wxCaret.html#move-3" "move(This, X, Y) -> ok")
               "wxCaret:move/2"
               ("http://www.erlang.org/doc/man/wxCaret.html#move-2" "move(This, Pt) -> ok")
               "wxCaret:isVisible/1"
               ("http://www.erlang.org/doc/man/wxCaret.html#isVisible-1" "isVisible(This) -> boolean()")
               "wxCaret:isOk/1"
               ("http://www.erlang.org/doc/man/wxCaret.html#isOk-1" "isOk(This) -> boolean()")
               "wxCaret:hide/1"
               ("http://www.erlang.org/doc/man/wxCaret.html#hide-1" "hide(This) -> ok")
               "wxCaret:getWindow/1"
               ("http://www.erlang.org/doc/man/wxCaret.html#getWindow-1" "getWindow(This) -> wxWindow:wxWindow()")
               "wxCaret:getSize/1"
               ("http://www.erlang.org/doc/man/wxCaret.html#getSize-1" "getSize(This) -> {W::integer(), H::integer()}")
               "wxCaret:getPosition/1"
               ("http://www.erlang.org/doc/man/wxCaret.html#getPosition-1" "getPosition(This) -> {X::integer(), Y::integer()}")
               "wxCaret:getBlinkTime/0"
               ("http://www.erlang.org/doc/man/wxCaret.html#getBlinkTime-0" "getBlinkTime() -> integer()")
               "wxCaret:create/4"
               ("http://www.erlang.org/doc/man/wxCaret.html#create-4" "create(This, Window, Width, Height) -> boolean()")
               "wxCaret:create/3"
               ("http://www.erlang.org/doc/man/wxCaret.html#create-3" "create(This, Window, Size) -> boolean()")
               "wxCaret:new/3"
               ("http://www.erlang.org/doc/man/wxCaret.html#new-3" "new(Window, Width, Height) -> wxCaret()")
               "wxCaret:new/2"
               ("http://www.erlang.org/doc/man/wxCaret.html#new-2" "new(Window, Size) -> wxCaret()")
               "wxCaret:"
               ("http://www.erlang.org/doc/man/wxCaret.html#type-wxCaret" "wxCaret()")
               "wxCheckBox:destroy/1"
               ("http://www.erlang.org/doc/man/wxCheckBox.html#destroy-1" "destroy(This:: wxCheckBox() ) -> ok")
               "wxCheckBox:set3StateValue/2"
               ("http://www.erlang.org/doc/man/wxCheckBox.html#set3StateValue-2" "set3StateValue(This, State) -> ok")
               "wxCheckBox:setValue/2"
               ("http://www.erlang.org/doc/man/wxCheckBox.html#setValue-2" "setValue(This, State) -> ok")
               "wxCheckBox:isChecked/1"
               ("http://www.erlang.org/doc/man/wxCheckBox.html#isChecked-1" "isChecked(This) -> boolean()")
               "wxCheckBox:is3State/1"
               ("http://www.erlang.org/doc/man/wxCheckBox.html#is3State-1" "is3State(This) -> boolean()")
               "wxCheckBox:is3rdStateAllowedForUser/1"
               ("http://www.erlang.org/doc/man/wxCheckBox.html#is3rdStateAllowedForUser-1" "is3rdStateAllowedForUser(This) -> boolean()")
               "wxCheckBox:get3StateValue/1"
               ("http://www.erlang.org/doc/man/wxCheckBox.html#get3StateValue-1" "get3StateValue(This) -> wx:wx_enum()")
               "wxCheckBox:getValue/1"
               ("http://www.erlang.org/doc/man/wxCheckBox.html#getValue-1" "getValue(This) -> boolean()")
               "wxCheckBox:create/5"
               ("http://www.erlang.org/doc/man/wxCheckBox.html#create-5" "create(This, Parent, Id, Label, Options::[Option]) -> boolean()")
               "wxCheckBox:create/4"
               ("http://www.erlang.org/doc/man/wxCheckBox.html#create-4" "create(This, Parent, Id, Label) -> boolean()")
               "wxCheckBox:new/4"
               ("http://www.erlang.org/doc/man/wxCheckBox.html#new-4" "new(Parent, Id, Label, Options::[Option]) -> wxCheckBox()")
               "wxCheckBox:new/3"
               ("http://www.erlang.org/doc/man/wxCheckBox.html#new-3" "new(Parent, Id, Label) -> wxCheckBox()")
               "wxCheckBox:new/0"
               ("http://www.erlang.org/doc/man/wxCheckBox.html#new-0" "new() -> wxCheckBox()")
               "wxCheckBox:"
               ("http://www.erlang.org/doc/man/wxCheckBox.html#type-wxCheckBox" "wxCheckBox()")
               "wxCheckListBox:destroy/1"
               ("http://www.erlang.org/doc/man/wxCheckListBox.html#destroy-1" "destroy(This:: wxCheckListBox() ) -> ok")
               "wxCheckListBox:isChecked/2"
               ("http://www.erlang.org/doc/man/wxCheckListBox.html#isChecked-2" "isChecked(This, Index) -> boolean()")
               "wxCheckListBox:check/3"
               ("http://www.erlang.org/doc/man/wxCheckListBox.html#check-3" "check(This, Index, Options::[Option]) -> ok")
               "wxCheckListBox:check/2"
               ("http://www.erlang.org/doc/man/wxCheckListBox.html#check-2" "check(This, Index) -> ok")
               "wxCheckListBox:new/3"
               ("http://www.erlang.org/doc/man/wxCheckListBox.html#new-3" "new(Parent, Id, Options::[Option]) -> wxCheckListBox()")
               "wxCheckListBox:new/2"
               ("http://www.erlang.org/doc/man/wxCheckListBox.html#new-2" "new(Parent, Id) -> wxCheckListBox()")
               "wxCheckListBox:new/0"
               ("http://www.erlang.org/doc/man/wxCheckListBox.html#new-0" "new() -> wxCheckListBox()")
               "wxCheckListBox:"
               ("http://www.erlang.org/doc/man/wxCheckListBox.html#type-wxCheckListBox" "wxCheckListBox()")
               "wxChildFocusEvent:getWindow/1"
               ("http://www.erlang.org/doc/man/wxChildFocusEvent.html#getWindow-1" "getWindow(This) -> wxWindow:wxWindow()")
               "wxChildFocusEvent:"
               ("http://www.erlang.org/doc/man/wxChildFocusEvent.html#type-wxChildFocusEvent" "wxChildFocusEvent()")
               "wxChoice:destroy/1"
               ("http://www.erlang.org/doc/man/wxChoice.html#destroy-1" "destroy(This:: wxChoice() ) -> ok")
               "wxChoice:setColumns/2"
               ("http://www.erlang.org/doc/man/wxChoice.html#setColumns-2" "setColumns(This, Options::[Option]) -> ok")
               "wxChoice:setColumns/1"
               ("http://www.erlang.org/doc/man/wxChoice.html#setColumns-1" "setColumns(This) -> ok")
               "wxChoice:getColumns/1"
               ("http://www.erlang.org/doc/man/wxChoice.html#getColumns-1" "getColumns(This) -> integer()")
               "wxChoice:delete/2"
               ("http://www.erlang.org/doc/man/wxChoice.html#delete-2" "delete(This, N) -> ok")
               "wxChoice:create/7"
               ("http://www.erlang.org/doc/man/wxChoice.html#create-7" "create(This, Parent, Id, Pos, Size, Choices, Options::[Option]) -> boolean()")
               "wxChoice:create/6"
               ("http://www.erlang.org/doc/man/wxChoice.html#create-6" "create(This, Parent, Id, Pos, Size, Choices) -> boolean()")
               "wxChoice:new/3"
               ("http://www.erlang.org/doc/man/wxChoice.html#new-3" "new(Parent, Id, Options::[Option]) -> wxChoice()")
               "wxChoice:new/2"
               ("http://www.erlang.org/doc/man/wxChoice.html#new-2" "new(Parent, Id) -> wxChoice()")
               "wxChoice:new/0"
               ("http://www.erlang.org/doc/man/wxChoice.html#new-0" "new() -> wxChoice()")
               "wxChoice:"
               ("http://www.erlang.org/doc/man/wxChoice.html#type-wxChoice" "wxChoice()")
               "wxChoicebook:destroy/1"
               ("http://www.erlang.org/doc/man/wxChoicebook.html#destroy-1" "destroy(This:: wxChoicebook() ) -> ok")
               "wxChoicebook:changeSelection/2"
               ("http://www.erlang.org/doc/man/wxChoicebook.html#changeSelection-2" "changeSelection(This, N) -> integer()")
               "wxChoicebook:setSelection/2"
               ("http://www.erlang.org/doc/man/wxChoicebook.html#setSelection-2" "setSelection(This, N) -> integer()")
               "wxChoicebook:setPageText/3"
               ("http://www.erlang.org/doc/man/wxChoicebook.html#setPageText-3" "setPageText(This, N, StrText) -> boolean()")
               "wxChoicebook:setPageImage/3"
               ("http://www.erlang.org/doc/man/wxChoicebook.html#setPageImage-3" "setPageImage(This, N, ImageId) -> boolean()")
               "wxChoicebook:setPageSize/2"
               ("http://www.erlang.org/doc/man/wxChoicebook.html#setPageSize-2" "setPageSize(This, Size) -> ok")
               "wxChoicebook:setImageList/2"
               ("http://www.erlang.org/doc/man/wxChoicebook.html#setImageList-2" "setImageList(This, ImageList) -> ok")
               "wxChoicebook:insertPage/5"
               ("http://www.erlang.org/doc/man/wxChoicebook.html#insertPage-5" "insertPage(This, N, Page, Text, Options::[Option]) -> boolean()")
               "wxChoicebook:insertPage/4"
               ("http://www.erlang.org/doc/man/wxChoicebook.html#insertPage-4" "insertPage(This, N, Page, Text) -> boolean()")
               "wxChoicebook:hitTest/2"
               ("http://www.erlang.org/doc/man/wxChoicebook.html#hitTest-2" "hitTest(This, Pt) -> Result")
               "wxChoicebook:getSelection/1"
               ("http://www.erlang.org/doc/man/wxChoicebook.html#getSelection-1" "getSelection(This) -> integer()")
               "wxChoicebook:getPageText/2"
               ("http://www.erlang.org/doc/man/wxChoicebook.html#getPageText-2" "getPageText(This, N) -> unicode:charlist()")
               "wxChoicebook:getPageImage/2"
               ("http://www.erlang.org/doc/man/wxChoicebook.html#getPageImage-2" "getPageImage(This, N) -> integer()")
               "wxChoicebook:getPageCount/1"
               ("http://www.erlang.org/doc/man/wxChoicebook.html#getPageCount-1" "getPageCount(This) -> integer()")
               "wxChoicebook:getPage/2"
               ("http://www.erlang.org/doc/man/wxChoicebook.html#getPage-2" "getPage(This, N) -> wxWindow:wxWindow()")
               "wxChoicebook:getImageList/1"
               ("http://www.erlang.org/doc/man/wxChoicebook.html#getImageList-1" "getImageList(This) -> wxImageList:wxImageList()")
               "wxChoicebook:getCurrentPage/1"
               ("http://www.erlang.org/doc/man/wxChoicebook.html#getCurrentPage-1" "getCurrentPage(This) -> wxWindow:wxWindow()")
               "wxChoicebook:removePage/2"
               ("http://www.erlang.org/doc/man/wxChoicebook.html#removePage-2" "removePage(This, N) -> boolean()")
               "wxChoicebook:deletePage/2"
               ("http://www.erlang.org/doc/man/wxChoicebook.html#deletePage-2" "deletePage(This, N) -> boolean()")
               "wxChoicebook:deleteAllPages/1"
               ("http://www.erlang.org/doc/man/wxChoicebook.html#deleteAllPages-1" "deleteAllPages(This) -> boolean()")
               "wxChoicebook:create/4"
               ("http://www.erlang.org/doc/man/wxChoicebook.html#create-4" "create(This, Parent, Id, Options::[Option]) -> boolean()")
               "wxChoicebook:create/3"
               ("http://www.erlang.org/doc/man/wxChoicebook.html#create-3" "create(This, Parent, Id) -> boolean()")
               "wxChoicebook:assignImageList/2"
               ("http://www.erlang.org/doc/man/wxChoicebook.html#assignImageList-2" "assignImageList(This, ImageList) -> ok")
               "wxChoicebook:advanceSelection/2"
               ("http://www.erlang.org/doc/man/wxChoicebook.html#advanceSelection-2" "advanceSelection(This, Options::[Option]) -> ok")
               "wxChoicebook:advanceSelection/1"
               ("http://www.erlang.org/doc/man/wxChoicebook.html#advanceSelection-1" "advanceSelection(This) -> ok")
               "wxChoicebook:addPage/4"
               ("http://www.erlang.org/doc/man/wxChoicebook.html#addPage-4" "addPage(This, Page, Text, Options::[Option]) -> boolean()")
               "wxChoicebook:addPage/3"
               ("http://www.erlang.org/doc/man/wxChoicebook.html#addPage-3" "addPage(This, Page, Text) -> boolean()")
               "wxChoicebook:new/3"
               ("http://www.erlang.org/doc/man/wxChoicebook.html#new-3" "new(Parent, Id, Options::[Option]) -> wxChoicebook()")
               "wxChoicebook:new/2"
               ("http://www.erlang.org/doc/man/wxChoicebook.html#new-2" "new(Parent, Id) -> wxChoicebook()")
               "wxChoicebook:new/0"
               ("http://www.erlang.org/doc/man/wxChoicebook.html#new-0" "new() -> wxChoicebook()")
               "wxChoicebook:"
               ("http://www.erlang.org/doc/man/wxChoicebook.html#type-wxChoicebook" "wxChoicebook()")
               "wxClientDC:destroy/1"
               ("http://www.erlang.org/doc/man/wxClientDC.html#destroy-1" "destroy(This:: wxClientDC() ) -> ok")
               "wxClientDC:new/1"
               ("http://www.erlang.org/doc/man/wxClientDC.html#new-1" "new(Win) -> wxClientDC()")
               "wxClientDC:new/0"
               ("http://www.erlang.org/doc/man/wxClientDC.html#new-0" "new() -> wxClientDC()")
               "wxClientDC:"
               ("http://www.erlang.org/doc/man/wxClientDC.html#type-wxClientDC" "wxClientDC()")
               "wxClipboard:destroy/1"
               ("http://www.erlang.org/doc/man/wxClipboard.html#destroy-1" "destroy(This:: wxClipboard() ) -> ok")
               "wxClipboard:get/0"
               ("http://www.erlang.org/doc/man/wxClipboard.html#get-0" "get() -> wxClipboard()")
               "wxClipboard:isSupported/2"
               ("http://www.erlang.org/doc/man/wxClipboard.html#isSupported-2" "isSupported(This, Format) -> boolean()")
               "wxClipboard:usePrimarySelection/2"
               ("http://www.erlang.org/doc/man/wxClipboard.html#usePrimarySelection-2" "usePrimarySelection(This, Options::[Option]) -> ok")
               "wxClipboard:usePrimarySelection/1"
               ("http://www.erlang.org/doc/man/wxClipboard.html#usePrimarySelection-1" "usePrimarySelection(This) -> ok")
               "wxClipboard:setData/2"
               ("http://www.erlang.org/doc/man/wxClipboard.html#setData-2" "setData(This, Data) -> boolean()")
               "wxClipboard:open/1"
               ("http://www.erlang.org/doc/man/wxClipboard.html#open-1" "open(This) -> boolean()")
               "wxClipboard:isOpened/1"
               ("http://www.erlang.org/doc/man/wxClipboard.html#isOpened-1" "isOpened(This) -> boolean()")
               "wxClipboard:getData/2"
               ("http://www.erlang.org/doc/man/wxClipboard.html#getData-2" "getData(This, Data) -> boolean()")
               "wxClipboard:flush/1"
               ("http://www.erlang.org/doc/man/wxClipboard.html#flush-1" "flush(This) -> boolean()")
               "wxClipboard:close/1"
               ("http://www.erlang.org/doc/man/wxClipboard.html#close-1" "close(This) -> ok")
               "wxClipboard:clear/1"
               ("http://www.erlang.org/doc/man/wxClipboard.html#clear-1" "clear(This) -> ok")
               "wxClipboard:addData/2"
               ("http://www.erlang.org/doc/man/wxClipboard.html#addData-2" "addData(This, Data) -> boolean()")
               "wxClipboard:new/0"
               ("http://www.erlang.org/doc/man/wxClipboard.html#new-0" "new() -> wxClipboard()")
               "wxClipboard:"
               ("http://www.erlang.org/doc/man/wxClipboard.html#type-wxClipboard" "wxClipboard()")
               "wxClipboardTextEvent:"
               ("http://www.erlang.org/doc/man/wxClipboardTextEvent.html#type-wxClipboardTextEvent" "wxClipboardTextEvent()")
               "wxCloseEvent:veto/2"
               ("http://www.erlang.org/doc/man/wxCloseEvent.html#veto-2" "veto(This, Options::[Option]) -> ok")
               "wxCloseEvent:veto/1"
               ("http://www.erlang.org/doc/man/wxCloseEvent.html#veto-1" "veto(This) -> ok")
               "wxCloseEvent:setLoggingOff/2"
               ("http://www.erlang.org/doc/man/wxCloseEvent.html#setLoggingOff-2" "setLoggingOff(This, LogOff) -> ok")
               "wxCloseEvent:setCanVeto/2"
               ("http://www.erlang.org/doc/man/wxCloseEvent.html#setCanVeto-2" "setCanVeto(This, CanVeto) -> ok")
               "wxCloseEvent:getLoggingOff/1"
               ("http://www.erlang.org/doc/man/wxCloseEvent.html#getLoggingOff-1" "getLoggingOff(This) -> boolean()")
               "wxCloseEvent:canVeto/1"
               ("http://www.erlang.org/doc/man/wxCloseEvent.html#canVeto-1" "canVeto(This) -> boolean()")
               "wxCloseEvent:"
               ("http://www.erlang.org/doc/man/wxCloseEvent.html#type-wxCloseEvent" "wxCloseEvent()")
               "wxColourData:destroy/1"
               ("http://www.erlang.org/doc/man/wxColourData.html#destroy-1" "destroy(This:: wxColourData() ) -> ok")
               "wxColourData:setCustomColour/3"
               ("http://www.erlang.org/doc/man/wxColourData.html#setCustomColour-3" "setCustomColour(This, I, Colour) -> ok")
               "wxColourData:setColour/2"
               ("http://www.erlang.org/doc/man/wxColourData.html#setColour-2" "setColour(This, Colour) -> ok")
               "wxColourData:setChooseFull/2"
               ("http://www.erlang.org/doc/man/wxColourData.html#setChooseFull-2" "setChooseFull(This, Flag) -> ok")
               "wxColourData:getCustomColour/2"
               ("http://www.erlang.org/doc/man/wxColourData.html#getCustomColour-2" "getCustomColour(This, I) -> wx:wx_colour4()")
               "wxColourData:getColour/1"
               ("http://www.erlang.org/doc/man/wxColourData.html#getColour-1" "getColour(This) -> wx:wx_colour4()")
               "wxColourData:getChooseFull/1"
               ("http://www.erlang.org/doc/man/wxColourData.html#getChooseFull-1" "getChooseFull(This) -> boolean()")
               "wxColourData:new/1"
               ("http://www.erlang.org/doc/man/wxColourData.html#new-1" "new(Data) -> wxColourData()")
               "wxColourData:new/0"
               ("http://www.erlang.org/doc/man/wxColourData.html#new-0" "new() -> wxColourData()")
               "wxColourData:"
               ("http://www.erlang.org/doc/man/wxColourData.html#type-wxColourData" "wxColourData()")
               "wxColourDialog:destroy/1"
               ("http://www.erlang.org/doc/man/wxColourDialog.html#destroy-1" "destroy(This:: wxColourDialog() ) -> ok")
               "wxColourDialog:getColourData/1"
               ("http://www.erlang.org/doc/man/wxColourDialog.html#getColourData-1" "getColourData(This) -> wxColourData:wxColourData()")
               "wxColourDialog:create/3"
               ("http://www.erlang.org/doc/man/wxColourDialog.html#create-3" "create(This, Parent, Options::[Option]) -> boolean()")
               "wxColourDialog:create/2"
               ("http://www.erlang.org/doc/man/wxColourDialog.html#create-2" "create(This, Parent) -> boolean()")
               "wxColourDialog:new/2"
               ("http://www.erlang.org/doc/man/wxColourDialog.html#new-2" "new(Parent, Options::[Option]) -> wxColourDialog()")
               "wxColourDialog:new/1"
               ("http://www.erlang.org/doc/man/wxColourDialog.html#new-1" "new(Parent) -> wxColourDialog()")
               "wxColourDialog:new/0"
               ("http://www.erlang.org/doc/man/wxColourDialog.html#new-0" "new() -> wxColourDialog()")
               "wxColourDialog:"
               ("http://www.erlang.org/doc/man/wxColourDialog.html#type-wxColourDialog" "wxColourDialog()")
               "wxColourPickerCtrl:destroy/1"
               ("http://www.erlang.org/doc/man/wxColourPickerCtrl.html#destroy-1" "destroy(This:: wxColourPickerCtrl() ) -> ok")
               "wxColourPickerCtrl:setColour/2"
               ("http://www.erlang.org/doc/man/wxColourPickerCtrl.html#setColour-2" "setColour(This, Text) -> boolean()")
               "wxColourPickerCtrl:getColour/1"
               ("http://www.erlang.org/doc/man/wxColourPickerCtrl.html#getColour-1" "getColour(This) -> wx:wx_colour4()")
               "wxColourPickerCtrl:create/4"
               ("http://www.erlang.org/doc/man/wxColourPickerCtrl.html#create-4" "create(This, Parent, Id, Options::[Option]) -> boolean()")
               "wxColourPickerCtrl:create/3"
               ("http://www.erlang.org/doc/man/wxColourPickerCtrl.html#create-3" "create(This, Parent, Id) -> boolean()")
               "wxColourPickerCtrl:new/3"
               ("http://www.erlang.org/doc/man/wxColourPickerCtrl.html#new-3" "new(Parent, Id, Options::[Option]) -> wxColourPickerCtrl()")
               "wxColourPickerCtrl:new/2"
               ("http://www.erlang.org/doc/man/wxColourPickerCtrl.html#new-2" "new(Parent, Id) -> wxColourPickerCtrl()")
               "wxColourPickerCtrl:new/0"
               ("http://www.erlang.org/doc/man/wxColourPickerCtrl.html#new-0" "new() -> wxColourPickerCtrl()")
               "wxColourPickerCtrl:"
               ("http://www.erlang.org/doc/man/wxColourPickerCtrl.html#type-wxColourPickerCtrl" "wxColourPickerCtrl()")
               "wxColourPickerEvent:getColour/1"
               ("http://www.erlang.org/doc/man/wxColourPickerEvent.html#getColour-1" "getColour(This) -> wx:wx_colour4()")
               "wxColourPickerEvent:"
               ("http://www.erlang.org/doc/man/wxColourPickerEvent.html#type-wxColourPickerEvent" "wxColourPickerEvent()")
               "wxComboBox:destroy/1"
               ("http://www.erlang.org/doc/man/wxComboBox.html#destroy-1" "destroy(This:: wxComboBox() ) -> ok")
               "wxComboBox:undo/1"
               ("http://www.erlang.org/doc/man/wxComboBox.html#undo-1" "undo(This) -> ok")
               "wxComboBox:setValue/2"
               ("http://www.erlang.org/doc/man/wxComboBox.html#setValue-2" "setValue(This, Value) -> ok")
               "wxComboBox:setSelection/3"
               ("http://www.erlang.org/doc/man/wxComboBox.html#setSelection-3" "setSelection(This, From, To) -> ok")
               "wxComboBox:setSelection/2"
               ("http://www.erlang.org/doc/man/wxComboBox.html#setSelection-2" "setSelection(This, N) -> ok")
               "wxComboBox:setInsertionPointEnd/1"
               ("http://www.erlang.org/doc/man/wxComboBox.html#setInsertionPointEnd-1" "setInsertionPointEnd(This) -> ok")
               "wxComboBox:setInsertionPoint/2"
               ("http://www.erlang.org/doc/man/wxComboBox.html#setInsertionPoint-2" "setInsertionPoint(This, Pos) -> ok")
               "wxComboBox:remove/3"
               ("http://www.erlang.org/doc/man/wxComboBox.html#remove-3" "remove(This, From, To) -> ok")
               "wxComboBox:replace/4"
               ("http://www.erlang.org/doc/man/wxComboBox.html#replace-4" "replace(This, From, To, Value) -> ok")
               "wxComboBox:redo/1"
               ("http://www.erlang.org/doc/man/wxComboBox.html#redo-1" "redo(This) -> ok")
               "wxComboBox:paste/1"
               ("http://www.erlang.org/doc/man/wxComboBox.html#paste-1" "paste(This) -> ok")
               "wxComboBox:getValue/1"
               ("http://www.erlang.org/doc/man/wxComboBox.html#getValue-1" "getValue(This) -> unicode:charlist()")
               "wxComboBox:getLastPosition/1"
               ("http://www.erlang.org/doc/man/wxComboBox.html#getLastPosition-1" "getLastPosition(This) -> integer()")
               "wxComboBox:getInsertionPoint/1"
               ("http://www.erlang.org/doc/man/wxComboBox.html#getInsertionPoint-1" "getInsertionPoint(This) -> integer()")
               "wxComboBox:cut/1"
               ("http://www.erlang.org/doc/man/wxComboBox.html#cut-1" "cut(This) -> ok")
               "wxComboBox:copy/1"
               ("http://www.erlang.org/doc/man/wxComboBox.html#copy-1" "copy(This) -> ok")
               "wxComboBox:canUndo/1"
               ("http://www.erlang.org/doc/man/wxComboBox.html#canUndo-1" "canUndo(This) -> boolean()")
               "wxComboBox:canRedo/1"
               ("http://www.erlang.org/doc/man/wxComboBox.html#canRedo-1" "canRedo(This) -> boolean()")
               "wxComboBox:canPaste/1"
               ("http://www.erlang.org/doc/man/wxComboBox.html#canPaste-1" "canPaste(This) -> boolean()")
               "wxComboBox:canCut/1"
               ("http://www.erlang.org/doc/man/wxComboBox.html#canCut-1" "canCut(This) -> boolean()")
               "wxComboBox:canCopy/1"
               ("http://www.erlang.org/doc/man/wxComboBox.html#canCopy-1" "canCopy(This) -> boolean()")
               "wxComboBox:create/8"
               ("http://www.erlang.org/doc/man/wxComboBox.html#create-8" "create(This, Parent, Id, Value, Pos, Size, Choices, Options::[Option]) -> boolean()")
               "wxComboBox:create/7"
               ("http://www.erlang.org/doc/man/wxComboBox.html#create-7" "create(This, Parent, Id, Value, Pos, Size, Choices) -> boolean()")
               "wxComboBox:new/3"
               ("http://www.erlang.org/doc/man/wxComboBox.html#new-3" "new(Parent, Id, Options::[Option]) -> wxComboBox()")
               "wxComboBox:new/2"
               ("http://www.erlang.org/doc/man/wxComboBox.html#new-2" "new(Parent, Id) -> wxComboBox()")
               "wxComboBox:new/0"
               ("http://www.erlang.org/doc/man/wxComboBox.html#new-0" "new() -> wxComboBox()")
               "wxComboBox:"
               ("http://www.erlang.org/doc/man/wxComboBox.html#type-wxComboBox" "wxComboBox()")
               "wxCommandEvent:setString/2"
               ("http://www.erlang.org/doc/man/wxCommandEvent.html#setString-2" "setString(This, S) -> ok")
               "wxCommandEvent:setInt/2"
               ("http://www.erlang.org/doc/man/wxCommandEvent.html#setInt-2" "setInt(This, I) -> ok")
               "wxCommandEvent:isSelection/1"
               ("http://www.erlang.org/doc/man/wxCommandEvent.html#isSelection-1" "isSelection(This) -> boolean()")
               "wxCommandEvent:isChecked/1"
               ("http://www.erlang.org/doc/man/wxCommandEvent.html#isChecked-1" "isChecked(This) -> boolean()")
               "wxCommandEvent:getString/1"
               ("http://www.erlang.org/doc/man/wxCommandEvent.html#getString-1" "getString(This) -> unicode:charlist()")
               "wxCommandEvent:getSelection/1"
               ("http://www.erlang.org/doc/man/wxCommandEvent.html#getSelection-1" "getSelection(This) -> integer()")
               "wxCommandEvent:getInt/1"
               ("http://www.erlang.org/doc/man/wxCommandEvent.html#getInt-1" "getInt(This) -> integer()")
               "wxCommandEvent:getExtraLong/1"
               ("http://www.erlang.org/doc/man/wxCommandEvent.html#getExtraLong-1" "getExtraLong(This) -> integer()")
               "wxCommandEvent:getClientData/1"
               ("http://www.erlang.org/doc/man/wxCommandEvent.html#getClientData-1" "getClientData(This) -> term()")
               "wxCommandEvent:"
               ("http://www.erlang.org/doc/man/wxCommandEvent.html#type-wxCommandEvent" "wxCommandEvent()")
               "wxContextMenuEvent:setPosition/2"
               ("http://www.erlang.org/doc/man/wxContextMenuEvent.html#setPosition-2" "setPosition(This, Pos) -> ok")
               "wxContextMenuEvent:getPosition/1"
               ("http://www.erlang.org/doc/man/wxContextMenuEvent.html#getPosition-1" "getPosition(This) -> {X::integer(), Y::integer()}")
               "wxContextMenuEvent:"
               ("http://www.erlang.org/doc/man/wxContextMenuEvent.html#type-wxContextMenuEvent" "wxContextMenuEvent()")
               "wxControl:setLabel/2"
               ("http://www.erlang.org/doc/man/wxControl.html#setLabel-2" "setLabel(This, Label) -> ok")
               "wxControl:getLabel/1"
               ("http://www.erlang.org/doc/man/wxControl.html#getLabel-1" "getLabel(This) -> unicode:charlist()")
               "wxControl:"
               ("http://www.erlang.org/doc/man/wxControl.html#type-wxControl" "wxControl()")
               "wxControlWithItems:setStringSelection/2"
               ("http://www.erlang.org/doc/man/wxControlWithItems.html#setStringSelection-2" "setStringSelection(This, S) -> boolean()")
               "wxControlWithItems:setString/3"
               ("http://www.erlang.org/doc/man/wxControlWithItems.html#setString-3" "setString(This, N, S) -> ok")
               "wxControlWithItems:setSelection/2"
               ("http://www.erlang.org/doc/man/wxControlWithItems.html#setSelection-2" "setSelection(This, N) -> ok")
               "wxControlWithItems:select/2"
               ("http://www.erlang.org/doc/man/wxControlWithItems.html#select-2" "select(This, N) -> ok")
               "wxControlWithItems:isEmpty/1"
               ("http://www.erlang.org/doc/man/wxControlWithItems.html#isEmpty-1" "isEmpty(This) -> boolean()")
               "wxControlWithItems:insert/4"
               ("http://www.erlang.org/doc/man/wxControlWithItems.html#insert-4" "insert(This, Item, Pos, ClientData) -> integer()")
               "wxControlWithItems:insert/3"
               ("http://www.erlang.org/doc/man/wxControlWithItems.html#insert-3" "insert(This, Item, Pos) -> integer()")
               "wxControlWithItems:getStringSelection/1"
               ("http://www.erlang.org/doc/man/wxControlWithItems.html#getStringSelection-1" "getStringSelection(This) -> unicode:charlist()")
               "wxControlWithItems:getString/2"
               ("http://www.erlang.org/doc/man/wxControlWithItems.html#getString-2" "getString(This, N) -> unicode:charlist()")
               "wxControlWithItems:getSelection/1"
               ("http://www.erlang.org/doc/man/wxControlWithItems.html#getSelection-1" "getSelection(This) -> integer()")
               "wxControlWithItems:getCount/1"
               ("http://www.erlang.org/doc/man/wxControlWithItems.html#getCount-1" "getCount(This) -> integer()")
               "wxControlWithItems:setClientData/3"
               ("http://www.erlang.org/doc/man/wxControlWithItems.html#setClientData-3" "setClientData(This, N, ClientData) -> ok")
               "wxControlWithItems:getClientData/2"
               ("http://www.erlang.org/doc/man/wxControlWithItems.html#getClientData-2" "getClientData(This, N) -> term()")
               "wxControlWithItems:findString/3"
               ("http://www.erlang.org/doc/man/wxControlWithItems.html#findString-3" "findString(This, S, Options::[Option]) -> integer()")
               "wxControlWithItems:findString/2"
               ("http://www.erlang.org/doc/man/wxControlWithItems.html#findString-2" "findString(This, S) -> integer()")
               "wxControlWithItems:delete/2"
               ("http://www.erlang.org/doc/man/wxControlWithItems.html#delete-2" "delete(This, N) -> ok")
               "wxControlWithItems:clear/1"
               ("http://www.erlang.org/doc/man/wxControlWithItems.html#clear-1" "clear(This) -> ok")
               "wxControlWithItems:appendStrings/2"
               ("http://www.erlang.org/doc/man/wxControlWithItems.html#appendStrings-2" "appendStrings(This, Strings) -> ok")
               "wxControlWithItems:append/3"
               ("http://www.erlang.org/doc/man/wxControlWithItems.html#append-3" "append(This, Item, ClientData) -> integer()")
               "wxControlWithItems:append/2"
               ("http://www.erlang.org/doc/man/wxControlWithItems.html#append-2" "append(This, Item) -> integer()")
               "wxControlWithItems:"
               ("http://www.erlang.org/doc/man/wxControlWithItems.html#type-wxControlWithItems" "wxControlWithItems()")
               "wxCursor:destroy/1"
               ("http://www.erlang.org/doc/man/wxCursor.html#destroy-1" "destroy(This:: wxCursor() ) -> ok")
               "wxCursor:ok/1"
               ("http://www.erlang.org/doc/man/wxCursor.html#ok-1" "ok(This) -> boolean()")
               "wxCursor:new/4"
               ("http://www.erlang.org/doc/man/wxCursor.html#new-4" "new(Bits, Width, Height, Options::[Option]) -> wxCursor()")
               "wxCursor:new/3"
               ("http://www.erlang.org/doc/man/wxCursor.html#new-3" "new(Bits, Width, Height) -> wxCursor()")
               "wxCursor:new/1"
               ("http://www.erlang.org/doc/man/wxCursor.html#new-1" "new(CursorId) -> wxCursor()")
               "wxCursor:new/0"
               ("http://www.erlang.org/doc/man/wxCursor.html#new-0" "new() -> wxCursor()")
               "wxCursor:"
               ("http://www.erlang.org/doc/man/wxCursor.html#type-wxCursor" "wxCursor()")
               "wxDataObject:"
               ("http://www.erlang.org/doc/man/wxDataObject.html#type-wxDataObject" "wxDataObject()")
               "wxDateEvent:getDate/1"
               ("http://www.erlang.org/doc/man/wxDateEvent.html#getDate-1" "getDate(This) -> wx:wx_datetime()")
               "wxDateEvent:"
               ("http://www.erlang.org/doc/man/wxDateEvent.html#type-wxDateEvent" "wxDateEvent()")
               "wxDatePickerCtrl:destroy/1"
               ("http://www.erlang.org/doc/man/wxDatePickerCtrl.html#destroy-1" "destroy(This:: wxDatePickerCtrl() ) -> ok")
               "wxDatePickerCtrl:setValue/2"
               ("http://www.erlang.org/doc/man/wxDatePickerCtrl.html#setValue-2" "setValue(This, Date) -> ok")
               "wxDatePickerCtrl:setRange/3"
               ("http://www.erlang.org/doc/man/wxDatePickerCtrl.html#setRange-3" "setRange(This, Dt1, Dt2) -> ok")
               "wxDatePickerCtrl:getValue/1"
               ("http://www.erlang.org/doc/man/wxDatePickerCtrl.html#getValue-1" "getValue(This) -> wx:wx_datetime()")
               "wxDatePickerCtrl:getRange/3"
               ("http://www.erlang.org/doc/man/wxDatePickerCtrl.html#getRange-3" "getRange(This, Dt1, Dt2) -> boolean()")
               "wxDatePickerCtrl:new/3"
               ("http://www.erlang.org/doc/man/wxDatePickerCtrl.html#new-3" "new(Parent, Id, Options::[Option]) -> wxDatePickerCtrl()")
               "wxDatePickerCtrl:new/2"
               ("http://www.erlang.org/doc/man/wxDatePickerCtrl.html#new-2" "new(Parent, Id) -> wxDatePickerCtrl()")
               "wxDatePickerCtrl:new/0"
               ("http://www.erlang.org/doc/man/wxDatePickerCtrl.html#new-0" "new() -> wxDatePickerCtrl()")
               "wxDatePickerCtrl:"
               ("http://www.erlang.org/doc/man/wxDatePickerCtrl.html#type-wxDatePickerCtrl" "wxDatePickerCtrl()")
               "wxDC:startPage/1"
               ("http://www.erlang.org/doc/man/wxDC.html#startPage-1" "startPage(This) -> ok")
               "wxDC:startDoc/2"
               ("http://www.erlang.org/doc/man/wxDC.html#startDoc-2" "startDoc(This, Message) -> boolean()")
               "wxDC:setUserScale/3"
               ("http://www.erlang.org/doc/man/wxDC.html#setUserScale-3" "setUserScale(This, X, Y) -> ok")
               "wxDC:setTextForeground/2"
               ("http://www.erlang.org/doc/man/wxDC.html#setTextForeground-2" "setTextForeground(This, Colour) -> ok")
               "wxDC:setTextBackground/2"
               ("http://www.erlang.org/doc/man/wxDC.html#setTextBackground-2" "setTextBackground(This, Colour) -> ok")
               "wxDC:setPen/2"
               ("http://www.erlang.org/doc/man/wxDC.html#setPen-2" "setPen(This, Pen) -> ok")
               "wxDC:setPalette/2"
               ("http://www.erlang.org/doc/man/wxDC.html#setPalette-2" "setPalette(This, Palette) -> ok")
               "wxDC:setMapMode/2"
               ("http://www.erlang.org/doc/man/wxDC.html#setMapMode-2" "setMapMode(This, Mode) -> ok")
               "wxDC:setLogicalFunction/2"
               ("http://www.erlang.org/doc/man/wxDC.html#setLogicalFunction-2" "setLogicalFunction(This, Function) -> ok")
               "wxDC:setLayoutDirection/2"
               ("http://www.erlang.org/doc/man/wxDC.html#setLayoutDirection-2" "setLayoutDirection(This, Dir) -> ok")
               "wxDC:setFont/2"
               ("http://www.erlang.org/doc/man/wxDC.html#setFont-2" "setFont(This, Font) -> ok")
               "wxDC:setDeviceOrigin/3"
               ("http://www.erlang.org/doc/man/wxDC.html#setDeviceOrigin-3" "setDeviceOrigin(This, X, Y) -> ok")
               "wxDC:setClippingRegion/3"
               ("http://www.erlang.org/doc/man/wxDC.html#setClippingRegion-3" "setClippingRegion(This, Pt, Sz) -> ok")
               "wxDC:setClippingRegion/2"
               ("http://www.erlang.org/doc/man/wxDC.html#setClippingRegion-2" "setClippingRegion(This, Region) -> ok")
               "wxDC:setBrush/2"
               ("http://www.erlang.org/doc/man/wxDC.html#setBrush-2" "setBrush(This, Brush) -> ok")
               "wxDC:setBackgroundMode/2"
               ("http://www.erlang.org/doc/man/wxDC.html#setBackgroundMode-2" "setBackgroundMode(This, Mode) -> ok")
               "wxDC:setBackground/2"
               ("http://www.erlang.org/doc/man/wxDC.html#setBackground-2" "setBackground(This, Brush) -> ok")
               "wxDC:setAxisOrientation/3"
               ("http://www.erlang.org/doc/man/wxDC.html#setAxisOrientation-3" "setAxisOrientation(This, XLeftRight, YBottomUp) -> ok")
               "wxDC:resetBoundingBox/1"
               ("http://www.erlang.org/doc/man/wxDC.html#resetBoundingBox-1" "resetBoundingBox(This) -> ok")
               "wxDC:isOk/1"
               ("http://www.erlang.org/doc/man/wxDC.html#isOk-1" "isOk(This) -> boolean()")
               "wxDC:minY/1"
               ("http://www.erlang.org/doc/man/wxDC.html#minY-1" "minY(This) -> integer()")
               "wxDC:minX/1"
               ("http://www.erlang.org/doc/man/wxDC.html#minX-1" "minX(This) -> integer()")
               "wxDC:maxY/1"
               ("http://www.erlang.org/doc/man/wxDC.html#maxY-1" "maxY(This) -> integer()")
               "wxDC:maxX/1"
               ("http://www.erlang.org/doc/man/wxDC.html#maxX-1" "maxX(This) -> integer()")
               "wxDC:logicalToDeviceYRel/2"
               ("http://www.erlang.org/doc/man/wxDC.html#logicalToDeviceYRel-2" "logicalToDeviceYRel(This, Y) -> integer()")
               "wxDC:logicalToDeviceY/2"
               ("http://www.erlang.org/doc/man/wxDC.html#logicalToDeviceY-2" "logicalToDeviceY(This, Y) -> integer()")
               "wxDC:logicalToDeviceXRel/2"
               ("http://www.erlang.org/doc/man/wxDC.html#logicalToDeviceXRel-2" "logicalToDeviceXRel(This, X) -> integer()")
               "wxDC:logicalToDeviceX/2"
               ("http://www.erlang.org/doc/man/wxDC.html#logicalToDeviceX-2" "logicalToDeviceX(This, X) -> integer()")
               "wxDC:gradientFillLinear/5"
               ("http://www.erlang.org/doc/man/wxDC.html#gradientFillLinear-5" "gradientFillLinear(This, Rect, InitialColour, DestColour, Options::[Option]) -> ok")
               "wxDC:gradientFillLinear/4"
               ("http://www.erlang.org/doc/man/wxDC.html#gradientFillLinear-4" "gradientFillLinear(This, Rect, InitialColour, DestColour) -> ok")
               "wxDC:gradientFillConcentric/5"
               ("http://www.erlang.org/doc/man/wxDC.html#gradientFillConcentric-5" "gradientFillConcentric(This, Rect, InitialColour, DestColour, CircleCenter) -> ok")
               "wxDC:gradientFillConcentric/4"
               ("http://www.erlang.org/doc/man/wxDC.html#gradientFillConcentric-4" "gradientFillConcentric(This, Rect, InitialColour, DestColour) -> ok")
               "wxDC:getUserScale/1"
               ("http://www.erlang.org/doc/man/wxDC.html#getUserScale-1" "getUserScale(This) -> {X::number(), Y::number()}")
               "wxDC:getTextForeground/1"
               ("http://www.erlang.org/doc/man/wxDC.html#getTextForeground-1" "getTextForeground(This) -> wx:wx_colour4()")
               "wxDC:getTextExtent/3"
               ("http://www.erlang.org/doc/man/wxDC.html#getTextExtent-3" "getTextExtent(This, String, Options::[Option]) -> Result")
               "wxDC:getTextExtent/2"
               ("http://www.erlang.org/doc/man/wxDC.html#getTextExtent-2" "getTextExtent(This, String) -> {W::integer(), H::integer()}")
               "wxDC:getTextBackground/1"
               ("http://www.erlang.org/doc/man/wxDC.html#getTextBackground-1" "getTextBackground(This) -> wx:wx_colour4()")
               "wxDC:getSizeMM/1"
               ("http://www.erlang.org/doc/man/wxDC.html#getSizeMM-1" "getSizeMM(This) -> {W::integer(), H::integer()}")
               "wxDC:getSize/1"
               ("http://www.erlang.org/doc/man/wxDC.html#getSize-1" "getSize(This) -> {W::integer(), H::integer()}")
               "wxDC:getPPI/1"
               ("http://www.erlang.org/doc/man/wxDC.html#getPPI-1" "getPPI(This) -> {W::integer(), H::integer()}")
               "wxDC:getPixel/2"
               ("http://www.erlang.org/doc/man/wxDC.html#getPixel-2" "getPixel(This, Pt) -> Result")
               "wxDC:getPen/1"
               ("http://www.erlang.org/doc/man/wxDC.html#getPen-1" "getPen(This) -> wxPen:wxPen()")
               "wxDC:getPartialTextExtents/2"
               ("http://www.erlang.org/doc/man/wxDC.html#getPartialTextExtents-2" "getPartialTextExtents(This, Text) -> Result")
               "wxDC:getMultiLineTextExtent/3"
               ("http://www.erlang.org/doc/man/wxDC.html#getMultiLineTextExtent-3" "getMultiLineTextExtent(This, String, Options::[Option]) -> {Width::integer(), Height::integer(), HeightLine::integer()}")
               "wxDC:getMultiLineTextExtent/2"
               ("http://www.erlang.org/doc/man/wxDC.html#getMultiLineTextExtent-2" "getMultiLineTextExtent(This, String) -> {W::integer(), H::integer()}")
               "wxDC:getMapMode/1"
               ("http://www.erlang.org/doc/man/wxDC.html#getMapMode-1" "getMapMode(This) -> integer()")
               "wxDC:getLogicalFunction/1"
               ("http://www.erlang.org/doc/man/wxDC.html#getLogicalFunction-1" "getLogicalFunction(This) -> integer()")
               "wxDC:getLayoutDirection/1"
               ("http://www.erlang.org/doc/man/wxDC.html#getLayoutDirection-1" "getLayoutDirection(This) -> wx:wx_enum()")
               "wxDC:getFont/1"
               ("http://www.erlang.org/doc/man/wxDC.html#getFont-1" "getFont(This) -> wxFont:wxFont()")
               "wxDC:getClippingBox/1"
               ("http://www.erlang.org/doc/man/wxDC.html#getClippingBox-1" "getClippingBox(This) -> Result")
               "wxDC:getCharWidth/1"
               ("http://www.erlang.org/doc/man/wxDC.html#getCharWidth-1" "getCharWidth(This) -> integer()")
               "wxDC:getCharHeight/1"
               ("http://www.erlang.org/doc/man/wxDC.html#getCharHeight-1" "getCharHeight(This) -> integer()")
               "wxDC:getBrush/1"
               ("http://www.erlang.org/doc/man/wxDC.html#getBrush-1" "getBrush(This) -> wxBrush:wxBrush()")
               "wxDC:getBackgroundMode/1"
               ("http://www.erlang.org/doc/man/wxDC.html#getBackgroundMode-1" "getBackgroundMode(This) -> integer()")
               "wxDC:getBackground/1"
               ("http://www.erlang.org/doc/man/wxDC.html#getBackground-1" "getBackground(This) -> wxBrush:wxBrush()")
               "wxDC:floodFill/4"
               ("http://www.erlang.org/doc/man/wxDC.html#floodFill-4" "floodFill(This, Pt, Col, Options::[Option]) -> boolean()")
               "wxDC:floodFill/3"
               ("http://www.erlang.org/doc/man/wxDC.html#floodFill-3" "floodFill(This, Pt, Col) -> boolean()")
               "wxDC:endPage/1"
               ("http://www.erlang.org/doc/man/wxDC.html#endPage-1" "endPage(This) -> ok")
               "wxDC:endDoc/1"
               ("http://www.erlang.org/doc/man/wxDC.html#endDoc-1" "endDoc(This) -> ok")
               "wxDC:drawText/3"
               ("http://www.erlang.org/doc/man/wxDC.html#drawText-3" "drawText(This, Text, Pt) -> ok")
               "wxDC:drawRoundedRectangle/4"
               ("http://www.erlang.org/doc/man/wxDC.html#drawRoundedRectangle-4" "drawRoundedRectangle(This, Pt, Sz, Radius) -> ok")
               "wxDC:drawRoundedRectangle/3"
               ("http://www.erlang.org/doc/man/wxDC.html#drawRoundedRectangle-3" "drawRoundedRectangle(This, R, Radius) -> ok")
               "wxDC:drawRotatedText/4"
               ("http://www.erlang.org/doc/man/wxDC.html#drawRotatedText-4" "drawRotatedText(This, Text, Pt, Angle) -> ok")
               "wxDC:drawRectangle/3"
               ("http://www.erlang.org/doc/man/wxDC.html#drawRectangle-3" "drawRectangle(This, Pt, Sz) -> ok")
               "wxDC:drawRectangle/2"
               ("http://www.erlang.org/doc/man/wxDC.html#drawRectangle-2" "drawRectangle(This, Rect) -> ok")
               "wxDC:drawPoint/2"
               ("http://www.erlang.org/doc/man/wxDC.html#drawPoint-2" "drawPoint(This, Pt) -> ok")
               "wxDC:drawPolygon/3"
               ("http://www.erlang.org/doc/man/wxDC.html#drawPolygon-3" "drawPolygon(This, Points, Options::[Option]) -> ok")
               "wxDC:drawPolygon/2"
               ("http://www.erlang.org/doc/man/wxDC.html#drawPolygon-2" "drawPolygon(This, Points) -> ok")
               "wxDC:drawLines/3"
               ("http://www.erlang.org/doc/man/wxDC.html#drawLines-3" "drawLines(This, Points, Options::[Option]) -> ok")
               "wxDC:drawLines/2"
               ("http://www.erlang.org/doc/man/wxDC.html#drawLines-2" "drawLines(This, Points) -> ok")
               "wxDC:drawLine/3"
               ("http://www.erlang.org/doc/man/wxDC.html#drawLine-3" "drawLine(This, Pt1, Pt2) -> ok")
               "wxDC:drawLabel/4"
               ("http://www.erlang.org/doc/man/wxDC.html#drawLabel-4" "drawLabel(This, Text, Rect, Options::[Option]) -> ok")
               "wxDC:drawLabel/3"
               ("http://www.erlang.org/doc/man/wxDC.html#drawLabel-3" "drawLabel(This, Text, Rect) -> ok")
               "wxDC:drawIcon/3"
               ("http://www.erlang.org/doc/man/wxDC.html#drawIcon-3" "drawIcon(This, Icon, Pt) -> ok")
               "wxDC:drawEllipticArc/5"
               ("http://www.erlang.org/doc/man/wxDC.html#drawEllipticArc-5" "drawEllipticArc(This, Pt, Sz, Sa, Ea) -> ok")
               "wxDC:drawEllipse/3"
               ("http://www.erlang.org/doc/man/wxDC.html#drawEllipse-3" "drawEllipse(This, Pt, Sz) -> ok")
               "wxDC:drawEllipse/2"
               ("http://www.erlang.org/doc/man/wxDC.html#drawEllipse-2" "drawEllipse(This, Rect) -> ok")
               "wxDC:drawCircle/3"
               ("http://www.erlang.org/doc/man/wxDC.html#drawCircle-3" "drawCircle(This, Pt, Radius) -> ok")
               "wxDC:drawCheckMark/2"
               ("http://www.erlang.org/doc/man/wxDC.html#drawCheckMark-2" "drawCheckMark(This, Rect) -> ok")
               "wxDC:drawBitmap/4"
               ("http://www.erlang.org/doc/man/wxDC.html#drawBitmap-4" "drawBitmap(This, Bmp, Pt, Options::[Option]) -> ok")
               "wxDC:drawBitmap/3"
               ("http://www.erlang.org/doc/man/wxDC.html#drawBitmap-3" "drawBitmap(This, Bmp, Pt) -> ok")
               "wxDC:drawArc/4"
               ("http://www.erlang.org/doc/man/wxDC.html#drawArc-4" "drawArc(This, Pt1, Pt2, Centre) -> ok")
               "wxDC:deviceToLogicalYRel/2"
               ("http://www.erlang.org/doc/man/wxDC.html#deviceToLogicalYRel-2" "deviceToLogicalYRel(This, Y) -> integer()")
               "wxDC:deviceToLogicalY/2"
               ("http://www.erlang.org/doc/man/wxDC.html#deviceToLogicalY-2" "deviceToLogicalY(This, Y) -> integer()")
               "wxDC:deviceToLogicalXRel/2"
               ("http://www.erlang.org/doc/man/wxDC.html#deviceToLogicalXRel-2" "deviceToLogicalXRel(This, X) -> integer()")
               "wxDC:deviceToLogicalX/2"
               ("http://www.erlang.org/doc/man/wxDC.html#deviceToLogicalX-2" "deviceToLogicalX(This, X) -> integer()")
               "wxDC:destroyClippingRegion/1"
               ("http://www.erlang.org/doc/man/wxDC.html#destroyClippingRegion-1" "destroyClippingRegion(This) -> ok")
               "wxDC:crossHair/2"
               ("http://www.erlang.org/doc/man/wxDC.html#crossHair-2" "crossHair(This, Pt) -> ok")
               "wxDC:computeScaleAndOrigin/1"
               ("http://www.erlang.org/doc/man/wxDC.html#computeScaleAndOrigin-1" "computeScaleAndOrigin(This) -> ok")
               "wxDC:clear/1"
               ("http://www.erlang.org/doc/man/wxDC.html#clear-1" "clear(This) -> ok")
               "wxDC:calcBoundingBox/3"
               ("http://www.erlang.org/doc/man/wxDC.html#calcBoundingBox-3" "calcBoundingBox(This, X, Y) -> ok")
               "wxDC:blit/6"
               ("http://www.erlang.org/doc/man/wxDC.html#blit-6" "blit(This, DestPt, Sz, Source, SrcPt, Options::[Option]) -> boolean()")
               "wxDC:blit/5"
               ("http://www.erlang.org/doc/man/wxDC.html#blit-5" "blit(This, DestPt, Sz, Source, SrcPt) -> boolean()")
               "wxDC:"
               ("http://www.erlang.org/doc/man/wxDC.html#type-wxDC" "wxDC()")
               "wxDCOverlay:destroy/1"
               ("http://www.erlang.org/doc/man/wxDCOverlay.html#destroy-1" "destroy(This:: wxDCOverlay() ) -> ok")
               "wxDCOverlay:clear/1"
               ("http://www.erlang.org/doc/man/wxDCOverlay.html#clear-1" "clear(This) -> ok")
               "wxDCOverlay:new/6"
               ("http://www.erlang.org/doc/man/wxDCOverlay.html#new-6" "new(Overlay, Dc, X, Y, Width, Height) -> wxDCOverlay()")
               "wxDCOverlay:new/2"
               ("http://www.erlang.org/doc/man/wxDCOverlay.html#new-2" "new(Overlay, Dc) -> wxDCOverlay()")
               "wxDCOverlay:"
               ("http://www.erlang.org/doc/man/wxDCOverlay.html#type-wxDCOverlay" "wxDCOverlay()")
               "wxDialog:destroy/1"
               ("http://www.erlang.org/doc/man/wxDialog.html#destroy-1" "destroy(This:: wxDialog() ) -> ok")
               "wxDialog:showModal/1"
               ("http://www.erlang.org/doc/man/wxDialog.html#showModal-1" "showModal(This) -> integer()")
               "wxDialog:show/2"
               ("http://www.erlang.org/doc/man/wxDialog.html#show-2" "show(This, Options::[Option]) -> boolean()")
               "wxDialog:show/1"
               ("http://www.erlang.org/doc/man/wxDialog.html#show-1" "show(This) -> boolean()")
               "wxDialog:setReturnCode/2"
               ("http://www.erlang.org/doc/man/wxDialog.html#setReturnCode-2" "setReturnCode(This, ReturnCode) -> ok")
               "wxDialog:setAffirmativeId/2"
               ("http://www.erlang.org/doc/man/wxDialog.html#setAffirmativeId-2" "setAffirmativeId(This, AffirmativeId) -> ok")
               "wxDialog:isModal/1"
               ("http://www.erlang.org/doc/man/wxDialog.html#isModal-1" "isModal(This) -> boolean()")
               "wxDialog:getReturnCode/1"
               ("http://www.erlang.org/doc/man/wxDialog.html#getReturnCode-1" "getReturnCode(This) -> integer()")
               "wxDialog:getAffirmativeId/1"
               ("http://www.erlang.org/doc/man/wxDialog.html#getAffirmativeId-1" "getAffirmativeId(This) -> integer()")
               "wxDialog:endModal/2"
               ("http://www.erlang.org/doc/man/wxDialog.html#endModal-2" "endModal(This, RetCode) -> ok")
               "wxDialog:createStdDialogButtonSizer/2"
               ("http://www.erlang.org/doc/man/wxDialog.html#createStdDialogButtonSizer-2" "createStdDialogButtonSizer(This, Flags) -> wxStdDialogButtonSizer:wxStdDialogButtonSizer()")
               "wxDialog:createButtonSizer/2"
               ("http://www.erlang.org/doc/man/wxDialog.html#createButtonSizer-2" "createButtonSizer(This, Flags) -> wxSizer:wxSizer()")
               "wxDialog:create/5"
               ("http://www.erlang.org/doc/man/wxDialog.html#create-5" "create(This, Parent, Id, Title, Options::[Option]) -> boolean()")
               "wxDialog:create/4"
               ("http://www.erlang.org/doc/man/wxDialog.html#create-4" "create(This, Parent, Id, Title) -> boolean()")
               "wxDialog:new/4"
               ("http://www.erlang.org/doc/man/wxDialog.html#new-4" "new(Parent, Id, Title, Options::[Option]) -> wxDialog()")
               "wxDialog:new/3"
               ("http://www.erlang.org/doc/man/wxDialog.html#new-3" "new(Parent, Id, Title) -> wxDialog()")
               "wxDialog:new/0"
               ("http://www.erlang.org/doc/man/wxDialog.html#new-0" "new() -> wxDialog()")
               "wxDialog:"
               ("http://www.erlang.org/doc/man/wxDialog.html#type-wxDialog" "wxDialog()")
               "wxDirDialog:destroy/1"
               ("http://www.erlang.org/doc/man/wxDirDialog.html#destroy-1" "destroy(This:: wxDirDialog() ) -> ok")
               "wxDirDialog:setPath/2"
               ("http://www.erlang.org/doc/man/wxDirDialog.html#setPath-2" "setPath(This, Path) -> ok")
               "wxDirDialog:setMessage/2"
               ("http://www.erlang.org/doc/man/wxDirDialog.html#setMessage-2" "setMessage(This, Message) -> ok")
               "wxDirDialog:getMessage/1"
               ("http://www.erlang.org/doc/man/wxDirDialog.html#getMessage-1" "getMessage(This) -> unicode:charlist()")
               "wxDirDialog:getPath/1"
               ("http://www.erlang.org/doc/man/wxDirDialog.html#getPath-1" "getPath(This) -> unicode:charlist()")
               "wxDirDialog:new/2"
               ("http://www.erlang.org/doc/man/wxDirDialog.html#new-2" "new(Parent, Options::[Option]) -> wxDirDialog()")
               "wxDirDialog:new/1"
               ("http://www.erlang.org/doc/man/wxDirDialog.html#new-1" "new(Parent) -> wxDirDialog()")
               "wxDirDialog:"
               ("http://www.erlang.org/doc/man/wxDirDialog.html#type-wxDirDialog" "wxDirDialog()")
               "wxDirPickerCtrl:destroy/1"
               ("http://www.erlang.org/doc/man/wxDirPickerCtrl.html#destroy-1" "destroy(This:: wxDirPickerCtrl() ) -> ok")
               "wxDirPickerCtrl:setPath/2"
               ("http://www.erlang.org/doc/man/wxDirPickerCtrl.html#setPath-2" "setPath(This, Str) -> ok")
               "wxDirPickerCtrl:getPath/1"
               ("http://www.erlang.org/doc/man/wxDirPickerCtrl.html#getPath-1" "getPath(This) -> unicode:charlist()")
               "wxDirPickerCtrl:create/4"
               ("http://www.erlang.org/doc/man/wxDirPickerCtrl.html#create-4" "create(This, Parent, Id, Options::[Option]) -> boolean()")
               "wxDirPickerCtrl:create/3"
               ("http://www.erlang.org/doc/man/wxDirPickerCtrl.html#create-3" "create(This, Parent, Id) -> boolean()")
               "wxDirPickerCtrl:new/3"
               ("http://www.erlang.org/doc/man/wxDirPickerCtrl.html#new-3" "new(Parent, Id, Options::[Option]) -> wxDirPickerCtrl()")
               "wxDirPickerCtrl:new/2"
               ("http://www.erlang.org/doc/man/wxDirPickerCtrl.html#new-2" "new(Parent, Id) -> wxDirPickerCtrl()")
               "wxDirPickerCtrl:new/0"
               ("http://www.erlang.org/doc/man/wxDirPickerCtrl.html#new-0" "new() -> wxDirPickerCtrl()")
               "wxDirPickerCtrl:"
               ("http://www.erlang.org/doc/man/wxDirPickerCtrl.html#type-wxDirPickerCtrl" "wxDirPickerCtrl()")
               "wxDisplayChangedEvent:"
               ("http://www.erlang.org/doc/man/wxDisplayChangedEvent.html#type-wxDisplayChangedEvent" "wxDisplayChangedEvent()")
               "wxDropFilesEvent:getFiles/1"
               ("http://www.erlang.org/doc/man/wxDropFilesEvent.html#getFiles-1" "getFiles(This) -> [ unicode:charlist() ]")
               "wxDropFilesEvent:getNumberOfFiles/1"
               ("http://www.erlang.org/doc/man/wxDropFilesEvent.html#getNumberOfFiles-1" "getNumberOfFiles(This) -> integer()")
               "wxDropFilesEvent:getPosition/1"
               ("http://www.erlang.org/doc/man/wxDropFilesEvent.html#getPosition-1" "getPosition(This) -> {X::integer(), Y::integer()}")
               "wxDropFilesEvent:"
               ("http://www.erlang.org/doc/man/wxDropFilesEvent.html#type-wxDropFilesEvent" "wxDropFilesEvent()")
               "wxEraseEvent:getDC/1"
               ("http://www.erlang.org/doc/man/wxEraseEvent.html#getDC-1" "getDC(This) -> wxDC:wxDC()")
               "wxEraseEvent:"
               ("http://www.erlang.org/doc/man/wxEraseEvent.html#type-wxEraseEvent" "wxEraseEvent()")
               "wxEvent:stopPropagation/1"
               ("http://www.erlang.org/doc/man/wxEvent.html#stopPropagation-1" "stopPropagation(This) -> integer()")
               "wxEvent:skip/2"
               ("http://www.erlang.org/doc/man/wxEvent.html#skip-2" "skip(This, Options::[Option]) -> ok")
               "wxEvent:skip/1"
               ("http://www.erlang.org/doc/man/wxEvent.html#skip-1" "skip(This) -> ok")
               "wxEvent:shouldPropagate/1"
               ("http://www.erlang.org/doc/man/wxEvent.html#shouldPropagate-1" "shouldPropagate(This) -> boolean()")
               "wxEvent:resumePropagation/2"
               ("http://www.erlang.org/doc/man/wxEvent.html#resumePropagation-2" "resumePropagation(This, PropagationLevel) -> ok")
               "wxEvent:isCommandEvent/1"
               ("http://www.erlang.org/doc/man/wxEvent.html#isCommandEvent-1" "isCommandEvent(This) -> boolean()")
               "wxEvent:getTimestamp/1"
               ("http://www.erlang.org/doc/man/wxEvent.html#getTimestamp-1" "getTimestamp(This) -> integer()")
               "wxEvent:getSkipped/1"
               ("http://www.erlang.org/doc/man/wxEvent.html#getSkipped-1" "getSkipped(This) -> boolean()")
               "wxEvent:getId/1"
               ("http://www.erlang.org/doc/man/wxEvent.html#getId-1" "getId(This) -> integer()")
               "wxEvent:"
               ("http://www.erlang.org/doc/man/wxEvent.html#type-wxEvent" "wxEvent()")
               "wxEvtHandler:disconnect/3"
               ("http://www.erlang.org/doc/man/wxEvtHandler.html#disconnect-3" "disconnect(This:: wxEvtHandler() , EventType:: wxEventType() , Opts::[Option]) -> boolean()")
               "wxEvtHandler:disconnect/2"
               ("http://www.erlang.org/doc/man/wxEvtHandler.html#disconnect-2" "disconnect(This:: wxEvtHandler() , EventType:: wxEventType() ) -> boolean()")
               "wxEvtHandler:disconnect/1"
               ("http://www.erlang.org/doc/man/wxEvtHandler.html#disconnect-1" "disconnect(This:: wxEvtHandler() ) -> boolean()")
               "wxEvtHandler:connect/3"
               ("http://www.erlang.org/doc/man/wxEvtHandler.html#connect-3" "connect(This:: wxEvtHandler() , EventType:: wxEventType() , Options::[Option]) -> ok")
               "wxEvtHandler:connect/2"
               ("http://www.erlang.org/doc/man/wxEvtHandler.html#connect-2" "connect(This:: wxEvtHandler() , EventType:: wxEventType() ) -> ok")
               "wxEvtHandler:"
               ("http://www.erlang.org/doc/man/wxEvtHandler.html#type-event" "event() = wxActivate() | wxAuiManager() | wxAuiNotebook() | wxCalendar() | wxChildFocus() | wxClipboardText() | wxClose() | wxColourPicker() | wxCommand() | wxContextMenu() | wxDate() | wxDisplayChanged() | wxDropFiles() | wxErase() | wxFileDirPicker() | wxFocus() | wxFontPicker() | wxGrid() | wxHelp() | wxHtmlLink() | wxIconize() | wxIdle() | wxInitDialog() | wxJoystick() | wxKey() | wxList() | wxMaximize() | wxMenu() | wxMouse() | wxMouseCaptureChanged() | wxMouseCaptureLost() | wxMove() | wxNavigationKey() | wxNotebook() | wxPaint() | wxPaletteChanged() | wxQueryNewPalette() | wxSash() | wxScroll() | wxScrollWin() | wxSetCursor() | wxShow() | wxSize() | wxSpin() | wxSplitter() | wxStyledText() | wxSysColourChanged() | wxTaskBarIcon() | wxTree() | wxUpdateUI() | wxWindowCreate() | wxWindowDestroy()")
               "wxFileDataObject:destroy/1"
               ("http://www.erlang.org/doc/man/wxFileDataObject.html#destroy-1" "destroy(This:: wxFileDataObject() ) -> ok")
               "wxFileDataObject:getFilenames/1"
               ("http://www.erlang.org/doc/man/wxFileDataObject.html#getFilenames-1" "getFilenames(This) -> [ unicode:charlist() ]")
               "wxFileDataObject:addFile/2"
               ("http://www.erlang.org/doc/man/wxFileDataObject.html#addFile-2" "addFile(This, Filename) -> ok")
               "wxFileDataObject:new/0"
               ("http://www.erlang.org/doc/man/wxFileDataObject.html#new-0" "new() -> wxFileDataObject()")
               "wxFileDataObject:"
               ("http://www.erlang.org/doc/man/wxFileDataObject.html#type-wxFileDataObject" "wxFileDataObject()")
               "wxFileDialog:destroy/1"
               ("http://www.erlang.org/doc/man/wxFileDialog.html#destroy-1" "destroy(This:: wxFileDialog() ) -> ok")
               "wxFileDialog:setWildcard/2"
               ("http://www.erlang.org/doc/man/wxFileDialog.html#setWildcard-2" "setWildcard(This, WildCard) -> ok")
               "wxFileDialog:setPath/2"
               ("http://www.erlang.org/doc/man/wxFileDialog.html#setPath-2" "setPath(This, Path) -> ok")
               "wxFileDialog:setMessage/2"
               ("http://www.erlang.org/doc/man/wxFileDialog.html#setMessage-2" "setMessage(This, Message) -> ok")
               "wxFileDialog:setFilterIndex/2"
               ("http://www.erlang.org/doc/man/wxFileDialog.html#setFilterIndex-2" "setFilterIndex(This, FilterIndex) -> ok")
               "wxFileDialog:setFilename/2"
               ("http://www.erlang.org/doc/man/wxFileDialog.html#setFilename-2" "setFilename(This, Name) -> ok")
               "wxFileDialog:setDirectory/2"
               ("http://www.erlang.org/doc/man/wxFileDialog.html#setDirectory-2" "setDirectory(This, Dir) -> ok")
               "wxFileDialog:getWildcard/1"
               ("http://www.erlang.org/doc/man/wxFileDialog.html#getWildcard-1" "getWildcard(This) -> unicode:charlist()")
               "wxFileDialog:getPaths/1"
               ("http://www.erlang.org/doc/man/wxFileDialog.html#getPaths-1" "getPaths(This) -> [ unicode:charlist() ]")
               "wxFileDialog:getPath/1"
               ("http://www.erlang.org/doc/man/wxFileDialog.html#getPath-1" "getPath(This) -> unicode:charlist()")
               "wxFileDialog:getMessage/1"
               ("http://www.erlang.org/doc/man/wxFileDialog.html#getMessage-1" "getMessage(This) -> unicode:charlist()")
               "wxFileDialog:getFilterIndex/1"
               ("http://www.erlang.org/doc/man/wxFileDialog.html#getFilterIndex-1" "getFilterIndex(This) -> integer()")
               "wxFileDialog:getFilenames/1"
               ("http://www.erlang.org/doc/man/wxFileDialog.html#getFilenames-1" "getFilenames(This) -> [ unicode:charlist() ]")
               "wxFileDialog:getFilename/1"
               ("http://www.erlang.org/doc/man/wxFileDialog.html#getFilename-1" "getFilename(This) -> unicode:charlist()")
               "wxFileDialog:getDirectory/1"
               ("http://www.erlang.org/doc/man/wxFileDialog.html#getDirectory-1" "getDirectory(This) -> unicode:charlist()")
               "wxFileDialog:new/2"
               ("http://www.erlang.org/doc/man/wxFileDialog.html#new-2" "new(Parent, Options::[Option]) -> wxFileDialog()")
               "wxFileDialog:new/1"
               ("http://www.erlang.org/doc/man/wxFileDialog.html#new-1" "new(Parent) -> wxFileDialog()")
               "wxFileDialog:"
               ("http://www.erlang.org/doc/man/wxFileDialog.html#type-wxFileDialog" "wxFileDialog()")
               "wxFileDirPickerEvent:getPath/1"
               ("http://www.erlang.org/doc/man/wxFileDirPickerEvent.html#getPath-1" "getPath(This) -> unicode:charlist()")
               "wxFileDirPickerEvent:"
               ("http://www.erlang.org/doc/man/wxFileDirPickerEvent.html#type-wxFileDirPickerEvent" "wxFileDirPickerEvent()")
               "wxFilePickerCtrl:destroy/1"
               ("http://www.erlang.org/doc/man/wxFilePickerCtrl.html#destroy-1" "destroy(This:: wxFilePickerCtrl() ) -> ok")
               "wxFilePickerCtrl:setPath/2"
               ("http://www.erlang.org/doc/man/wxFilePickerCtrl.html#setPath-2" "setPath(This, Str) -> ok")
               "wxFilePickerCtrl:getPath/1"
               ("http://www.erlang.org/doc/man/wxFilePickerCtrl.html#getPath-1" "getPath(This) -> unicode:charlist()")
               "wxFilePickerCtrl:create/4"
               ("http://www.erlang.org/doc/man/wxFilePickerCtrl.html#create-4" "create(This, Parent, Id, Options::[Option]) -> boolean()")
               "wxFilePickerCtrl:create/3"
               ("http://www.erlang.org/doc/man/wxFilePickerCtrl.html#create-3" "create(This, Parent, Id) -> boolean()")
               "wxFilePickerCtrl:new/3"
               ("http://www.erlang.org/doc/man/wxFilePickerCtrl.html#new-3" "new(Parent, Id, Options::[Option]) -> wxFilePickerCtrl()")
               "wxFilePickerCtrl:new/2"
               ("http://www.erlang.org/doc/man/wxFilePickerCtrl.html#new-2" "new(Parent, Id) -> wxFilePickerCtrl()")
               "wxFilePickerCtrl:new/0"
               ("http://www.erlang.org/doc/man/wxFilePickerCtrl.html#new-0" "new() -> wxFilePickerCtrl()")
               "wxFilePickerCtrl:"
               ("http://www.erlang.org/doc/man/wxFilePickerCtrl.html#type-wxFilePickerCtrl" "wxFilePickerCtrl()")
               "wxFindReplaceData:destroy/1"
               ("http://www.erlang.org/doc/man/wxFindReplaceData.html#destroy-1" "destroy(This:: wxFindReplaceData() ) -> ok")
               "wxFindReplaceData:setReplaceString/2"
               ("http://www.erlang.org/doc/man/wxFindReplaceData.html#setReplaceString-2" "setReplaceString(This, Str) -> ok")
               "wxFindReplaceData:setFindString/2"
               ("http://www.erlang.org/doc/man/wxFindReplaceData.html#setFindString-2" "setFindString(This, Str) -> ok")
               "wxFindReplaceData:setFlags/2"
               ("http://www.erlang.org/doc/man/wxFindReplaceData.html#setFlags-2" "setFlags(This, Flags) -> ok")
               "wxFindReplaceData:getFlags/1"
               ("http://www.erlang.org/doc/man/wxFindReplaceData.html#getFlags-1" "getFlags(This) -> integer()")
               "wxFindReplaceData:getReplaceString/1"
               ("http://www.erlang.org/doc/man/wxFindReplaceData.html#getReplaceString-1" "getReplaceString(This) -> unicode:charlist()")
               "wxFindReplaceData:getFindString/1"
               ("http://www.erlang.org/doc/man/wxFindReplaceData.html#getFindString-1" "getFindString(This) -> unicode:charlist()")
               "wxFindReplaceData:new/1"
               ("http://www.erlang.org/doc/man/wxFindReplaceData.html#new-1" "new(Flags) -> wxFindReplaceData()")
               "wxFindReplaceData:new/0"
               ("http://www.erlang.org/doc/man/wxFindReplaceData.html#new-0" "new() -> wxFindReplaceData()")
               "wxFindReplaceData:"
               ("http://www.erlang.org/doc/man/wxFindReplaceData.html#type-wxFindReplaceData" "wxFindReplaceData()")
               "wxFindReplaceDialog:destroy/1"
               ("http://www.erlang.org/doc/man/wxFindReplaceDialog.html#destroy-1" "destroy(This:: wxFindReplaceDialog() ) -> ok")
               "wxFindReplaceDialog:getData/1"
               ("http://www.erlang.org/doc/man/wxFindReplaceDialog.html#getData-1" "getData(This) -> wxFindReplaceData:wxFindReplaceData()")
               "wxFindReplaceDialog:create/5"
               ("http://www.erlang.org/doc/man/wxFindReplaceDialog.html#create-5" "create(This, Parent, Data, Title, Options::[Option]) -> boolean()")
               "wxFindReplaceDialog:create/4"
               ("http://www.erlang.org/doc/man/wxFindReplaceDialog.html#create-4" "create(This, Parent, Data, Title) -> boolean()")
               "wxFindReplaceDialog:new/4"
               ("http://www.erlang.org/doc/man/wxFindReplaceDialog.html#new-4" "new(Parent, Data, Title, Options::[Option]) -> wxFindReplaceDialog()")
               "wxFindReplaceDialog:new/3"
               ("http://www.erlang.org/doc/man/wxFindReplaceDialog.html#new-3" "new(Parent, Data, Title) -> wxFindReplaceDialog()")
               "wxFindReplaceDialog:new/0"
               ("http://www.erlang.org/doc/man/wxFindReplaceDialog.html#new-0" "new() -> wxFindReplaceDialog()")
               "wxFindReplaceDialog:"
               ("http://www.erlang.org/doc/man/wxFindReplaceDialog.html#type-wxFindReplaceDialog" "wxFindReplaceDialog()")
               "wxFlexGridSizer:destroy/1"
               ("http://www.erlang.org/doc/man/wxFlexGridSizer.html#destroy-1" "destroy(This:: wxFlexGridSizer() ) -> ok")
               "wxFlexGridSizer:setNonFlexibleGrowMode/2"
               ("http://www.erlang.org/doc/man/wxFlexGridSizer.html#setNonFlexibleGrowMode-2" "setNonFlexibleGrowMode(This, Mode) -> ok")
               "wxFlexGridSizer:setFlexibleDirection/2"
               ("http://www.erlang.org/doc/man/wxFlexGridSizer.html#setFlexibleDirection-2" "setFlexibleDirection(This, Direction) -> ok")
               "wxFlexGridSizer:removeGrowableRow/2"
               ("http://www.erlang.org/doc/man/wxFlexGridSizer.html#removeGrowableRow-2" "removeGrowableRow(This, Idx) -> ok")
               "wxFlexGridSizer:removeGrowableCol/2"
               ("http://www.erlang.org/doc/man/wxFlexGridSizer.html#removeGrowableCol-2" "removeGrowableCol(This, Idx) -> ok")
               "wxFlexGridSizer:getNonFlexibleGrowMode/1"
               ("http://www.erlang.org/doc/man/wxFlexGridSizer.html#getNonFlexibleGrowMode-1" "getNonFlexibleGrowMode(This) -> wx:wx_enum()")
               "wxFlexGridSizer:getFlexibleDirection/1"
               ("http://www.erlang.org/doc/man/wxFlexGridSizer.html#getFlexibleDirection-1" "getFlexibleDirection(This) -> integer()")
               "wxFlexGridSizer:addGrowableRow/3"
               ("http://www.erlang.org/doc/man/wxFlexGridSizer.html#addGrowableRow-3" "addGrowableRow(This, Idx, Options::[Option]) -> ok")
               "wxFlexGridSizer:addGrowableRow/2"
               ("http://www.erlang.org/doc/man/wxFlexGridSizer.html#addGrowableRow-2" "addGrowableRow(This, Idx) -> ok")
               "wxFlexGridSizer:addGrowableCol/3"
               ("http://www.erlang.org/doc/man/wxFlexGridSizer.html#addGrowableCol-3" "addGrowableCol(This, Idx, Options::[Option]) -> ok")
               "wxFlexGridSizer:addGrowableCol/2"
               ("http://www.erlang.org/doc/man/wxFlexGridSizer.html#addGrowableCol-2" "addGrowableCol(This, Idx) -> ok")
               "wxFlexGridSizer:new/4"
               ("http://www.erlang.org/doc/man/wxFlexGridSizer.html#new-4" "new(Rows, Cols, Vgap, Hgap) -> wxFlexGridSizer()")
               "wxFlexGridSizer:new/2"
               ("http://www.erlang.org/doc/man/wxFlexGridSizer.html#new-2" "new(Cols, Options::[Option]) -> wxFlexGridSizer()")
               "wxFlexGridSizer:new/1"
               ("http://www.erlang.org/doc/man/wxFlexGridSizer.html#new-1" "new(Cols) -> wxFlexGridSizer()")
               "wxFlexGridSizer:"
               ("http://www.erlang.org/doc/man/wxFlexGridSizer.html#type-wxFlexGridSizer" "wxFlexGridSizer()")
               "wxFocusEvent:getWindow/1"
               ("http://www.erlang.org/doc/man/wxFocusEvent.html#getWindow-1" "getWindow(This) -> wxWindow:wxWindow()")
               "wxFocusEvent:"
               ("http://www.erlang.org/doc/man/wxFocusEvent.html#type-wxFocusEvent" "wxFocusEvent()")
               "wxFont:destroy/1"
               ("http://www.erlang.org/doc/man/wxFont.html#destroy-1" "destroy(This:: wxFont() ) -> ok")
               "wxFont:setWeight/2"
               ("http://www.erlang.org/doc/man/wxFont.html#setWeight-2" "setWeight(This, Weight) -> ok")
               "wxFont:setUnderlined/2"
               ("http://www.erlang.org/doc/man/wxFont.html#setUnderlined-2" "setUnderlined(This, Underlined) -> ok")
               "wxFont:setStyle/2"
               ("http://www.erlang.org/doc/man/wxFont.html#setStyle-2" "setStyle(This, Style) -> ok")
               "wxFont:setPointSize/2"
               ("http://www.erlang.org/doc/man/wxFont.html#setPointSize-2" "setPointSize(This, PointSize) -> ok")
               "wxFont:setFamily/2"
               ("http://www.erlang.org/doc/man/wxFont.html#setFamily-2" "setFamily(This, Family) -> ok")
               "wxFont:setFaceName/2"
               ("http://www.erlang.org/doc/man/wxFont.html#setFaceName-2" "setFaceName(This, FaceName) -> boolean()")
               "wxFont:setDefaultEncoding/1"
               ("http://www.erlang.org/doc/man/wxFont.html#setDefaultEncoding-1" "setDefaultEncoding(Encoding) -> ok")
               "wxFont:ok/1"
               ("http://www.erlang.org/doc/man/wxFont.html#ok-1" "ok(This) -> boolean()")
               "wxFont:getWeight/1"
               ("http://www.erlang.org/doc/man/wxFont.html#getWeight-1" "getWeight(This) -> integer()")
               "wxFont:getUnderlined/1"
               ("http://www.erlang.org/doc/man/wxFont.html#getUnderlined-1" "getUnderlined(This) -> boolean()")
               "wxFont:getStyle/1"
               ("http://www.erlang.org/doc/man/wxFont.html#getStyle-1" "getStyle(This) -> wx:wx_enum()")
               "wxFont:getPointSize/1"
               ("http://www.erlang.org/doc/man/wxFont.html#getPointSize-1" "getPointSize(This) -> integer()")
               "wxFont:getNativeFontInfoUserDesc/1"
               ("http://www.erlang.org/doc/man/wxFont.html#getNativeFontInfoUserDesc-1" "getNativeFontInfoUserDesc(This) -> unicode:charlist()")
               "wxFont:getNativeFontInfoDesc/1"
               ("http://www.erlang.org/doc/man/wxFont.html#getNativeFontInfoDesc-1" "getNativeFontInfoDesc(This) -> unicode:charlist()")
               "wxFont:getFamily/1"
               ("http://www.erlang.org/doc/man/wxFont.html#getFamily-1" "getFamily(This) -> wx:wx_enum()")
               "wxFont:getFaceName/1"
               ("http://www.erlang.org/doc/man/wxFont.html#getFaceName-1" "getFaceName(This) -> unicode:charlist()")
               "wxFont:getDefaultEncoding/0"
               ("http://www.erlang.org/doc/man/wxFont.html#getDefaultEncoding-0" "getDefaultEncoding() -> wx:wx_enum()")
               "wxFont:isFixedWidth/1"
               ("http://www.erlang.org/doc/man/wxFont.html#isFixedWidth-1" "isFixedWidth(This) -> boolean()")
               "wxFont:new/5"
               ("http://www.erlang.org/doc/man/wxFont.html#new-5" "new(Size, Family, Style, Weight, Options::[Option]) -> wxFont()")
               "wxFont:new/4"
               ("http://www.erlang.org/doc/man/wxFont.html#new-4" "new(Size, Family, Style, Weight) -> wxFont()")
               "wxFont:new/1"
               ("http://www.erlang.org/doc/man/wxFont.html#new-1" "new(Fontname) -> wxFont()")
               "wxFont:new/0"
               ("http://www.erlang.org/doc/man/wxFont.html#new-0" "new() -> wxFont()")
               "wxFont:"
               ("http://www.erlang.org/doc/man/wxFont.html#type-wxFont" "wxFont()")
               "wxFontData:destroy/1"
               ("http://www.erlang.org/doc/man/wxFontData.html#destroy-1" "destroy(This:: wxFontData() ) -> ok")
               "wxFontData:setShowHelp/2"
               ("http://www.erlang.org/doc/man/wxFontData.html#setShowHelp-2" "setShowHelp(This, Flag) -> ok")
               "wxFontData:setRange/3"
               ("http://www.erlang.org/doc/man/wxFontData.html#setRange-3" "setRange(This, MinRange, MaxRange) -> ok")
               "wxFontData:setInitialFont/2"
               ("http://www.erlang.org/doc/man/wxFontData.html#setInitialFont-2" "setInitialFont(This, Font) -> ok")
               "wxFontData:setColour/2"
               ("http://www.erlang.org/doc/man/wxFontData.html#setColour-2" "setColour(This, Colour) -> ok")
               "wxFontData:setChosenFont/2"
               ("http://www.erlang.org/doc/man/wxFontData.html#setChosenFont-2" "setChosenFont(This, Font) -> ok")
               "wxFontData:setAllowSymbols/2"
               ("http://www.erlang.org/doc/man/wxFontData.html#setAllowSymbols-2" "setAllowSymbols(This, Flag) -> ok")
               "wxFontData:getShowHelp/1"
               ("http://www.erlang.org/doc/man/wxFontData.html#getShowHelp-1" "getShowHelp(This) -> boolean()")
               "wxFontData:getInitialFont/1"
               ("http://www.erlang.org/doc/man/wxFontData.html#getInitialFont-1" "getInitialFont(This) -> wxFont:wxFont()")
               "wxFontData:getEnableEffects/1"
               ("http://www.erlang.org/doc/man/wxFontData.html#getEnableEffects-1" "getEnableEffects(This) -> boolean()")
               "wxFontData:getChosenFont/1"
               ("http://www.erlang.org/doc/man/wxFontData.html#getChosenFont-1" "getChosenFont(This) -> wxFont:wxFont()")
               "wxFontData:getColour/1"
               ("http://www.erlang.org/doc/man/wxFontData.html#getColour-1" "getColour(This) -> wx:wx_colour4()")
               "wxFontData:getAllowSymbols/1"
               ("http://www.erlang.org/doc/man/wxFontData.html#getAllowSymbols-1" "getAllowSymbols(This) -> boolean()")
               "wxFontData:enableEffects/2"
               ("http://www.erlang.org/doc/man/wxFontData.html#enableEffects-2" "enableEffects(This, Flag) -> ok")
               "wxFontData:new/1"
               ("http://www.erlang.org/doc/man/wxFontData.html#new-1" "new(Data) -> wxFontData()")
               "wxFontData:new/0"
               ("http://www.erlang.org/doc/man/wxFontData.html#new-0" "new() -> wxFontData()")
               "wxFontData:"
               ("http://www.erlang.org/doc/man/wxFontData.html#type-wxFontData" "wxFontData()")
               "wxFontDialog:destroy/1"
               ("http://www.erlang.org/doc/man/wxFontDialog.html#destroy-1" "destroy(This:: wxFontDialog() ) -> ok")
               "wxFontDialog:getFontData/1"
               ("http://www.erlang.org/doc/man/wxFontDialog.html#getFontData-1" "getFontData(This) -> wxFontData:wxFontData()")
               "wxFontDialog:create/3"
               ("http://www.erlang.org/doc/man/wxFontDialog.html#create-3" "create(This, Parent, Data) -> boolean()")
               "wxFontDialog:new/2"
               ("http://www.erlang.org/doc/man/wxFontDialog.html#new-2" "new(Parent, Data) -> wxFontDialog()")
               "wxFontDialog:new/0"
               ("http://www.erlang.org/doc/man/wxFontDialog.html#new-0" "new() -> wxFontDialog()")
               "wxFontDialog:"
               ("http://www.erlang.org/doc/man/wxFontDialog.html#type-wxFontDialog" "wxFontDialog()")
               "wxFontPickerCtrl:destroy/1"
               ("http://www.erlang.org/doc/man/wxFontPickerCtrl.html#destroy-1" "destroy(This:: wxFontPickerCtrl() ) -> ok")
               "wxFontPickerCtrl:setMaxPointSize/2"
               ("http://www.erlang.org/doc/man/wxFontPickerCtrl.html#setMaxPointSize-2" "setMaxPointSize(This, Max) -> ok")
               "wxFontPickerCtrl:getMaxPointSize/1"
               ("http://www.erlang.org/doc/man/wxFontPickerCtrl.html#getMaxPointSize-1" "getMaxPointSize(This) -> integer()")
               "wxFontPickerCtrl:setSelectedFont/2"
               ("http://www.erlang.org/doc/man/wxFontPickerCtrl.html#setSelectedFont-2" "setSelectedFont(This, F) -> ok")
               "wxFontPickerCtrl:getSelectedFont/1"
               ("http://www.erlang.org/doc/man/wxFontPickerCtrl.html#getSelectedFont-1" "getSelectedFont(This) -> wxFont:wxFont()")
               "wxFontPickerCtrl:create/4"
               ("http://www.erlang.org/doc/man/wxFontPickerCtrl.html#create-4" "create(This, Parent, Id, Options::[Option]) -> boolean()")
               "wxFontPickerCtrl:create/3"
               ("http://www.erlang.org/doc/man/wxFontPickerCtrl.html#create-3" "create(This, Parent, Id) -> boolean()")
               "wxFontPickerCtrl:new/3"
               ("http://www.erlang.org/doc/man/wxFontPickerCtrl.html#new-3" "new(Parent, Id, Options::[Option]) -> wxFontPickerCtrl()")
               "wxFontPickerCtrl:new/2"
               ("http://www.erlang.org/doc/man/wxFontPickerCtrl.html#new-2" "new(Parent, Id) -> wxFontPickerCtrl()")
               "wxFontPickerCtrl:new/0"
               ("http://www.erlang.org/doc/man/wxFontPickerCtrl.html#new-0" "new() -> wxFontPickerCtrl()")
               "wxFontPickerCtrl:"
               ("http://www.erlang.org/doc/man/wxFontPickerCtrl.html#type-wxFontPickerCtrl" "wxFontPickerCtrl()")
               "wxFontPickerEvent:getFont/1"
               ("http://www.erlang.org/doc/man/wxFontPickerEvent.html#getFont-1" "getFont(This) -> wxFont:wxFont()")
               "wxFontPickerEvent:"
               ("http://www.erlang.org/doc/man/wxFontPickerEvent.html#type-wxFontPickerEvent" "wxFontPickerEvent()")
               "wxFrame:destroy/1"
               ("http://www.erlang.org/doc/man/wxFrame.html#destroy-1" "destroy(This:: wxFrame() ) -> ok")
               "wxFrame:setToolBar/2"
               ("http://www.erlang.org/doc/man/wxFrame.html#setToolBar-2" "setToolBar(This, Toolbar) -> ok")
               "wxFrame:setStatusWidths/2"
               ("http://www.erlang.org/doc/man/wxFrame.html#setStatusWidths-2" "setStatusWidths(This, Widths_field) -> ok")
               "wxFrame:setStatusText/3"
               ("http://www.erlang.org/doc/man/wxFrame.html#setStatusText-3" "setStatusText(This, Text, Options::[Option]) -> ok")
               "wxFrame:setStatusText/2"
               ("http://www.erlang.org/doc/man/wxFrame.html#setStatusText-2" "setStatusText(This, Text) -> ok")
               "wxFrame:setStatusBarPane/2"
               ("http://www.erlang.org/doc/man/wxFrame.html#setStatusBarPane-2" "setStatusBarPane(This, N) -> ok")
               "wxFrame:setStatusBar/2"
               ("http://www.erlang.org/doc/man/wxFrame.html#setStatusBar-2" "setStatusBar(This, Statbar) -> ok")
               "wxFrame:setMenuBar/2"
               ("http://www.erlang.org/doc/man/wxFrame.html#setMenuBar-2" "setMenuBar(This, Menubar) -> ok")
               "wxFrame:sendSizeEvent/1"
               ("http://www.erlang.org/doc/man/wxFrame.html#sendSizeEvent-1" "sendSizeEvent(This) -> ok")
               "wxFrame:processCommand/2"
               ("http://www.erlang.org/doc/man/wxFrame.html#processCommand-2" "processCommand(This, Winid) -> boolean()")
               "wxFrame:getToolBar/1"
               ("http://www.erlang.org/doc/man/wxFrame.html#getToolBar-1" "getToolBar(This) -> wxToolBar:wxToolBar()")
               "wxFrame:getStatusBarPane/1"
               ("http://www.erlang.org/doc/man/wxFrame.html#getStatusBarPane-1" "getStatusBarPane(This) -> integer()")
               "wxFrame:getStatusBar/1"
               ("http://www.erlang.org/doc/man/wxFrame.html#getStatusBar-1" "getStatusBar(This) -> wxStatusBar:wxStatusBar()")
               "wxFrame:getMenuBar/1"
               ("http://www.erlang.org/doc/man/wxFrame.html#getMenuBar-1" "getMenuBar(This) -> wxMenuBar:wxMenuBar()")
               "wxFrame:getClientAreaOrigin/1"
               ("http://www.erlang.org/doc/man/wxFrame.html#getClientAreaOrigin-1" "getClientAreaOrigin(This) -> {X::integer(), Y::integer()}")
               "wxFrame:createToolBar/2"
               ("http://www.erlang.org/doc/man/wxFrame.html#createToolBar-2" "createToolBar(This, Options::[Option]) -> wxToolBar:wxToolBar()")
               "wxFrame:createToolBar/1"
               ("http://www.erlang.org/doc/man/wxFrame.html#createToolBar-1" "createToolBar(This) -> wxToolBar:wxToolBar()")
               "wxFrame:createStatusBar/2"
               ("http://www.erlang.org/doc/man/wxFrame.html#createStatusBar-2" "createStatusBar(This, Options::[Option]) -> wxStatusBar:wxStatusBar()")
               "wxFrame:createStatusBar/1"
               ("http://www.erlang.org/doc/man/wxFrame.html#createStatusBar-1" "createStatusBar(This) -> wxStatusBar:wxStatusBar()")
               "wxFrame:create/5"
               ("http://www.erlang.org/doc/man/wxFrame.html#create-5" "create(This, Parent, Id, Title, Options::[Option]) -> boolean()")
               "wxFrame:create/4"
               ("http://www.erlang.org/doc/man/wxFrame.html#create-4" "create(This, Parent, Id, Title) -> boolean()")
               "wxFrame:new/4"
               ("http://www.erlang.org/doc/man/wxFrame.html#new-4" "new(Parent, Id, Title, Options::[Option]) -> wxFrame()")
               "wxFrame:new/3"
               ("http://www.erlang.org/doc/man/wxFrame.html#new-3" "new(Parent, Id, Title) -> wxFrame()")
               "wxFrame:new/0"
               ("http://www.erlang.org/doc/man/wxFrame.html#new-0" "new() -> wxFrame()")
               "wxFrame:"
               ("http://www.erlang.org/doc/man/wxFrame.html#type-wxFrame" "wxFrame()")
               "wxGauge:destroy/1"
               ("http://www.erlang.org/doc/man/wxGauge.html#destroy-1" "destroy(This:: wxGauge() ) -> ok")
               "wxGauge:pulse/1"
               ("http://www.erlang.org/doc/man/wxGauge.html#pulse-1" "pulse(This) -> ok")
               "wxGauge:setValue/2"
               ("http://www.erlang.org/doc/man/wxGauge.html#setValue-2" "setValue(This, Pos) -> ok")
               "wxGauge:setRange/2"
               ("http://www.erlang.org/doc/man/wxGauge.html#setRange-2" "setRange(This, R) -> ok")
               "wxGauge:isVertical/1"
               ("http://www.erlang.org/doc/man/wxGauge.html#isVertical-1" "isVertical(This) -> boolean()")
               "wxGauge:getValue/1"
               ("http://www.erlang.org/doc/man/wxGauge.html#getValue-1" "getValue(This) -> integer()")
               "wxGauge:getRange/1"
               ("http://www.erlang.org/doc/man/wxGauge.html#getRange-1" "getRange(This) -> integer()")
               "wxGauge:create/5"
               ("http://www.erlang.org/doc/man/wxGauge.html#create-5" "create(This, Parent, Id, Range, Options::[Option]) -> boolean()")
               "wxGauge:create/4"
               ("http://www.erlang.org/doc/man/wxGauge.html#create-4" "create(This, Parent, Id, Range) -> boolean()")
               "wxGauge:new/4"
               ("http://www.erlang.org/doc/man/wxGauge.html#new-4" "new(Parent, Id, Range, Options::[Option]) -> wxGauge()")
               "wxGauge:new/3"
               ("http://www.erlang.org/doc/man/wxGauge.html#new-3" "new(Parent, Id, Range) -> wxGauge()")
               "wxGauge:new/0"
               ("http://www.erlang.org/doc/man/wxGauge.html#new-0" "new() -> wxGauge()")
               "wxGauge:"
               ("http://www.erlang.org/doc/man/wxGauge.html#type-wxGauge" "wxGauge()")
               "wxGBSizerItem:"
               ("http://www.erlang.org/doc/man/wxGBSizerItem.html#type-wxGBSizerItem" "wxGBSizerItem()")
               "wxGenericDirCtrl:destroy/1"
               ("http://www.erlang.org/doc/man/wxGenericDirCtrl.html#destroy-1" "destroy(This:: wxGenericDirCtrl() ) -> ok")
               "wxGenericDirCtrl:setPath/2"
               ("http://www.erlang.org/doc/man/wxGenericDirCtrl.html#setPath-2" "setPath(This, Path) -> ok")
               "wxGenericDirCtrl:setFilterIndex/2"
               ("http://www.erlang.org/doc/man/wxGenericDirCtrl.html#setFilterIndex-2" "setFilterIndex(This, N) -> ok")
               "wxGenericDirCtrl:setFilter/2"
               ("http://www.erlang.org/doc/man/wxGenericDirCtrl.html#setFilter-2" "setFilter(This, Filter) -> ok")
               "wxGenericDirCtrl:setDefaultPath/2"
               ("http://www.erlang.org/doc/man/wxGenericDirCtrl.html#setDefaultPath-2" "setDefaultPath(This, Path) -> ok")
               "wxGenericDirCtrl:reCreateTree/1"
               ("http://www.erlang.org/doc/man/wxGenericDirCtrl.html#reCreateTree-1" "reCreateTree(This) -> ok")
               "wxGenericDirCtrl:getTreeCtrl/1"
               ("http://www.erlang.org/doc/man/wxGenericDirCtrl.html#getTreeCtrl-1" "getTreeCtrl(This) -> wxTreeCtrl:wxTreeCtrl()")
               "wxGenericDirCtrl:getRootId/1"
               ("http://www.erlang.org/doc/man/wxGenericDirCtrl.html#getRootId-1" "getRootId(This) -> integer()")
               "wxGenericDirCtrl:getFilterIndex/1"
               ("http://www.erlang.org/doc/man/wxGenericDirCtrl.html#getFilterIndex-1" "getFilterIndex(This) -> integer()")
               "wxGenericDirCtrl:getFilter/1"
               ("http://www.erlang.org/doc/man/wxGenericDirCtrl.html#getFilter-1" "getFilter(This) -> unicode:charlist()")
               "wxGenericDirCtrl:getFilePath/1"
               ("http://www.erlang.org/doc/man/wxGenericDirCtrl.html#getFilePath-1" "getFilePath(This) -> unicode:charlist()")
               "wxGenericDirCtrl:getPath/1"
               ("http://www.erlang.org/doc/man/wxGenericDirCtrl.html#getPath-1" "getPath(This) -> unicode:charlist()")
               "wxGenericDirCtrl:getDefaultPath/1"
               ("http://www.erlang.org/doc/man/wxGenericDirCtrl.html#getDefaultPath-1" "getDefaultPath(This) -> unicode:charlist()")
               "wxGenericDirCtrl:expandPath/2"
               ("http://www.erlang.org/doc/man/wxGenericDirCtrl.html#expandPath-2" "expandPath(This, Path) -> boolean()")
               "wxGenericDirCtrl:collapseTree/1"
               ("http://www.erlang.org/doc/man/wxGenericDirCtrl.html#collapseTree-1" "collapseTree(This) -> ok")
               "wxGenericDirCtrl:init/1"
               ("http://www.erlang.org/doc/man/wxGenericDirCtrl.html#init-1" "init(This) -> ok")
               "wxGenericDirCtrl:create/3"
               ("http://www.erlang.org/doc/man/wxGenericDirCtrl.html#create-3" "create(This, Parent, Options::[Option]) -> boolean()")
               "wxGenericDirCtrl:create/2"
               ("http://www.erlang.org/doc/man/wxGenericDirCtrl.html#create-2" "create(This, Parent) -> boolean()")
               "wxGenericDirCtrl:new/2"
               ("http://www.erlang.org/doc/man/wxGenericDirCtrl.html#new-2" "new(Parent, Options::[Option]) -> wxGenericDirCtrl()")
               "wxGenericDirCtrl:new/1"
               ("http://www.erlang.org/doc/man/wxGenericDirCtrl.html#new-1" "new(Parent) -> wxGenericDirCtrl()")
               "wxGenericDirCtrl:new/0"
               ("http://www.erlang.org/doc/man/wxGenericDirCtrl.html#new-0" "new() -> wxGenericDirCtrl()")
               "wxGenericDirCtrl:"
               ("http://www.erlang.org/doc/man/wxGenericDirCtrl.html#type-wxGenericDirCtrl" "wxGenericDirCtrl()")
               "wxGLCanvas:destroy/1"
               ("http://www.erlang.org/doc/man/wxGLCanvas.html#destroy-1" "destroy(This:: wxGLCanvas() ) -> ok")
               "wxGLCanvas:swapBuffers/1"
               ("http://www.erlang.org/doc/man/wxGLCanvas.html#swapBuffers-1" "swapBuffers(This) -> ok")
               "wxGLCanvas:setCurrent/1"
               ("http://www.erlang.org/doc/man/wxGLCanvas.html#setCurrent-1" "setCurrent(This) -> ok")
               "wxGLCanvas:getContext/1"
               ("http://www.erlang.org/doc/man/wxGLCanvas.html#getContext-1" "getContext(This) -> wx:wx_object()")
               "wxGLCanvas:new/3"
               ("http://www.erlang.org/doc/man/wxGLCanvas.html#new-3" "new(Parent, Shared, Options::[Option]) -> wxGLCanvas()")
               "wxGLCanvas:new/2"
               ("http://www.erlang.org/doc/man/wxGLCanvas.html#new-2" "new(Parent, Shared) -> wxGLCanvas()")
               "wxGLCanvas:new/1"
               ("http://www.erlang.org/doc/man/wxGLCanvas.html#new-1" "new(Parent) -> wxGLCanvas()")
               "wxGLCanvas:"
               ("http://www.erlang.org/doc/man/wxGLCanvas.html#type-wxGLCanvas" "wxGLCanvas()")
               "wxGraphicsBrush:"
               ("http://www.erlang.org/doc/man/wxGraphicsBrush.html#type-wxGraphicsBrush" "wxGraphicsBrush()")
               "wxGraphicsContext:destroy/1"
               ("http://www.erlang.org/doc/man/wxGraphicsContext.html#destroy-1" "destroy(This:: wxGraphicsContext() ) -> ok")
               "wxGraphicsContext:strokeLines/2"
               ("http://www.erlang.org/doc/man/wxGraphicsContext.html#strokeLines-2" "strokeLines(This, Points) -> ok")
               "wxGraphicsContext:strokeLine/5"
               ("http://www.erlang.org/doc/man/wxGraphicsContext.html#strokeLine-5" "strokeLine(This, X1, Y1, X2, Y2) -> ok")
               "wxGraphicsContext:setPen/2"
               ("http://www.erlang.org/doc/man/wxGraphicsContext.html#setPen-2" "setPen(This, Pen) -> ok")
               "wxGraphicsContext:setFont/3"
               ("http://www.erlang.org/doc/man/wxGraphicsContext.html#setFont-3" "setFont(This, Font, Colour) -> ok")
               "wxGraphicsContext:setFont/2"
               ("http://www.erlang.org/doc/man/wxGraphicsContext.html#setFont-2" "setFont(This, Font) -> ok")
               "wxGraphicsContext:setBrush/2"
               ("http://www.erlang.org/doc/man/wxGraphicsContext.html#setBrush-2" "setBrush(This, Brush) -> ok")
               "wxGraphicsContext:concatTransform/2"
               ("http://www.erlang.org/doc/man/wxGraphicsContext.html#concatTransform-2" "concatTransform(This, Matrix) -> ok")
               "wxGraphicsContext:setTransform/2"
               ("http://www.erlang.org/doc/man/wxGraphicsContext.html#setTransform-2" "setTransform(This, Matrix) -> ok")
               "wxGraphicsContext:getTransform/1"
               ("http://www.erlang.org/doc/man/wxGraphicsContext.html#getTransform-1" "getTransform(This) -> wxGraphicsMatrix:wxGraphicsMatrix()")
               "wxGraphicsContext:translate/3"
               ("http://www.erlang.org/doc/man/wxGraphicsContext.html#translate-3" "translate(This, Dx, Dy) -> ok")
               "wxGraphicsContext:scale/3"
               ("http://www.erlang.org/doc/man/wxGraphicsContext.html#scale-3" "scale(This, XScale, YScale) -> ok")
               "wxGraphicsContext:rotate/2"
               ("http://www.erlang.org/doc/man/wxGraphicsContext.html#rotate-2" "rotate(This, Angle) -> ok")
               "wxGraphicsContext:getTextExtent/2"
               ("http://www.erlang.org/doc/man/wxGraphicsContext.html#getTextExtent-2" "getTextExtent(This, Text) -> Result")
               "wxGraphicsContext:getPartialTextExtents/2"
               ("http://www.erlang.org/doc/man/wxGraphicsContext.html#getPartialTextExtents-2" "getPartialTextExtents(This, Text) -> [number()]")
               "wxGraphicsContext:strokePath/2"
               ("http://www.erlang.org/doc/man/wxGraphicsContext.html#strokePath-2" "strokePath(This, Path) -> ok")
               "wxGraphicsContext:fillPath/3"
               ("http://www.erlang.org/doc/man/wxGraphicsContext.html#fillPath-3" "fillPath(This, Path, Options::[Option]) -> ok")
               "wxGraphicsContext:fillPath/2"
               ("http://www.erlang.org/doc/man/wxGraphicsContext.html#fillPath-2" "fillPath(This, Path) -> ok")
               "wxGraphicsContext:drawText/6"
               ("http://www.erlang.org/doc/man/wxGraphicsContext.html#drawText-6" "drawText(This, Str, X, Y, Angle, BackgroundBrush) -> ok")
               "wxGraphicsContext:drawText/5"
               ("http://www.erlang.org/doc/man/wxGraphicsContext.html#drawText-5" "drawText(This, Str, X, Y, Angle) -> ok")
               "wxGraphicsContext:drawText/4"
               ("http://www.erlang.org/doc/man/wxGraphicsContext.html#drawText-4" "drawText(This, Str, X, Y) -> ok")
               "wxGraphicsContext:drawRoundedRectangle/6"
               ("http://www.erlang.org/doc/man/wxGraphicsContext.html#drawRoundedRectangle-6" "drawRoundedRectangle(This, X, Y, W, H, Radius) -> ok")
               "wxGraphicsContext:drawRectangle/5"
               ("http://www.erlang.org/doc/man/wxGraphicsContext.html#drawRectangle-5" "drawRectangle(This, X, Y, W, H) -> ok")
               "wxGraphicsContext:drawPath/3"
               ("http://www.erlang.org/doc/man/wxGraphicsContext.html#drawPath-3" "drawPath(This, Path, Options::[Option]) -> ok")
               "wxGraphicsContext:drawPath/2"
               ("http://www.erlang.org/doc/man/wxGraphicsContext.html#drawPath-2" "drawPath(This, Path) -> ok")
               "wxGraphicsContext:drawLines/3"
               ("http://www.erlang.org/doc/man/wxGraphicsContext.html#drawLines-3" "drawLines(This, Points, Options::[Option]) -> ok")
               "wxGraphicsContext:drawLines/2"
               ("http://www.erlang.org/doc/man/wxGraphicsContext.html#drawLines-2" "drawLines(This, Points) -> ok")
               "wxGraphicsContext:drawIcon/6"
               ("http://www.erlang.org/doc/man/wxGraphicsContext.html#drawIcon-6" "drawIcon(This, Icon, X, Y, W, H) -> ok")
               "wxGraphicsContext:drawEllipse/5"
               ("http://www.erlang.org/doc/man/wxGraphicsContext.html#drawEllipse-5" "drawEllipse(This, X, Y, W, H) -> ok")
               "wxGraphicsContext:drawBitmap/6"
               ("http://www.erlang.org/doc/man/wxGraphicsContext.html#drawBitmap-6" "drawBitmap(This, Bmp, X, Y, W, H) -> ok")
               "wxGraphicsContext:resetClip/1"
               ("http://www.erlang.org/doc/man/wxGraphicsContext.html#resetClip-1" "resetClip(This) -> ok")
               "wxGraphicsContext:clip/5"
               ("http://www.erlang.org/doc/man/wxGraphicsContext.html#clip-5" "clip(This, X, Y, W, H) -> ok")
               "wxGraphicsContext:clip/2"
               ("http://www.erlang.org/doc/man/wxGraphicsContext.html#clip-2" "clip(This, Region) -> ok")
               "wxGraphicsContext:createPath/1"
               ("http://www.erlang.org/doc/man/wxGraphicsContext.html#createPath-1" "createPath(This) -> wxGraphicsPath:wxGraphicsPath()")
               "wxGraphicsContext:createMatrix/2"
               ("http://www.erlang.org/doc/man/wxGraphicsContext.html#createMatrix-2" "createMatrix(This, Options::[Option]) -> wxGraphicsMatrix:wxGraphicsMatrix()")
               "wxGraphicsContext:createMatrix/1"
               ("http://www.erlang.org/doc/man/wxGraphicsContext.html#createMatrix-1" "createMatrix(This) -> wxGraphicsMatrix:wxGraphicsMatrix()")
               "wxGraphicsContext:createFont/3"
               ("http://www.erlang.org/doc/man/wxGraphicsContext.html#createFont-3" "createFont(This, Font, Options::[Option]) -> wxGraphicsFont:wxGraphicsFont()")
               "wxGraphicsContext:createFont/2"
               ("http://www.erlang.org/doc/man/wxGraphicsContext.html#createFont-2" "createFont(This, Font) -> wxGraphicsFont:wxGraphicsFont()")
               "wxGraphicsContext:createLinearGradientBrush/7"
               ("http://www.erlang.org/doc/man/wxGraphicsContext.html#createLinearGradientBrush-7" "createLinearGradientBrush(This, X1, Y1, X2, Y2, C1, C2) -> wxGraphicsBrush:wxGraphicsBrush()")
               "wxGraphicsContext:createRadialGradientBrush/8"
               ("http://www.erlang.org/doc/man/wxGraphicsContext.html#createRadialGradientBrush-8" "createRadialGradientBrush(This, Xo, Yo, Xc, Yc, Radius, OColor, CColor) -> wxGraphicsBrush:wxGraphicsBrush()")
               "wxGraphicsContext:createBrush/2"
               ("http://www.erlang.org/doc/man/wxGraphicsContext.html#createBrush-2" "createBrush(This, Brush) -> wxGraphicsBrush:wxGraphicsBrush()")
               "wxGraphicsContext:createPen/2"
               ("http://www.erlang.org/doc/man/wxGraphicsContext.html#createPen-2" "createPen(This, Pen) -> wxGraphicsPen:wxGraphicsPen()")
               "wxGraphicsContext:create/1"
               ("http://www.erlang.org/doc/man/wxGraphicsContext.html#create-1" "create(Dc) -> wxGraphicsContext()")
               "wxGraphicsContext:create/0"
               ("http://www.erlang.org/doc/man/wxGraphicsContext.html#create-0" "create() -> wxGraphicsContext()")
               "wxGraphicsContext:"
               ("http://www.erlang.org/doc/man/wxGraphicsContext.html#type-wxGraphicsContext" "wxGraphicsContext()")
               "wxGraphicsFont:"
               ("http://www.erlang.org/doc/man/wxGraphicsFont.html#type-wxGraphicsFont" "wxGraphicsFont()")
               "wxGraphicsMatrix:transformDistance/1"
               ("http://www.erlang.org/doc/man/wxGraphicsMatrix.html#transformDistance-1" "transformDistance(This) -> {Dx::number(), Dy::number()}")
               "wxGraphicsMatrix:transformPoint/1"
               ("http://www.erlang.org/doc/man/wxGraphicsMatrix.html#transformPoint-1" "transformPoint(This) -> {X::number(), Y::number()}")
               "wxGraphicsMatrix:set/2"
               ("http://www.erlang.org/doc/man/wxGraphicsMatrix.html#set-2" "set(This, Options::[Option]) -> ok")
               "wxGraphicsMatrix:set/1"
               ("http://www.erlang.org/doc/man/wxGraphicsMatrix.html#set-1" "set(This) -> ok")
               "wxGraphicsMatrix:translate/3"
               ("http://www.erlang.org/doc/man/wxGraphicsMatrix.html#translate-3" "translate(This, Dx, Dy) -> ok")
               "wxGraphicsMatrix:scale/3"
               ("http://www.erlang.org/doc/man/wxGraphicsMatrix.html#scale-3" "scale(This, XScale, YScale) -> ok")
               "wxGraphicsMatrix:rotate/2"
               ("http://www.erlang.org/doc/man/wxGraphicsMatrix.html#rotate-2" "rotate(This, Angle) -> ok")
               "wxGraphicsMatrix:isIdentity/1"
               ("http://www.erlang.org/doc/man/wxGraphicsMatrix.html#isIdentity-1" "isIdentity(This) -> boolean()")
               "wxGraphicsMatrix:isEqual/2"
               ("http://www.erlang.org/doc/man/wxGraphicsMatrix.html#isEqual-2" "isEqual(This, T) -> boolean()")
               "wxGraphicsMatrix:invert/1"
               ("http://www.erlang.org/doc/man/wxGraphicsMatrix.html#invert-1" "invert(This) -> ok")
               "wxGraphicsMatrix:get/1"
               ("http://www.erlang.org/doc/man/wxGraphicsMatrix.html#get-1" "get(This) -> Result")
               "wxGraphicsMatrix:concat/2"
               ("http://www.erlang.org/doc/man/wxGraphicsMatrix.html#concat-2" "concat(This, T) -> ok")
               "wxGraphicsMatrix:"
               ("http://www.erlang.org/doc/man/wxGraphicsMatrix.html#type-wxGraphicsMatrix" "wxGraphicsMatrix()")
               "wxGraphicsObject:destroy/1"
               ("http://www.erlang.org/doc/man/wxGraphicsObject.html#destroy-1" "destroy(This:: wxGraphicsObject() ) -> ok")
               "wxGraphicsObject:isNull/1"
               ("http://www.erlang.org/doc/man/wxGraphicsObject.html#isNull-1" "isNull(This) -> boolean()")
               "wxGraphicsObject:getRenderer/1"
               ("http://www.erlang.org/doc/man/wxGraphicsObject.html#getRenderer-1" "getRenderer(This) -> wxGraphicsRenderer:wxGraphicsRenderer()")
               "wxGraphicsObject:"
               ("http://www.erlang.org/doc/man/wxGraphicsObject.html#type-wxGraphicsObject" "wxGraphicsObject()")
               "wxGraphicsPath:transform/2"
               ("http://www.erlang.org/doc/man/wxGraphicsPath.html#transform-2" "transform(This, Matrix) -> ok")
               "wxGraphicsPath:getCurrentPoint/1"
               ("http://www.erlang.org/doc/man/wxGraphicsPath.html#getCurrentPoint-1" "getCurrentPoint(This) -> {X::float(), Y::float()}")
               "wxGraphicsPath:getBox/1"
               ("http://www.erlang.org/doc/man/wxGraphicsPath.html#getBox-1" "getBox(This) -> {X::float(), Y::float(), W::float(), H::float()}")
               "wxGraphicsPath:contains/4"
               ("http://www.erlang.org/doc/man/wxGraphicsPath.html#contains-4" "contains(This, X, Y, Options::[Option]) -> boolean()")
               "wxGraphicsPath:contains/3"
               ("http://www.erlang.org/doc/man/wxGraphicsPath.html#contains-3" "contains(This, X, Y) -> boolean()")
               "wxGraphicsPath:contains/2"
               ("http://www.erlang.org/doc/man/wxGraphicsPath.html#contains-2" "contains(This, C) -> boolean()")
               "wxGraphicsPath:closeSubpath/1"
               ("http://www.erlang.org/doc/man/wxGraphicsPath.html#closeSubpath-1" "closeSubpath(This) -> ok")
               "wxGraphicsPath:addRoundedRectangle/6"
               ("http://www.erlang.org/doc/man/wxGraphicsPath.html#addRoundedRectangle-6" "addRoundedRectangle(This, X, Y, W, H, Radius) -> ok")
               "wxGraphicsPath:addRectangle/5"
               ("http://www.erlang.org/doc/man/wxGraphicsPath.html#addRectangle-5" "addRectangle(This, X, Y, W, H) -> ok")
               "wxGraphicsPath:addQuadCurveToPoint/5"
               ("http://www.erlang.org/doc/man/wxGraphicsPath.html#addQuadCurveToPoint-5" "addQuadCurveToPoint(This, Cx, Cy, X, Y) -> ok")
               "wxGraphicsPath:addPath/2"
               ("http://www.erlang.org/doc/man/wxGraphicsPath.html#addPath-2" "addPath(This, Path) -> ok")
               "wxGraphicsPath:addLineToPoint/3"
               ("http://www.erlang.org/doc/man/wxGraphicsPath.html#addLineToPoint-3" "addLineToPoint(This, X, Y) -> ok")
               "wxGraphicsPath:addLineToPoint/2"
               ("http://www.erlang.org/doc/man/wxGraphicsPath.html#addLineToPoint-2" "addLineToPoint(This, P) -> ok")
               "wxGraphicsPath:addEllipse/5"
               ("http://www.erlang.org/doc/man/wxGraphicsPath.html#addEllipse-5" "addEllipse(This, X, Y, W, H) -> ok")
               "wxGraphicsPath:addCurveToPoint/7"
               ("http://www.erlang.org/doc/man/wxGraphicsPath.html#addCurveToPoint-7" "addCurveToPoint(This, Cx1, Cy1, Cx2, Cy2, X, Y) -> ok")
               "wxGraphicsPath:addCurveToPoint/4"
               ("http://www.erlang.org/doc/man/wxGraphicsPath.html#addCurveToPoint-4" "addCurveToPoint(This, C1, C2, E) -> ok")
               "wxGraphicsPath:addCircle/4"
               ("http://www.erlang.org/doc/man/wxGraphicsPath.html#addCircle-4" "addCircle(This, X, Y, R) -> ok")
               "wxGraphicsPath:addArcToPoint/6"
               ("http://www.erlang.org/doc/man/wxGraphicsPath.html#addArcToPoint-6" "addArcToPoint(This, X1, Y1, X2, Y2, R) -> ok")
               "wxGraphicsPath:addArc/7"
               ("http://www.erlang.org/doc/man/wxGraphicsPath.html#addArc-7" "addArc(This, X, Y, R, StartAngle, EndAngle, Clockwise) -> ok")
               "wxGraphicsPath:addArc/6"
               ("http://www.erlang.org/doc/man/wxGraphicsPath.html#addArc-6" "addArc(This, C, R, StartAngle, EndAngle, Clockwise) -> ok")
               "wxGraphicsPath:moveToPoint/3"
               ("http://www.erlang.org/doc/man/wxGraphicsPath.html#moveToPoint-3" "moveToPoint(This, X, Y) -> ok")
               "wxGraphicsPath:moveToPoint/2"
               ("http://www.erlang.org/doc/man/wxGraphicsPath.html#moveToPoint-2" "moveToPoint(This, P) -> ok")
               "wxGraphicsPath:"
               ("http://www.erlang.org/doc/man/wxGraphicsPath.html#type-wxGraphicsPath" "wxGraphicsPath()")
               "wxGraphicsPen:"
               ("http://www.erlang.org/doc/man/wxGraphicsPen.html#type-wxGraphicsPen" "wxGraphicsPen()")
               "wxGraphicsRenderer:createPath/1"
               ("http://www.erlang.org/doc/man/wxGraphicsRenderer.html#createPath-1" "createPath(This) -> wxGraphicsPath:wxGraphicsPath()")
               "wxGraphicsRenderer:createMatrix/2"
               ("http://www.erlang.org/doc/man/wxGraphicsRenderer.html#createMatrix-2" "createMatrix(This, Options::[Option]) -> wxGraphicsMatrix:wxGraphicsMatrix()")
               "wxGraphicsRenderer:createMatrix/1"
               ("http://www.erlang.org/doc/man/wxGraphicsRenderer.html#createMatrix-1" "createMatrix(This) -> wxGraphicsMatrix:wxGraphicsMatrix()")
               "wxGraphicsRenderer:createFont/3"
               ("http://www.erlang.org/doc/man/wxGraphicsRenderer.html#createFont-3" "createFont(This, Font, Options::[Option]) -> wxGraphicsFont:wxGraphicsFont()")
               "wxGraphicsRenderer:createFont/2"
               ("http://www.erlang.org/doc/man/wxGraphicsRenderer.html#createFont-2" "createFont(This, Font) -> wxGraphicsFont:wxGraphicsFont()")
               "wxGraphicsRenderer:createRadialGradientBrush/8"
               ("http://www.erlang.org/doc/man/wxGraphicsRenderer.html#createRadialGradientBrush-8" "createRadialGradientBrush(This, Xo, Yo, Xc, Yc, Radius, OColor, CColor) -> wxGraphicsBrush:wxGraphicsBrush()")
               "wxGraphicsRenderer:createLinearGradientBrush/7"
               ("http://www.erlang.org/doc/man/wxGraphicsRenderer.html#createLinearGradientBrush-7" "createLinearGradientBrush(This, X1, Y1, X2, Y2, C1, C2) -> wxGraphicsBrush:wxGraphicsBrush()")
               "wxGraphicsRenderer:createBrush/2"
               ("http://www.erlang.org/doc/man/wxGraphicsRenderer.html#createBrush-2" "createBrush(This, Brush) -> wxGraphicsBrush:wxGraphicsBrush()")
               "wxGraphicsRenderer:createPen/2"
               ("http://www.erlang.org/doc/man/wxGraphicsRenderer.html#createPen-2" "createPen(This, Pen) -> wxGraphicsPen:wxGraphicsPen()")
               "wxGraphicsRenderer:createContext/2"
               ("http://www.erlang.org/doc/man/wxGraphicsRenderer.html#createContext-2" "createContext(This, Dc) -> wxGraphicsContext:wxGraphicsContext()")
               "wxGraphicsRenderer:getDefaultRenderer/0"
               ("http://www.erlang.org/doc/man/wxGraphicsRenderer.html#getDefaultRenderer-0" "getDefaultRenderer() -> wxGraphicsRenderer()")
               "wxGraphicsRenderer:"
               ("http://www.erlang.org/doc/man/wxGraphicsRenderer.html#type-wxGraphicsRenderer" "wxGraphicsRenderer()")
               "wxGrid:destroy/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#destroy-1" "destroy(This:: wxGrid() ) -> ok")
               "wxGrid:yToRow/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#yToRow-2" "yToRow(This, Y) -> integer()")
               "wxGrid:yToEdgeOfRow/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#yToEdgeOfRow-2" "yToEdgeOfRow(This, Y) -> integer()")
               "wxGrid:xToEdgeOfCol/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#xToEdgeOfCol-2" "xToEdgeOfCol(This, X) -> integer()")
               "wxGrid:xToCol/3"
               ("http://www.erlang.org/doc/man/wxGrid.html#xToCol-3" "xToCol(This, X, Options::[Option]) -> integer()")
               "wxGrid:xToCol/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#xToCol-2" "xToCol(This, X) -> integer()")
               "wxGrid:showCellEditControl/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#showCellEditControl-1" "showCellEditControl(This) -> ok")
               "wxGrid:setSelectionMode/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#setSelectionMode-2" "setSelectionMode(This, Selmode) -> ok")
               "wxGrid:setSelectionForeground/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#setSelectionForeground-2" "setSelectionForeground(This, C) -> ok")
               "wxGrid:setSelectionBackground/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#setSelectionBackground-2" "setSelectionBackground(This, C) -> ok")
               "wxGrid:setScrollLineY/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#setScrollLineY-2" "setScrollLineY(This, Y) -> ok")
               "wxGrid:setScrollLineX/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#setScrollLineX-2" "setScrollLineX(This, X) -> ok")
               "wxGrid:setRowSize/3"
               ("http://www.erlang.org/doc/man/wxGrid.html#setRowSize-3" "setRowSize(This, Row, Height) -> ok")
               "wxGrid:setRowMinimalAcceptableHeight/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#setRowMinimalAcceptableHeight-2" "setRowMinimalAcceptableHeight(This, Width) -> ok")
               "wxGrid:setRowMinimalHeight/3"
               ("http://www.erlang.org/doc/man/wxGrid.html#setRowMinimalHeight-3" "setRowMinimalHeight(This, Row, Width) -> ok")
               "wxGrid:setRowLabelValue/3"
               ("http://www.erlang.org/doc/man/wxGrid.html#setRowLabelValue-3" "setRowLabelValue(This, Row, Val) -> ok")
               "wxGrid:setRowLabelSize/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#setRowLabelSize-2" "setRowLabelSize(This, Width) -> ok")
               "wxGrid:setRowLabelAlignment/3"
               ("http://www.erlang.org/doc/man/wxGrid.html#setRowLabelAlignment-3" "setRowLabelAlignment(This, Horiz, Vert) -> ok")
               "wxGrid:setRowAttr/3"
               ("http://www.erlang.org/doc/man/wxGrid.html#setRowAttr-3" "setRowAttr(This, Row, Attr) -> ok")
               "wxGrid:setReadOnly/4"
               ("http://www.erlang.org/doc/man/wxGrid.html#setReadOnly-4" "setReadOnly(This, Row, Col, Options::[Option]) -> ok")
               "wxGrid:setReadOnly/3"
               ("http://www.erlang.org/doc/man/wxGrid.html#setReadOnly-3" "setReadOnly(This, Row, Col) -> ok")
               "wxGrid:setMargins/3"
               ("http://www.erlang.org/doc/man/wxGrid.html#setMargins-3" "setMargins(This, ExtraWidth, ExtraHeight) -> ok")
               "wxGrid:setLabelTextColour/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#setLabelTextColour-2" "setLabelTextColour(This, Val) -> ok")
               "wxGrid:setLabelFont/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#setLabelFont-2" "setLabelFont(This, Val) -> ok")
               "wxGrid:setLabelBackgroundColour/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#setLabelBackgroundColour-2" "setLabelBackgroundColour(This, Val) -> ok")
               "wxGrid:setGridLineColour/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#setGridLineColour-2" "setGridLineColour(This, Val) -> ok")
               "wxGrid:setGridCursor/3"
               ("http://www.erlang.org/doc/man/wxGrid.html#setGridCursor-3" "setGridCursor(This, Row, Col) -> ok")
               "wxGrid:setDefaultRowSize/3"
               ("http://www.erlang.org/doc/man/wxGrid.html#setDefaultRowSize-3" "setDefaultRowSize(This, Height, Options::[Option]) -> ok")
               "wxGrid:setDefaultRowSize/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#setDefaultRowSize-2" "setDefaultRowSize(This, Height) -> ok")
               "wxGrid:setDefaultColSize/3"
               ("http://www.erlang.org/doc/man/wxGrid.html#setDefaultColSize-3" "setDefaultColSize(This, Width, Options::[Option]) -> ok")
               "wxGrid:setDefaultColSize/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#setDefaultColSize-2" "setDefaultColSize(This, Width) -> ok")
               "wxGrid:setDefaultRenderer/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#setDefaultRenderer-2" "setDefaultRenderer(This, Renderer) -> ok")
               "wxGrid:setDefaultEditor/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#setDefaultEditor-2" "setDefaultEditor(This, Editor) -> ok")
               "wxGrid:setDefaultCellTextColour/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#setDefaultCellTextColour-2" "setDefaultCellTextColour(This, Val) -> ok")
               "wxGrid:setDefaultCellFont/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#setDefaultCellFont-2" "setDefaultCellFont(This, Val) -> ok")
               "wxGrid:setDefaultCellBackgroundColour/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#setDefaultCellBackgroundColour-2" "setDefaultCellBackgroundColour(This, Val) -> ok")
               "wxGrid:setDefaultCellAlignment/3"
               ("http://www.erlang.org/doc/man/wxGrid.html#setDefaultCellAlignment-3" "setDefaultCellAlignment(This, Horiz, Vert) -> ok")
               "wxGrid:setColSize/3"
               ("http://www.erlang.org/doc/man/wxGrid.html#setColSize-3" "setColSize(This, Col, Width) -> ok")
               "wxGrid:setColMinimalAcceptableWidth/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#setColMinimalAcceptableWidth-2" "setColMinimalAcceptableWidth(This, Width) -> ok")
               "wxGrid:setColMinimalWidth/3"
               ("http://www.erlang.org/doc/man/wxGrid.html#setColMinimalWidth-3" "setColMinimalWidth(This, Col, Width) -> ok")
               "wxGrid:setColLabelValue/3"
               ("http://www.erlang.org/doc/man/wxGrid.html#setColLabelValue-3" "setColLabelValue(This, Col, Val) -> ok")
               "wxGrid:setColLabelSize/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#setColLabelSize-2" "setColLabelSize(This, Height) -> ok")
               "wxGrid:setColLabelAlignment/3"
               ("http://www.erlang.org/doc/man/wxGrid.html#setColLabelAlignment-3" "setColLabelAlignment(This, Horiz, Vert) -> ok")
               "wxGrid:setColFormatCustom/3"
               ("http://www.erlang.org/doc/man/wxGrid.html#setColFormatCustom-3" "setColFormatCustom(This, Col, TypeName) -> ok")
               "wxGrid:setColFormatFloat/3"
               ("http://www.erlang.org/doc/man/wxGrid.html#setColFormatFloat-3" "setColFormatFloat(This, Col, Options::[Option]) -> ok")
               "wxGrid:setColFormatFloat/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#setColFormatFloat-2" "setColFormatFloat(This, Col) -> ok")
               "wxGrid:setColFormatNumber/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#setColFormatNumber-2" "setColFormatNumber(This, Col) -> ok")
               "wxGrid:setColFormatBool/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#setColFormatBool-2" "setColFormatBool(This, Col) -> ok")
               "wxGrid:setColAttr/3"
               ("http://www.erlang.org/doc/man/wxGrid.html#setColAttr-3" "setColAttr(This, Col, Attr) -> ok")
               "wxGrid:setCellValue/4"
               ("http://www.erlang.org/doc/man/wxGrid.html#setCellValue-4" "setCellValue(This, Row, Col, S) -> ok")
               "wxGrid:setCellValue/3"
               ("http://www.erlang.org/doc/man/wxGrid.html#setCellValue-3" "setCellValue(This, Coords, S) -> ok")
               "wxGrid:setCellTextColour/4"
               ("http://www.erlang.org/doc/man/wxGrid.html#setCellTextColour-4" "setCellTextColour(This, Row, Col, Val) -> ok")
               "wxGrid:setCellTextColour/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#setCellTextColour-2" "setCellTextColour(This, Col) -> ok")
               "wxGrid:setCellRenderer/4"
               ("http://www.erlang.org/doc/man/wxGrid.html#setCellRenderer-4" "setCellRenderer(This, Row, Col, Renderer) -> ok")
               "wxGrid:setCellFont/4"
               ("http://www.erlang.org/doc/man/wxGrid.html#setCellFont-4" "setCellFont(This, Row, Col, Val) -> ok")
               "wxGrid:setCellEditor/4"
               ("http://www.erlang.org/doc/man/wxGrid.html#setCellEditor-4" "setCellEditor(This, Row, Col, Editor) -> ok")
               "wxGrid:setCellBackgroundColour/4"
               ("http://www.erlang.org/doc/man/wxGrid.html#setCellBackgroundColour-4" "setCellBackgroundColour(This, Row, Col, Val) -> ok")
               "wxGrid:setCellBackgroundColour/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#setCellBackgroundColour-2" "setCellBackgroundColour(This, Col) -> ok")
               "wxGrid:setCellAlignment/5"
               ("http://www.erlang.org/doc/man/wxGrid.html#setCellAlignment-5" "setCellAlignment(This, Row, Col, Horiz, Vert) -> ok")
               "wxGrid:setCellAlignment/4"
               ("http://www.erlang.org/doc/man/wxGrid.html#setCellAlignment-4" "setCellAlignment(This, Align, Row, Col) -> ok")
               "wxGrid:setCellAlignment/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#setCellAlignment-2" "setCellAlignment(This, Align) -> ok")
               "wxGrid:selectRow/3"
               ("http://www.erlang.org/doc/man/wxGrid.html#selectRow-3" "selectRow(This, Row, Options::[Option]) -> ok")
               "wxGrid:selectRow/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#selectRow-2" "selectRow(This, Row) -> ok")
               "wxGrid:selectCol/3"
               ("http://www.erlang.org/doc/man/wxGrid.html#selectCol-3" "selectCol(This, Col, Options::[Option]) -> ok")
               "wxGrid:selectCol/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#selectCol-2" "selectCol(This, Col) -> ok")
               "wxGrid:selectBlock/6"
               ("http://www.erlang.org/doc/man/wxGrid.html#selectBlock-6" "selectBlock(This, TopRow, LeftCol, BottomRow, RightCol, Options::[Option]) -> ok")
               "wxGrid:selectBlock/5"
               ("http://www.erlang.org/doc/man/wxGrid.html#selectBlock-5" "selectBlock(This, TopRow, LeftCol, BottomRow, RightCol) -> ok")
               "wxGrid:selectBlock/4"
               ("http://www.erlang.org/doc/man/wxGrid.html#selectBlock-4" "selectBlock(This, TopLeft, BottomRight, Options::[Option]) -> ok")
               "wxGrid:selectBlock/3"
               ("http://www.erlang.org/doc/man/wxGrid.html#selectBlock-3" "selectBlock(This, TopLeft, BottomRight) -> ok")
               "wxGrid:selectAll/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#selectAll-1" "selectAll(This) -> ok")
               "wxGrid:saveEditControlValue/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#saveEditControlValue-1" "saveEditControlValue(This) -> ok")
               "wxGrid:registerDataType/4"
               ("http://www.erlang.org/doc/man/wxGrid.html#registerDataType-4" "registerDataType(This, TypeName, Renderer, Editor) -> ok")
               "wxGrid:movePageUp/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#movePageUp-1" "movePageUp(This) -> boolean()")
               "wxGrid:movePageDown/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#movePageDown-1" "movePageDown(This) -> boolean()")
               "wxGrid:moveCursorUpBlock/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#moveCursorUpBlock-2" "moveCursorUpBlock(This, ExpandSelection) -> boolean()")
               "wxGrid:moveCursorRightBlock/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#moveCursorRightBlock-2" "moveCursorRightBlock(This, ExpandSelection) -> boolean()")
               "wxGrid:moveCursorLeftBlock/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#moveCursorLeftBlock-2" "moveCursorLeftBlock(This, ExpandSelection) -> boolean()")
               "wxGrid:moveCursorDownBlock/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#moveCursorDownBlock-2" "moveCursorDownBlock(This, ExpandSelection) -> boolean()")
               "wxGrid:moveCursorUp/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#moveCursorUp-2" "moveCursorUp(This, ExpandSelection) -> boolean()")
               "wxGrid:moveCursorRight/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#moveCursorRight-2" "moveCursorRight(This, ExpandSelection) -> boolean()")
               "wxGrid:moveCursorLeft/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#moveCursorLeft-2" "moveCursorLeft(This, ExpandSelection) -> boolean()")
               "wxGrid:moveCursorDown/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#moveCursorDown-2" "moveCursorDown(This, ExpandSelection) -> boolean()")
               "wxGrid:makeCellVisible/3"
               ("http://www.erlang.org/doc/man/wxGrid.html#makeCellVisible-3" "makeCellVisible(This, Row, Col) -> ok")
               "wxGrid:makeCellVisible/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#makeCellVisible-2" "makeCellVisible(This, Coords) -> ok")
               "wxGrid:isVisible/4"
               ("http://www.erlang.org/doc/man/wxGrid.html#isVisible-4" "isVisible(This, Row, Col, Options::[Option]) -> boolean()")
               "wxGrid:isVisible/3"
               ("http://www.erlang.org/doc/man/wxGrid.html#isVisible-3" "isVisible(This, Row, Col) -> boolean()")
               "wxGrid:isVisible/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#isVisible-2" "isVisible(This, Coords) -> boolean()")
               "wxGrid:isSelection/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#isSelection-1" "isSelection(This) -> boolean()")
               "wxGrid:isReadOnly/3"
               ("http://www.erlang.org/doc/man/wxGrid.html#isReadOnly-3" "isReadOnly(This, Row, Col) -> boolean()")
               "wxGrid:isInSelection/3"
               ("http://www.erlang.org/doc/man/wxGrid.html#isInSelection-3" "isInSelection(This, Row, Col) -> boolean()")
               "wxGrid:isInSelection/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#isInSelection-2" "isInSelection(This, Coords) -> boolean()")
               "wxGrid:isEditable/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#isEditable-1" "isEditable(This) -> boolean()")
               "wxGrid:isCurrentCellReadOnly/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#isCurrentCellReadOnly-1" "isCurrentCellReadOnly(This) -> boolean()")
               "wxGrid:isCellEditControlEnabled/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#isCellEditControlEnabled-1" "isCellEditControlEnabled(This) -> boolean()")
               "wxGrid:insertRows/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#insertRows-2" "insertRows(This, Options::[Option]) -> boolean()")
               "wxGrid:insertRows/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#insertRows-1" "insertRows(This) -> boolean()")
               "wxGrid:insertCols/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#insertCols-2" "insertCols(This, Options::[Option]) -> boolean()")
               "wxGrid:insertCols/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#insertCols-1" "insertCols(This) -> boolean()")
               "wxGrid:hideCellEditControl/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#hideCellEditControl-1" "hideCellEditControl(This) -> ok")
               "wxGrid:getGridCornerLabelWindow/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#getGridCornerLabelWindow-1" "getGridCornerLabelWindow(This) -> wxWindow:wxWindow()")
               "wxGrid:getGridColLabelWindow/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#getGridColLabelWindow-1" "getGridColLabelWindow(This) -> wxWindow:wxWindow()")
               "wxGrid:getGridRowLabelWindow/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#getGridRowLabelWindow-1" "getGridRowLabelWindow(This) -> wxWindow:wxWindow()")
               "wxGrid:getGridWindow/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#getGridWindow-1" "getGridWindow(This) -> wxWindow:wxWindow()")
               "wxGrid:getViewWidth/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#getViewWidth-1" "getViewWidth(This) -> integer()")
               "wxGrid:getSelectionForeground/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#getSelectionForeground-1" "getSelectionForeground(This) -> wx:wx_colour4()")
               "wxGrid:getSelectionBlockBottomRight/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#getSelectionBlockBottomRight-1" "getSelectionBlockBottomRight(This) -> [{R::integer(), C::integer()}]")
               "wxGrid:getSelectionBlockTopLeft/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#getSelectionBlockTopLeft-1" "getSelectionBlockTopLeft(This) -> [{R::integer(), C::integer()}]")
               "wxGrid:getSelectionBackground/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#getSelectionBackground-1" "getSelectionBackground(This) -> wx:wx_colour4()")
               "wxGrid:getSelectedRows/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#getSelectedRows-1" "getSelectedRows(This) -> [integer()]")
               "wxGrid:getSelectedCols/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#getSelectedCols-1" "getSelectedCols(This) -> [integer()]")
               "wxGrid:getSelectedCells/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#getSelectedCells-1" "getSelectedCells(This) -> [{R::integer(), C::integer()}]")
               "wxGrid:getScrollLineY/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#getScrollLineY-1" "getScrollLineY(This) -> integer()")
               "wxGrid:getScrollLineX/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#getScrollLineX-1" "getScrollLineX(This) -> integer()")
               "wxGrid:getRowSize/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#getRowSize-2" "getRowSize(This, Row) -> integer()")
               "wxGrid:getRowLabelValue/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#getRowLabelValue-2" "getRowLabelValue(This, Row) -> unicode:charlist()")
               "wxGrid:getRowLabelSize/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#getRowLabelSize-1" "getRowLabelSize(This) -> integer()")
               "wxGrid:getRowLabelAlignment/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#getRowLabelAlignment-1" "getRowLabelAlignment(This) -> {Horiz::integer(), Vert::integer()}")
               "wxGrid:getRowMinimalAcceptableHeight/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#getRowMinimalAcceptableHeight-1" "getRowMinimalAcceptableHeight(This) -> integer()")
               "wxGrid:getOrCreateCellAttr/3"
               ("http://www.erlang.org/doc/man/wxGrid.html#getOrCreateCellAttr-3" "getOrCreateCellAttr(This, Row, Col) -> wxGridCellAttr:wxGridCellAttr()")
               "wxGrid:getNumberRows/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#getNumberRows-1" "getNumberRows(This) -> integer()")
               "wxGrid:getNumberCols/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#getNumberCols-1" "getNumberCols(This) -> integer()")
               "wxGrid:getLabelTextColour/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#getLabelTextColour-1" "getLabelTextColour(This) -> wx:wx_colour4()")
               "wxGrid:getLabelFont/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#getLabelFont-1" "getLabelFont(This) -> wxFont:wxFont()")
               "wxGrid:getLabelBackgroundColour/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#getLabelBackgroundColour-1" "getLabelBackgroundColour(This) -> wx:wx_colour4()")
               "wxGrid:gridLinesEnabled/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#gridLinesEnabled-1" "gridLinesEnabled(This) -> boolean()")
               "wxGrid:getGridLineColour/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#getGridLineColour-1" "getGridLineColour(This) -> wx:wx_colour4()")
               "wxGrid:getGridCursorRow/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#getGridCursorRow-1" "getGridCursorRow(This) -> integer()")
               "wxGrid:getGridCursorCol/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#getGridCursorCol-1" "getGridCursorCol(This) -> integer()")
               "wxGrid:getDefaultRowSize/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#getDefaultRowSize-1" "getDefaultRowSize(This) -> integer()")
               "wxGrid:getDefaultRowLabelSize/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#getDefaultRowLabelSize-1" "getDefaultRowLabelSize(This) -> integer()")
               "wxGrid:getDefaultRendererForType/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#getDefaultRendererForType-2" "getDefaultRendererForType(This, TypeName) -> wxGridCellRenderer:wxGridCellRenderer()")
               "wxGrid:getDefaultRendererForCell/3"
               ("http://www.erlang.org/doc/man/wxGrid.html#getDefaultRendererForCell-3" "getDefaultRendererForCell(This, Row, Col) -> wxGridCellRenderer:wxGridCellRenderer()")
               "wxGrid:getDefaultRenderer/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#getDefaultRenderer-1" "getDefaultRenderer(This) -> wxGridCellRenderer:wxGridCellRenderer()")
               "wxGrid:getDefaultEditorForType/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#getDefaultEditorForType-2" "getDefaultEditorForType(This, TypeName) -> wxGridCellEditor:wxGridCellEditor()")
               "wxGrid:getDefaultEditorForCell/3"
               ("http://www.erlang.org/doc/man/wxGrid.html#getDefaultEditorForCell-3" "getDefaultEditorForCell(This, Row, Col) -> wxGridCellEditor:wxGridCellEditor()")
               "wxGrid:getDefaultEditorForCell/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#getDefaultEditorForCell-2" "getDefaultEditorForCell(This, C) -> wxGridCellEditor:wxGridCellEditor()")
               "wxGrid:getDefaultEditor/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#getDefaultEditor-1" "getDefaultEditor(This) -> wxGridCellEditor:wxGridCellEditor()")
               "wxGrid:getDefaultColSize/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#getDefaultColSize-1" "getDefaultColSize(This) -> integer()")
               "wxGrid:getDefaultColLabelSize/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#getDefaultColLabelSize-1" "getDefaultColLabelSize(This) -> integer()")
               "wxGrid:getDefaultCellTextColour/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#getDefaultCellTextColour-1" "getDefaultCellTextColour(This) -> wx:wx_colour4()")
               "wxGrid:getDefaultCellFont/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#getDefaultCellFont-1" "getDefaultCellFont(This) -> wxFont:wxFont()")
               "wxGrid:getDefaultCellBackgroundColour/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#getDefaultCellBackgroundColour-1" "getDefaultCellBackgroundColour(This) -> wx:wx_colour4()")
               "wxGrid:getDefaultCellAlignment/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#getDefaultCellAlignment-1" "getDefaultCellAlignment(This) -> {Horiz::integer(), Vert::integer()}")
               "wxGrid:getColMinimalAcceptableWidth/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#getColMinimalAcceptableWidth-1" "getColMinimalAcceptableWidth(This) -> integer()")
               "wxGrid:getColLabelValue/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#getColLabelValue-2" "getColLabelValue(This, Col) -> unicode:charlist()")
               "wxGrid:getColLabelSize/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#getColLabelSize-1" "getColLabelSize(This) -> integer()")
               "wxGrid:getColLabelAlignment/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#getColLabelAlignment-1" "getColLabelAlignment(This) -> {Horiz::integer(), Vert::integer()}")
               "wxGrid:getCellValue/3"
               ("http://www.erlang.org/doc/man/wxGrid.html#getCellValue-3" "getCellValue(This, Row, Col) -> unicode:charlist()")
               "wxGrid:getCellValue/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#getCellValue-2" "getCellValue(This, Coords) -> unicode:charlist()")
               "wxGrid:getCellTextColour/3"
               ("http://www.erlang.org/doc/man/wxGrid.html#getCellTextColour-3" "getCellTextColour(This, Row, Col) -> wx:wx_colour4()")
               "wxGrid:getCellRenderer/3"
               ("http://www.erlang.org/doc/man/wxGrid.html#getCellRenderer-3" "getCellRenderer(This, Row, Col) -> wxGridCellRenderer:wxGridCellRenderer()")
               "wxGrid:getCellFont/3"
               ("http://www.erlang.org/doc/man/wxGrid.html#getCellFont-3" "getCellFont(This, Row, Col) -> wxFont:wxFont()")
               "wxGrid:getCellEditor/3"
               ("http://www.erlang.org/doc/man/wxGrid.html#getCellEditor-3" "getCellEditor(This, Row, Col) -> wxGridCellEditor:wxGridCellEditor()")
               "wxGrid:getCellBackgroundColour/3"
               ("http://www.erlang.org/doc/man/wxGrid.html#getCellBackgroundColour-3" "getCellBackgroundColour(This, Row, Col) -> wx:wx_colour4()")
               "wxGrid:getCellAlignment/3"
               ("http://www.erlang.org/doc/man/wxGrid.html#getCellAlignment-3" "getCellAlignment(This, Row, Col) -> {Horiz::integer(), Vert::integer()}")
               "wxGrid:getBatchCount/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#getBatchCount-1" "getBatchCount(This) -> integer()")
               "wxGrid:forceRefresh/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#forceRefresh-1" "forceRefresh(This) -> ok")
               "wxGrid:fit/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#fit-1" "fit(This) -> ok")
               "wxGrid:endBatch/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#endBatch-1" "endBatch(This) -> ok")
               "wxGrid:enableGridLines/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#enableGridLines-2" "enableGridLines(This, Options::[Option]) -> ok")
               "wxGrid:enableGridLines/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#enableGridLines-1" "enableGridLines(This) -> ok")
               "wxGrid:enableEditing/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#enableEditing-2" "enableEditing(This, Edit) -> ok")
               "wxGrid:enableDragRowSize/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#enableDragRowSize-2" "enableDragRowSize(This, Options::[Option]) -> ok")
               "wxGrid:enableDragRowSize/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#enableDragRowSize-1" "enableDragRowSize(This) -> ok")
               "wxGrid:enableDragGridSize/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#enableDragGridSize-2" "enableDragGridSize(This, Options::[Option]) -> ok")
               "wxGrid:enableDragGridSize/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#enableDragGridSize-1" "enableDragGridSize(This) -> ok")
               "wxGrid:enableDragColSize/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#enableDragColSize-2" "enableDragColSize(This, Options::[Option]) -> ok")
               "wxGrid:enableDragColSize/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#enableDragColSize-1" "enableDragColSize(This) -> ok")
               "wxGrid:enableCellEditControl/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#enableCellEditControl-2" "enableCellEditControl(This, Options::[Option]) -> ok")
               "wxGrid:enableCellEditControl/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#enableCellEditControl-1" "enableCellEditControl(This) -> ok")
               "wxGrid:disableDragRowSize/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#disableDragRowSize-1" "disableDragRowSize(This) -> ok")
               "wxGrid:disableDragGridSize/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#disableDragGridSize-1" "disableDragGridSize(This) -> ok")
               "wxGrid:disableDragColSize/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#disableDragColSize-1" "disableDragColSize(This) -> ok")
               "wxGrid:disableCellEditControl/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#disableCellEditControl-1" "disableCellEditControl(This) -> ok")
               "wxGrid:deleteRows/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#deleteRows-2" "deleteRows(This, Options::[Option]) -> boolean()")
               "wxGrid:deleteRows/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#deleteRows-1" "deleteRows(This) -> boolean()")
               "wxGrid:deleteCols/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#deleteCols-2" "deleteCols(This, Options::[Option]) -> boolean()")
               "wxGrid:deleteCols/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#deleteCols-1" "deleteCols(This) -> boolean()")
               "wxGrid:createGrid/4"
               ("http://www.erlang.org/doc/man/wxGrid.html#createGrid-4" "createGrid(This, NumRows, NumCols, Options::[Option]) -> boolean()")
               "wxGrid:createGrid/3"
               ("http://www.erlang.org/doc/man/wxGrid.html#createGrid-3" "createGrid(This, NumRows, NumCols) -> boolean()")
               "wxGrid:clearSelection/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#clearSelection-1" "clearSelection(This) -> ok")
               "wxGrid:clearGrid/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#clearGrid-1" "clearGrid(This) -> ok")
               "wxGrid:cellToRect/3"
               ("http://www.erlang.org/doc/man/wxGrid.html#cellToRect-3" "cellToRect(This, Row, Col) -> {X::integer(), Y::integer(), W::integer(), H::integer()}")
               "wxGrid:cellToRect/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#cellToRect-2" "cellToRect(This, Coords) -> {X::integer(), Y::integer(), W::integer(), H::integer()}")
               "wxGrid:canEnableCellControl/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#canEnableCellControl-1" "canEnableCellControl(This) -> boolean()")
               "wxGrid:canDragGridSize/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#canDragGridSize-1" "canDragGridSize(This) -> boolean()")
               "wxGrid:canDragRowSize/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#canDragRowSize-1" "canDragRowSize(This) -> boolean()")
               "wxGrid:canDragColSize/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#canDragColSize-1" "canDragColSize(This) -> boolean()")
               "wxGrid:blockToDeviceRect/3"
               ("http://www.erlang.org/doc/man/wxGrid.html#blockToDeviceRect-3" "blockToDeviceRect(This, TopLeft, BottomRight) -> {X::integer(), Y::integer(), W::integer(), H::integer()}")
               "wxGrid:beginBatch/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#beginBatch-1" "beginBatch(This) -> ok")
               "wxGrid:autoSizeRows/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#autoSizeRows-2" "autoSizeRows(This, Options::[Option]) -> ok")
               "wxGrid:autoSizeRows/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#autoSizeRows-1" "autoSizeRows(This) -> ok")
               "wxGrid:autoSizeRow/3"
               ("http://www.erlang.org/doc/man/wxGrid.html#autoSizeRow-3" "autoSizeRow(This, Row, Options::[Option]) -> ok")
               "wxGrid:autoSizeRow/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#autoSizeRow-2" "autoSizeRow(This, Row) -> ok")
               "wxGrid:autoSizeColumns/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#autoSizeColumns-2" "autoSizeColumns(This, Options::[Option]) -> ok")
               "wxGrid:autoSizeColumns/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#autoSizeColumns-1" "autoSizeColumns(This) -> ok")
               "wxGrid:autoSizeColumn/3"
               ("http://www.erlang.org/doc/man/wxGrid.html#autoSizeColumn-3" "autoSizeColumn(This, Col, Options::[Option]) -> ok")
               "wxGrid:autoSizeColumn/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#autoSizeColumn-2" "autoSizeColumn(This, Col) -> ok")
               "wxGrid:autoSize/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#autoSize-1" "autoSize(This) -> ok")
               "wxGrid:appendRows/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#appendRows-2" "appendRows(This, Options::[Option]) -> boolean()")
               "wxGrid:appendRows/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#appendRows-1" "appendRows(This) -> boolean()")
               "wxGrid:appendCols/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#appendCols-2" "appendCols(This, Options::[Option]) -> boolean()")
               "wxGrid:appendCols/1"
               ("http://www.erlang.org/doc/man/wxGrid.html#appendCols-1" "appendCols(This) -> boolean()")
               "wxGrid:new/4"
               ("http://www.erlang.org/doc/man/wxGrid.html#new-4" "new(Parent, X, Y, Options::[Option]) -> wxGrid()")
               "wxGrid:new/3"
               ("http://www.erlang.org/doc/man/wxGrid.html#new-3" "new(Parent, X, Y) -> wxGrid()")
               "wxGrid:new/2"
               ("http://www.erlang.org/doc/man/wxGrid.html#new-2" "new(Parent, Id) -> wxGrid()")
               "wxGrid:new/0"
               ("http://www.erlang.org/doc/man/wxGrid.html#new-0" "new() -> wxGrid()")
               "wxGrid:"
               ("http://www.erlang.org/doc/man/wxGrid.html#type-wxGrid" "wxGrid()")
               "wxGridBagSizer:destroy/1"
               ("http://www.erlang.org/doc/man/wxGridBagSizer.html#destroy-1" "destroy(This:: wxGridBagSizer() ) -> ok")
               "wxGridBagSizer:setItemSpan/3"
               ("http://www.erlang.org/doc/man/wxGridBagSizer.html#setItemSpan-3" "setItemSpan(This, Index, Span) -> boolean()")
               "wxGridBagSizer:setItemPosition/3"
               ("http://www.erlang.org/doc/man/wxGridBagSizer.html#setItemPosition-3" "setItemPosition(This, Index, Pos) -> boolean()")
               "wxGridBagSizer:setEmptyCellSize/2"
               ("http://www.erlang.org/doc/man/wxGridBagSizer.html#setEmptyCellSize-2" "setEmptyCellSize(This, Sz) -> ok")
               "wxGridBagSizer:getItemSpan/2"
               ("http://www.erlang.org/doc/man/wxGridBagSizer.html#getItemSpan-2" "getItemSpan(This, Index) -> {RS::integer(), CS::integer()}")
               "wxGridBagSizer:getItemPosition/2"
               ("http://www.erlang.org/doc/man/wxGridBagSizer.html#getItemPosition-2" "getItemPosition(This, Index) -> {R::integer(), C::integer()}")
               "wxGridBagSizer:getEmptyCellSize/1"
               ("http://www.erlang.org/doc/man/wxGridBagSizer.html#getEmptyCellSize-1" "getEmptyCellSize(This) -> {W::integer(), H::integer()}")
               "wxGridBagSizer:getCellSize/3"
               ("http://www.erlang.org/doc/man/wxGridBagSizer.html#getCellSize-3" "getCellSize(This, Row, Col) -> {W::integer(), H::integer()}")
               "wxGridBagSizer:findItemWithData/2"
               ("http://www.erlang.org/doc/man/wxGridBagSizer.html#findItemWithData-2" "findItemWithData(This, UserData) -> wxGBSizerItem:wxGBSizerItem()")
               "wxGridBagSizer:findItemAtPosition/2"
               ("http://www.erlang.org/doc/man/wxGridBagSizer.html#findItemAtPosition-2" "findItemAtPosition(This, Pos) -> wxGBSizerItem:wxGBSizerItem()")
               "wxGridBagSizer:findItemAtPoint/2"
               ("http://www.erlang.org/doc/man/wxGridBagSizer.html#findItemAtPoint-2" "findItemAtPoint(This, Pt) -> wxGBSizerItem:wxGBSizerItem()")
               "wxGridBagSizer:findItem/2"
               ("http://www.erlang.org/doc/man/wxGridBagSizer.html#findItem-2" "findItem(This, Window) -> wxGBSizerItem:wxGBSizerItem()")
               "wxGridBagSizer:checkForIntersection/4"
               ("http://www.erlang.org/doc/man/wxGridBagSizer.html#checkForIntersection-4" "checkForIntersection(This, Pos, Span, Options::[Option]) -> boolean()")
               "wxGridBagSizer:checkForIntersection/3"
               ("http://www.erlang.org/doc/man/wxGridBagSizer.html#checkForIntersection-3" "checkForIntersection(This, Pos, Span) -> boolean()")
               "wxGridBagSizer:checkForIntersection/2"
               ("http://www.erlang.org/doc/man/wxGridBagSizer.html#checkForIntersection-2" "checkForIntersection(This, Item) -> boolean()")
               "wxGridBagSizer:calcMin/1"
               ("http://www.erlang.org/doc/man/wxGridBagSizer.html#calcMin-1" "calcMin(This) -> {W::integer(), H::integer()}")
               "wxGridBagSizer:add/5"
               ("http://www.erlang.org/doc/man/wxGridBagSizer.html#add-5" "add(This, Width, Height, Pos, Options::[Option]) -> wxSizerItem:wxSizerItem()")
               "wxGridBagSizer:add/4"
               ("http://www.erlang.org/doc/man/wxGridBagSizer.html#add-4" "add(This, Width, Height, Pos) -> wxSizerItem:wxSizerItem()")
               "wxGridBagSizer:add/3"
               ("http://www.erlang.org/doc/man/wxGridBagSizer.html#add-3" "add(This, Width, Height) -> wxSizerItem:wxSizerItem()")
               "wxGridBagSizer:add/2"
               ("http://www.erlang.org/doc/man/wxGridBagSizer.html#add-2" "add(This, Item) -> wxSizerItem:wxSizerItem()")
               "wxGridBagSizer:new/1"
               ("http://www.erlang.org/doc/man/wxGridBagSizer.html#new-1" "new(Options::[Option]) -> wxGridBagSizer()")
               "wxGridBagSizer:new/0"
               ("http://www.erlang.org/doc/man/wxGridBagSizer.html#new-0" "new() -> wxGridBagSizer()")
               "wxGridBagSizer:"
               ("http://www.erlang.org/doc/man/wxGridBagSizer.html#type-wxGridBagSizer" "wxGridBagSizer()")
               "wxGridCellAttr:setDefAttr/2"
               ("http://www.erlang.org/doc/man/wxGridCellAttr.html#setDefAttr-2" "setDefAttr(This, DefAttr) -> ok")
               "wxGridCellAttr:isReadOnly/1"
               ("http://www.erlang.org/doc/man/wxGridCellAttr.html#isReadOnly-1" "isReadOnly(This) -> boolean()")
               "wxGridCellAttr:getEditor/4"
               ("http://www.erlang.org/doc/man/wxGridCellAttr.html#getEditor-4" "getEditor(This, Grid, Row, Col) -> wxGridCellEditor:wxGridCellEditor()")
               "wxGridCellAttr:getRenderer/4"
               ("http://www.erlang.org/doc/man/wxGridCellAttr.html#getRenderer-4" "getRenderer(This, Grid, Row, Col) -> wxGridCellRenderer:wxGridCellRenderer()")
               "wxGridCellAttr:getAlignment/1"
               ("http://www.erlang.org/doc/man/wxGridCellAttr.html#getAlignment-1" "getAlignment(This) -> {HAlign::integer(), VAlign::integer()}")
               "wxGridCellAttr:getFont/1"
               ("http://www.erlang.org/doc/man/wxGridCellAttr.html#getFont-1" "getFont(This) -> wxFont:wxFont()")
               "wxGridCellAttr:getBackgroundColour/1"
               ("http://www.erlang.org/doc/man/wxGridCellAttr.html#getBackgroundColour-1" "getBackgroundColour(This) -> wx:wx_colour4()")
               "wxGridCellAttr:getTextColour/1"
               ("http://www.erlang.org/doc/man/wxGridCellAttr.html#getTextColour-1" "getTextColour(This) -> wx:wx_colour4()")
               "wxGridCellAttr:hasEditor/1"
               ("http://www.erlang.org/doc/man/wxGridCellAttr.html#hasEditor-1" "hasEditor(This) -> boolean()")
               "wxGridCellAttr:hasRenderer/1"
               ("http://www.erlang.org/doc/man/wxGridCellAttr.html#hasRenderer-1" "hasRenderer(This) -> boolean()")
               "wxGridCellAttr:hasAlignment/1"
               ("http://www.erlang.org/doc/man/wxGridCellAttr.html#hasAlignment-1" "hasAlignment(This) -> boolean()")
               "wxGridCellAttr:hasFont/1"
               ("http://www.erlang.org/doc/man/wxGridCellAttr.html#hasFont-1" "hasFont(This) -> boolean()")
               "wxGridCellAttr:hasBackgroundColour/1"
               ("http://www.erlang.org/doc/man/wxGridCellAttr.html#hasBackgroundColour-1" "hasBackgroundColour(This) -> boolean()")
               "wxGridCellAttr:hasTextColour/1"
               ("http://www.erlang.org/doc/man/wxGridCellAttr.html#hasTextColour-1" "hasTextColour(This) -> boolean()")
               "wxGridCellAttr:setEditor/2"
               ("http://www.erlang.org/doc/man/wxGridCellAttr.html#setEditor-2" "setEditor(This, Editor) -> ok")
               "wxGridCellAttr:setRenderer/2"
               ("http://www.erlang.org/doc/man/wxGridCellAttr.html#setRenderer-2" "setRenderer(This, Renderer) -> ok")
               "wxGridCellAttr:setReadOnly/2"
               ("http://www.erlang.org/doc/man/wxGridCellAttr.html#setReadOnly-2" "setReadOnly(This, Options::[Option]) -> ok")
               "wxGridCellAttr:setReadOnly/1"
               ("http://www.erlang.org/doc/man/wxGridCellAttr.html#setReadOnly-1" "setReadOnly(This) -> ok")
               "wxGridCellAttr:setAlignment/3"
               ("http://www.erlang.org/doc/man/wxGridCellAttr.html#setAlignment-3" "setAlignment(This, HAlign, VAlign) -> ok")
               "wxGridCellAttr:setFont/2"
               ("http://www.erlang.org/doc/man/wxGridCellAttr.html#setFont-2" "setFont(This, Font) -> ok")
               "wxGridCellAttr:setBackgroundColour/2"
               ("http://www.erlang.org/doc/man/wxGridCellAttr.html#setBackgroundColour-2" "setBackgroundColour(This, ColBack) -> ok")
               "wxGridCellAttr:setTextColour/2"
               ("http://www.erlang.org/doc/man/wxGridCellAttr.html#setTextColour-2" "setTextColour(This, ColText) -> ok")
               "wxGridCellAttr:"
               ("http://www.erlang.org/doc/man/wxGridCellAttr.html#type-wxGridCellAttr" "wxGridCellAttr()")
               "wxGridCellBoolEditor:destroy/1"
               ("http://www.erlang.org/doc/man/wxGridCellBoolEditor.html#destroy-1" "destroy(This:: wxGridCellBoolEditor() ) -> ok")
               "wxGridCellBoolEditor:useStringValues/1"
               ("http://www.erlang.org/doc/man/wxGridCellBoolEditor.html#useStringValues-1" "useStringValues(Options::[Option]) -> ok")
               "wxGridCellBoolEditor:useStringValues/0"
               ("http://www.erlang.org/doc/man/wxGridCellBoolEditor.html#useStringValues-0" "useStringValues() -> ok")
               "wxGridCellBoolEditor:isTrueValue/1"
               ("http://www.erlang.org/doc/man/wxGridCellBoolEditor.html#isTrueValue-1" "isTrueValue(Value) -> boolean()")
               "wxGridCellBoolEditor:new/0"
               ("http://www.erlang.org/doc/man/wxGridCellBoolEditor.html#new-0" "new() -> wxGridCellBoolEditor()")
               "wxGridCellBoolEditor:"
               ("http://www.erlang.org/doc/man/wxGridCellBoolEditor.html#type-wxGridCellBoolEditor" "wxGridCellBoolEditor()")
               "wxGridCellBoolRenderer:destroy/1"
               ("http://www.erlang.org/doc/man/wxGridCellBoolRenderer.html#destroy-1" "destroy(This:: wxGridCellBoolRenderer() ) -> ok")
               "wxGridCellBoolRenderer:new/0"
               ("http://www.erlang.org/doc/man/wxGridCellBoolRenderer.html#new-0" "new() -> wxGridCellBoolRenderer()")
               "wxGridCellBoolRenderer:"
               ("http://www.erlang.org/doc/man/wxGridCellBoolRenderer.html#type-wxGridCellBoolRenderer" "wxGridCellBoolRenderer()")
               "wxGridCellChoiceEditor:destroy/1"
               ("http://www.erlang.org/doc/man/wxGridCellChoiceEditor.html#destroy-1" "destroy(This:: wxGridCellChoiceEditor() ) -> ok")
               "wxGridCellChoiceEditor:setParameters/2"
               ("http://www.erlang.org/doc/man/wxGridCellChoiceEditor.html#setParameters-2" "setParameters(This, Params) -> ok")
               "wxGridCellChoiceEditor:new/2"
               ("http://www.erlang.org/doc/man/wxGridCellChoiceEditor.html#new-2" "new(Choices, Options::[Option]) -> wxGridCellChoiceEditor()")
               "wxGridCellChoiceEditor:new/1"
               ("http://www.erlang.org/doc/man/wxGridCellChoiceEditor.html#new-1" "new(Choices) -> wxGridCellChoiceEditor()")
               "wxGridCellChoiceEditor:"
               ("http://www.erlang.org/doc/man/wxGridCellChoiceEditor.html#type-wxGridCellChoiceEditor" "wxGridCellChoiceEditor()")
               "wxGridCellEditor:handleReturn/2"
               ("http://www.erlang.org/doc/man/wxGridCellEditor.html#handleReturn-2" "handleReturn(This, Event) -> ok")
               "wxGridCellEditor:startingClick/1"
               ("http://www.erlang.org/doc/man/wxGridCellEditor.html#startingClick-1" "startingClick(This) -> ok")
               "wxGridCellEditor:startingKey/2"
               ("http://www.erlang.org/doc/man/wxGridCellEditor.html#startingKey-2" "startingKey(This, Event) -> ok")
               "wxGridCellEditor:reset/1"
               ("http://www.erlang.org/doc/man/wxGridCellEditor.html#reset-1" "reset(This) -> ok")
               "wxGridCellEditor:endEdit/4"
               ("http://www.erlang.org/doc/man/wxGridCellEditor.html#endEdit-4" "endEdit(This, Row, Col, Grid) -> boolean()")
               "wxGridCellEditor:beginEdit/4"
               ("http://www.erlang.org/doc/man/wxGridCellEditor.html#beginEdit-4" "beginEdit(This, Row, Col, Grid) -> ok")
               "wxGridCellEditor:paintBackground/3"
               ("http://www.erlang.org/doc/man/wxGridCellEditor.html#paintBackground-3" "paintBackground(This, RectCell, Attr) -> ok")
               "wxGridCellEditor:show/3"
               ("http://www.erlang.org/doc/man/wxGridCellEditor.html#show-3" "show(This, Show, Options::[Option]) -> ok")
               "wxGridCellEditor:show/2"
               ("http://www.erlang.org/doc/man/wxGridCellEditor.html#show-2" "show(This, Show) -> ok")
               "wxGridCellEditor:setSize/2"
               ("http://www.erlang.org/doc/man/wxGridCellEditor.html#setSize-2" "setSize(This, Rect) -> ok")
               "wxGridCellEditor:isCreated/1"
               ("http://www.erlang.org/doc/man/wxGridCellEditor.html#isCreated-1" "isCreated(This) -> boolean()")
               "wxGridCellEditor:create/4"
               ("http://www.erlang.org/doc/man/wxGridCellEditor.html#create-4" "create(This, Parent, Id, EvtHandler) -> ok")
               "wxGridCellEditor:"
               ("http://www.erlang.org/doc/man/wxGridCellEditor.html#type-wxGridCellEditor" "wxGridCellEditor()")
               "wxGridCellFloatEditor:destroy/1"
               ("http://www.erlang.org/doc/man/wxGridCellFloatEditor.html#destroy-1" "destroy(This:: wxGridCellFloatEditor() ) -> ok")
               "wxGridCellFloatEditor:setParameters/2"
               ("http://www.erlang.org/doc/man/wxGridCellFloatEditor.html#setParameters-2" "setParameters(This, Params) -> ok")
               "wxGridCellFloatEditor:new/1"
               ("http://www.erlang.org/doc/man/wxGridCellFloatEditor.html#new-1" "new(Options::[Option]) -> wxGridCellFloatEditor()")
               "wxGridCellFloatEditor:new/0"
               ("http://www.erlang.org/doc/man/wxGridCellFloatEditor.html#new-0" "new() -> wxGridCellFloatEditor()")
               "wxGridCellFloatEditor:"
               ("http://www.erlang.org/doc/man/wxGridCellFloatEditor.html#type-wxGridCellFloatEditor" "wxGridCellFloatEditor()")
               "wxGridCellFloatRenderer:destroy/1"
               ("http://www.erlang.org/doc/man/wxGridCellFloatRenderer.html#destroy-1" "destroy(This:: wxGridCellFloatRenderer() ) -> ok")
               "wxGridCellFloatRenderer:setWidth/2"
               ("http://www.erlang.org/doc/man/wxGridCellFloatRenderer.html#setWidth-2" "setWidth(This, Width) -> ok")
               "wxGridCellFloatRenderer:setPrecision/2"
               ("http://www.erlang.org/doc/man/wxGridCellFloatRenderer.html#setPrecision-2" "setPrecision(This, Precision) -> ok")
               "wxGridCellFloatRenderer:setParameters/2"
               ("http://www.erlang.org/doc/man/wxGridCellFloatRenderer.html#setParameters-2" "setParameters(This, Params) -> ok")
               "wxGridCellFloatRenderer:getWidth/1"
               ("http://www.erlang.org/doc/man/wxGridCellFloatRenderer.html#getWidth-1" "getWidth(This) -> integer()")
               "wxGridCellFloatRenderer:getPrecision/1"
               ("http://www.erlang.org/doc/man/wxGridCellFloatRenderer.html#getPrecision-1" "getPrecision(This) -> integer()")
               "wxGridCellFloatRenderer:new/1"
               ("http://www.erlang.org/doc/man/wxGridCellFloatRenderer.html#new-1" "new(Options::[Option]) -> wxGridCellFloatRenderer()")
               "wxGridCellFloatRenderer:new/0"
               ("http://www.erlang.org/doc/man/wxGridCellFloatRenderer.html#new-0" "new() -> wxGridCellFloatRenderer()")
               "wxGridCellFloatRenderer:"
               ("http://www.erlang.org/doc/man/wxGridCellFloatRenderer.html#type-wxGridCellFloatRenderer" "wxGridCellFloatRenderer()")
               "wxGridCellNumberEditor:destroy/1"
               ("http://www.erlang.org/doc/man/wxGridCellNumberEditor.html#destroy-1" "destroy(This:: wxGridCellNumberEditor() ) -> ok")
               "wxGridCellNumberEditor:setParameters/2"
               ("http://www.erlang.org/doc/man/wxGridCellNumberEditor.html#setParameters-2" "setParameters(This, Params) -> ok")
               "wxGridCellNumberEditor:getValue/1"
               ("http://www.erlang.org/doc/man/wxGridCellNumberEditor.html#getValue-1" "getValue(This) -> unicode:charlist()")
               "wxGridCellNumberEditor:new/1"
               ("http://www.erlang.org/doc/man/wxGridCellNumberEditor.html#new-1" "new(Options::[Option]) -> wxGridCellNumberEditor()")
               "wxGridCellNumberEditor:new/0"
               ("http://www.erlang.org/doc/man/wxGridCellNumberEditor.html#new-0" "new() -> wxGridCellNumberEditor()")
               "wxGridCellNumberEditor:"
               ("http://www.erlang.org/doc/man/wxGridCellNumberEditor.html#type-wxGridCellNumberEditor" "wxGridCellNumberEditor()")
               "wxGridCellNumberRenderer:destroy/1"
               ("http://www.erlang.org/doc/man/wxGridCellNumberRenderer.html#destroy-1" "destroy(This:: wxGridCellNumberRenderer() ) -> ok")
               "wxGridCellNumberRenderer:new/0"
               ("http://www.erlang.org/doc/man/wxGridCellNumberRenderer.html#new-0" "new() -> wxGridCellNumberRenderer()")
               "wxGridCellNumberRenderer:"
               ("http://www.erlang.org/doc/man/wxGridCellNumberRenderer.html#type-wxGridCellNumberRenderer" "wxGridCellNumberRenderer()")
               "wxGridCellRenderer:getBestSize/6"
               ("http://www.erlang.org/doc/man/wxGridCellRenderer.html#getBestSize-6" "getBestSize(This, Grid, Attr, Dc, Row, Col) -> {W::integer(), H::integer()}")
               "wxGridCellRenderer:draw/8"
               ("http://www.erlang.org/doc/man/wxGridCellRenderer.html#draw-8" "draw(This, Grid, Attr, Dc, Rect, Row, Col, IsSelected) -> ok")
               "wxGridCellRenderer:"
               ("http://www.erlang.org/doc/man/wxGridCellRenderer.html#type-wxGridCellRenderer" "wxGridCellRenderer()")
               "wxGridCellStringRenderer:destroy/1"
               ("http://www.erlang.org/doc/man/wxGridCellStringRenderer.html#destroy-1" "destroy(This:: wxGridCellStringRenderer() ) -> ok")
               "wxGridCellStringRenderer:new/0"
               ("http://www.erlang.org/doc/man/wxGridCellStringRenderer.html#new-0" "new() -> wxGridCellStringRenderer()")
               "wxGridCellStringRenderer:"
               ("http://www.erlang.org/doc/man/wxGridCellStringRenderer.html#type-wxGridCellStringRenderer" "wxGridCellStringRenderer()")
               "wxGridCellTextEditor:destroy/1"
               ("http://www.erlang.org/doc/man/wxGridCellTextEditor.html#destroy-1" "destroy(This:: wxGridCellTextEditor() ) -> ok")
               "wxGridCellTextEditor:setParameters/2"
               ("http://www.erlang.org/doc/man/wxGridCellTextEditor.html#setParameters-2" "setParameters(This, Params) -> ok")
               "wxGridCellTextEditor:new/0"
               ("http://www.erlang.org/doc/man/wxGridCellTextEditor.html#new-0" "new() -> wxGridCellTextEditor()")
               "wxGridCellTextEditor:"
               ("http://www.erlang.org/doc/man/wxGridCellTextEditor.html#type-wxGridCellTextEditor" "wxGridCellTextEditor()")
               "wxGridEvent:shiftDown/1"
               ("http://www.erlang.org/doc/man/wxGridEvent.html#shiftDown-1" "shiftDown(This) -> boolean()")
               "wxGridEvent:selecting/1"
               ("http://www.erlang.org/doc/man/wxGridEvent.html#selecting-1" "selecting(This) -> boolean()")
               "wxGridEvent:metaDown/1"
               ("http://www.erlang.org/doc/man/wxGridEvent.html#metaDown-1" "metaDown(This) -> boolean()")
               "wxGridEvent:getRow/1"
               ("http://www.erlang.org/doc/man/wxGridEvent.html#getRow-1" "getRow(This) -> integer()")
               "wxGridEvent:getPosition/1"
               ("http://www.erlang.org/doc/man/wxGridEvent.html#getPosition-1" "getPosition(This) -> {X::integer(), Y::integer()}")
               "wxGridEvent:getCol/1"
               ("http://www.erlang.org/doc/man/wxGridEvent.html#getCol-1" "getCol(This) -> integer()")
               "wxGridEvent:controlDown/1"
               ("http://www.erlang.org/doc/man/wxGridEvent.html#controlDown-1" "controlDown(This) -> boolean()")
               "wxGridEvent:altDown/1"
               ("http://www.erlang.org/doc/man/wxGridEvent.html#altDown-1" "altDown(This) -> boolean()")
               "wxGridEvent:"
               ("http://www.erlang.org/doc/man/wxGridEvent.html#type-wxGridEvent" "wxGridEvent()")
               "wxGridSizer:destroy/1"
               ("http://www.erlang.org/doc/man/wxGridSizer.html#destroy-1" "destroy(This:: wxGridSizer() ) -> ok")
               "wxGridSizer:setVGap/2"
               ("http://www.erlang.org/doc/man/wxGridSizer.html#setVGap-2" "setVGap(This, Gap) -> ok")
               "wxGridSizer:setRows/2"
               ("http://www.erlang.org/doc/man/wxGridSizer.html#setRows-2" "setRows(This, Rows) -> ok")
               "wxGridSizer:setHGap/2"
               ("http://www.erlang.org/doc/man/wxGridSizer.html#setHGap-2" "setHGap(This, Gap) -> ok")
               "wxGridSizer:setCols/2"
               ("http://www.erlang.org/doc/man/wxGridSizer.html#setCols-2" "setCols(This, Cols) -> ok")
               "wxGridSizer:getVGap/1"
               ("http://www.erlang.org/doc/man/wxGridSizer.html#getVGap-1" "getVGap(This) -> integer()")
               "wxGridSizer:getRows/1"
               ("http://www.erlang.org/doc/man/wxGridSizer.html#getRows-1" "getRows(This) -> integer()")
               "wxGridSizer:getHGap/1"
               ("http://www.erlang.org/doc/man/wxGridSizer.html#getHGap-1" "getHGap(This) -> integer()")
               "wxGridSizer:getCols/1"
               ("http://www.erlang.org/doc/man/wxGridSizer.html#getCols-1" "getCols(This) -> integer()")
               "wxGridSizer:new/4"
               ("http://www.erlang.org/doc/man/wxGridSizer.html#new-4" "new(Rows, Cols, Vgap, Hgap) -> wxGridSizer()")
               "wxGridSizer:new/2"
               ("http://www.erlang.org/doc/man/wxGridSizer.html#new-2" "new(Cols, Options::[Option]) -> wxGridSizer()")
               "wxGridSizer:new/1"
               ("http://www.erlang.org/doc/man/wxGridSizer.html#new-1" "new(Cols) -> wxGridSizer()")
               "wxGridSizer:"
               ("http://www.erlang.org/doc/man/wxGridSizer.html#type-wxGridSizer" "wxGridSizer()")
               "wxHelpEvent:setPosition/2"
               ("http://www.erlang.org/doc/man/wxHelpEvent.html#setPosition-2" "setPosition(This, Pos) -> ok")
               "wxHelpEvent:setOrigin/2"
               ("http://www.erlang.org/doc/man/wxHelpEvent.html#setOrigin-2" "setOrigin(This, Origin) -> ok")
               "wxHelpEvent:getPosition/1"
               ("http://www.erlang.org/doc/man/wxHelpEvent.html#getPosition-1" "getPosition(This) -> {X::integer(), Y::integer()}")
               "wxHelpEvent:getOrigin/1"
               ("http://www.erlang.org/doc/man/wxHelpEvent.html#getOrigin-1" "getOrigin(This) -> wx:wx_enum()")
               "wxHelpEvent:"
               ("http://www.erlang.org/doc/man/wxHelpEvent.html#type-wxHelpEvent" "wxHelpEvent()")
               "wxHtmlEasyPrinting:destroy/1"
               ("http://www.erlang.org/doc/man/wxHtmlEasyPrinting.html#destroy-1" "destroy(This:: wxHtmlEasyPrinting() ) -> ok")
               "wxHtmlEasyPrinting:setFooter/3"
               ("http://www.erlang.org/doc/man/wxHtmlEasyPrinting.html#setFooter-3" "setFooter(This, Footer, Options::[Option]) -> ok")
               "wxHtmlEasyPrinting:setFooter/2"
               ("http://www.erlang.org/doc/man/wxHtmlEasyPrinting.html#setFooter-2" "setFooter(This, Footer) -> ok")
               "wxHtmlEasyPrinting:setHeader/3"
               ("http://www.erlang.org/doc/man/wxHtmlEasyPrinting.html#setHeader-3" "setHeader(This, Header, Options::[Option]) -> ok")
               "wxHtmlEasyPrinting:setHeader/2"
               ("http://www.erlang.org/doc/man/wxHtmlEasyPrinting.html#setHeader-2" "setHeader(This, Header) -> ok")
               "wxHtmlEasyPrinting:setFonts/4"
               ("http://www.erlang.org/doc/man/wxHtmlEasyPrinting.html#setFonts-4" "setFonts(This, Normal_face, Fixed_face, Options::[Option]) -> ok")
               "wxHtmlEasyPrinting:setFonts/3"
               ("http://www.erlang.org/doc/man/wxHtmlEasyPrinting.html#setFonts-3" "setFonts(This, Normal_face, Fixed_face) -> ok")
               "wxHtmlEasyPrinting:pageSetup/1"
               ("http://www.erlang.org/doc/man/wxHtmlEasyPrinting.html#pageSetup-1" "pageSetup(This) -> ok")
               "wxHtmlEasyPrinting:printText/3"
               ("http://www.erlang.org/doc/man/wxHtmlEasyPrinting.html#printText-3" "printText(This, Htmltext, Options::[Option]) -> boolean()")
               "wxHtmlEasyPrinting:printText/2"
               ("http://www.erlang.org/doc/man/wxHtmlEasyPrinting.html#printText-2" "printText(This, Htmltext) -> boolean()")
               "wxHtmlEasyPrinting:printFile/2"
               ("http://www.erlang.org/doc/man/wxHtmlEasyPrinting.html#printFile-2" "printFile(This, Htmlfile) -> boolean()")
               "wxHtmlEasyPrinting:previewText/3"
               ("http://www.erlang.org/doc/man/wxHtmlEasyPrinting.html#previewText-3" "previewText(This, Htmltext, Options::[Option]) -> boolean()")
               "wxHtmlEasyPrinting:previewText/2"
               ("http://www.erlang.org/doc/man/wxHtmlEasyPrinting.html#previewText-2" "previewText(This, Htmltext) -> boolean()")
               "wxHtmlEasyPrinting:previewFile/2"
               ("http://www.erlang.org/doc/man/wxHtmlEasyPrinting.html#previewFile-2" "previewFile(This, Htmlfile) -> boolean()")
               "wxHtmlEasyPrinting:getPageSetupData/1"
               ("http://www.erlang.org/doc/man/wxHtmlEasyPrinting.html#getPageSetupData-1" "getPageSetupData(This) -> wxPageSetupDialogData:wxPageSetupDialogData()")
               "wxHtmlEasyPrinting:getPrintData/1"
               ("http://www.erlang.org/doc/man/wxHtmlEasyPrinting.html#getPrintData-1" "getPrintData(This) -> wxPrintData:wxPrintData()")
               "wxHtmlEasyPrinting:new/1"
               ("http://www.erlang.org/doc/man/wxHtmlEasyPrinting.html#new-1" "new(Options::[Option]) -> wxHtmlEasyPrinting()")
               "wxHtmlEasyPrinting:new/0"
               ("http://www.erlang.org/doc/man/wxHtmlEasyPrinting.html#new-0" "new() -> wxHtmlEasyPrinting()")
               "wxHtmlEasyPrinting:"
               ("http://www.erlang.org/doc/man/wxHtmlEasyPrinting.html#type-wxHtmlEasyPrinting" "wxHtmlEasyPrinting()")
               "wxHtmlLinkEvent:getLinkInfo/1"
               ("http://www.erlang.org/doc/man/wxHtmlLinkEvent.html#getLinkInfo-1" "getLinkInfo(This) -> wx:wx_wxHtmlLinkInfo()")
               "wxHtmlLinkEvent:"
               ("http://www.erlang.org/doc/man/wxHtmlLinkEvent.html#type-wxHtmlLinkEvent" "wxHtmlLinkEvent()")
               "wxHtmlWindow:destroy/1"
               ("http://www.erlang.org/doc/man/wxHtmlWindow.html#destroy-1" "destroy(This:: wxHtmlWindow() ) -> ok")
               "wxHtmlWindow:toText/1"
               ("http://www.erlang.org/doc/man/wxHtmlWindow.html#toText-1" "toText(This) -> unicode:charlist()")
               "wxHtmlWindow:setRelatedStatusBar/2"
               ("http://www.erlang.org/doc/man/wxHtmlWindow.html#setRelatedStatusBar-2" "setRelatedStatusBar(This, Bar) -> ok")
               "wxHtmlWindow:setRelatedFrame/3"
               ("http://www.erlang.org/doc/man/wxHtmlWindow.html#setRelatedFrame-3" "setRelatedFrame(This, Frame, Format) -> ok")
               "wxHtmlWindow:setPage/2"
               ("http://www.erlang.org/doc/man/wxHtmlWindow.html#setPage-2" "setPage(This, Source) -> boolean()")
               "wxHtmlWindow:setFonts/4"
               ("http://www.erlang.org/doc/man/wxHtmlWindow.html#setFonts-4" "setFonts(This, Normal_face, Fixed_face, Options::[Option]) -> ok")
               "wxHtmlWindow:setFonts/3"
               ("http://www.erlang.org/doc/man/wxHtmlWindow.html#setFonts-3" "setFonts(This, Normal_face, Fixed_face) -> ok")
               "wxHtmlWindow:setBorders/2"
               ("http://www.erlang.org/doc/man/wxHtmlWindow.html#setBorders-2" "setBorders(This, B) -> ok")
               "wxHtmlWindow:selectWord/2"
               ("http://www.erlang.org/doc/man/wxHtmlWindow.html#selectWord-2" "selectWord(This, Pos) -> ok")
               "wxHtmlWindow:selectLine/2"
               ("http://www.erlang.org/doc/man/wxHtmlWindow.html#selectLine-2" "selectLine(This, Pos) -> ok")
               "wxHtmlWindow:selectionToText/1"
               ("http://www.erlang.org/doc/man/wxHtmlWindow.html#selectionToText-1" "selectionToText(This) -> unicode:charlist()")
               "wxHtmlWindow:selectAll/1"
               ("http://www.erlang.org/doc/man/wxHtmlWindow.html#selectAll-1" "selectAll(This) -> ok")
               "wxHtmlWindow:loadPage/2"
               ("http://www.erlang.org/doc/man/wxHtmlWindow.html#loadPage-2" "loadPage(This, Location) -> boolean()")
               "wxHtmlWindow:loadFile/2"
               ("http://www.erlang.org/doc/man/wxHtmlWindow.html#loadFile-2" "loadFile(This, Filename) -> boolean()")
               "wxHtmlWindow:historyForward/1"
               ("http://www.erlang.org/doc/man/wxHtmlWindow.html#historyForward-1" "historyForward(This) -> boolean()")
               "wxHtmlWindow:historyClear/1"
               ("http://www.erlang.org/doc/man/wxHtmlWindow.html#historyClear-1" "historyClear(This) -> ok")
               "wxHtmlWindow:historyCanForward/1"
               ("http://www.erlang.org/doc/man/wxHtmlWindow.html#historyCanForward-1" "historyCanForward(This) -> boolean()")
               "wxHtmlWindow:historyCanBack/1"
               ("http://www.erlang.org/doc/man/wxHtmlWindow.html#historyCanBack-1" "historyCanBack(This) -> boolean()")
               "wxHtmlWindow:historyBack/1"
               ("http://www.erlang.org/doc/man/wxHtmlWindow.html#historyBack-1" "historyBack(This) -> boolean()")
               "wxHtmlWindow:getRelatedFrame/1"
               ("http://www.erlang.org/doc/man/wxHtmlWindow.html#getRelatedFrame-1" "getRelatedFrame(This) -> wxFrame:wxFrame()")
               "wxHtmlWindow:getOpenedPageTitle/1"
               ("http://www.erlang.org/doc/man/wxHtmlWindow.html#getOpenedPageTitle-1" "getOpenedPageTitle(This) -> unicode:charlist()")
               "wxHtmlWindow:getOpenedPage/1"
               ("http://www.erlang.org/doc/man/wxHtmlWindow.html#getOpenedPage-1" "getOpenedPage(This) -> unicode:charlist()")
               "wxHtmlWindow:getOpenedAnchor/1"
               ("http://www.erlang.org/doc/man/wxHtmlWindow.html#getOpenedAnchor-1" "getOpenedAnchor(This) -> unicode:charlist()")
               "wxHtmlWindow:appendToPage/2"
               ("http://www.erlang.org/doc/man/wxHtmlWindow.html#appendToPage-2" "appendToPage(This, Source) -> boolean()")
               "wxHtmlWindow:new/2"
               ("http://www.erlang.org/doc/man/wxHtmlWindow.html#new-2" "new(Parent, Options::[Option]) -> wxHtmlWindow()")
               "wxHtmlWindow:new/1"
               ("http://www.erlang.org/doc/man/wxHtmlWindow.html#new-1" "new(Parent) -> wxHtmlWindow()")
               "wxHtmlWindow:new/0"
               ("http://www.erlang.org/doc/man/wxHtmlWindow.html#new-0" "new() -> wxHtmlWindow()")
               "wxHtmlWindow:"
               ("http://www.erlang.org/doc/man/wxHtmlWindow.html#type-wxHtmlWindow" "wxHtmlWindow()")
               "wxIcon:destroy/1"
               ("http://www.erlang.org/doc/man/wxIcon.html#destroy-1" "destroy(This:: wxIcon() ) -> ok")
               "wxIcon:copyFromBitmap/2"
               ("http://www.erlang.org/doc/man/wxIcon.html#copyFromBitmap-2" "copyFromBitmap(This, Bmp) -> ok")
               "wxIcon:new/2"
               ("http://www.erlang.org/doc/man/wxIcon.html#new-2" "new(Filename, Options::[Option]) -> wxIcon()")
               "wxIcon:new/1"
               ("http://www.erlang.org/doc/man/wxIcon.html#new-1" "new(Filename) -> wxIcon()")
               "wxIcon:new/0"
               ("http://www.erlang.org/doc/man/wxIcon.html#new-0" "new() -> wxIcon()")
               "wxIcon:"
               ("http://www.erlang.org/doc/man/wxIcon.html#type-wxIcon" "wxIcon()")
               "wxIconBundle:destroy/1"
               ("http://www.erlang.org/doc/man/wxIconBundle.html#destroy-1" "destroy(This:: wxIconBundle() ) -> ok")
               "wxIconBundle:getIcon/2"
               ("http://www.erlang.org/doc/man/wxIconBundle.html#getIcon-2" "getIcon(This, Options::[Option]) -> wxIcon:wxIcon()")
               "wxIconBundle:getIcon/1"
               ("http://www.erlang.org/doc/man/wxIconBundle.html#getIcon-1" "getIcon(This) -> wxIcon:wxIcon()")
               "wxIconBundle:addIcon/3"
               ("http://www.erlang.org/doc/man/wxIconBundle.html#addIcon-3" "addIcon(This, File, Type) -> ok")
               "wxIconBundle:addIcon/2"
               ("http://www.erlang.org/doc/man/wxIconBundle.html#addIcon-2" "addIcon(This, Icon) -> ok")
               "wxIconBundle:new/2"
               ("http://www.erlang.org/doc/man/wxIconBundle.html#new-2" "new(File, Type) -> wxIconBundle()")
               "wxIconBundle:new/1"
               ("http://www.erlang.org/doc/man/wxIconBundle.html#new-1" "new(Ic) -> wxIconBundle()")
               "wxIconBundle:new/0"
               ("http://www.erlang.org/doc/man/wxIconBundle.html#new-0" "new() -> wxIconBundle()")
               "wxIconBundle:"
               ("http://www.erlang.org/doc/man/wxIconBundle.html#type-wxIconBundle" "wxIconBundle()")
               "wxIconizeEvent:iconized/1"
               ("http://www.erlang.org/doc/man/wxIconizeEvent.html#iconized-1" "iconized(This) -> boolean()")
               "wxIconizeEvent:"
               ("http://www.erlang.org/doc/man/wxIconizeEvent.html#type-wxIconizeEvent" "wxIconizeEvent()")
               "wxIdleEvent:setMode/1"
               ("http://www.erlang.org/doc/man/wxIdleEvent.html#setMode-1" "setMode(Mode) -> ok")
               "wxIdleEvent:moreRequested/1"
               ("http://www.erlang.org/doc/man/wxIdleEvent.html#moreRequested-1" "moreRequested(This) -> boolean()")
               "wxIdleEvent:requestMore/2"
               ("http://www.erlang.org/doc/man/wxIdleEvent.html#requestMore-2" "requestMore(This, Options::[Option]) -> ok")
               "wxIdleEvent:requestMore/1"
               ("http://www.erlang.org/doc/man/wxIdleEvent.html#requestMore-1" "requestMore(This) -> ok")
               "wxIdleEvent:getMode/0"
               ("http://www.erlang.org/doc/man/wxIdleEvent.html#getMode-0" "getMode() -> wx:wx_enum()")
               "wxIdleEvent:canSend/1"
               ("http://www.erlang.org/doc/man/wxIdleEvent.html#canSend-1" "canSend(Win) -> boolean()")
               "wxIdleEvent:"
               ("http://www.erlang.org/doc/man/wxIdleEvent.html#type-wxIdleEvent" "wxIdleEvent()")
               "wxImage:destroy/1"
               ("http://www.erlang.org/doc/man/wxImage.html#destroy-1" "destroy(This:: wxImage() ) -> ok")
               "wxImage:setRGB/6"
               ("http://www.erlang.org/doc/man/wxImage.html#setRGB-6" "setRGB(This, X, Y, R, G, B) -> ok")
               "wxImage:setRGB/5"
               ("http://www.erlang.org/doc/man/wxImage.html#setRGB-5" "setRGB(This, Rect, R, G, B) -> ok")
               "wxImage:setPalette/2"
               ("http://www.erlang.org/doc/man/wxImage.html#setPalette-2" "setPalette(This, Palette) -> ok")
               "wxImage:setOption/3"
               ("http://www.erlang.org/doc/man/wxImage.html#setOption-3" "setOption(This, Name, Value) -> ok")
               "wxImage:setMaskFromImage/5"
               ("http://www.erlang.org/doc/man/wxImage.html#setMaskFromImage-5" "setMaskFromImage(This, Mask, Mr, Mg, Mb) -> boolean()")
               "wxImage:setMaskColour/4"
               ("http://www.erlang.org/doc/man/wxImage.html#setMaskColour-4" "setMaskColour(This, R, G, B) -> ok")
               "wxImage:setMask/2"
               ("http://www.erlang.org/doc/man/wxImage.html#setMask-2" "setMask(This, Options::[Option]) -> ok")
               "wxImage:setMask/1"
               ("http://www.erlang.org/doc/man/wxImage.html#setMask-1" "setMask(This) -> ok")
               "wxImage:setData/5"
               ("http://www.erlang.org/doc/man/wxImage.html#setData-5" "setData(This, Data, New_width, New_height, Options::[Option]) -> ok")
               "wxImage:setData/4"
               ("http://www.erlang.org/doc/man/wxImage.html#setData-4" "setData(This, Data, New_width, New_height) -> ok")
               "wxImage:setData/3"
               ("http://www.erlang.org/doc/man/wxImage.html#setData-3" "setData(This, Data, Options::[Option]) -> ok")
               "wxImage:setData/2"
               ("http://www.erlang.org/doc/man/wxImage.html#setData-2" "setData(This, Data) -> ok")
               "wxImage:setAlpha/4"
               ("http://www.erlang.org/doc/man/wxImage.html#setAlpha-4" "setAlpha(This, X, Y, Alpha) -> ok")
               "wxImage:setAlpha/3"
               ("http://www.erlang.org/doc/man/wxImage.html#setAlpha-3" "setAlpha(This, Alpha, Options::[Option]) -> ok")
               "wxImage:setAlpha/2"
               ("http://www.erlang.org/doc/man/wxImage.html#setAlpha-2" "setAlpha(This, Alpha) -> ok")
               "wxImage:size/4"
               ("http://www.erlang.org/doc/man/wxImage.html#size-4" "size(This, Size, Pos, Options::[Option]) -> wxImage()")
               "wxImage:size/3"
               ("http://www.erlang.org/doc/man/wxImage.html#size-3" "size(This, Size, Pos) -> wxImage()")
               "wxImage:scale/4"
               ("http://www.erlang.org/doc/man/wxImage.html#scale-4" "scale(This, Width, Height, Options::[Option]) -> wxImage()")
               "wxImage:scale/3"
               ("http://www.erlang.org/doc/man/wxImage.html#scale-3" "scale(This, Width, Height) -> wxImage()")
               "wxImage:saveFile/3"
               ("http://www.erlang.org/doc/man/wxImage.html#saveFile-3" "saveFile(This, Name, Type) -> boolean()")
               "wxImage:saveFile/2"
               ("http://www.erlang.org/doc/man/wxImage.html#saveFile-2" "saveFile(This, Name) -> boolean()")
               "wxImage:rotate90/2"
               ("http://www.erlang.org/doc/man/wxImage.html#rotate90-2" "rotate90(This, Options::[Option]) -> wxImage()")
               "wxImage:rotate90/1"
               ("http://www.erlang.org/doc/man/wxImage.html#rotate90-1" "rotate90(This) -> wxImage()")
               "wxImage:rotateHue/2"
               ("http://www.erlang.org/doc/man/wxImage.html#rotateHue-2" "rotateHue(This, Angle) -> ok")
               "wxImage:rotate/4"
               ("http://www.erlang.org/doc/man/wxImage.html#rotate-4" "rotate(This, Angle, Centre_of_rotation, Options::[Option]) -> wxImage()")
               "wxImage:rotate/3"
               ("http://www.erlang.org/doc/man/wxImage.html#rotate-3" "rotate(This, Angle, Centre_of_rotation) -> wxImage()")
               "wxImage:resize/4"
               ("http://www.erlang.org/doc/man/wxImage.html#resize-4" "resize(This, Size, Pos, Options::[Option]) -> wxImage()")
               "wxImage:resize/3"
               ("http://www.erlang.org/doc/man/wxImage.html#resize-3" "resize(This, Size, Pos) -> wxImage()")
               "wxImage:rescale/4"
               ("http://www.erlang.org/doc/man/wxImage.html#rescale-4" "rescale(This, Width, Height, Options::[Option]) -> wxImage()")
               "wxImage:rescale/3"
               ("http://www.erlang.org/doc/man/wxImage.html#rescale-3" "rescale(This, Width, Height) -> wxImage()")
               "wxImage:replace/7"
               ("http://www.erlang.org/doc/man/wxImage.html#replace-7" "replace(This, R1, G1, B1, R2, G2, B2) -> ok")
               "wxImage:mirror/2"
               ("http://www.erlang.org/doc/man/wxImage.html#mirror-2" "mirror(This, Options::[Option]) -> wxImage()")
               "wxImage:mirror/1"
               ("http://www.erlang.org/doc/man/wxImage.html#mirror-1" "mirror(This) -> wxImage()")
               "wxImage:removeHandler/1"
               ("http://www.erlang.org/doc/man/wxImage.html#removeHandler-1" "removeHandler(Name) -> boolean()")
               "wxImage:ok/1"
               ("http://www.erlang.org/doc/man/wxImage.html#ok-1" "ok(This) -> boolean()")
               "wxImage:loadFile/4"
               ("http://www.erlang.org/doc/man/wxImage.html#loadFile-4" "loadFile(This, Name, Mimetype, Options::[Option]) -> boolean()")
               "wxImage:loadFile/3"
               ("http://www.erlang.org/doc/man/wxImage.html#loadFile-3" "loadFile(This, Name, Options::[Option]) -> boolean()")
               "wxImage:loadFile/2"
               ("http://www.erlang.org/doc/man/wxImage.html#loadFile-2" "loadFile(This, Name) -> boolean()")
               "wxImage:isTransparent/4"
               ("http://www.erlang.org/doc/man/wxImage.html#isTransparent-4" "isTransparent(This, X, Y, Options::[Option]) -> boolean()")
               "wxImage:isTransparent/3"
               ("http://www.erlang.org/doc/man/wxImage.html#isTransparent-3" "isTransparent(This, X, Y) -> boolean()")
               "wxImage:initStandardHandlers/0"
               ("http://www.erlang.org/doc/man/wxImage.html#initStandardHandlers-0" "initStandardHandlers() -> ok")
               "wxImage:initAlpha/1"
               ("http://www.erlang.org/doc/man/wxImage.html#initAlpha-1" "initAlpha(This) -> ok")
               "wxImage:hasOption/2"
               ("http://www.erlang.org/doc/man/wxImage.html#hasOption-2" "hasOption(This, Name) -> boolean()")
               "wxImage:getOptionInt/2"
               ("http://www.erlang.org/doc/man/wxImage.html#getOptionInt-2" "getOptionInt(This, Name) -> integer()")
               "wxImage:getOption/2"
               ("http://www.erlang.org/doc/man/wxImage.html#getOption-2" "getOption(This, Name) -> unicode:charlist()")
               "wxImage:hasMask/1"
               ("http://www.erlang.org/doc/man/wxImage.html#hasMask-1" "hasMask(This) -> boolean()")
               "wxImage:hasAlpha/1"
               ("http://www.erlang.org/doc/man/wxImage.html#hasAlpha-1" "hasAlpha(This) -> boolean()")
               "wxImage:getWidth/1"
               ("http://www.erlang.org/doc/man/wxImage.html#getWidth-1" "getWidth(This) -> integer()")
               "wxImage:getSubImage/2"
               ("http://www.erlang.org/doc/man/wxImage.html#getSubImage-2" "getSubImage(This, Rect) -> wxImage()")
               "wxImage:getRed/3"
               ("http://www.erlang.org/doc/man/wxImage.html#getRed-3" "getRed(This, X, Y) -> integer()")
               "wxImage:getPalette/1"
               ("http://www.erlang.org/doc/man/wxImage.html#getPalette-1" "getPalette(This) -> wxPalette:wxPalette()")
               "wxImage:getOrFindMaskColour/1"
               ("http://www.erlang.org/doc/man/wxImage.html#getOrFindMaskColour-1" "getOrFindMaskColour(This) -> Result")
               "wxImage:getMaskRed/1"
               ("http://www.erlang.org/doc/man/wxImage.html#getMaskRed-1" "getMaskRed(This) -> integer()")
               "wxImage:getMaskGreen/1"
               ("http://www.erlang.org/doc/man/wxImage.html#getMaskGreen-1" "getMaskGreen(This) -> integer()")
               "wxImage:getMaskBlue/1"
               ("http://www.erlang.org/doc/man/wxImage.html#getMaskBlue-1" "getMaskBlue(This) -> integer()")
               "wxImage:getHeight/1"
               ("http://www.erlang.org/doc/man/wxImage.html#getHeight-1" "getHeight(This) -> integer()")
               "wxImage:getImageCount/2"
               ("http://www.erlang.org/doc/man/wxImage.html#getImageCount-2" "getImageCount(Name, Options::[Option]) -> integer()")
               "wxImage:getImageCount/1"
               ("http://www.erlang.org/doc/man/wxImage.html#getImageCount-1" "getImageCount(Name) -> integer()")
               "wxImage:getGreen/3"
               ("http://www.erlang.org/doc/man/wxImage.html#getGreen-3" "getGreen(This, X, Y) -> integer()")
               "wxImage:getData/1"
               ("http://www.erlang.org/doc/man/wxImage.html#getData-1" "getData(This) -> binary()")
               "wxImage:getBlue/3"
               ("http://www.erlang.org/doc/man/wxImage.html#getBlue-3" "getBlue(This, X, Y) -> integer()")
               "wxImage:getAlpha/3"
               ("http://www.erlang.org/doc/man/wxImage.html#getAlpha-3" "getAlpha(This, X, Y) -> integer()")
               "wxImage:getAlpha/1"
               ("http://www.erlang.org/doc/man/wxImage.html#getAlpha-1" "getAlpha(This) -> binary()")
               "wxImage:getImageExtWildcard/0"
               ("http://www.erlang.org/doc/man/wxImage.html#getImageExtWildcard-0" "getImageExtWildcard() -> unicode:charlist()")
               "wxImage:findFirstUnusedColour/2"
               ("http://www.erlang.org/doc/man/wxImage.html#findFirstUnusedColour-2" "findFirstUnusedColour(This, Options::[Option]) -> Result")
               "wxImage:findFirstUnusedColour/1"
               ("http://www.erlang.org/doc/man/wxImage.html#findFirstUnusedColour-1" "findFirstUnusedColour(This) -> Result")
               "wxImage:Destroy/1"
               ("http://www.erlang.org/doc/man/wxImage.html#Destroy-1" "Destroy(This) -> ok")
               "wxImage:create/6"
               ("http://www.erlang.org/doc/man/wxImage.html#create-6" "create(This, Width, Height, Data, Alpha, Options::[Option]) -> boolean()")
               "wxImage:create/5"
               ("http://www.erlang.org/doc/man/wxImage.html#create-5" "create(This, Width, Height, Data, Alpha) -> boolean()")
               "wxImage:create/4"
               ("http://www.erlang.org/doc/man/wxImage.html#create-4" "create(This, Width, Height, Data) -> boolean()")
               "wxImage:create/3"
               ("http://www.erlang.org/doc/man/wxImage.html#create-3" "create(This, Width, Height) -> boolean()")
               "wxImage:copy/1"
               ("http://www.erlang.org/doc/man/wxImage.html#copy-1" "copy(This) -> wxImage()")
               "wxImage:convertToMono/4"
               ("http://www.erlang.org/doc/man/wxImage.html#convertToMono-4" "convertToMono(This, R, G, B) -> wxImage()")
               "wxImage:convertToGreyscale/2"
               ("http://www.erlang.org/doc/man/wxImage.html#convertToGreyscale-2" "convertToGreyscale(This, Options::[Option]) -> wxImage()")
               "wxImage:convertToGreyscale/1"
               ("http://www.erlang.org/doc/man/wxImage.html#convertToGreyscale-1" "convertToGreyscale(This) -> wxImage()")
               "wxImage:convertAlphaToMask/2"
               ("http://www.erlang.org/doc/man/wxImage.html#convertAlphaToMask-2" "convertAlphaToMask(This, Options::[Option]) -> boolean()")
               "wxImage:convertAlphaToMask/1"
               ("http://www.erlang.org/doc/man/wxImage.html#convertAlphaToMask-1" "convertAlphaToMask(This) -> boolean()")
               "wxImage:blurVertical/2"
               ("http://www.erlang.org/doc/man/wxImage.html#blurVertical-2" "blurVertical(This, Radius) -> wxImage()")
               "wxImage:blurHorizontal/2"
               ("http://www.erlang.org/doc/man/wxImage.html#blurHorizontal-2" "blurHorizontal(This, Radius) -> wxImage()")
               "wxImage:blur/2"
               ("http://www.erlang.org/doc/man/wxImage.html#blur-2" "blur(This, Radius) -> wxImage()")
               "wxImage:new/5"
               ("http://www.erlang.org/doc/man/wxImage.html#new-5" "new(Width, Height, Data, Alpha, Options::[Option]) -> wxImage()")
               "wxImage:new/4"
               ("http://www.erlang.org/doc/man/wxImage.html#new-4" "new(Width, Height, Data, Alpha) -> wxImage()")
               "wxImage:new/3"
               ("http://www.erlang.org/doc/man/wxImage.html#new-3" "new(Width, Height, Data) -> wxImage()")
               "wxImage:new/2"
               ("http://www.erlang.org/doc/man/wxImage.html#new-2" "new(Width, Height) -> wxImage()")
               "wxImage:new/1"
               ("http://www.erlang.org/doc/man/wxImage.html#new-1" "new(Name) -> wxImage()")
               "wxImage:new/0"
               ("http://www.erlang.org/doc/man/wxImage.html#new-0" "new() -> wxImage()")
               "wxImage:"
               ("http://www.erlang.org/doc/man/wxImage.html#type-wxImage" "wxImage()")
               "wxImageList:destroy/1"
               ("http://www.erlang.org/doc/man/wxImageList.html#destroy-1" "destroy(This:: wxImageList() ) -> ok")
               "wxImageList:replace/4"
               ("http://www.erlang.org/doc/man/wxImageList.html#replace-4" "replace(This, Index, Bitmap, Mask) -> boolean()")
               "wxImageList:replace/3"
               ("http://www.erlang.org/doc/man/wxImageList.html#replace-3" "replace(This, Index, Bitmap) -> boolean()")
               "wxImageList:removeAll/1"
               ("http://www.erlang.org/doc/man/wxImageList.html#removeAll-1" "removeAll(This) -> boolean()")
               "wxImageList:remove/2"
               ("http://www.erlang.org/doc/man/wxImageList.html#remove-2" "remove(This, Index) -> boolean()")
               "wxImageList:getSize/2"
               ("http://www.erlang.org/doc/man/wxImageList.html#getSize-2" "getSize(This, Index) -> Result")
               "wxImageList:getImageCount/1"
               ("http://www.erlang.org/doc/man/wxImageList.html#getImageCount-1" "getImageCount(This) -> integer()")
               "wxImageList:getIcon/2"
               ("http://www.erlang.org/doc/man/wxImageList.html#getIcon-2" "getIcon(This, Index) -> wxIcon:wxIcon()")
               "wxImageList:getBitmap/2"
               ("http://www.erlang.org/doc/man/wxImageList.html#getBitmap-2" "getBitmap(This, Index) -> wxBitmap:wxBitmap()")
               "wxImageList:draw/6"
               ("http://www.erlang.org/doc/man/wxImageList.html#draw-6" "draw(This, Index, Dc, X, Y, Options::[Option]) -> boolean()")
               "wxImageList:draw/5"
               ("http://www.erlang.org/doc/man/wxImageList.html#draw-5" "draw(This, Index, Dc, X, Y) -> boolean()")
               "wxImageList:create/4"
               ("http://www.erlang.org/doc/man/wxImageList.html#create-4" "create(This, Width, Height, Options::[Option]) -> boolean()")
               "wxImageList:create/3"
               ("http://www.erlang.org/doc/man/wxImageList.html#create-3" "create(This, Width, Height) -> boolean()")
               "wxImageList:add/3"
               ("http://www.erlang.org/doc/man/wxImageList.html#add-3" "add(This, Bitmap, Mask) -> integer()")
               "wxImageList:add/2"
               ("http://www.erlang.org/doc/man/wxImageList.html#add-2" "add(This, Bitmap) -> integer()")
               "wxImageList:new/3"
               ("http://www.erlang.org/doc/man/wxImageList.html#new-3" "new(Width, Height, Options::[Option]) -> wxImageList()")
               "wxImageList:new/2"
               ("http://www.erlang.org/doc/man/wxImageList.html#new-2" "new(Width, Height) -> wxImageList()")
               "wxImageList:new/0"
               ("http://www.erlang.org/doc/man/wxImageList.html#new-0" "new() -> wxImageList()")
               "wxImageList:"
               ("http://www.erlang.org/doc/man/wxImageList.html#type-wxImageList" "wxImageList()")
               "wxInitDialogEvent:"
               ("http://www.erlang.org/doc/man/wxInitDialogEvent.html#type-wxInitDialogEvent" "wxInitDialogEvent()")
               "wxJoystickEvent:isZMove/1"
               ("http://www.erlang.org/doc/man/wxJoystickEvent.html#isZMove-1" "isZMove(This) -> boolean()")
               "wxJoystickEvent:isMove/1"
               ("http://www.erlang.org/doc/man/wxJoystickEvent.html#isMove-1" "isMove(This) -> boolean()")
               "wxJoystickEvent:isButton/1"
               ("http://www.erlang.org/doc/man/wxJoystickEvent.html#isButton-1" "isButton(This) -> boolean()")
               "wxJoystickEvent:getZPosition/1"
               ("http://www.erlang.org/doc/man/wxJoystickEvent.html#getZPosition-1" "getZPosition(This) -> integer()")
               "wxJoystickEvent:getPosition/1"
               ("http://www.erlang.org/doc/man/wxJoystickEvent.html#getPosition-1" "getPosition(This) -> {X::integer(), Y::integer()}")
               "wxJoystickEvent:getJoystick/1"
               ("http://www.erlang.org/doc/man/wxJoystickEvent.html#getJoystick-1" "getJoystick(This) -> integer()")
               "wxJoystickEvent:getButtonState/1"
               ("http://www.erlang.org/doc/man/wxJoystickEvent.html#getButtonState-1" "getButtonState(This) -> integer()")
               "wxJoystickEvent:getButtonChange/1"
               ("http://www.erlang.org/doc/man/wxJoystickEvent.html#getButtonChange-1" "getButtonChange(This) -> integer()")
               "wxJoystickEvent:buttonUp/2"
               ("http://www.erlang.org/doc/man/wxJoystickEvent.html#buttonUp-2" "buttonUp(This, Options::[Option]) -> boolean()")
               "wxJoystickEvent:buttonUp/1"
               ("http://www.erlang.org/doc/man/wxJoystickEvent.html#buttonUp-1" "buttonUp(This) -> boolean()")
               "wxJoystickEvent:buttonIsDown/2"
               ("http://www.erlang.org/doc/man/wxJoystickEvent.html#buttonIsDown-2" "buttonIsDown(This, Options::[Option]) -> boolean()")
               "wxJoystickEvent:buttonIsDown/1"
               ("http://www.erlang.org/doc/man/wxJoystickEvent.html#buttonIsDown-1" "buttonIsDown(This) -> boolean()")
               "wxJoystickEvent:buttonDown/2"
               ("http://www.erlang.org/doc/man/wxJoystickEvent.html#buttonDown-2" "buttonDown(This, Options::[Option]) -> boolean()")
               "wxJoystickEvent:buttonDown/1"
               ("http://www.erlang.org/doc/man/wxJoystickEvent.html#buttonDown-1" "buttonDown(This) -> boolean()")
               "wxJoystickEvent:"
               ("http://www.erlang.org/doc/man/wxJoystickEvent.html#type-wxJoystickEvent" "wxJoystickEvent()")
               "wxKeyEvent:shiftDown/1"
               ("http://www.erlang.org/doc/man/wxKeyEvent.html#shiftDown-1" "shiftDown(This) -> boolean()")
               "wxKeyEvent:metaDown/1"
               ("http://www.erlang.org/doc/man/wxKeyEvent.html#metaDown-1" "metaDown(This) -> boolean()")
               "wxKeyEvent:hasModifiers/1"
               ("http://www.erlang.org/doc/man/wxKeyEvent.html#hasModifiers-1" "hasModifiers(This) -> boolean()")
               "wxKeyEvent:getY/1"
               ("http://www.erlang.org/doc/man/wxKeyEvent.html#getY-1" "getY(This) -> integer()")
               "wxKeyEvent:getX/1"
               ("http://www.erlang.org/doc/man/wxKeyEvent.html#getX-1" "getX(This) -> integer()")
               "wxKeyEvent:getUnicodeKey/1"
               ("http://www.erlang.org/doc/man/wxKeyEvent.html#getUnicodeKey-1" "getUnicodeKey(This) -> integer()")
               "wxKeyEvent:getRawKeyFlags/1"
               ("http://www.erlang.org/doc/man/wxKeyEvent.html#getRawKeyFlags-1" "getRawKeyFlags(This) -> integer()")
               "wxKeyEvent:getRawKeyCode/1"
               ("http://www.erlang.org/doc/man/wxKeyEvent.html#getRawKeyCode-1" "getRawKeyCode(This) -> integer()")
               "wxKeyEvent:getPosition/1"
               ("http://www.erlang.org/doc/man/wxKeyEvent.html#getPosition-1" "getPosition(This) -> {X::integer(), Y::integer()}")
               "wxKeyEvent:getModifiers/1"
               ("http://www.erlang.org/doc/man/wxKeyEvent.html#getModifiers-1" "getModifiers(This) -> integer()")
               "wxKeyEvent:getKeyCode/1"
               ("http://www.erlang.org/doc/man/wxKeyEvent.html#getKeyCode-1" "getKeyCode(This) -> integer()")
               "wxKeyEvent:controlDown/1"
               ("http://www.erlang.org/doc/man/wxKeyEvent.html#controlDown-1" "controlDown(This) -> boolean()")
               "wxKeyEvent:cmdDown/1"
               ("http://www.erlang.org/doc/man/wxKeyEvent.html#cmdDown-1" "cmdDown(This) -> boolean()")
               "wxKeyEvent:altDown/1"
               ("http://www.erlang.org/doc/man/wxKeyEvent.html#altDown-1" "altDown(This) -> boolean()")
               "wxKeyEvent:"
               ("http://www.erlang.org/doc/man/wxKeyEvent.html#type-wxKeyEvent" "wxKeyEvent()")
               "wxLayoutAlgorithm:destroy/1"
               ("http://www.erlang.org/doc/man/wxLayoutAlgorithm.html#destroy-1" "destroy(This:: wxLayoutAlgorithm() ) -> ok")
               "wxLayoutAlgorithm:layoutWindow/3"
               ("http://www.erlang.org/doc/man/wxLayoutAlgorithm.html#layoutWindow-3" "layoutWindow(This, Frame, Options::[Option]) -> boolean()")
               "wxLayoutAlgorithm:layoutWindow/2"
               ("http://www.erlang.org/doc/man/wxLayoutAlgorithm.html#layoutWindow-2" "layoutWindow(This, Frame) -> boolean()")
               "wxLayoutAlgorithm:layoutMDIFrame/3"
               ("http://www.erlang.org/doc/man/wxLayoutAlgorithm.html#layoutMDIFrame-3" "layoutMDIFrame(This, Frame, Options::[Option]) -> boolean()")
               "wxLayoutAlgorithm:layoutMDIFrame/2"
               ("http://www.erlang.org/doc/man/wxLayoutAlgorithm.html#layoutMDIFrame-2" "layoutMDIFrame(This, Frame) -> boolean()")
               "wxLayoutAlgorithm:layoutFrame/3"
               ("http://www.erlang.org/doc/man/wxLayoutAlgorithm.html#layoutFrame-3" "layoutFrame(This, Frame, Options::[Option]) -> boolean()")
               "wxLayoutAlgorithm:layoutFrame/2"
               ("http://www.erlang.org/doc/man/wxLayoutAlgorithm.html#layoutFrame-2" "layoutFrame(This, Frame) -> boolean()")
               "wxLayoutAlgorithm:new/0"
               ("http://www.erlang.org/doc/man/wxLayoutAlgorithm.html#new-0" "new() -> wxLayoutAlgorithm()")
               "wxLayoutAlgorithm:"
               ("http://www.erlang.org/doc/man/wxLayoutAlgorithm.html#type-wxLayoutAlgorithm" "wxLayoutAlgorithm()")
               "wxListbook:destroy/1"
               ("http://www.erlang.org/doc/man/wxListbook.html#destroy-1" "destroy(This:: wxListbook() ) -> ok")
               "wxListbook:changeSelection/2"
               ("http://www.erlang.org/doc/man/wxListbook.html#changeSelection-2" "changeSelection(This, N) -> integer()")
               "wxListbook:setSelection/2"
               ("http://www.erlang.org/doc/man/wxListbook.html#setSelection-2" "setSelection(This, N) -> integer()")
               "wxListbook:setPageText/3"
               ("http://www.erlang.org/doc/man/wxListbook.html#setPageText-3" "setPageText(This, N, StrText) -> boolean()")
               "wxListbook:setPageImage/3"
               ("http://www.erlang.org/doc/man/wxListbook.html#setPageImage-3" "setPageImage(This, N, ImageId) -> boolean()")
               "wxListbook:setPageSize/2"
               ("http://www.erlang.org/doc/man/wxListbook.html#setPageSize-2" "setPageSize(This, Size) -> ok")
               "wxListbook:setImageList/2"
               ("http://www.erlang.org/doc/man/wxListbook.html#setImageList-2" "setImageList(This, ImageList) -> ok")
               "wxListbook:insertPage/5"
               ("http://www.erlang.org/doc/man/wxListbook.html#insertPage-5" "insertPage(This, N, Page, Text, Options::[Option]) -> boolean()")
               "wxListbook:insertPage/4"
               ("http://www.erlang.org/doc/man/wxListbook.html#insertPage-4" "insertPage(This, N, Page, Text) -> boolean()")
               "wxListbook:hitTest/2"
               ("http://www.erlang.org/doc/man/wxListbook.html#hitTest-2" "hitTest(This, Pt) -> Result")
               "wxListbook:getSelection/1"
               ("http://www.erlang.org/doc/man/wxListbook.html#getSelection-1" "getSelection(This) -> integer()")
               "wxListbook:getPageText/2"
               ("http://www.erlang.org/doc/man/wxListbook.html#getPageText-2" "getPageText(This, N) -> unicode:charlist()")
               "wxListbook:getPageImage/2"
               ("http://www.erlang.org/doc/man/wxListbook.html#getPageImage-2" "getPageImage(This, N) -> integer()")
               "wxListbook:getPageCount/1"
               ("http://www.erlang.org/doc/man/wxListbook.html#getPageCount-1" "getPageCount(This) -> integer()")
               "wxListbook:getPage/2"
               ("http://www.erlang.org/doc/man/wxListbook.html#getPage-2" "getPage(This, N) -> wxWindow:wxWindow()")
               "wxListbook:getImageList/1"
               ("http://www.erlang.org/doc/man/wxListbook.html#getImageList-1" "getImageList(This) -> wxImageList:wxImageList()")
               "wxListbook:getCurrentPage/1"
               ("http://www.erlang.org/doc/man/wxListbook.html#getCurrentPage-1" "getCurrentPage(This) -> wxWindow:wxWindow()")
               "wxListbook:removePage/2"
               ("http://www.erlang.org/doc/man/wxListbook.html#removePage-2" "removePage(This, N) -> boolean()")
               "wxListbook:deletePage/2"
               ("http://www.erlang.org/doc/man/wxListbook.html#deletePage-2" "deletePage(This, N) -> boolean()")
               "wxListbook:deleteAllPages/1"
               ("http://www.erlang.org/doc/man/wxListbook.html#deleteAllPages-1" "deleteAllPages(This) -> boolean()")
               "wxListbook:create/4"
               ("http://www.erlang.org/doc/man/wxListbook.html#create-4" "create(This, Parent, Id, Options::[Option]) -> boolean()")
               "wxListbook:create/3"
               ("http://www.erlang.org/doc/man/wxListbook.html#create-3" "create(This, Parent, Id) -> boolean()")
               "wxListbook:assignImageList/2"
               ("http://www.erlang.org/doc/man/wxListbook.html#assignImageList-2" "assignImageList(This, ImageList) -> ok")
               "wxListbook:advanceSelection/2"
               ("http://www.erlang.org/doc/man/wxListbook.html#advanceSelection-2" "advanceSelection(This, Options::[Option]) -> ok")
               "wxListbook:advanceSelection/1"
               ("http://www.erlang.org/doc/man/wxListbook.html#advanceSelection-1" "advanceSelection(This) -> ok")
               "wxListbook:addPage/4"
               ("http://www.erlang.org/doc/man/wxListbook.html#addPage-4" "addPage(This, Page, Text, Options::[Option]) -> boolean()")
               "wxListbook:addPage/3"
               ("http://www.erlang.org/doc/man/wxListbook.html#addPage-3" "addPage(This, Page, Text) -> boolean()")
               "wxListbook:new/3"
               ("http://www.erlang.org/doc/man/wxListbook.html#new-3" "new(Parent, Id, Options::[Option]) -> wxListbook()")
               "wxListbook:new/2"
               ("http://www.erlang.org/doc/man/wxListbook.html#new-2" "new(Parent, Id) -> wxListbook()")
               "wxListbook:new/0"
               ("http://www.erlang.org/doc/man/wxListbook.html#new-0" "new() -> wxListbook()")
               "wxListbook:"
               ("http://www.erlang.org/doc/man/wxListbook.html#type-wxListbook" "wxListbook()")
               "wxListBox:destroy/1"
               ("http://www.erlang.org/doc/man/wxListBox.html#destroy-1" "destroy(This:: wxListBox() ) -> ok")
               "wxListBox:setFirstItem/2"
               ("http://www.erlang.org/doc/man/wxListBox.html#setFirstItem-2" "setFirstItem(This, N) -> ok")
               "wxListBox:hitTest/2"
               ("http://www.erlang.org/doc/man/wxListBox.html#hitTest-2" "hitTest(This, Point) -> integer()")
               "wxListBox:set/2"
               ("http://www.erlang.org/doc/man/wxListBox.html#set-2" "set(This, Items) -> ok")
               "wxListBox:isSelected/2"
               ("http://www.erlang.org/doc/man/wxListBox.html#isSelected-2" "isSelected(This, N) -> boolean()")
               "wxListBox:insertItems/3"
               ("http://www.erlang.org/doc/man/wxListBox.html#insertItems-3" "insertItems(This, Items, Pos) -> ok")
               "wxListBox:getSelections/1"
               ("http://www.erlang.org/doc/man/wxListBox.html#getSelections-1" "getSelections(This) -> Result")
               "wxListBox:deselect/2"
               ("http://www.erlang.org/doc/man/wxListBox.html#deselect-2" "deselect(This, N) -> ok")
               "wxListBox:create/7"
               ("http://www.erlang.org/doc/man/wxListBox.html#create-7" "create(This, Parent, Id, Pos, Size, Choices, Options::[Option]) -> boolean()")
               "wxListBox:create/6"
               ("http://www.erlang.org/doc/man/wxListBox.html#create-6" "create(This, Parent, Id, Pos, Size, Choices) -> boolean()")
               "wxListBox:new/3"
               ("http://www.erlang.org/doc/man/wxListBox.html#new-3" "new(Parent, Id, Options::[Option]) -> wxListBox()")
               "wxListBox:new/2"
               ("http://www.erlang.org/doc/man/wxListBox.html#new-2" "new(Parent, Id) -> wxListBox()")
               "wxListBox:new/0"
               ("http://www.erlang.org/doc/man/wxListBox.html#new-0" "new() -> wxListBox()")
               "wxListBox:"
               ("http://www.erlang.org/doc/man/wxListBox.html#type-wxListBox" "wxListBox()")
               "wxListCtrl:destroy/1"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#destroy-1" "destroy(This:: wxListCtrl() ) -> ok")
               "wxListCtrl:sortItems/2"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#sortItems-2" "sortItems(This:: wxListCtrl() , SortCallBack::function()) -> boolean()")
               "wxListCtrl:setWindowStyleFlag/2"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#setWindowStyleFlag-2" "setWindowStyleFlag(This, Style) -> ok")
               "wxListCtrl:setTextColour/2"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#setTextColour-2" "setTextColour(This, Col) -> ok")
               "wxListCtrl:setSingleStyle/3"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#setSingleStyle-3" "setSingleStyle(This, Style, Options::[Option]) -> ok")
               "wxListCtrl:setSingleStyle/2"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#setSingleStyle-2" "setSingleStyle(This, Style) -> ok")
               "wxListCtrl:setItemTextColour/3"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#setItemTextColour-3" "setItemTextColour(This, Item, Col) -> ok")
               "wxListCtrl:setItemText/3"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#setItemText-3" "setItemText(This, Item, Str) -> ok")
               "wxListCtrl:setItemState/4"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#setItemState-4" "setItemState(This, Item, State, StateMask) -> boolean()")
               "wxListCtrl:setItemPosition/3"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#setItemPosition-3" "setItemPosition(This, Item, Pos) -> boolean()")
               "wxListCtrl:setItemColumnImage/4"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#setItemColumnImage-4" "setItemColumnImage(This, Item, Column, Image) -> boolean()")
               "wxListCtrl:setItemImage/4"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#setItemImage-4" "setItemImage(This, Item, Image, Options::[Option]) -> boolean()")
               "wxListCtrl:setItemImage/3"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#setItemImage-3" "setItemImage(This, Item, Image) -> boolean()")
               "wxListCtrl:setItemFont/3"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#setItemFont-3" "setItemFont(This, Item, F) -> ok")
               "wxListCtrl:setItemData/3"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#setItemData-3" "setItemData(This, Item, Data) -> boolean()")
               "wxListCtrl:setItemCount/2"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#setItemCount-2" "setItemCount(This, Count) -> ok")
               "wxListCtrl:setItemBackgroundColour/3"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#setItemBackgroundColour-3" "setItemBackgroundColour(This, Item, Col) -> ok")
               "wxListCtrl:setItem/5"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#setItem-5" "setItem(This, Index, Col, Label, Options::[Option]) -> integer()")
               "wxListCtrl:setItem/4"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#setItem-4" "setItem(This, Index, Col, Label) -> integer()")
               "wxListCtrl:setItem/2"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#setItem-2" "setItem(This, Info) -> boolean()")
               "wxListCtrl:setImageList/3"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#setImageList-3" "setImageList(This, ImageList, Which) -> ok")
               "wxListCtrl:setColumnWidth/3"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#setColumnWidth-3" "setColumnWidth(This, Col, Width) -> boolean()")
               "wxListCtrl:setColumn/3"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#setColumn-3" "setColumn(This, Col, Item) -> boolean()")
               "wxListCtrl:setBackgroundColour/2"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#setBackgroundColour-2" "setBackgroundColour(This, Colour) -> boolean()")
               "wxListCtrl:scrollList/3"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#scrollList-3" "scrollList(This, Dx, Dy) -> boolean()")
               "wxListCtrl:refreshItems/3"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#refreshItems-3" "refreshItems(This, ItemFrom, ItemTo) -> ok")
               "wxListCtrl:refreshItem/2"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#refreshItem-2" "refreshItem(This, Item) -> ok")
               "wxListCtrl:insertItem/4"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#insertItem-4" "insertItem(This, Index, Label, ImageIndex) -> integer()")
               "wxListCtrl:insertItem/3"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#insertItem-3" "insertItem(This, Index, ImageIndex) -> integer()")
               "wxListCtrl:insertItem/2"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#insertItem-2" "insertItem(This, Info) -> integer()")
               "wxListCtrl:insertColumn/4"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#insertColumn-4" "insertColumn(This, Col, Heading, Options::[Option]) -> integer()")
               "wxListCtrl:insertColumn/3"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#insertColumn-3" "insertColumn(This, Col, Heading) -> integer()")
               "wxListCtrl:hitTest/2"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#hitTest-2" "hitTest(This, Point) -> Result")
               "wxListCtrl:getViewRect/1"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#getViewRect-1" "getViewRect(This) -> {X::integer(), Y::integer(), W::integer(), H::integer()}")
               "wxListCtrl:getTopItem/1"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#getTopItem-1" "getTopItem(This) -> integer()")
               "wxListCtrl:getTextColour/1"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#getTextColour-1" "getTextColour(This) -> wx:wx_colour4()")
               "wxListCtrl:getSelectedItemCount/1"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#getSelectedItemCount-1" "getSelectedItemCount(This) -> integer()")
               "wxListCtrl:getNextItem/3"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#getNextItem-3" "getNextItem(This, Item, Options::[Option]) -> integer()")
               "wxListCtrl:getNextItem/2"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#getNextItem-2" "getNextItem(This, Item) -> integer()")
               "wxListCtrl:getItemTextColour/2"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#getItemTextColour-2" "getItemTextColour(This, Item) -> wx:wx_colour4()")
               "wxListCtrl:getItemText/2"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#getItemText-2" "getItemText(This, Item) -> unicode:charlist()")
               "wxListCtrl:getItemState/3"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#getItemState-3" "getItemState(This, Item, StateMask) -> integer()")
               "wxListCtrl:getItemSpacing/1"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#getItemSpacing-1" "getItemSpacing(This) -> {W::integer(), H::integer()}")
               "wxListCtrl:getItemRect/3"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#getItemRect-3" "getItemRect(This, Item, Options::[Option]) -> Result")
               "wxListCtrl:getItemRect/2"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#getItemRect-2" "getItemRect(This, Item) -> Result")
               "wxListCtrl:getItemPosition/2"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#getItemPosition-2" "getItemPosition(This, Item) -> Result")
               "wxListCtrl:getItemFont/2"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#getItemFont-2" "getItemFont(This, Item) -> wxFont:wxFont()")
               "wxListCtrl:getItemData/2"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#getItemData-2" "getItemData(This, Item) -> integer()")
               "wxListCtrl:getItemCount/1"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#getItemCount-1" "getItemCount(This) -> integer()")
               "wxListCtrl:getItemBackgroundColour/2"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#getItemBackgroundColour-2" "getItemBackgroundColour(This, Item) -> wx:wx_colour4()")
               "wxListCtrl:getItem/2"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#getItem-2" "getItem(This, Info) -> boolean()")
               "wxListCtrl:getImageList/2"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#getImageList-2" "getImageList(This, Which) -> wxImageList:wxImageList()")
               "wxListCtrl:getEditControl/1"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#getEditControl-1" "getEditControl(This) -> wxTextCtrl:wxTextCtrl()")
               "wxListCtrl:getCountPerPage/1"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#getCountPerPage-1" "getCountPerPage(This) -> integer()")
               "wxListCtrl:getColumnWidth/2"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#getColumnWidth-2" "getColumnWidth(This, Col) -> integer()")
               "wxListCtrl:getColumnCount/1"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#getColumnCount-1" "getColumnCount(This) -> integer()")
               "wxListCtrl:getColumn/3"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#getColumn-3" "getColumn(This, Col, Item) -> boolean()")
               "wxListCtrl:findItem/4"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#findItem-4" "findItem(This, Start, Str, Options::[Option]) -> integer()")
               "wxListCtrl:findItem/3"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#findItem-3" "findItem(This, Start, Str) -> integer()")
               "wxListCtrl:ensureVisible/2"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#ensureVisible-2" "ensureVisible(This, Item) -> boolean()")
               "wxListCtrl:editLabel/2"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#editLabel-2" "editLabel(This, Item) -> wxTextCtrl:wxTextCtrl()")
               "wxListCtrl:deleteItem/2"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#deleteItem-2" "deleteItem(This, Item) -> boolean()")
               "wxListCtrl:deleteColumn/2"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#deleteColumn-2" "deleteColumn(This, Col) -> boolean()")
               "wxListCtrl:deleteAllItems/1"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#deleteAllItems-1" "deleteAllItems(This) -> boolean()")
               "wxListCtrl:create/3"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#create-3" "create(This, Parent, Options::[Option]) -> wxListCtrl()")
               "wxListCtrl:create/2"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#create-2" "create(This, Parent) -> wxListCtrl()")
               "wxListCtrl:clearAll/1"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#clearAll-1" "clearAll(This) -> ok")
               "wxListCtrl:assignImageList/3"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#assignImageList-3" "assignImageList(This, ImageList, Which) -> ok")
               "wxListCtrl:arrange/2"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#arrange-2" "arrange(This, Options::[Option]) -> boolean()")
               "wxListCtrl:arrange/1"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#arrange-1" "arrange(This) -> boolean()")
               "wxListCtrl:new/2"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#new-2" "new(Parent, Options::[Option]) -> wxListCtrl()")
               "wxListCtrl:new/1"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#new-1" "new(Parent) -> wxListCtrl()")
               "wxListCtrl:new/0"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#new-0" "new() -> wxListCtrl()")
               "wxListCtrl:"
               ("http://www.erlang.org/doc/man/wxListCtrl.html#type-wxListCtrl" "wxListCtrl()")
               "wxListEvent:isEditCancelled/1"
               ("http://www.erlang.org/doc/man/wxListEvent.html#isEditCancelled-1" "isEditCancelled(This) -> boolean()")
               "wxListEvent:getItem/1"
               ("http://www.erlang.org/doc/man/wxListEvent.html#getItem-1" "getItem(This) -> wxListItem:wxListItem()")
               "wxListEvent:getMask/1"
               ("http://www.erlang.org/doc/man/wxListEvent.html#getMask-1" "getMask(This) -> integer()")
               "wxListEvent:getData/1"
               ("http://www.erlang.org/doc/man/wxListEvent.html#getData-1" "getData(This) -> integer()")
               "wxListEvent:getImage/1"
               ("http://www.erlang.org/doc/man/wxListEvent.html#getImage-1" "getImage(This) -> integer()")
               "wxListEvent:getText/1"
               ("http://www.erlang.org/doc/man/wxListEvent.html#getText-1" "getText(This) -> unicode:charlist()")
               "wxListEvent:getLabel/1"
               ("http://www.erlang.org/doc/man/wxListEvent.html#getLabel-1" "getLabel(This) -> unicode:charlist()")
               "wxListEvent:getPoint/1"
               ("http://www.erlang.org/doc/man/wxListEvent.html#getPoint-1" "getPoint(This) -> {X::integer(), Y::integer()}")
               "wxListEvent:getColumn/1"
               ("http://www.erlang.org/doc/man/wxListEvent.html#getColumn-1" "getColumn(This) -> integer()")
               "wxListEvent:getIndex/1"
               ("http://www.erlang.org/doc/man/wxListEvent.html#getIndex-1" "getIndex(This) -> integer()")
               "wxListEvent:getKeyCode/1"
               ("http://www.erlang.org/doc/man/wxListEvent.html#getKeyCode-1" "getKeyCode(This) -> integer()")
               "wxListEvent:getCacheTo/1"
               ("http://www.erlang.org/doc/man/wxListEvent.html#getCacheTo-1" "getCacheTo(This) -> integer()")
               "wxListEvent:getCacheFrom/1"
               ("http://www.erlang.org/doc/man/wxListEvent.html#getCacheFrom-1" "getCacheFrom(This) -> integer()")
               "wxListEvent:"
               ("http://www.erlang.org/doc/man/wxListEvent.html#type-wxListEvent" "wxListEvent()")
               "wxListItem:destroy/1"
               ("http://www.erlang.org/doc/man/wxListItem.html#destroy-1" "destroy(This:: wxListItem() ) -> ok")
               "wxListItem:setWidth/2"
               ("http://www.erlang.org/doc/man/wxListItem.html#setWidth-2" "setWidth(This, Width) -> ok")
               "wxListItem:setTextColour/2"
               ("http://www.erlang.org/doc/man/wxListItem.html#setTextColour-2" "setTextColour(This, ColText) -> ok")
               "wxListItem:setText/2"
               ("http://www.erlang.org/doc/man/wxListItem.html#setText-2" "setText(This, Text) -> ok")
               "wxListItem:setStateMask/2"
               ("http://www.erlang.org/doc/man/wxListItem.html#setStateMask-2" "setStateMask(This, StateMask) -> ok")
               "wxListItem:setState/2"
               ("http://www.erlang.org/doc/man/wxListItem.html#setState-2" "setState(This, State) -> ok")
               "wxListItem:setMask/2"
               ("http://www.erlang.org/doc/man/wxListItem.html#setMask-2" "setMask(This, Mask) -> ok")
               "wxListItem:setImage/2"
               ("http://www.erlang.org/doc/man/wxListItem.html#setImage-2" "setImage(This, Image) -> ok")
               "wxListItem:setId/2"
               ("http://www.erlang.org/doc/man/wxListItem.html#setId-2" "setId(This, Id) -> ok")
               "wxListItem:setFont/2"
               ("http://www.erlang.org/doc/man/wxListItem.html#setFont-2" "setFont(This, Font) -> ok")
               "wxListItem:setColumn/2"
               ("http://www.erlang.org/doc/man/wxListItem.html#setColumn-2" "setColumn(This, Col) -> ok")
               "wxListItem:setBackgroundColour/2"
               ("http://www.erlang.org/doc/man/wxListItem.html#setBackgroundColour-2" "setBackgroundColour(This, ColBack) -> ok")
               "wxListItem:setAlign/2"
               ("http://www.erlang.org/doc/man/wxListItem.html#setAlign-2" "setAlign(This, Align) -> ok")
               "wxListItem:getWidth/1"
               ("http://www.erlang.org/doc/man/wxListItem.html#getWidth-1" "getWidth(This) -> integer()")
               "wxListItem:getTextColour/1"
               ("http://www.erlang.org/doc/man/wxListItem.html#getTextColour-1" "getTextColour(This) -> wx:wx_colour4()")
               "wxListItem:getText/1"
               ("http://www.erlang.org/doc/man/wxListItem.html#getText-1" "getText(This) -> unicode:charlist()")
               "wxListItem:getState/1"
               ("http://www.erlang.org/doc/man/wxListItem.html#getState-1" "getState(This) -> integer()")
               "wxListItem:getMask/1"
               ("http://www.erlang.org/doc/man/wxListItem.html#getMask-1" "getMask(This) -> integer()")
               "wxListItem:getImage/1"
               ("http://www.erlang.org/doc/man/wxListItem.html#getImage-1" "getImage(This) -> integer()")
               "wxListItem:getId/1"
               ("http://www.erlang.org/doc/man/wxListItem.html#getId-1" "getId(This) -> integer()")
               "wxListItem:getFont/1"
               ("http://www.erlang.org/doc/man/wxListItem.html#getFont-1" "getFont(This) -> wxFont:wxFont()")
               "wxListItem:getColumn/1"
               ("http://www.erlang.org/doc/man/wxListItem.html#getColumn-1" "getColumn(This) -> integer()")
               "wxListItem:getBackgroundColour/1"
               ("http://www.erlang.org/doc/man/wxListItem.html#getBackgroundColour-1" "getBackgroundColour(This) -> wx:wx_colour4()")
               "wxListItem:getAlign/1"
               ("http://www.erlang.org/doc/man/wxListItem.html#getAlign-1" "getAlign(This) -> wx:wx_enum()")
               "wxListItem:clear/1"
               ("http://www.erlang.org/doc/man/wxListItem.html#clear-1" "clear(This) -> ok")
               "wxListItem:new/1"
               ("http://www.erlang.org/doc/man/wxListItem.html#new-1" "new(Item) -> wxListItem()")
               "wxListItem:new/0"
               ("http://www.erlang.org/doc/man/wxListItem.html#new-0" "new() -> wxListItem()")
               "wxListItem:"
               ("http://www.erlang.org/doc/man/wxListItem.html#type-wxListItem" "wxListItem()")
               "wxListItemAttr:destroy/1"
               ("http://www.erlang.org/doc/man/wxListItemAttr.html#destroy-1" "destroy(This:: wxListItemAttr() ) -> ok")
               "wxListItemAttr:setTextColour/2"
               ("http://www.erlang.org/doc/man/wxListItemAttr.html#setTextColour-2" "setTextColour(This, ColText) -> ok")
               "wxListItemAttr:setFont/2"
               ("http://www.erlang.org/doc/man/wxListItemAttr.html#setFont-2" "setFont(This, Font) -> ok")
               "wxListItemAttr:setBackgroundColour/2"
               ("http://www.erlang.org/doc/man/wxListItemAttr.html#setBackgroundColour-2" "setBackgroundColour(This, ColBack) -> ok")
               "wxListItemAttr:hasTextColour/1"
               ("http://www.erlang.org/doc/man/wxListItemAttr.html#hasTextColour-1" "hasTextColour(This) -> boolean()")
               "wxListItemAttr:hasFont/1"
               ("http://www.erlang.org/doc/man/wxListItemAttr.html#hasFont-1" "hasFont(This) -> boolean()")
               "wxListItemAttr:hasBackgroundColour/1"
               ("http://www.erlang.org/doc/man/wxListItemAttr.html#hasBackgroundColour-1" "hasBackgroundColour(This) -> boolean()")
               "wxListItemAttr:getTextColour/1"
               ("http://www.erlang.org/doc/man/wxListItemAttr.html#getTextColour-1" "getTextColour(This) -> wx:wx_colour4()")
               "wxListItemAttr:getFont/1"
               ("http://www.erlang.org/doc/man/wxListItemAttr.html#getFont-1" "getFont(This) -> wxFont:wxFont()")
               "wxListItemAttr:getBackgroundColour/1"
               ("http://www.erlang.org/doc/man/wxListItemAttr.html#getBackgroundColour-1" "getBackgroundColour(This) -> wx:wx_colour4()")
               "wxListItemAttr:new/3"
               ("http://www.erlang.org/doc/man/wxListItemAttr.html#new-3" "new(ColText, ColBack, Font) -> wxListItemAttr()")
               "wxListItemAttr:new/0"
               ("http://www.erlang.org/doc/man/wxListItemAttr.html#new-0" "new() -> wxListItemAttr()")
               "wxListItemAttr:"
               ("http://www.erlang.org/doc/man/wxListItemAttr.html#type-wxListItemAttr" "wxListItemAttr()")
               "wxListView:setColumnImage/3"
               ("http://www.erlang.org/doc/man/wxListView.html#setColumnImage-3" "setColumnImage(This, Col, Image) -> ok")
               "wxListView:select/3"
               ("http://www.erlang.org/doc/man/wxListView.html#select-3" "select(This, N, Options::[Option]) -> ok")
               "wxListView:select/2"
               ("http://www.erlang.org/doc/man/wxListView.html#select-2" "select(This, N) -> ok")
               "wxListView:isSelected/2"
               ("http://www.erlang.org/doc/man/wxListView.html#isSelected-2" "isSelected(This, Index) -> boolean()")
               "wxListView:getNextSelected/2"
               ("http://www.erlang.org/doc/man/wxListView.html#getNextSelected-2" "getNextSelected(This, Item) -> integer()")
               "wxListView:getFocusedItem/1"
               ("http://www.erlang.org/doc/man/wxListView.html#getFocusedItem-1" "getFocusedItem(This) -> integer()")
               "wxListView:getFirstSelected/1"
               ("http://www.erlang.org/doc/man/wxListView.html#getFirstSelected-1" "getFirstSelected(This) -> integer()")
               "wxListView:focus/2"
               ("http://www.erlang.org/doc/man/wxListView.html#focus-2" "focus(This, Index) -> ok")
               "wxListView:clearColumnImage/2"
               ("http://www.erlang.org/doc/man/wxListView.html#clearColumnImage-2" "clearColumnImage(This, Col) -> ok")
               "wxListView:"
               ("http://www.erlang.org/doc/man/wxListView.html#type-wxListView" "wxListView()")
               "wxLocale:destroy/1"
               ("http://www.erlang.org/doc/man/wxLocale.html#destroy-1" "destroy(This:: wxLocale() ) -> ok")
               "wxLocale:isOk/1"
               ("http://www.erlang.org/doc/man/wxLocale.html#isOk-1" "isOk(This) -> boolean()")
               "wxLocale:isLoaded/2"
               ("http://www.erlang.org/doc/man/wxLocale.html#isLoaded-2" "isLoaded(This, SzDomain) -> boolean()")
               "wxLocale:getSystemLanguage/0"
               ("http://www.erlang.org/doc/man/wxLocale.html#getSystemLanguage-0" "getSystemLanguage() -> integer()")
               "wxLocale:getSystemEncodingName/0"
               ("http://www.erlang.org/doc/man/wxLocale.html#getSystemEncodingName-0" "getSystemEncodingName() -> unicode:charlist()")
               "wxLocale:getSystemEncoding/0"
               ("http://www.erlang.org/doc/man/wxLocale.html#getSystemEncoding-0" "getSystemEncoding() -> wx:wx_enum()")
               "wxLocale:getSysName/1"
               ("http://www.erlang.org/doc/man/wxLocale.html#getSysName-1" "getSysName(This) -> unicode:charlist()")
               "wxLocale:getHeaderValue/3"
               ("http://www.erlang.org/doc/man/wxLocale.html#getHeaderValue-3" "getHeaderValue(This, SzHeader, Options::[Option]) -> unicode:charlist()")
               "wxLocale:getHeaderValue/2"
               ("http://www.erlang.org/doc/man/wxLocale.html#getHeaderValue-2" "getHeaderValue(This, SzHeader) -> unicode:charlist()")
               "wxLocale:getString/5"
               ("http://www.erlang.org/doc/man/wxLocale.html#getString-5" "getString(This, SzOrigString, SzOrigString2, N, Options::[Option]) -> unicode:charlist()")
               "wxLocale:getString/4"
               ("http://www.erlang.org/doc/man/wxLocale.html#getString-4" "getString(This, SzOrigString, SzOrigString2, N) -> unicode:charlist()")
               "wxLocale:getString/3"
               ("http://www.erlang.org/doc/man/wxLocale.html#getString-3" "getString(This, SzOrigString, Options::[Option]) -> unicode:charlist()")
               "wxLocale:getString/2"
               ("http://www.erlang.org/doc/man/wxLocale.html#getString-2" "getString(This, SzOrigString) -> unicode:charlist()")
               "wxLocale:getName/1"
               ("http://www.erlang.org/doc/man/wxLocale.html#getName-1" "getName(This) -> unicode:charlist()")
               "wxLocale:getLocale/1"
               ("http://www.erlang.org/doc/man/wxLocale.html#getLocale-1" "getLocale(This) -> unicode:charlist()")
               "wxLocale:getLanguageName/1"
               ("http://www.erlang.org/doc/man/wxLocale.html#getLanguageName-1" "getLanguageName(Lang) -> unicode:charlist()")
               "wxLocale:getLanguage/1"
               ("http://www.erlang.org/doc/man/wxLocale.html#getLanguage-1" "getLanguage(This) -> integer()")
               "wxLocale:getCanonicalName/1"
               ("http://www.erlang.org/doc/man/wxLocale.html#getCanonicalName-1" "getCanonicalName(This) -> unicode:charlist()")
               "wxLocale:addCatalogLookupPathPrefix/1"
               ("http://www.erlang.org/doc/man/wxLocale.html#addCatalogLookupPathPrefix-1" "addCatalogLookupPathPrefix(Prefix) -> ok")
               "wxLocale:addCatalog/4"
               ("http://www.erlang.org/doc/man/wxLocale.html#addCatalog-4" "addCatalog(This, SzDomain, MsgIdLanguage, MsgIdCharset) -> boolean()")
               "wxLocale:addCatalog/2"
               ("http://www.erlang.org/doc/man/wxLocale.html#addCatalog-2" "addCatalog(This, SzDomain) -> boolean()")
               "wxLocale:init/2"
               ("http://www.erlang.org/doc/man/wxLocale.html#init-2" "init(This, Options::[Option]) -> boolean()")
               "wxLocale:init/1"
               ("http://www.erlang.org/doc/man/wxLocale.html#init-1" "init(This) -> boolean()")
               "wxLocale:new/2"
               ("http://www.erlang.org/doc/man/wxLocale.html#new-2" "new(Language, Options::[Option]) -> wxLocale()")
               "wxLocale:new/1"
               ("http://www.erlang.org/doc/man/wxLocale.html#new-1" "new(Language) -> wxLocale()")
               "wxLocale:new/0"
               ("http://www.erlang.org/doc/man/wxLocale.html#new-0" "new() -> wxLocale()")
               "wxLocale:"
               ("http://www.erlang.org/doc/man/wxLocale.html#type-wxLocale" "wxLocale()")
               "wxLogNull:destroy/1"
               ("http://www.erlang.org/doc/man/wxLogNull.html#destroy-1" "destroy(This:: wxLogNull() ) -> ok")
               "wxLogNull:new/0"
               ("http://www.erlang.org/doc/man/wxLogNull.html#new-0" "new() -> wxLogNull()")
               "wxLogNull:"
               ("http://www.erlang.org/doc/man/wxLogNull.html#type-wxLogNull" "wxLogNull()")
               "wxMask:destroy/1"
               ("http://www.erlang.org/doc/man/wxMask.html#destroy-1" "destroy(This:: wxMask() ) -> ok")
               "wxMask:create/3"
               ("http://www.erlang.org/doc/man/wxMask.html#create-3" "create(This, Bitmap, PaletteIndex) -> boolean()")
               "wxMask:create/2"
               ("http://www.erlang.org/doc/man/wxMask.html#create-2" "create(This, Bitmap) -> boolean()")
               "wxMask:new/2"
               ("http://www.erlang.org/doc/man/wxMask.html#new-2" "new(Bitmap, PaletteIndex) -> wxMask()")
               "wxMask:new/1"
               ("http://www.erlang.org/doc/man/wxMask.html#new-1" "new(Bitmap) -> wxMask()")
               "wxMask:new/0"
               ("http://www.erlang.org/doc/man/wxMask.html#new-0" "new() -> wxMask()")
               "wxMask:"
               ("http://www.erlang.org/doc/man/wxMask.html#type-wxMask" "wxMask()")
               "wxMaximizeEvent:"
               ("http://www.erlang.org/doc/man/wxMaximizeEvent.html#type-wxMaximizeEvent" "wxMaximizeEvent()")
               "wxMDIChildFrame:destroy/1"
               ("http://www.erlang.org/doc/man/wxMDIChildFrame.html#destroy-1" "destroy(This:: wxMDIChildFrame() ) -> ok")
               "wxMDIChildFrame:restore/1"
               ("http://www.erlang.org/doc/man/wxMDIChildFrame.html#restore-1" "restore(This) -> ok")
               "wxMDIChildFrame:maximize/2"
               ("http://www.erlang.org/doc/man/wxMDIChildFrame.html#maximize-2" "maximize(This, Options::[Option]) -> ok")
               "wxMDIChildFrame:maximize/1"
               ("http://www.erlang.org/doc/man/wxMDIChildFrame.html#maximize-1" "maximize(This) -> ok")
               "wxMDIChildFrame:create/5"
               ("http://www.erlang.org/doc/man/wxMDIChildFrame.html#create-5" "create(This, Parent, Id, Title, Options::[Option]) -> boolean()")
               "wxMDIChildFrame:create/4"
               ("http://www.erlang.org/doc/man/wxMDIChildFrame.html#create-4" "create(This, Parent, Id, Title) -> boolean()")
               "wxMDIChildFrame:activate/1"
               ("http://www.erlang.org/doc/man/wxMDIChildFrame.html#activate-1" "activate(This) -> ok")
               "wxMDIChildFrame:new/4"
               ("http://www.erlang.org/doc/man/wxMDIChildFrame.html#new-4" "new(Parent, Id, Title, Options::[Option]) -> wxMDIChildFrame()")
               "wxMDIChildFrame:new/3"
               ("http://www.erlang.org/doc/man/wxMDIChildFrame.html#new-3" "new(Parent, Id, Title) -> wxMDIChildFrame()")
               "wxMDIChildFrame:new/0"
               ("http://www.erlang.org/doc/man/wxMDIChildFrame.html#new-0" "new() -> wxMDIChildFrame()")
               "wxMDIChildFrame:"
               ("http://www.erlang.org/doc/man/wxMDIChildFrame.html#type-wxMDIChildFrame" "wxMDIChildFrame()")
               "wxMDIClientWindow:destroy/1"
               ("http://www.erlang.org/doc/man/wxMDIClientWindow.html#destroy-1" "destroy(This:: wxMDIClientWindow() ) -> ok")
               "wxMDIClientWindow:createClient/3"
               ("http://www.erlang.org/doc/man/wxMDIClientWindow.html#createClient-3" "createClient(This, Parent, Options::[Option]) -> boolean()")
               "wxMDIClientWindow:createClient/2"
               ("http://www.erlang.org/doc/man/wxMDIClientWindow.html#createClient-2" "createClient(This, Parent) -> boolean()")
               "wxMDIClientWindow:new/2"
               ("http://www.erlang.org/doc/man/wxMDIClientWindow.html#new-2" "new(Parent, Options::[Option]) -> wxMDIClientWindow()")
               "wxMDIClientWindow:new/1"
               ("http://www.erlang.org/doc/man/wxMDIClientWindow.html#new-1" "new(Parent) -> wxMDIClientWindow()")
               "wxMDIClientWindow:new/0"
               ("http://www.erlang.org/doc/man/wxMDIClientWindow.html#new-0" "new() -> wxMDIClientWindow()")
               "wxMDIClientWindow:"
               ("http://www.erlang.org/doc/man/wxMDIClientWindow.html#type-wxMDIClientWindow" "wxMDIClientWindow()")
               "wxMDIParentFrame:destroy/1"
               ("http://www.erlang.org/doc/man/wxMDIParentFrame.html#destroy-1" "destroy(This:: wxMDIParentFrame() ) -> ok")
               "wxMDIParentFrame:tile/2"
               ("http://www.erlang.org/doc/man/wxMDIParentFrame.html#tile-2" "tile(This, Options::[Option]) -> ok")
               "wxMDIParentFrame:tile/1"
               ("http://www.erlang.org/doc/man/wxMDIParentFrame.html#tile-1" "tile(This) -> ok")
               "wxMDIParentFrame:getClientWindow/1"
               ("http://www.erlang.org/doc/man/wxMDIParentFrame.html#getClientWindow-1" "getClientWindow(This) -> wxMDIClientWindow:wxMDIClientWindow()")
               "wxMDIParentFrame:getActiveChild/1"
               ("http://www.erlang.org/doc/man/wxMDIParentFrame.html#getActiveChild-1" "getActiveChild(This) -> wxMDIChildFrame:wxMDIChildFrame()")
               "wxMDIParentFrame:create/5"
               ("http://www.erlang.org/doc/man/wxMDIParentFrame.html#create-5" "create(This, Parent, Id, Title, Options::[Option]) -> boolean()")
               "wxMDIParentFrame:create/4"
               ("http://www.erlang.org/doc/man/wxMDIParentFrame.html#create-4" "create(This, Parent, Id, Title) -> boolean()")
               "wxMDIParentFrame:cascade/1"
               ("http://www.erlang.org/doc/man/wxMDIParentFrame.html#cascade-1" "cascade(This) -> ok")
               "wxMDIParentFrame:arrangeIcons/1"
               ("http://www.erlang.org/doc/man/wxMDIParentFrame.html#arrangeIcons-1" "arrangeIcons(This) -> ok")
               "wxMDIParentFrame:activatePrevious/1"
               ("http://www.erlang.org/doc/man/wxMDIParentFrame.html#activatePrevious-1" "activatePrevious(This) -> ok")
               "wxMDIParentFrame:activateNext/1"
               ("http://www.erlang.org/doc/man/wxMDIParentFrame.html#activateNext-1" "activateNext(This) -> ok")
               "wxMDIParentFrame:new/4"
               ("http://www.erlang.org/doc/man/wxMDIParentFrame.html#new-4" "new(Parent, Id, Title, Options::[Option]) -> wxMDIParentFrame()")
               "wxMDIParentFrame:new/3"
               ("http://www.erlang.org/doc/man/wxMDIParentFrame.html#new-3" "new(Parent, Id, Title) -> wxMDIParentFrame()")
               "wxMDIParentFrame:new/0"
               ("http://www.erlang.org/doc/man/wxMDIParentFrame.html#new-0" "new() -> wxMDIParentFrame()")
               "wxMDIParentFrame:"
               ("http://www.erlang.org/doc/man/wxMDIParentFrame.html#type-wxMDIParentFrame" "wxMDIParentFrame()")
               "wxMemoryDC:destroy/1"
               ("http://www.erlang.org/doc/man/wxMemoryDC.html#destroy-1" "destroy(This:: wxMemoryDC() ) -> ok")
               "wxMemoryDC:selectObjectAsSource/2"
               ("http://www.erlang.org/doc/man/wxMemoryDC.html#selectObjectAsSource-2" "selectObjectAsSource(This, Bmp) -> ok")
               "wxMemoryDC:selectObject/2"
               ("http://www.erlang.org/doc/man/wxMemoryDC.html#selectObject-2" "selectObject(This, Bmp) -> ok")
               "wxMemoryDC:new/1"
               ("http://www.erlang.org/doc/man/wxMemoryDC.html#new-1" "new(Dc) -> wxMemoryDC()")
               "wxMemoryDC:new/0"
               ("http://www.erlang.org/doc/man/wxMemoryDC.html#new-0" "new() -> wxMemoryDC()")
               "wxMemoryDC:"
               ("http://www.erlang.org/doc/man/wxMemoryDC.html#type-wxMemoryDC" "wxMemoryDC()")
               "wxMenu:destroy/1"
               ("http://www.erlang.org/doc/man/wxMenu.html#destroy-1" "destroy(This:: wxMenu() ) -> ok")
               "wxMenu:setTitle/2"
               ("http://www.erlang.org/doc/man/wxMenu.html#setTitle-2" "setTitle(This, Title) -> ok")
               "wxMenu:setLabel/3"
               ("http://www.erlang.org/doc/man/wxMenu.html#setLabel-3" "setLabel(This, Itemid, Label) -> ok")
               "wxMenu:setHelpString/3"
               ("http://www.erlang.org/doc/man/wxMenu.html#setHelpString-3" "setHelpString(This, Itemid, HelpString) -> ok")
               "wxMenu:remove/2"
               ("http://www.erlang.org/doc/man/wxMenu.html#remove-2" "remove(This, Itemid) -> wxMenuItem:wxMenuItem()")
               "wxMenu:prependSeparator/1"
               ("http://www.erlang.org/doc/man/wxMenu.html#prependSeparator-1" "prependSeparator(This) -> wxMenuItem:wxMenuItem()")
               "wxMenu:prependRadioItem/4"
               ("http://www.erlang.org/doc/man/wxMenu.html#prependRadioItem-4" "prependRadioItem(This, Itemid, Text, Options::[Option]) -> wxMenuItem:wxMenuItem()")
               "wxMenu:prependRadioItem/3"
               ("http://www.erlang.org/doc/man/wxMenu.html#prependRadioItem-3" "prependRadioItem(This, Itemid, Text) -> wxMenuItem:wxMenuItem()")
               "wxMenu:prependCheckItem/4"
               ("http://www.erlang.org/doc/man/wxMenu.html#prependCheckItem-4" "prependCheckItem(This, Itemid, Text, Options::[Option]) -> wxMenuItem:wxMenuItem()")
               "wxMenu:prependCheckItem/3"
               ("http://www.erlang.org/doc/man/wxMenu.html#prependCheckItem-3" "prependCheckItem(This, Itemid, Text) -> wxMenuItem:wxMenuItem()")
               "wxMenu:prepend/5"
               ("http://www.erlang.org/doc/man/wxMenu.html#prepend-5" "prepend(This, Itemid, Text, Help, IsCheckable) -> ok")
               "wxMenu:prepend/4"
               ("http://www.erlang.org/doc/man/wxMenu.html#prepend-4" "prepend(This, Itemid, Text, Submenu) -> wxMenuItem:wxMenuItem()")
               "wxMenu:prepend/3"
               ("http://www.erlang.org/doc/man/wxMenu.html#prepend-3" "prepend(This, Itemid, Options::[Option]) -> wxMenuItem:wxMenuItem()")
               "wxMenu:prepend/2"
               ("http://www.erlang.org/doc/man/wxMenu.html#prepend-2" "prepend(This, Itemid) -> wxMenuItem:wxMenuItem()")
               "wxMenu:isEnabled/2"
               ("http://www.erlang.org/doc/man/wxMenu.html#isEnabled-2" "isEnabled(This, Itemid) -> boolean()")
               "wxMenu:isChecked/2"
               ("http://www.erlang.org/doc/man/wxMenu.html#isChecked-2" "isChecked(This, Itemid) -> boolean()")
               "wxMenu:insertSeparator/2"
               ("http://www.erlang.org/doc/man/wxMenu.html#insertSeparator-2" "insertSeparator(This, Pos) -> wxMenuItem:wxMenuItem()")
               "wxMenu:insertRadioItem/5"
               ("http://www.erlang.org/doc/man/wxMenu.html#insertRadioItem-5" "insertRadioItem(This, Pos, Itemid, Text, Options::[Option]) -> wxMenuItem:wxMenuItem()")
               "wxMenu:insertRadioItem/4"
               ("http://www.erlang.org/doc/man/wxMenu.html#insertRadioItem-4" "insertRadioItem(This, Pos, Itemid, Text) -> wxMenuItem:wxMenuItem()")
               "wxMenu:insertCheckItem/5"
               ("http://www.erlang.org/doc/man/wxMenu.html#insertCheckItem-5" "insertCheckItem(This, Pos, Itemid, Text, Options::[Option]) -> wxMenuItem:wxMenuItem()")
               "wxMenu:insertCheckItem/4"
               ("http://www.erlang.org/doc/man/wxMenu.html#insertCheckItem-4" "insertCheckItem(This, Pos, Itemid, Text) -> wxMenuItem:wxMenuItem()")
               "wxMenu:insert/6"
               ("http://www.erlang.org/doc/man/wxMenu.html#insert-6" "insert(This, Pos, Itemid, Text, Help, IsCheckable) -> ok")
               "wxMenu:insert/5"
               ("http://www.erlang.org/doc/man/wxMenu.html#insert-5" "insert(This, Pos, Itemid, Text, Submenu) -> wxMenuItem:wxMenuItem()")
               "wxMenu:insert/4"
               ("http://www.erlang.org/doc/man/wxMenu.html#insert-4" "insert(This, Pos, Itemid, Options::[Option]) -> wxMenuItem:wxMenuItem()")
               "wxMenu:insert/3"
               ("http://www.erlang.org/doc/man/wxMenu.html#insert-3" "insert(This, Pos, Itemid) -> wxMenuItem:wxMenuItem()")
               "wxMenu:getTitle/1"
               ("http://www.erlang.org/doc/man/wxMenu.html#getTitle-1" "getTitle(This) -> unicode:charlist()")
               "wxMenu:getMenuItems/1"
               ("http://www.erlang.org/doc/man/wxMenu.html#getMenuItems-1" "getMenuItems(This) -> [ wxMenuItem:wxMenuItem() ]")
               "wxMenu:getMenuItemCount/1"
               ("http://www.erlang.org/doc/man/wxMenu.html#getMenuItemCount-1" "getMenuItemCount(This) -> integer()")
               "wxMenu:getLabel/2"
               ("http://www.erlang.org/doc/man/wxMenu.html#getLabel-2" "getLabel(This, Itemid) -> unicode:charlist()")
               "wxMenu:getHelpString/2"
               ("http://www.erlang.org/doc/man/wxMenu.html#getHelpString-2" "getHelpString(This, Itemid) -> unicode:charlist()")
               "wxMenu:findItemByPosition/2"
               ("http://www.erlang.org/doc/man/wxMenu.html#findItemByPosition-2" "findItemByPosition(This, Position) -> wxMenuItem:wxMenuItem()")
               "wxMenu:findItem/2"
               ("http://www.erlang.org/doc/man/wxMenu.html#findItem-2" "findItem(This, Itemid) -> wxMenuItem:wxMenuItem()")
               "wxMenu:enable/3"
               ("http://www.erlang.org/doc/man/wxMenu.html#enable-3" "enable(This, Itemid, Enable) -> ok")
               "wxMenu:Destroy/2"
               ("http://www.erlang.org/doc/man/wxMenu.html#Destroy-2" "Destroy(This, Itemid) -> boolean()")
               "wxMenu:delete/2"
               ("http://www.erlang.org/doc/man/wxMenu.html#delete-2" "delete(This, Itemid) -> boolean()")
               "wxMenu:check/3"
               ("http://www.erlang.org/doc/man/wxMenu.html#check-3" "check(This, Itemid, Check) -> ok")
               "wxMenu:break/1"
               ("http://www.erlang.org/doc/man/wxMenu.html#break-1" "break(This) -> ok")
               "wxMenu:appendSeparator/1"
               ("http://www.erlang.org/doc/man/wxMenu.html#appendSeparator-1" "appendSeparator(This) -> wxMenuItem:wxMenuItem()")
               "wxMenu:appendRadioItem/4"
               ("http://www.erlang.org/doc/man/wxMenu.html#appendRadioItem-4" "appendRadioItem(This, Itemid, Text, Options::[Option]) -> wxMenuItem:wxMenuItem()")
               "wxMenu:appendRadioItem/3"
               ("http://www.erlang.org/doc/man/wxMenu.html#appendRadioItem-3" "appendRadioItem(This, Itemid, Text) -> wxMenuItem:wxMenuItem()")
               "wxMenu:appendCheckItem/4"
               ("http://www.erlang.org/doc/man/wxMenu.html#appendCheckItem-4" "appendCheckItem(This, Itemid, Text, Options::[Option]) -> wxMenuItem:wxMenuItem()")
               "wxMenu:appendCheckItem/3"
               ("http://www.erlang.org/doc/man/wxMenu.html#appendCheckItem-3" "appendCheckItem(This, Itemid, Text) -> wxMenuItem:wxMenuItem()")
               "wxMenu:append/5"
               ("http://www.erlang.org/doc/man/wxMenu.html#append-5" "append(This, Itemid, Text, Help, IsCheckable) -> ok")
               "wxMenu:append/4"
               ("http://www.erlang.org/doc/man/wxMenu.html#append-4" "append(This, Itemid, Text, Submenu) -> wxMenuItem:wxMenuItem()")
               "wxMenu:append/3"
               ("http://www.erlang.org/doc/man/wxMenu.html#append-3" "append(This, Itemid, Text) -> wxMenuItem:wxMenuItem()")
               "wxMenu:append/2"
               ("http://www.erlang.org/doc/man/wxMenu.html#append-2" "append(This, Item) -> wxMenuItem:wxMenuItem()")
               "wxMenu:new/2"
               ("http://www.erlang.org/doc/man/wxMenu.html#new-2" "new(Title, Options::[Option]) -> wxMenu()")
               "wxMenu:new/1"
               ("http://www.erlang.org/doc/man/wxMenu.html#new-1" "new(Options::[Option]) -> wxMenu()")
               "wxMenu:new/0"
               ("http://www.erlang.org/doc/man/wxMenu.html#new-0" "new() -> wxMenu()")
               "wxMenu:"
               ("http://www.erlang.org/doc/man/wxMenu.html#type-wxMenu" "wxMenu()")
               "wxMenuBar:destroy/1"
               ("http://www.erlang.org/doc/man/wxMenuBar.html#destroy-1" "destroy(This:: wxMenuBar() ) -> ok")
               "wxMenuBar:setLabelTop/3"
               ("http://www.erlang.org/doc/man/wxMenuBar.html#setLabelTop-3" "setLabelTop(This, Pos, Label) -> ok")
               "wxMenuBar:setLabel/3"
               ("http://www.erlang.org/doc/man/wxMenuBar.html#setLabel-3" "setLabel(This, Itemid, Label) -> ok")
               "wxMenuBar:setLabel/2"
               ("http://www.erlang.org/doc/man/wxMenuBar.html#setLabel-2" "setLabel(This, S) -> ok")
               "wxMenuBar:setHelpString/3"
               ("http://www.erlang.org/doc/man/wxMenuBar.html#setHelpString-3" "setHelpString(This, Itemid, HelpString) -> ok")
               "wxMenuBar:replace/4"
               ("http://www.erlang.org/doc/man/wxMenuBar.html#replace-4" "replace(This, Pos, Menu, Title) -> wxMenu:wxMenu()")
               "wxMenuBar:remove/2"
               ("http://www.erlang.org/doc/man/wxMenuBar.html#remove-2" "remove(This, Pos) -> wxMenu:wxMenu()")
               "wxMenuBar:isEnabled/2"
               ("http://www.erlang.org/doc/man/wxMenuBar.html#isEnabled-2" "isEnabled(This, Itemid) -> boolean()")
               "wxMenuBar:isEnabled/1"
               ("http://www.erlang.org/doc/man/wxMenuBar.html#isEnabled-1" "isEnabled(This) -> boolean()")
               "wxMenuBar:isChecked/2"
               ("http://www.erlang.org/doc/man/wxMenuBar.html#isChecked-2" "isChecked(This, Itemid) -> boolean()")
               "wxMenuBar:insert/4"
               ("http://www.erlang.org/doc/man/wxMenuBar.html#insert-4" "insert(This, Pos, Menu, Title) -> boolean()")
               "wxMenuBar:getMenuCount/1"
               ("http://www.erlang.org/doc/man/wxMenuBar.html#getMenuCount-1" "getMenuCount(This) -> integer()")
               "wxMenuBar:getMenu/2"
               ("http://www.erlang.org/doc/man/wxMenuBar.html#getMenu-2" "getMenu(This, Pos) -> wxMenu:wxMenu()")
               "wxMenuBar:getLabelTop/2"
               ("http://www.erlang.org/doc/man/wxMenuBar.html#getLabelTop-2" "getLabelTop(This, Pos) -> unicode:charlist()")
               "wxMenuBar:getLabel/2"
               ("http://www.erlang.org/doc/man/wxMenuBar.html#getLabel-2" "getLabel(This, Itemid) -> unicode:charlist()")
               "wxMenuBar:getLabel/1"
               ("http://www.erlang.org/doc/man/wxMenuBar.html#getLabel-1" "getLabel(This) -> unicode:charlist()")
               "wxMenuBar:getHelpString/2"
               ("http://www.erlang.org/doc/man/wxMenuBar.html#getHelpString-2" "getHelpString(This, Itemid) -> unicode:charlist()")
               "wxMenuBar:findItem/2"
               ("http://www.erlang.org/doc/man/wxMenuBar.html#findItem-2" "findItem(This, Id) -> wxMenuItem:wxMenuItem()")
               "wxMenuBar:findMenuItem/3"
               ("http://www.erlang.org/doc/man/wxMenuBar.html#findMenuItem-3" "findMenuItem(This, MenuString, ItemString) -> integer()")
               "wxMenuBar:findMenu/2"
               ("http://www.erlang.org/doc/man/wxMenuBar.html#findMenu-2" "findMenu(This, Title) -> integer()")
               "wxMenuBar:enableTop/3"
               ("http://www.erlang.org/doc/man/wxMenuBar.html#enableTop-3" "enableTop(This, Pos, Flag) -> ok")
               "wxMenuBar:enable/3"
               ("http://www.erlang.org/doc/man/wxMenuBar.html#enable-3" "enable(This, Itemid, Enable) -> ok")
               "wxMenuBar:enable/2"
               ("http://www.erlang.org/doc/man/wxMenuBar.html#enable-2" "enable(This, Options::[Option]) -> boolean()")
               "wxMenuBar:enable/1"
               ("http://www.erlang.org/doc/man/wxMenuBar.html#enable-1" "enable(This) -> boolean()")
               "wxMenuBar:check/3"
               ("http://www.erlang.org/doc/man/wxMenuBar.html#check-3" "check(This, Itemid, Check) -> ok")
               "wxMenuBar:append/3"
               ("http://www.erlang.org/doc/man/wxMenuBar.html#append-3" "append(This, Menu, Title) -> boolean()")
               "wxMenuBar:new/1"
               ("http://www.erlang.org/doc/man/wxMenuBar.html#new-1" "new(Style) -> wxMenuBar()")
               "wxMenuBar:new/0"
               ("http://www.erlang.org/doc/man/wxMenuBar.html#new-0" "new() -> wxMenuBar()")
               "wxMenuBar:"
               ("http://www.erlang.org/doc/man/wxMenuBar.html#type-wxMenuBar" "wxMenuBar()")
               "wxMenuEvent:isPopup/1"
               ("http://www.erlang.org/doc/man/wxMenuEvent.html#isPopup-1" "isPopup(This) -> boolean()")
               "wxMenuEvent:getMenuId/1"
               ("http://www.erlang.org/doc/man/wxMenuEvent.html#getMenuId-1" "getMenuId(This) -> integer()")
               "wxMenuEvent:getMenu/1"
               ("http://www.erlang.org/doc/man/wxMenuEvent.html#getMenu-1" "getMenu(This) -> wxMenu:wxMenu()")
               "wxMenuEvent:"
               ("http://www.erlang.org/doc/man/wxMenuEvent.html#type-wxMenuEvent" "wxMenuEvent()")
               "wxMenuItem:destroy/1"
               ("http://www.erlang.org/doc/man/wxMenuItem.html#destroy-1" "destroy(This:: wxMenuItem() ) -> ok")
               "wxMenuItem:setText/2"
               ("http://www.erlang.org/doc/man/wxMenuItem.html#setText-2" "setText(This, Str) -> ok")
               "wxMenuItem:setSubMenu/2"
               ("http://www.erlang.org/doc/man/wxMenuItem.html#setSubMenu-2" "setSubMenu(This, Menu) -> ok")
               "wxMenuItem:setMenu/2"
               ("http://www.erlang.org/doc/man/wxMenuItem.html#setMenu-2" "setMenu(This, Menu) -> ok")
               "wxMenuItem:setHelp/2"
               ("http://www.erlang.org/doc/man/wxMenuItem.html#setHelp-2" "setHelp(This, Str) -> ok")
               "wxMenuItem:setBitmap/2"
               ("http://www.erlang.org/doc/man/wxMenuItem.html#setBitmap-2" "setBitmap(This, Bitmap) -> ok")
               "wxMenuItem:isSubMenu/1"
               ("http://www.erlang.org/doc/man/wxMenuItem.html#isSubMenu-1" "isSubMenu(This) -> boolean()")
               "wxMenuItem:isSeparator/1"
               ("http://www.erlang.org/doc/man/wxMenuItem.html#isSeparator-1" "isSeparator(This) -> boolean()")
               "wxMenuItem:isEnabled/1"
               ("http://www.erlang.org/doc/man/wxMenuItem.html#isEnabled-1" "isEnabled(This) -> boolean()")
               "wxMenuItem:isChecked/1"
               ("http://www.erlang.org/doc/man/wxMenuItem.html#isChecked-1" "isChecked(This) -> boolean()")
               "wxMenuItem:isCheckable/1"
               ("http://www.erlang.org/doc/man/wxMenuItem.html#isCheckable-1" "isCheckable(This) -> boolean()")
               "wxMenuItem:getSubMenu/1"
               ("http://www.erlang.org/doc/man/wxMenuItem.html#getSubMenu-1" "getSubMenu(This) -> wxMenu:wxMenu()")
               "wxMenuItem:getText/1"
               ("http://www.erlang.org/doc/man/wxMenuItem.html#getText-1" "getText(This) -> unicode:charlist()")
               "wxMenuItem:getMenu/1"
               ("http://www.erlang.org/doc/man/wxMenuItem.html#getMenu-1" "getMenu(This) -> wxMenu:wxMenu()")
               "wxMenuItem:getLabelFromText/1"
               ("http://www.erlang.org/doc/man/wxMenuItem.html#getLabelFromText-1" "getLabelFromText(Text) -> unicode:charlist()")
               "wxMenuItem:getLabel/1"
               ("http://www.erlang.org/doc/man/wxMenuItem.html#getLabel-1" "getLabel(This) -> unicode:charlist()")
               "wxMenuItem:getKind/1"
               ("http://www.erlang.org/doc/man/wxMenuItem.html#getKind-1" "getKind(This) -> wx:wx_enum()")
               "wxMenuItem:getId/1"
               ("http://www.erlang.org/doc/man/wxMenuItem.html#getId-1" "getId(This) -> integer()")
               "wxMenuItem:getHelp/1"
               ("http://www.erlang.org/doc/man/wxMenuItem.html#getHelp-1" "getHelp(This) -> unicode:charlist()")
               "wxMenuItem:getBitmap/1"
               ("http://www.erlang.org/doc/man/wxMenuItem.html#getBitmap-1" "getBitmap(This) -> wxBitmap:wxBitmap()")
               "wxMenuItem:enable/2"
               ("http://www.erlang.org/doc/man/wxMenuItem.html#enable-2" "enable(This, Options::[Option]) -> ok")
               "wxMenuItem:enable/1"
               ("http://www.erlang.org/doc/man/wxMenuItem.html#enable-1" "enable(This) -> ok")
               "wxMenuItem:check/2"
               ("http://www.erlang.org/doc/man/wxMenuItem.html#check-2" "check(This, Options::[Option]) -> ok")
               "wxMenuItem:check/1"
               ("http://www.erlang.org/doc/man/wxMenuItem.html#check-1" "check(This) -> ok")
               "wxMenuItem:new/1"
               ("http://www.erlang.org/doc/man/wxMenuItem.html#new-1" "new(Options::[Option]) -> wxMenuItem()")
               "wxMenuItem:new/0"
               ("http://www.erlang.org/doc/man/wxMenuItem.html#new-0" "new() -> wxMenuItem()")
               "wxMenuItem:"
               ("http://www.erlang.org/doc/man/wxMenuItem.html#type-wxMenuItem" "wxMenuItem()")
               "wxMessageDialog:destroy/1"
               ("http://www.erlang.org/doc/man/wxMessageDialog.html#destroy-1" "destroy(This:: wxMessageDialog() ) -> ok")
               "wxMessageDialog:new/3"
               ("http://www.erlang.org/doc/man/wxMessageDialog.html#new-3" "new(Parent, Message, Options::[Option]) -> wxMessageDialog()")
               "wxMessageDialog:new/2"
               ("http://www.erlang.org/doc/man/wxMessageDialog.html#new-2" "new(Parent, Message) -> wxMessageDialog()")
               "wxMessageDialog:"
               ("http://www.erlang.org/doc/man/wxMessageDialog.html#type-wxMessageDialog" "wxMessageDialog()")
               "wxMiniFrame:destroy/1"
               ("http://www.erlang.org/doc/man/wxMiniFrame.html#destroy-1" "destroy(This:: wxMiniFrame() ) -> ok")
               "wxMiniFrame:create/5"
               ("http://www.erlang.org/doc/man/wxMiniFrame.html#create-5" "create(This, Parent, Id, Title, Options::[Option]) -> boolean()")
               "wxMiniFrame:create/4"
               ("http://www.erlang.org/doc/man/wxMiniFrame.html#create-4" "create(This, Parent, Id, Title) -> boolean()")
               "wxMiniFrame:new/4"
               ("http://www.erlang.org/doc/man/wxMiniFrame.html#new-4" "new(Parent, Id, Title, Options::[Option]) -> wxMiniFrame()")
               "wxMiniFrame:new/3"
               ("http://www.erlang.org/doc/man/wxMiniFrame.html#new-3" "new(Parent, Id, Title) -> wxMiniFrame()")
               "wxMiniFrame:new/0"
               ("http://www.erlang.org/doc/man/wxMiniFrame.html#new-0" "new() -> wxMiniFrame()")
               "wxMiniFrame:"
               ("http://www.erlang.org/doc/man/wxMiniFrame.html#type-wxMiniFrame" "wxMiniFrame()")
               "wxMirrorDC:destroy/1"
               ("http://www.erlang.org/doc/man/wxMirrorDC.html#destroy-1" "destroy(This:: wxMirrorDC() ) -> ok")
               "wxMirrorDC:new/2"
               ("http://www.erlang.org/doc/man/wxMirrorDC.html#new-2" "new(Dc, Mirror) -> wxMirrorDC()")
               "wxMirrorDC:"
               ("http://www.erlang.org/doc/man/wxMirrorDC.html#type-wxMirrorDC" "wxMirrorDC()")
               "wxMouseCaptureChangedEvent:getCapturedWindow/1"
               ("http://www.erlang.org/doc/man/wxMouseCaptureChangedEvent.html#getCapturedWindow-1" "getCapturedWindow(This) -> wxWindow:wxWindow()")
               "wxMouseCaptureChangedEvent:"
               ("http://www.erlang.org/doc/man/wxMouseCaptureChangedEvent.html#type-wxMouseCaptureChangedEvent" "wxMouseCaptureChangedEvent()")
               "wxMouseCaptureLostEvent:"
               ("http://www.erlang.org/doc/man/wxMouseCaptureLostEvent.html#type-wxMouseCaptureLostEvent" "wxMouseCaptureLostEvent()")
               "wxMouseEvent:shiftDown/1"
               ("http://www.erlang.org/doc/man/wxMouseEvent.html#shiftDown-1" "shiftDown(This) -> boolean()")
               "wxMouseEvent:rightUp/1"
               ("http://www.erlang.org/doc/man/wxMouseEvent.html#rightUp-1" "rightUp(This) -> boolean()")
               "wxMouseEvent:rightIsDown/1"
               ("http://www.erlang.org/doc/man/wxMouseEvent.html#rightIsDown-1" "rightIsDown(This) -> boolean()")
               "wxMouseEvent:rightDown/1"
               ("http://www.erlang.org/doc/man/wxMouseEvent.html#rightDown-1" "rightDown(This) -> boolean()")
               "wxMouseEvent:rightDClick/1"
               ("http://www.erlang.org/doc/man/wxMouseEvent.html#rightDClick-1" "rightDClick(This) -> boolean()")
               "wxMouseEvent:moving/1"
               ("http://www.erlang.org/doc/man/wxMouseEvent.html#moving-1" "moving(This) -> boolean()")
               "wxMouseEvent:middleUp/1"
               ("http://www.erlang.org/doc/man/wxMouseEvent.html#middleUp-1" "middleUp(This) -> boolean()")
               "wxMouseEvent:middleIsDown/1"
               ("http://www.erlang.org/doc/man/wxMouseEvent.html#middleIsDown-1" "middleIsDown(This) -> boolean()")
               "wxMouseEvent:middleDown/1"
               ("http://www.erlang.org/doc/man/wxMouseEvent.html#middleDown-1" "middleDown(This) -> boolean()")
               "wxMouseEvent:middleDClick/1"
               ("http://www.erlang.org/doc/man/wxMouseEvent.html#middleDClick-1" "middleDClick(This) -> boolean()")
               "wxMouseEvent:metaDown/1"
               ("http://www.erlang.org/doc/man/wxMouseEvent.html#metaDown-1" "metaDown(This) -> boolean()")
               "wxMouseEvent:leftUp/1"
               ("http://www.erlang.org/doc/man/wxMouseEvent.html#leftUp-1" "leftUp(This) -> boolean()")
               "wxMouseEvent:leftIsDown/1"
               ("http://www.erlang.org/doc/man/wxMouseEvent.html#leftIsDown-1" "leftIsDown(This) -> boolean()")
               "wxMouseEvent:leftDown/1"
               ("http://www.erlang.org/doc/man/wxMouseEvent.html#leftDown-1" "leftDown(This) -> boolean()")
               "wxMouseEvent:leftDClick/1"
               ("http://www.erlang.org/doc/man/wxMouseEvent.html#leftDClick-1" "leftDClick(This) -> boolean()")
               "wxMouseEvent:leaving/1"
               ("http://www.erlang.org/doc/man/wxMouseEvent.html#leaving-1" "leaving(This) -> boolean()")
               "wxMouseEvent:isPageScroll/1"
               ("http://www.erlang.org/doc/man/wxMouseEvent.html#isPageScroll-1" "isPageScroll(This) -> boolean()")
               "wxMouseEvent:isButton/1"
               ("http://www.erlang.org/doc/man/wxMouseEvent.html#isButton-1" "isButton(This) -> boolean()")
               "wxMouseEvent:getY/1"
               ("http://www.erlang.org/doc/man/wxMouseEvent.html#getY-1" "getY(This) -> integer()")
               "wxMouseEvent:getX/1"
               ("http://www.erlang.org/doc/man/wxMouseEvent.html#getX-1" "getX(This) -> integer()")
               "wxMouseEvent:getWheelDelta/1"
               ("http://www.erlang.org/doc/man/wxMouseEvent.html#getWheelDelta-1" "getWheelDelta(This) -> integer()")
               "wxMouseEvent:getWheelRotation/1"
               ("http://www.erlang.org/doc/man/wxMouseEvent.html#getWheelRotation-1" "getWheelRotation(This) -> integer()")
               "wxMouseEvent:getLinesPerAction/1"
               ("http://www.erlang.org/doc/man/wxMouseEvent.html#getLinesPerAction-1" "getLinesPerAction(This) -> integer()")
               "wxMouseEvent:getLogicalPosition/2"
               ("http://www.erlang.org/doc/man/wxMouseEvent.html#getLogicalPosition-2" "getLogicalPosition(This, Dc) -> {X::integer(), Y::integer()}")
               "wxMouseEvent:getPosition/1"
               ("http://www.erlang.org/doc/man/wxMouseEvent.html#getPosition-1" "getPosition(This) -> {X::integer(), Y::integer()}")
               "wxMouseEvent:getButton/1"
               ("http://www.erlang.org/doc/man/wxMouseEvent.html#getButton-1" "getButton(This) -> integer()")
               "wxMouseEvent:entering/1"
               ("http://www.erlang.org/doc/man/wxMouseEvent.html#entering-1" "entering(This) -> boolean()")
               "wxMouseEvent:dragging/1"
               ("http://www.erlang.org/doc/man/wxMouseEvent.html#dragging-1" "dragging(This) -> boolean()")
               "wxMouseEvent:controlDown/1"
               ("http://www.erlang.org/doc/man/wxMouseEvent.html#controlDown-1" "controlDown(This) -> boolean()")
               "wxMouseEvent:cmdDown/1"
               ("http://www.erlang.org/doc/man/wxMouseEvent.html#cmdDown-1" "cmdDown(This) -> boolean()")
               "wxMouseEvent:buttonUp/2"
               ("http://www.erlang.org/doc/man/wxMouseEvent.html#buttonUp-2" "buttonUp(This, Options::[Option]) -> boolean()")
               "wxMouseEvent:buttonUp/1"
               ("http://www.erlang.org/doc/man/wxMouseEvent.html#buttonUp-1" "buttonUp(This) -> boolean()")
               "wxMouseEvent:buttonDown/2"
               ("http://www.erlang.org/doc/man/wxMouseEvent.html#buttonDown-2" "buttonDown(This, Options::[Option]) -> boolean()")
               "wxMouseEvent:buttonDown/1"
               ("http://www.erlang.org/doc/man/wxMouseEvent.html#buttonDown-1" "buttonDown(This) -> boolean()")
               "wxMouseEvent:buttonDClick/2"
               ("http://www.erlang.org/doc/man/wxMouseEvent.html#buttonDClick-2" "buttonDClick(This, Options::[Option]) -> boolean()")
               "wxMouseEvent:buttonDClick/1"
               ("http://www.erlang.org/doc/man/wxMouseEvent.html#buttonDClick-1" "buttonDClick(This) -> boolean()")
               "wxMouseEvent:button/2"
               ("http://www.erlang.org/doc/man/wxMouseEvent.html#button-2" "button(This, But) -> boolean()")
               "wxMouseEvent:altDown/1"
               ("http://www.erlang.org/doc/man/wxMouseEvent.html#altDown-1" "altDown(This) -> boolean()")
               "wxMouseEvent:"
               ("http://www.erlang.org/doc/man/wxMouseEvent.html#type-wxMouseEvent" "wxMouseEvent()")
               "wxMoveEvent:getPosition/1"
               ("http://www.erlang.org/doc/man/wxMoveEvent.html#getPosition-1" "getPosition(This) -> {X::integer(), Y::integer()}")
               "wxMoveEvent:"
               ("http://www.erlang.org/doc/man/wxMoveEvent.html#type-wxMoveEvent" "wxMoveEvent()")
               "wxMultiChoiceDialog:destroy/1"
               ("http://www.erlang.org/doc/man/wxMultiChoiceDialog.html#destroy-1" "destroy(This:: wxMultiChoiceDialog() ) -> ok")
               "wxMultiChoiceDialog:setSelections/2"
               ("http://www.erlang.org/doc/man/wxMultiChoiceDialog.html#setSelections-2" "setSelections(This, Selections) -> ok")
               "wxMultiChoiceDialog:getSelections/1"
               ("http://www.erlang.org/doc/man/wxMultiChoiceDialog.html#getSelections-1" "getSelections(This) -> [integer()]")
               "wxMultiChoiceDialog:new/5"
               ("http://www.erlang.org/doc/man/wxMultiChoiceDialog.html#new-5" "new(Parent, Message, Caption, Choices, Options::[Option]) -> wxMultiChoiceDialog()")
               "wxMultiChoiceDialog:new/4"
               ("http://www.erlang.org/doc/man/wxMultiChoiceDialog.html#new-4" "new(Parent, Message, Caption, Choices) -> wxMultiChoiceDialog()")
               "wxMultiChoiceDialog:new/0"
               ("http://www.erlang.org/doc/man/wxMultiChoiceDialog.html#new-0" "new() -> wxMultiChoiceDialog()")
               "wxMultiChoiceDialog:"
               ("http://www.erlang.org/doc/man/wxMultiChoiceDialog.html#type-wxMultiChoiceDialog" "wxMultiChoiceDialog()")
               "wxNavigationKeyEvent:setCurrentFocus/2"
               ("http://www.erlang.org/doc/man/wxNavigationKeyEvent.html#setCurrentFocus-2" "setCurrentFocus(This, Win) -> ok")
               "wxNavigationKeyEvent:getCurrentFocus/1"
               ("http://www.erlang.org/doc/man/wxNavigationKeyEvent.html#getCurrentFocus-1" "getCurrentFocus(This) -> wxWindow:wxWindow()")
               "wxNavigationKeyEvent:setFromTab/2"
               ("http://www.erlang.org/doc/man/wxNavigationKeyEvent.html#setFromTab-2" "setFromTab(This, BIs) -> ok")
               "wxNavigationKeyEvent:isFromTab/1"
               ("http://www.erlang.org/doc/man/wxNavigationKeyEvent.html#isFromTab-1" "isFromTab(This) -> boolean()")
               "wxNavigationKeyEvent:setWindowChange/2"
               ("http://www.erlang.org/doc/man/wxNavigationKeyEvent.html#setWindowChange-2" "setWindowChange(This, BIs) -> ok")
               "wxNavigationKeyEvent:isWindowChange/1"
               ("http://www.erlang.org/doc/man/wxNavigationKeyEvent.html#isWindowChange-1" "isWindowChange(This) -> boolean()")
               "wxNavigationKeyEvent:setDirection/2"
               ("http://www.erlang.org/doc/man/wxNavigationKeyEvent.html#setDirection-2" "setDirection(This, BForward) -> ok")
               "wxNavigationKeyEvent:getDirection/1"
               ("http://www.erlang.org/doc/man/wxNavigationKeyEvent.html#getDirection-1" "getDirection(This) -> boolean()")
               "wxNavigationKeyEvent:"
               ("http://www.erlang.org/doc/man/wxNavigationKeyEvent.html#type-wxNavigationKeyEvent" "wxNavigationKeyEvent()")
               "wxNotebook:destroy/1"
               ("http://www.erlang.org/doc/man/wxNotebook.html#destroy-1" "destroy(This:: wxNotebook() ) -> ok")
               "wxNotebook:changeSelection/2"
               ("http://www.erlang.org/doc/man/wxNotebook.html#changeSelection-2" "changeSelection(This, NPage) -> integer()")
               "wxNotebook:setSelection/2"
               ("http://www.erlang.org/doc/man/wxNotebook.html#setSelection-2" "setSelection(This, NPage) -> integer()")
               "wxNotebook:setPageText/3"
               ("http://www.erlang.org/doc/man/wxNotebook.html#setPageText-3" "setPageText(This, NPage, StrText) -> boolean()")
               "wxNotebook:setPageImage/3"
               ("http://www.erlang.org/doc/man/wxNotebook.html#setPageImage-3" "setPageImage(This, NPage, NImage) -> boolean()")
               "wxNotebook:setPageSize/2"
               ("http://www.erlang.org/doc/man/wxNotebook.html#setPageSize-2" "setPageSize(This, Size) -> ok")
               "wxNotebook:setPadding/2"
               ("http://www.erlang.org/doc/man/wxNotebook.html#setPadding-2" "setPadding(This, Padding) -> ok")
               "wxNotebook:setImageList/2"
               ("http://www.erlang.org/doc/man/wxNotebook.html#setImageList-2" "setImageList(This, ImageList) -> ok")
               "wxNotebook:insertPage/5"
               ("http://www.erlang.org/doc/man/wxNotebook.html#insertPage-5" "insertPage(This, Position, Win, StrText, Options::[Option]) -> boolean()")
               "wxNotebook:insertPage/4"
               ("http://www.erlang.org/doc/man/wxNotebook.html#insertPage-4" "insertPage(This, Position, Win, StrText) -> boolean()")
               "wxNotebook:hitTest/2"
               ("http://www.erlang.org/doc/man/wxNotebook.html#hitTest-2" "hitTest(This, Pt) -> Result")
               "wxNotebook:getThemeBackgroundColour/1"
               ("http://www.erlang.org/doc/man/wxNotebook.html#getThemeBackgroundColour-1" "getThemeBackgroundColour(This) -> wx:wx_colour4()")
               "wxNotebook:getSelection/1"
               ("http://www.erlang.org/doc/man/wxNotebook.html#getSelection-1" "getSelection(This) -> integer()")
               "wxNotebook:getRowCount/1"
               ("http://www.erlang.org/doc/man/wxNotebook.html#getRowCount-1" "getRowCount(This) -> integer()")
               "wxNotebook:getPageText/2"
               ("http://www.erlang.org/doc/man/wxNotebook.html#getPageText-2" "getPageText(This, NPage) -> unicode:charlist()")
               "wxNotebook:getPageImage/2"
               ("http://www.erlang.org/doc/man/wxNotebook.html#getPageImage-2" "getPageImage(This, NPage) -> integer()")
               "wxNotebook:getPageCount/1"
               ("http://www.erlang.org/doc/man/wxNotebook.html#getPageCount-1" "getPageCount(This) -> integer()")
               "wxNotebook:getPage/2"
               ("http://www.erlang.org/doc/man/wxNotebook.html#getPage-2" "getPage(This, N) -> wxWindow:wxWindow()")
               "wxNotebook:getImageList/1"
               ("http://www.erlang.org/doc/man/wxNotebook.html#getImageList-1" "getImageList(This) -> wxImageList:wxImageList()")
               "wxNotebook:getCurrentPage/1"
               ("http://www.erlang.org/doc/man/wxNotebook.html#getCurrentPage-1" "getCurrentPage(This) -> wxWindow:wxWindow()")
               "wxNotebook:removePage/2"
               ("http://www.erlang.org/doc/man/wxNotebook.html#removePage-2" "removePage(This, NPage) -> boolean()")
               "wxNotebook:deletePage/2"
               ("http://www.erlang.org/doc/man/wxNotebook.html#deletePage-2" "deletePage(This, NPage) -> boolean()")
               "wxNotebook:deleteAllPages/1"
               ("http://www.erlang.org/doc/man/wxNotebook.html#deleteAllPages-1" "deleteAllPages(This) -> boolean()")
               "wxNotebook:create/4"
               ("http://www.erlang.org/doc/man/wxNotebook.html#create-4" "create(This, Parent, Id, Options::[Option]) -> boolean()")
               "wxNotebook:create/3"
               ("http://www.erlang.org/doc/man/wxNotebook.html#create-3" "create(This, Parent, Id) -> boolean()")
               "wxNotebook:assignImageList/2"
               ("http://www.erlang.org/doc/man/wxNotebook.html#assignImageList-2" "assignImageList(This, ImageList) -> ok")
               "wxNotebook:advanceSelection/2"
               ("http://www.erlang.org/doc/man/wxNotebook.html#advanceSelection-2" "advanceSelection(This, Options::[Option]) -> ok")
               "wxNotebook:advanceSelection/1"
               ("http://www.erlang.org/doc/man/wxNotebook.html#advanceSelection-1" "advanceSelection(This) -> ok")
               "wxNotebook:addPage/4"
               ("http://www.erlang.org/doc/man/wxNotebook.html#addPage-4" "addPage(This, Page, Text, Options::[Option]) -> boolean()")
               "wxNotebook:addPage/3"
               ("http://www.erlang.org/doc/man/wxNotebook.html#addPage-3" "addPage(This, Page, Text) -> boolean()")
               "wxNotebook:new/3"
               ("http://www.erlang.org/doc/man/wxNotebook.html#new-3" "new(Parent, Winid, Options::[Option]) -> wxNotebook()")
               "wxNotebook:new/2"
               ("http://www.erlang.org/doc/man/wxNotebook.html#new-2" "new(Parent, Winid) -> wxNotebook()")
               "wxNotebook:new/0"
               ("http://www.erlang.org/doc/man/wxNotebook.html#new-0" "new() -> wxNotebook()")
               "wxNotebook:"
               ("http://www.erlang.org/doc/man/wxNotebook.html#type-wxNotebook" "wxNotebook()")
               "wxNotebookEvent:setSelection/2"
               ("http://www.erlang.org/doc/man/wxNotebookEvent.html#setSelection-2" "setSelection(This, NSel) -> ok")
               "wxNotebookEvent:setOldSelection/2"
               ("http://www.erlang.org/doc/man/wxNotebookEvent.html#setOldSelection-2" "setOldSelection(This, NOldSel) -> ok")
               "wxNotebookEvent:getSelection/1"
               ("http://www.erlang.org/doc/man/wxNotebookEvent.html#getSelection-1" "getSelection(This) -> integer()")
               "wxNotebookEvent:getOldSelection/1"
               ("http://www.erlang.org/doc/man/wxNotebookEvent.html#getOldSelection-1" "getOldSelection(This) -> integer()")
               "wxNotebookEvent:"
               ("http://www.erlang.org/doc/man/wxNotebookEvent.html#type-wxNotebookEvent" "wxNotebookEvent()")
               "wxNotifyEvent:veto/1"
               ("http://www.erlang.org/doc/man/wxNotifyEvent.html#veto-1" "veto(This) -> ok")
               "wxNotifyEvent:isAllowed/1"
               ("http://www.erlang.org/doc/man/wxNotifyEvent.html#isAllowed-1" "isAllowed(This) -> boolean()")
               "wxNotifyEvent:allow/1"
               ("http://www.erlang.org/doc/man/wxNotifyEvent.html#allow-1" "allow(This) -> ok")
               "wxNotifyEvent:"
               ("http://www.erlang.org/doc/man/wxNotifyEvent.html#type-wxNotifyEvent" "wxNotifyEvent()")
               "wxOverlay:destroy/1"
               ("http://www.erlang.org/doc/man/wxOverlay.html#destroy-1" "destroy(This:: wxOverlay() ) -> ok")
               "wxOverlay:reset/1"
               ("http://www.erlang.org/doc/man/wxOverlay.html#reset-1" "reset(This) -> ok")
               "wxOverlay:new/0"
               ("http://www.erlang.org/doc/man/wxOverlay.html#new-0" "new() -> wxOverlay()")
               "wxOverlay:"
               ("http://www.erlang.org/doc/man/wxOverlay.html#type-wxOverlay" "wxOverlay()")
               "wxPageSetupDialog:destroy/1"
               ("http://www.erlang.org/doc/man/wxPageSetupDialog.html#destroy-1" "destroy(This:: wxPageSetupDialog() ) -> ok")
               "wxPageSetupDialog:showModal/1"
               ("http://www.erlang.org/doc/man/wxPageSetupDialog.html#showModal-1" "showModal(This) -> integer()")
               "wxPageSetupDialog:getPageSetupData/1"
               ("http://www.erlang.org/doc/man/wxPageSetupDialog.html#getPageSetupData-1" "getPageSetupData(This) -> wxPageSetupDialogData:wxPageSetupDialogData()")
               "wxPageSetupDialog:new/2"
               ("http://www.erlang.org/doc/man/wxPageSetupDialog.html#new-2" "new(Parent, Options::[Option]) -> wxPageSetupDialog()")
               "wxPageSetupDialog:new/1"
               ("http://www.erlang.org/doc/man/wxPageSetupDialog.html#new-1" "new(Parent) -> wxPageSetupDialog()")
               "wxPageSetupDialog:"
               ("http://www.erlang.org/doc/man/wxPageSetupDialog.html#type-wxPageSetupDialog" "wxPageSetupDialog()")
               "wxPageSetupDialogData:destroy/1"
               ("http://www.erlang.org/doc/man/wxPageSetupDialogData.html#destroy-1" "destroy(This:: wxPageSetupDialogData() ) -> ok")
               "wxPageSetupDialogData:setPrintData/2"
               ("http://www.erlang.org/doc/man/wxPageSetupDialogData.html#setPrintData-2" "setPrintData(This, PrintData) -> ok")
               "wxPageSetupDialogData:setPaperSize/2"
               ("http://www.erlang.org/doc/man/wxPageSetupDialogData.html#setPaperSize-2" "setPaperSize(This, Id) -> ok")
               "wxPageSetupDialogData:setPaperId/2"
               ("http://www.erlang.org/doc/man/wxPageSetupDialogData.html#setPaperId-2" "setPaperId(This, Id) -> ok")
               "wxPageSetupDialogData:setMinMarginBottomRight/2"
               ("http://www.erlang.org/doc/man/wxPageSetupDialogData.html#setMinMarginBottomRight-2" "setMinMarginBottomRight(This, Pt) -> ok")
               "wxPageSetupDialogData:setMinMarginTopLeft/2"
               ("http://www.erlang.org/doc/man/wxPageSetupDialogData.html#setMinMarginTopLeft-2" "setMinMarginTopLeft(This, Pt) -> ok")
               "wxPageSetupDialogData:setMarginBottomRight/2"
               ("http://www.erlang.org/doc/man/wxPageSetupDialogData.html#setMarginBottomRight-2" "setMarginBottomRight(This, Pt) -> ok")
               "wxPageSetupDialogData:setMarginTopLeft/2"
               ("http://www.erlang.org/doc/man/wxPageSetupDialogData.html#setMarginTopLeft-2" "setMarginTopLeft(This, Pt) -> ok")
               "wxPageSetupDialogData:setDefaultMinMargins/2"
               ("http://www.erlang.org/doc/man/wxPageSetupDialogData.html#setDefaultMinMargins-2" "setDefaultMinMargins(This, Flag) -> ok")
               "wxPageSetupDialogData:setDefaultInfo/2"
               ("http://www.erlang.org/doc/man/wxPageSetupDialogData.html#setDefaultInfo-2" "setDefaultInfo(This, Flag) -> ok")
               "wxPageSetupDialogData:isOk/1"
               ("http://www.erlang.org/doc/man/wxPageSetupDialogData.html#isOk-1" "isOk(This) -> boolean()")
               "wxPageSetupDialogData:getPrintData/1"
               ("http://www.erlang.org/doc/man/wxPageSetupDialogData.html#getPrintData-1" "getPrintData(This) -> wxPrintData:wxPrintData()")
               "wxPageSetupDialogData:getPaperSize/1"
               ("http://www.erlang.org/doc/man/wxPageSetupDialogData.html#getPaperSize-1" "getPaperSize(This) -> {W::integer(), H::integer()}")
               "wxPageSetupDialogData:getPaperId/1"
               ("http://www.erlang.org/doc/man/wxPageSetupDialogData.html#getPaperId-1" "getPaperId(This) -> wx:wx_enum()")
               "wxPageSetupDialogData:getMinMarginBottomRight/1"
               ("http://www.erlang.org/doc/man/wxPageSetupDialogData.html#getMinMarginBottomRight-1" "getMinMarginBottomRight(This) -> {X::integer(), Y::integer()}")
               "wxPageSetupDialogData:getMinMarginTopLeft/1"
               ("http://www.erlang.org/doc/man/wxPageSetupDialogData.html#getMinMarginTopLeft-1" "getMinMarginTopLeft(This) -> {X::integer(), Y::integer()}")
               "wxPageSetupDialogData:getMarginBottomRight/1"
               ("http://www.erlang.org/doc/man/wxPageSetupDialogData.html#getMarginBottomRight-1" "getMarginBottomRight(This) -> {X::integer(), Y::integer()}")
               "wxPageSetupDialogData:getMarginTopLeft/1"
               ("http://www.erlang.org/doc/man/wxPageSetupDialogData.html#getMarginTopLeft-1" "getMarginTopLeft(This) -> {X::integer(), Y::integer()}")
               "wxPageSetupDialogData:getDefaultInfo/1"
               ("http://www.erlang.org/doc/man/wxPageSetupDialogData.html#getDefaultInfo-1" "getDefaultInfo(This) -> boolean()")
               "wxPageSetupDialogData:getEnableHelp/1"
               ("http://www.erlang.org/doc/man/wxPageSetupDialogData.html#getEnableHelp-1" "getEnableHelp(This) -> boolean()")
               "wxPageSetupDialogData:getEnablePrinter/1"
               ("http://www.erlang.org/doc/man/wxPageSetupDialogData.html#getEnablePrinter-1" "getEnablePrinter(This) -> boolean()")
               "wxPageSetupDialogData:getEnablePaper/1"
               ("http://www.erlang.org/doc/man/wxPageSetupDialogData.html#getEnablePaper-1" "getEnablePaper(This) -> boolean()")
               "wxPageSetupDialogData:getEnableOrientation/1"
               ("http://www.erlang.org/doc/man/wxPageSetupDialogData.html#getEnableOrientation-1" "getEnableOrientation(This) -> boolean()")
               "wxPageSetupDialogData:getEnableMargins/1"
               ("http://www.erlang.org/doc/man/wxPageSetupDialogData.html#getEnableMargins-1" "getEnableMargins(This) -> boolean()")
               "wxPageSetupDialogData:getDefaultMinMargins/1"
               ("http://www.erlang.org/doc/man/wxPageSetupDialogData.html#getDefaultMinMargins-1" "getDefaultMinMargins(This) -> boolean()")
               "wxPageSetupDialogData:enablePrinter/2"
               ("http://www.erlang.org/doc/man/wxPageSetupDialogData.html#enablePrinter-2" "enablePrinter(This, Flag) -> ok")
               "wxPageSetupDialogData:enablePaper/2"
               ("http://www.erlang.org/doc/man/wxPageSetupDialogData.html#enablePaper-2" "enablePaper(This, Flag) -> ok")
               "wxPageSetupDialogData:enableOrientation/2"
               ("http://www.erlang.org/doc/man/wxPageSetupDialogData.html#enableOrientation-2" "enableOrientation(This, Flag) -> ok")
               "wxPageSetupDialogData:enableMargins/2"
               ("http://www.erlang.org/doc/man/wxPageSetupDialogData.html#enableMargins-2" "enableMargins(This, Flag) -> ok")
               "wxPageSetupDialogData:enableHelp/2"
               ("http://www.erlang.org/doc/man/wxPageSetupDialogData.html#enableHelp-2" "enableHelp(This, Flag) -> ok")
               "wxPageSetupDialogData:new/1"
               ("http://www.erlang.org/doc/man/wxPageSetupDialogData.html#new-1" "new(PrintData) -> wxPageSetupDialogData()")
               "wxPageSetupDialogData:new/0"
               ("http://www.erlang.org/doc/man/wxPageSetupDialogData.html#new-0" "new() -> wxPageSetupDialogData()")
               "wxPageSetupDialogData:"
               ("http://www.erlang.org/doc/man/wxPageSetupDialogData.html#type-wxPageSetupDialogData" "wxPageSetupDialogData()")
               "wxPaintDC:destroy/1"
               ("http://www.erlang.org/doc/man/wxPaintDC.html#destroy-1" "destroy(This:: wxPaintDC() ) -> ok")
               "wxPaintDC:new/1"
               ("http://www.erlang.org/doc/man/wxPaintDC.html#new-1" "new(Win) -> wxPaintDC()")
               "wxPaintDC:new/0"
               ("http://www.erlang.org/doc/man/wxPaintDC.html#new-0" "new() -> wxPaintDC()")
               "wxPaintDC:"
               ("http://www.erlang.org/doc/man/wxPaintDC.html#type-wxPaintDC" "wxPaintDC()")
               "wxPaintEvent:"
               ("http://www.erlang.org/doc/man/wxPaintEvent.html#type-wxPaintEvent" "wxPaintEvent()")
               "wxPalette:destroy/1"
               ("http://www.erlang.org/doc/man/wxPalette.html#destroy-1" "destroy(This:: wxPalette() ) -> ok")
               "wxPalette:isOk/1"
               ("http://www.erlang.org/doc/man/wxPalette.html#isOk-1" "isOk(This) -> boolean()")
               "wxPalette:getRGB/2"
               ("http://www.erlang.org/doc/man/wxPalette.html#getRGB-2" "getRGB(This, Pixel) -> Result")
               "wxPalette:getPixel/4"
               ("http://www.erlang.org/doc/man/wxPalette.html#getPixel-4" "getPixel(This, Red, Green, Blue) -> integer()")
               "wxPalette:getColoursCount/1"
               ("http://www.erlang.org/doc/man/wxPalette.html#getColoursCount-1" "getColoursCount(This) -> integer()")
               "wxPalette:create/4"
               ("http://www.erlang.org/doc/man/wxPalette.html#create-4" "create(This, Red, Green, Blue) -> boolean()")
               "wxPalette:new/3"
               ("http://www.erlang.org/doc/man/wxPalette.html#new-3" "new(Red, Green, Blue) -> wxPalette()")
               "wxPalette:new/0"
               ("http://www.erlang.org/doc/man/wxPalette.html#new-0" "new() -> wxPalette()")
               "wxPalette:"
               ("http://www.erlang.org/doc/man/wxPalette.html#type-wxPalette" "wxPalette()")
               "wxPaletteChangedEvent:getChangedWindow/1"
               ("http://www.erlang.org/doc/man/wxPaletteChangedEvent.html#getChangedWindow-1" "getChangedWindow(This) -> wxWindow:wxWindow()")
               "wxPaletteChangedEvent:setChangedWindow/2"
               ("http://www.erlang.org/doc/man/wxPaletteChangedEvent.html#setChangedWindow-2" "setChangedWindow(This, Win) -> ok")
               "wxPaletteChangedEvent:"
               ("http://www.erlang.org/doc/man/wxPaletteChangedEvent.html#type-wxPaletteChangedEvent" "wxPaletteChangedEvent()")
               "wxPanel:destroy/1"
               ("http://www.erlang.org/doc/man/wxPanel.html#destroy-1" "destroy(This:: wxPanel() ) -> ok")
               "wxPanel:setFocusIgnoringChildren/1"
               ("http://www.erlang.org/doc/man/wxPanel.html#setFocusIgnoringChildren-1" "setFocusIgnoringChildren(This) -> ok")
               "wxPanel:initDialog/1"
               ("http://www.erlang.org/doc/man/wxPanel.html#initDialog-1" "initDialog(This) -> ok")
               "wxPanel:new/6"
               ("http://www.erlang.org/doc/man/wxPanel.html#new-6" "new(Parent, X, Y, Width, Height, Options::[Option]) -> wxPanel()")
               "wxPanel:new/5"
               ("http://www.erlang.org/doc/man/wxPanel.html#new-5" "new(Parent, X, Y, Width, Height) -> wxPanel()")
               "wxPanel:new/2"
               ("http://www.erlang.org/doc/man/wxPanel.html#new-2" "new(Parent, Options::[Option]) -> wxPanel()")
               "wxPanel:new/1"
               ("http://www.erlang.org/doc/man/wxPanel.html#new-1" "new(Parent) -> wxPanel()")
               "wxPanel:new/0"
               ("http://www.erlang.org/doc/man/wxPanel.html#new-0" "new() -> wxPanel()")
               "wxPanel:"
               ("http://www.erlang.org/doc/man/wxPanel.html#type-wxPanel" "wxPanel()")
               "wxPasswordEntryDialog:destroy/1"
               ("http://www.erlang.org/doc/man/wxPasswordEntryDialog.html#destroy-1" "destroy(This:: wxPasswordEntryDialog() ) -> ok")
               "wxPasswordEntryDialog:new/3"
               ("http://www.erlang.org/doc/man/wxPasswordEntryDialog.html#new-3" "new(Parent, Message, Options::[Option]) -> wxPasswordEntryDialog()")
               "wxPasswordEntryDialog:new/2"
               ("http://www.erlang.org/doc/man/wxPasswordEntryDialog.html#new-2" "new(Parent, Message) -> wxPasswordEntryDialog()")
               "wxPasswordEntryDialog:"
               ("http://www.erlang.org/doc/man/wxPasswordEntryDialog.html#type-wxPasswordEntryDialog" "wxPasswordEntryDialog()")
               "wxPen:destroy/1"
               ("http://www.erlang.org/doc/man/wxPen.html#destroy-1" "destroy(This:: wxPen() ) -> ok")
               "wxPen:setWidth/2"
               ("http://www.erlang.org/doc/man/wxPen.html#setWidth-2" "setWidth(This, Width) -> ok")
               "wxPen:setStyle/2"
               ("http://www.erlang.org/doc/man/wxPen.html#setStyle-2" "setStyle(This, Style) -> ok")
               "wxPen:setJoin/2"
               ("http://www.erlang.org/doc/man/wxPen.html#setJoin-2" "setJoin(This, JoinStyle) -> ok")
               "wxPen:setColour/4"
               ("http://www.erlang.org/doc/man/wxPen.html#setColour-4" "setColour(This, Red, Green, Blue) -> ok")
               "wxPen:setColour/2"
               ("http://www.erlang.org/doc/man/wxPen.html#setColour-2" "setColour(This, Colour) -> ok")
               "wxPen:setCap/2"
               ("http://www.erlang.org/doc/man/wxPen.html#setCap-2" "setCap(This, CapStyle) -> ok")
               "wxPen:isOk/1"
               ("http://www.erlang.org/doc/man/wxPen.html#isOk-1" "isOk(This) -> boolean()")
               "wxPen:getWidth/1"
               ("http://www.erlang.org/doc/man/wxPen.html#getWidth-1" "getWidth(This) -> integer()")
               "wxPen:getStyle/1"
               ("http://www.erlang.org/doc/man/wxPen.html#getStyle-1" "getStyle(This) -> integer()")
               "wxPen:getJoin/1"
               ("http://www.erlang.org/doc/man/wxPen.html#getJoin-1" "getJoin(This) -> integer()")
               "wxPen:getColour/1"
               ("http://www.erlang.org/doc/man/wxPen.html#getColour-1" "getColour(This) -> wx:wx_colour4()")
               "wxPen:getCap/1"
               ("http://www.erlang.org/doc/man/wxPen.html#getCap-1" "getCap(This) -> integer()")
               "wxPen:new/2"
               ("http://www.erlang.org/doc/man/wxPen.html#new-2" "new(Colour, Options::[Option]) -> wxPen()")
               "wxPen:new/1"
               ("http://www.erlang.org/doc/man/wxPen.html#new-1" "new(Colour) -> wxPen()")
               "wxPen:new/0"
               ("http://www.erlang.org/doc/man/wxPen.html#new-0" "new() -> wxPen()")
               "wxPen:"
               ("http://www.erlang.org/doc/man/wxPen.html#type-wxPen" "wxPen()")
               "wxPickerBase:isPickerCtrlGrowable/1"
               ("http://www.erlang.org/doc/man/wxPickerBase.html#isPickerCtrlGrowable-1" "isPickerCtrlGrowable(This) -> boolean()")
               "wxPickerBase:setTextCtrlGrowable/2"
               ("http://www.erlang.org/doc/man/wxPickerBase.html#setTextCtrlGrowable-2" "setTextCtrlGrowable(This, Options::[Option]) -> ok")
               "wxPickerBase:setTextCtrlGrowable/1"
               ("http://www.erlang.org/doc/man/wxPickerBase.html#setTextCtrlGrowable-1" "setTextCtrlGrowable(This) -> ok")
               "wxPickerBase:setPickerCtrlGrowable/2"
               ("http://www.erlang.org/doc/man/wxPickerBase.html#setPickerCtrlGrowable-2" "setPickerCtrlGrowable(This, Options::[Option]) -> ok")
               "wxPickerBase:setPickerCtrlGrowable/1"
               ("http://www.erlang.org/doc/man/wxPickerBase.html#setPickerCtrlGrowable-1" "setPickerCtrlGrowable(This) -> ok")
               "wxPickerBase:isTextCtrlGrowable/1"
               ("http://www.erlang.org/doc/man/wxPickerBase.html#isTextCtrlGrowable-1" "isTextCtrlGrowable(This) -> boolean()")
               "wxPickerBase:getTextCtrl/1"
               ("http://www.erlang.org/doc/man/wxPickerBase.html#getTextCtrl-1" "getTextCtrl(This) -> wxTextCtrl:wxTextCtrl()")
               "wxPickerBase:hasTextCtrl/1"
               ("http://www.erlang.org/doc/man/wxPickerBase.html#hasTextCtrl-1" "hasTextCtrl(This) -> boolean()")
               "wxPickerBase:getPickerCtrlProportion/1"
               ("http://www.erlang.org/doc/man/wxPickerBase.html#getPickerCtrlProportion-1" "getPickerCtrlProportion(This) -> integer()")
               "wxPickerBase:getTextCtrlProportion/1"
               ("http://www.erlang.org/doc/man/wxPickerBase.html#getTextCtrlProportion-1" "getTextCtrlProportion(This) -> integer()")
               "wxPickerBase:setPickerCtrlProportion/2"
               ("http://www.erlang.org/doc/man/wxPickerBase.html#setPickerCtrlProportion-2" "setPickerCtrlProportion(This, Prop) -> ok")
               "wxPickerBase:setTextCtrlProportion/2"
               ("http://www.erlang.org/doc/man/wxPickerBase.html#setTextCtrlProportion-2" "setTextCtrlProportion(This, Prop) -> ok")
               "wxPickerBase:getInternalMargin/1"
               ("http://www.erlang.org/doc/man/wxPickerBase.html#getInternalMargin-1" "getInternalMargin(This) -> integer()")
               "wxPickerBase:setInternalMargin/2"
               ("http://www.erlang.org/doc/man/wxPickerBase.html#setInternalMargin-2" "setInternalMargin(This, Newmargin) -> ok")
               "wxPickerBase:"
               ("http://www.erlang.org/doc/man/wxPickerBase.html#type-wxPickerBase" "wxPickerBase()")
               "wxPopupTransientWindow:destroy/1"
               ("http://www.erlang.org/doc/man/wxPopupTransientWindow.html#destroy-1" "destroy(This:: wxPopupTransientWindow() ) -> ok")
               "wxPopupTransientWindow:dismiss/1"
               ("http://www.erlang.org/doc/man/wxPopupTransientWindow.html#dismiss-1" "dismiss(This) -> ok")
               "wxPopupTransientWindow:popup/2"
               ("http://www.erlang.org/doc/man/wxPopupTransientWindow.html#popup-2" "popup(This, Options::[Option]) -> ok")
               "wxPopupTransientWindow:popup/1"
               ("http://www.erlang.org/doc/man/wxPopupTransientWindow.html#popup-1" "popup(This) -> ok")
               "wxPopupTransientWindow:new/2"
               ("http://www.erlang.org/doc/man/wxPopupTransientWindow.html#new-2" "new(Parent, Options::[Option]) -> wxPopupTransientWindow()")
               "wxPopupTransientWindow:new/1"
               ("http://www.erlang.org/doc/man/wxPopupTransientWindow.html#new-1" "new(Parent) -> wxPopupTransientWindow()")
               "wxPopupTransientWindow:new/0"
               ("http://www.erlang.org/doc/man/wxPopupTransientWindow.html#new-0" "new() -> wxPopupTransientWindow()")
               "wxPopupTransientWindow:"
               ("http://www.erlang.org/doc/man/wxPopupTransientWindow.html#type-wxPopupTransientWindow" "wxPopupTransientWindow()")
               "wxPopupWindow:destroy/1"
               ("http://www.erlang.org/doc/man/wxPopupWindow.html#destroy-1" "destroy(This:: wxPopupWindow() ) -> ok")
               "wxPopupWindow:position/3"
               ("http://www.erlang.org/doc/man/wxPopupWindow.html#position-3" "position(This, PtOrigin, Size) -> ok")
               "wxPopupWindow:create/3"
               ("http://www.erlang.org/doc/man/wxPopupWindow.html#create-3" "create(This, Parent, Options::[Option]) -> boolean()")
               "wxPopupWindow:create/2"
               ("http://www.erlang.org/doc/man/wxPopupWindow.html#create-2" "create(This, Parent) -> boolean()")
               "wxPopupWindow:new/2"
               ("http://www.erlang.org/doc/man/wxPopupWindow.html#new-2" "new(Parent, Options::[Option]) -> wxPopupWindow()")
               "wxPopupWindow:new/1"
               ("http://www.erlang.org/doc/man/wxPopupWindow.html#new-1" "new(Parent) -> wxPopupWindow()")
               "wxPopupWindow:new/0"
               ("http://www.erlang.org/doc/man/wxPopupWindow.html#new-0" "new() -> wxPopupWindow()")
               "wxPopupWindow:"
               ("http://www.erlang.org/doc/man/wxPopupWindow.html#type-wxPopupWindow" "wxPopupWindow()")
               "wxPostScriptDC:destroy/1"
               ("http://www.erlang.org/doc/man/wxPostScriptDC.html#destroy-1" "destroy(This:: wxPostScriptDC() ) -> ok")
               "wxPostScriptDC:getResolution/0"
               ("http://www.erlang.org/doc/man/wxPostScriptDC.html#getResolution-0" "getResolution() -> integer()")
               "wxPostScriptDC:setResolution/1"
               ("http://www.erlang.org/doc/man/wxPostScriptDC.html#setResolution-1" "setResolution(Ppi) -> ok")
               "wxPostScriptDC:new/1"
               ("http://www.erlang.org/doc/man/wxPostScriptDC.html#new-1" "new(PrintData) -> wxPostScriptDC()")
               "wxPostScriptDC:new/0"
               ("http://www.erlang.org/doc/man/wxPostScriptDC.html#new-0" "new() -> wxPostScriptDC()")
               "wxPostScriptDC:"
               ("http://www.erlang.org/doc/man/wxPostScriptDC.html#type-wxPostScriptDC" "wxPostScriptDC()")
               "wxPreviewCanvas:"
               ("http://www.erlang.org/doc/man/wxPreviewCanvas.html#type-wxPreviewCanvas" "wxPreviewCanvas()")
               "wxPreviewControlBar:destroy/1"
               ("http://www.erlang.org/doc/man/wxPreviewControlBar.html#destroy-1" "destroy(This:: wxPreviewControlBar() ) -> ok")
               "wxPreviewControlBar:setZoomControl/2"
               ("http://www.erlang.org/doc/man/wxPreviewControlBar.html#setZoomControl-2" "setZoomControl(This, Zoom) -> ok")
               "wxPreviewControlBar:getZoomControl/1"
               ("http://www.erlang.org/doc/man/wxPreviewControlBar.html#getZoomControl-1" "getZoomControl(This) -> integer()")
               "wxPreviewControlBar:getPrintPreview/1"
               ("http://www.erlang.org/doc/man/wxPreviewControlBar.html#getPrintPreview-1" "getPrintPreview(This) -> wxPrintPreview:wxPrintPreview()")
               "wxPreviewControlBar:createButtons/1"
               ("http://www.erlang.org/doc/man/wxPreviewControlBar.html#createButtons-1" "createButtons(This) -> ok")
               "wxPreviewControlBar:new/4"
               ("http://www.erlang.org/doc/man/wxPreviewControlBar.html#new-4" "new(Preview, Buttons, Parent, Options::[Option]) -> wxPreviewControlBar()")
               "wxPreviewControlBar:new/3"
               ("http://www.erlang.org/doc/man/wxPreviewControlBar.html#new-3" "new(Preview, Buttons, Parent) -> wxPreviewControlBar()")
               "wxPreviewControlBar:"
               ("http://www.erlang.org/doc/man/wxPreviewControlBar.html#type-wxPreviewControlBar" "wxPreviewControlBar()")
               "wxPreviewFrame:destroy/1"
               ("http://www.erlang.org/doc/man/wxPreviewFrame.html#destroy-1" "destroy(This:: wxPreviewFrame() ) -> ok")
               "wxPreviewFrame:onCloseWindow/2"
               ("http://www.erlang.org/doc/man/wxPreviewFrame.html#onCloseWindow-2" "onCloseWindow(This, Event) -> ok")
               "wxPreviewFrame:initialize/1"
               ("http://www.erlang.org/doc/man/wxPreviewFrame.html#initialize-1" "initialize(This) -> ok")
               "wxPreviewFrame:createCanvas/1"
               ("http://www.erlang.org/doc/man/wxPreviewFrame.html#createCanvas-1" "createCanvas(This) -> ok")
               "wxPreviewFrame:createControlBar/1"
               ("http://www.erlang.org/doc/man/wxPreviewFrame.html#createControlBar-1" "createControlBar(This) -> ok")
               "wxPreviewFrame:new/3"
               ("http://www.erlang.org/doc/man/wxPreviewFrame.html#new-3" "new(Preview, Parent, Options::[Option]) -> wxPreviewFrame()")
               "wxPreviewFrame:new/2"
               ("http://www.erlang.org/doc/man/wxPreviewFrame.html#new-2" "new(Preview, Parent) -> wxPreviewFrame()")
               "wxPreviewFrame:"
               ("http://www.erlang.org/doc/man/wxPreviewFrame.html#type-wxPreviewFrame" "wxPreviewFrame()")
               "wxPrintData:destroy/1"
               ("http://www.erlang.org/doc/man/wxPrintData.html#destroy-1" "destroy(This:: wxPrintData() ) -> ok")
               "wxPrintData:setQuality/2"
               ("http://www.erlang.org/doc/man/wxPrintData.html#setQuality-2" "setQuality(This, Quality) -> ok")
               "wxPrintData:setPrinterName/2"
               ("http://www.erlang.org/doc/man/wxPrintData.html#setPrinterName-2" "setPrinterName(This, Name) -> ok")
               "wxPrintData:setPaperId/2"
               ("http://www.erlang.org/doc/man/wxPrintData.html#setPaperId-2" "setPaperId(This, SizeId) -> ok")
               "wxPrintData:setOrientation/2"
               ("http://www.erlang.org/doc/man/wxPrintData.html#setOrientation-2" "setOrientation(This, Orient) -> ok")
               "wxPrintData:setNoCopies/2"
               ("http://www.erlang.org/doc/man/wxPrintData.html#setNoCopies-2" "setNoCopies(This, V) -> ok")
               "wxPrintData:setDuplex/2"
               ("http://www.erlang.org/doc/man/wxPrintData.html#setDuplex-2" "setDuplex(This, Duplex) -> ok")
               "wxPrintData:setColour/2"
               ("http://www.erlang.org/doc/man/wxPrintData.html#setColour-2" "setColour(This, Colour) -> ok")
               "wxPrintData:setCollate/2"
               ("http://www.erlang.org/doc/man/wxPrintData.html#setCollate-2" "setCollate(This, Flag) -> ok")
               "wxPrintData:setBin/2"
               ("http://www.erlang.org/doc/man/wxPrintData.html#setBin-2" "setBin(This, Bin) -> ok")
               "wxPrintData:isOk/1"
               ("http://www.erlang.org/doc/man/wxPrintData.html#isOk-1" "isOk(This) -> boolean()")
               "wxPrintData:getQuality/1"
               ("http://www.erlang.org/doc/man/wxPrintData.html#getQuality-1" "getQuality(This) -> integer()")
               "wxPrintData:getPrinterName/1"
               ("http://www.erlang.org/doc/man/wxPrintData.html#getPrinterName-1" "getPrinterName(This) -> unicode:charlist()")
               "wxPrintData:getPaperId/1"
               ("http://www.erlang.org/doc/man/wxPrintData.html#getPaperId-1" "getPaperId(This) -> wx:wx_enum()")
               "wxPrintData:getOrientation/1"
               ("http://www.erlang.org/doc/man/wxPrintData.html#getOrientation-1" "getOrientation(This) -> integer()")
               "wxPrintData:getNoCopies/1"
               ("http://www.erlang.org/doc/man/wxPrintData.html#getNoCopies-1" "getNoCopies(This) -> integer()")
               "wxPrintData:getDuplex/1"
               ("http://www.erlang.org/doc/man/wxPrintData.html#getDuplex-1" "getDuplex(This) -> wx:wx_enum()")
               "wxPrintData:getColour/1"
               ("http://www.erlang.org/doc/man/wxPrintData.html#getColour-1" "getColour(This) -> boolean()")
               "wxPrintData:getBin/1"
               ("http://www.erlang.org/doc/man/wxPrintData.html#getBin-1" "getBin(This) -> wx:wx_enum()")
               "wxPrintData:getCollate/1"
               ("http://www.erlang.org/doc/man/wxPrintData.html#getCollate-1" "getCollate(This) -> boolean()")
               "wxPrintData:new/1"
               ("http://www.erlang.org/doc/man/wxPrintData.html#new-1" "new(PrintData) -> wxPrintData()")
               "wxPrintData:new/0"
               ("http://www.erlang.org/doc/man/wxPrintData.html#new-0" "new() -> wxPrintData()")
               "wxPrintData:"
               ("http://www.erlang.org/doc/man/wxPrintData.html#type-wxPrintData" "wxPrintData()")
               "wxPrintDialog:destroy/1"
               ("http://www.erlang.org/doc/man/wxPrintDialog.html#destroy-1" "destroy(This:: wxPrintDialog() ) -> ok")
               "wxPrintDialog:getPrintDC/1"
               ("http://www.erlang.org/doc/man/wxPrintDialog.html#getPrintDC-1" "getPrintDC(This) -> wxDC:wxDC()")
               "wxPrintDialog:getPrintDialogData/1"
               ("http://www.erlang.org/doc/man/wxPrintDialog.html#getPrintDialogData-1" "getPrintDialogData(This) -> wxPrintDialogData:wxPrintDialogData()")
               "wxPrintDialog:new/2"
               ("http://www.erlang.org/doc/man/wxPrintDialog.html#new-2" "new(Parent, Options::[Option]) -> wxPrintDialog()")
               "wxPrintDialog:new/1"
               ("http://www.erlang.org/doc/man/wxPrintDialog.html#new-1" "new(Parent) -> wxPrintDialog()")
               "wxPrintDialog:"
               ("http://www.erlang.org/doc/man/wxPrintDialog.html#type-wxPrintDialog" "wxPrintDialog()")
               "wxPrintDialogData:destroy/1"
               ("http://www.erlang.org/doc/man/wxPrintDialogData.html#destroy-1" "destroy(This:: wxPrintDialogData() ) -> ok")
               "wxPrintDialogData:setToPage/2"
               ("http://www.erlang.org/doc/man/wxPrintDialogData.html#setToPage-2" "setToPage(This, V) -> ok")
               "wxPrintDialogData:setSelection/2"
               ("http://www.erlang.org/doc/man/wxPrintDialogData.html#setSelection-2" "setSelection(This, Flag) -> ok")
               "wxPrintDialogData:setPrintToFile/2"
               ("http://www.erlang.org/doc/man/wxPrintDialogData.html#setPrintToFile-2" "setPrintToFile(This, Flag) -> ok")
               "wxPrintDialogData:setPrintData/2"
               ("http://www.erlang.org/doc/man/wxPrintDialogData.html#setPrintData-2" "setPrintData(This, PrintData) -> ok")
               "wxPrintDialogData:setNoCopies/2"
               ("http://www.erlang.org/doc/man/wxPrintDialogData.html#setNoCopies-2" "setNoCopies(This, V) -> ok")
               "wxPrintDialogData:setMinPage/2"
               ("http://www.erlang.org/doc/man/wxPrintDialogData.html#setMinPage-2" "setMinPage(This, V) -> ok")
               "wxPrintDialogData:setMaxPage/2"
               ("http://www.erlang.org/doc/man/wxPrintDialogData.html#setMaxPage-2" "setMaxPage(This, V) -> ok")
               "wxPrintDialogData:setFromPage/2"
               ("http://www.erlang.org/doc/man/wxPrintDialogData.html#setFromPage-2" "setFromPage(This, V) -> ok")
               "wxPrintDialogData:setCollate/2"
               ("http://www.erlang.org/doc/man/wxPrintDialogData.html#setCollate-2" "setCollate(This, Flag) -> ok")
               "wxPrintDialogData:isOk/1"
               ("http://www.erlang.org/doc/man/wxPrintDialogData.html#isOk-1" "isOk(This) -> boolean()")
               "wxPrintDialogData:getToPage/1"
               ("http://www.erlang.org/doc/man/wxPrintDialogData.html#getToPage-1" "getToPage(This) -> integer()")
               "wxPrintDialogData:getSelection/1"
               ("http://www.erlang.org/doc/man/wxPrintDialogData.html#getSelection-1" "getSelection(This) -> boolean()")
               "wxPrintDialogData:getPrintToFile/1"
               ("http://www.erlang.org/doc/man/wxPrintDialogData.html#getPrintToFile-1" "getPrintToFile(This) -> boolean()")
               "wxPrintDialogData:getPrintData/1"
               ("http://www.erlang.org/doc/man/wxPrintDialogData.html#getPrintData-1" "getPrintData(This) -> wxPrintData:wxPrintData()")
               "wxPrintDialogData:getNoCopies/1"
               ("http://www.erlang.org/doc/man/wxPrintDialogData.html#getNoCopies-1" "getNoCopies(This) -> integer()")
               "wxPrintDialogData:getMinPage/1"
               ("http://www.erlang.org/doc/man/wxPrintDialogData.html#getMinPage-1" "getMinPage(This) -> integer()")
               "wxPrintDialogData:getMaxPage/1"
               ("http://www.erlang.org/doc/man/wxPrintDialogData.html#getMaxPage-1" "getMaxPage(This) -> integer()")
               "wxPrintDialogData:getFromPage/1"
               ("http://www.erlang.org/doc/man/wxPrintDialogData.html#getFromPage-1" "getFromPage(This) -> integer()")
               "wxPrintDialogData:getCollate/1"
               ("http://www.erlang.org/doc/man/wxPrintDialogData.html#getCollate-1" "getCollate(This) -> boolean()")
               "wxPrintDialogData:getAllPages/1"
               ("http://www.erlang.org/doc/man/wxPrintDialogData.html#getAllPages-1" "getAllPages(This) -> boolean()")
               "wxPrintDialogData:enableSelection/2"
               ("http://www.erlang.org/doc/man/wxPrintDialogData.html#enableSelection-2" "enableSelection(This, Flag) -> ok")
               "wxPrintDialogData:enablePrintToFile/2"
               ("http://www.erlang.org/doc/man/wxPrintDialogData.html#enablePrintToFile-2" "enablePrintToFile(This, Flag) -> ok")
               "wxPrintDialogData:enablePageNumbers/2"
               ("http://www.erlang.org/doc/man/wxPrintDialogData.html#enablePageNumbers-2" "enablePageNumbers(This, Flag) -> ok")
               "wxPrintDialogData:enableHelp/2"
               ("http://www.erlang.org/doc/man/wxPrintDialogData.html#enableHelp-2" "enableHelp(This, Flag) -> ok")
               "wxPrintDialogData:new/1"
               ("http://www.erlang.org/doc/man/wxPrintDialogData.html#new-1" "new(DialogData) -> wxPrintDialogData()")
               "wxPrintDialogData:new/0"
               ("http://www.erlang.org/doc/man/wxPrintDialogData.html#new-0" "new() -> wxPrintDialogData()")
               "wxPrintDialogData:"
               ("http://www.erlang.org/doc/man/wxPrintDialogData.html#type-wxPrintDialogData" "wxPrintDialogData()")
               "wxPrinter:destroy/1"
               ("http://www.erlang.org/doc/man/wxPrinter.html#destroy-1" "destroy(This:: wxPrinter() ) -> ok")
               "wxPrinter:setup/2"
               ("http://www.erlang.org/doc/man/wxPrinter.html#setup-2" "setup(This, Parent) -> boolean()")
               "wxPrinter:reportError/4"
               ("http://www.erlang.org/doc/man/wxPrinter.html#reportError-4" "reportError(This, Parent, Printout, Message) -> ok")
               "wxPrinter:printDialog/2"
               ("http://www.erlang.org/doc/man/wxPrinter.html#printDialog-2" "printDialog(This, Parent) -> wxDC:wxDC()")
               "wxPrinter:print/4"
               ("http://www.erlang.org/doc/man/wxPrinter.html#print-4" "print(This, Parent, Printout, Options::[Option]) -> boolean()")
               "wxPrinter:print/3"
               ("http://www.erlang.org/doc/man/wxPrinter.html#print-3" "print(This, Parent, Printout) -> boolean()")
               "wxPrinter:getPrintDialogData/1"
               ("http://www.erlang.org/doc/man/wxPrinter.html#getPrintDialogData-1" "getPrintDialogData(This) -> wxPrintDialogData:wxPrintDialogData()")
               "wxPrinter:getLastError/0"
               ("http://www.erlang.org/doc/man/wxPrinter.html#getLastError-0" "getLastError() -> wx:wx_enum()")
               "wxPrinter:getAbort/1"
               ("http://www.erlang.org/doc/man/wxPrinter.html#getAbort-1" "getAbort(This) -> boolean()")
               "wxPrinter:createAbortWindow/3"
               ("http://www.erlang.org/doc/man/wxPrinter.html#createAbortWindow-3" "createAbortWindow(This, Parent, Printout) -> wxWindow:wxWindow()")
               "wxPrinter:new/1"
               ("http://www.erlang.org/doc/man/wxPrinter.html#new-1" "new(Options::[Option]) -> wxPrinter()")
               "wxPrinter:new/0"
               ("http://www.erlang.org/doc/man/wxPrinter.html#new-0" "new() -> wxPrinter()")
               "wxPrinter:"
               ("http://www.erlang.org/doc/man/wxPrinter.html#type-wxPrinter" "wxPrinter()")
               "wxPrintout:destroy/1"
               ("http://www.erlang.org/doc/man/wxPrintout.html#destroy-1" "destroy(This:: wxPrintout() ) -> ok")
               "wxPrintout:offsetLogicalOrigin/3"
               ("http://www.erlang.org/doc/man/wxPrintout.html#offsetLogicalOrigin-3" "offsetLogicalOrigin(This, Xoff, Yoff) -> ok")
               "wxPrintout:setLogicalOrigin/3"
               ("http://www.erlang.org/doc/man/wxPrintout.html#setLogicalOrigin-3" "setLogicalOrigin(This, X, Y) -> ok")
               "wxPrintout:getLogicalPageMarginsRect/2"
               ("http://www.erlang.org/doc/man/wxPrintout.html#getLogicalPageMarginsRect-2" "getLogicalPageMarginsRect(This, PageSetupData) -> {X::integer(), Y::integer(), W::integer(), H::integer()}")
               "wxPrintout:getLogicalPageRect/1"
               ("http://www.erlang.org/doc/man/wxPrintout.html#getLogicalPageRect-1" "getLogicalPageRect(This) -> {X::integer(), Y::integer(), W::integer(), H::integer()}")
               "wxPrintout:getLogicalPaperRect/1"
               ("http://www.erlang.org/doc/man/wxPrintout.html#getLogicalPaperRect-1" "getLogicalPaperRect(This) -> {X::integer(), Y::integer(), W::integer(), H::integer()}")
               "wxPrintout:mapScreenSizeToDevice/1"
               ("http://www.erlang.org/doc/man/wxPrintout.html#mapScreenSizeToDevice-1" "mapScreenSizeToDevice(This) -> ok")
               "wxPrintout:mapScreenSizeToPageMargins/2"
               ("http://www.erlang.org/doc/man/wxPrintout.html#mapScreenSizeToPageMargins-2" "mapScreenSizeToPageMargins(This, PageSetupData) -> ok")
               "wxPrintout:mapScreenSizeToPage/1"
               ("http://www.erlang.org/doc/man/wxPrintout.html#mapScreenSizeToPage-1" "mapScreenSizeToPage(This) -> ok")
               "wxPrintout:mapScreenSizeToPaper/1"
               ("http://www.erlang.org/doc/man/wxPrintout.html#mapScreenSizeToPaper-1" "mapScreenSizeToPaper(This) -> ok")
               "wxPrintout:fitThisSizeToPageMargins/3"
               ("http://www.erlang.org/doc/man/wxPrintout.html#fitThisSizeToPageMargins-3" "fitThisSizeToPageMargins(This, ImageSize, PageSetupData) -> ok")
               "wxPrintout:fitThisSizeToPage/2"
               ("http://www.erlang.org/doc/man/wxPrintout.html#fitThisSizeToPage-2" "fitThisSizeToPage(This, ImageSize) -> ok")
               "wxPrintout:fitThisSizeToPaper/2"
               ("http://www.erlang.org/doc/man/wxPrintout.html#fitThisSizeToPaper-2" "fitThisSizeToPaper(This, ImageSize) -> ok")
               "wxPrintout:isPreview/1"
               ("http://www.erlang.org/doc/man/wxPrintout.html#isPreview-1" "isPreview(This) -> boolean()")
               "wxPrintout:getTitle/1"
               ("http://www.erlang.org/doc/man/wxPrintout.html#getTitle-1" "getTitle(This) -> unicode:charlist()")
               "wxPrintout:getPPIScreen/1"
               ("http://www.erlang.org/doc/man/wxPrintout.html#getPPIScreen-1" "getPPIScreen(This) -> {X::integer(), Y::integer()}")
               "wxPrintout:getPPIPrinter/1"
               ("http://www.erlang.org/doc/man/wxPrintout.html#getPPIPrinter-1" "getPPIPrinter(This) -> {X::integer(), Y::integer()}")
               "wxPrintout:getPaperRectPixels/1"
               ("http://www.erlang.org/doc/man/wxPrintout.html#getPaperRectPixels-1" "getPaperRectPixels(This) -> {X::integer(), Y::integer(), W::integer(), H::integer()}")
               "wxPrintout:getPageSizePixels/1"
               ("http://www.erlang.org/doc/man/wxPrintout.html#getPageSizePixels-1" "getPageSizePixels(This) -> {W::integer(), H::integer()}")
               "wxPrintout:getPageSizeMM/1"
               ("http://www.erlang.org/doc/man/wxPrintout.html#getPageSizeMM-1" "getPageSizeMM(This) -> {W::integer(), H::integer()}")
               "wxPrintout:getDC/1"
               ("http://www.erlang.org/doc/man/wxPrintout.html#getDC-1" "getDC(This) -> wxDC:wxDC()")
               "wxPrintout:new/3"
               ("http://www.erlang.org/doc/man/wxPrintout.html#new-3" "new(Title::string(), OnPrintPage::function(), Opts::[Option]) -> wxPrintout:wxPrintout()")
               "wxPrintout:new/2"
               ("http://www.erlang.org/doc/man/wxPrintout.html#new-2" "new(Title::string(), OnPrintPage::function()) -> wxPrintout:wxPrintout()")
               "wxPrintout:"
               ("http://www.erlang.org/doc/man/wxPrintout.html#type-wxPrintout" "wxPrintout()")
               "wxPrintPreview:destroy/1"
               ("http://www.erlang.org/doc/man/wxPrintPreview.html#destroy-1" "destroy(This:: wxPrintPreview() ) -> ok")
               "wxPrintPreview:setZoom/2"
               ("http://www.erlang.org/doc/man/wxPrintPreview.html#setZoom-2" "setZoom(This, Percent) -> ok")
               "wxPrintPreview:setPrintout/2"
               ("http://www.erlang.org/doc/man/wxPrintPreview.html#setPrintout-2" "setPrintout(This, Printout) -> ok")
               "wxPrintPreview:setFrame/2"
               ("http://www.erlang.org/doc/man/wxPrintPreview.html#setFrame-2" "setFrame(This, Frame) -> ok")
               "wxPrintPreview:setCurrentPage/2"
               ("http://www.erlang.org/doc/man/wxPrintPreview.html#setCurrentPage-2" "setCurrentPage(This, PageNum) -> boolean()")
               "wxPrintPreview:setCanvas/2"
               ("http://www.erlang.org/doc/man/wxPrintPreview.html#setCanvas-2" "setCanvas(This, Canvas) -> ok")
               "wxPrintPreview:renderPage/2"
               ("http://www.erlang.org/doc/man/wxPrintPreview.html#renderPage-2" "renderPage(This, PageNum) -> boolean()")
               "wxPrintPreview:print/2"
               ("http://www.erlang.org/doc/man/wxPrintPreview.html#print-2" "print(This, Interactive) -> boolean()")
               "wxPrintPreview:paintPage/3"
               ("http://www.erlang.org/doc/man/wxPrintPreview.html#paintPage-3" "paintPage(This, Canvas, Dc) -> boolean()")
               "wxPrintPreview:isOk/1"
               ("http://www.erlang.org/doc/man/wxPrintPreview.html#isOk-1" "isOk(This) -> boolean()")
               "wxPrintPreview:getPrintoutForPrinting/1"
               ("http://www.erlang.org/doc/man/wxPrintPreview.html#getPrintoutForPrinting-1" "getPrintoutForPrinting(This) -> wxPrintout:wxPrintout()")
               "wxPrintPreview:getPrintout/1"
               ("http://www.erlang.org/doc/man/wxPrintPreview.html#getPrintout-1" "getPrintout(This) -> wxPrintout:wxPrintout()")
               "wxPrintPreview:getMinPage/1"
               ("http://www.erlang.org/doc/man/wxPrintPreview.html#getMinPage-1" "getMinPage(This) -> integer()")
               "wxPrintPreview:getMaxPage/1"
               ("http://www.erlang.org/doc/man/wxPrintPreview.html#getMaxPage-1" "getMaxPage(This) -> integer()")
               "wxPrintPreview:getFrame/1"
               ("http://www.erlang.org/doc/man/wxPrintPreview.html#getFrame-1" "getFrame(This) -> wxFrame:wxFrame()")
               "wxPrintPreview:getCurrentPage/1"
               ("http://www.erlang.org/doc/man/wxPrintPreview.html#getCurrentPage-1" "getCurrentPage(This) -> integer()")
               "wxPrintPreview:getCanvas/1"
               ("http://www.erlang.org/doc/man/wxPrintPreview.html#getCanvas-1" "getCanvas(This) -> wxPreviewCanvas:wxPreviewCanvas()")
               "wxPrintPreview:new/3"
               ("http://www.erlang.org/doc/man/wxPrintPreview.html#new-3" "new(Printout, PrintoutForPrinting, Data) -> wxPrintPreview()")
               "wxPrintPreview:new/2"
               ("http://www.erlang.org/doc/man/wxPrintPreview.html#new-2" "new(Printout, Options::[Option]) -> wxPrintPreview()")
               "wxPrintPreview:new/1"
               ("http://www.erlang.org/doc/man/wxPrintPreview.html#new-1" "new(Printout) -> wxPrintPreview()")
               "wxPrintPreview:"
               ("http://www.erlang.org/doc/man/wxPrintPreview.html#type-wxPrintPreview" "wxPrintPreview()")
               "wxProgressDialog:destroy/1"
               ("http://www.erlang.org/doc/man/wxProgressDialog.html#destroy-1" "destroy(This:: wxProgressDialog() ) -> ok")
               "wxProgressDialog:update/3"
               ("http://www.erlang.org/doc/man/wxProgressDialog.html#update-3" "update(This, Value, Options::[Option]) -> boolean()")
               "wxProgressDialog:update/2"
               ("http://www.erlang.org/doc/man/wxProgressDialog.html#update-2" "update(This, Value) -> boolean()")
               "wxProgressDialog:update/1"
               ("http://www.erlang.org/doc/man/wxProgressDialog.html#update-1" "update(This) -> ok")
               "wxProgressDialog:resume/1"
               ("http://www.erlang.org/doc/man/wxProgressDialog.html#resume-1" "resume(This) -> ok")
               "wxProgressDialog:new/3"
               ("http://www.erlang.org/doc/man/wxProgressDialog.html#new-3" "new(Title, Message, Options::[Option]) -> wxProgressDialog()")
               "wxProgressDialog:new/2"
               ("http://www.erlang.org/doc/man/wxProgressDialog.html#new-2" "new(Title, Message) -> wxProgressDialog()")
               "wxProgressDialog:"
               ("http://www.erlang.org/doc/man/wxProgressDialog.html#type-wxProgressDialog" "wxProgressDialog()")
               "wxQueryNewPaletteEvent:getPaletteRealized/1"
               ("http://www.erlang.org/doc/man/wxQueryNewPaletteEvent.html#getPaletteRealized-1" "getPaletteRealized(This) -> boolean()")
               "wxQueryNewPaletteEvent:setPaletteRealized/2"
               ("http://www.erlang.org/doc/man/wxQueryNewPaletteEvent.html#setPaletteRealized-2" "setPaletteRealized(This, Realized) -> ok")
               "wxQueryNewPaletteEvent:"
               ("http://www.erlang.org/doc/man/wxQueryNewPaletteEvent.html#type-wxQueryNewPaletteEvent" "wxQueryNewPaletteEvent()")
               "wxRadioBox:destroy/1"
               ("http://www.erlang.org/doc/man/wxRadioBox.html#destroy-1" "destroy(This:: wxRadioBox() ) -> ok")
               "wxRadioBox:setItemToolTip/3"
               ("http://www.erlang.org/doc/man/wxRadioBox.html#setItemToolTip-3" "setItemToolTip(This, Item, Text) -> ok")
               "wxRadioBox:setItemHelpText/3"
               ("http://www.erlang.org/doc/man/wxRadioBox.html#setItemHelpText-3" "setItemHelpText(This, N, HelpText) -> ok")
               "wxRadioBox:isItemShown/2"
               ("http://www.erlang.org/doc/man/wxRadioBox.html#isItemShown-2" "isItemShown(This, N) -> boolean()")
               "wxRadioBox:isItemEnabled/2"
               ("http://www.erlang.org/doc/man/wxRadioBox.html#isItemEnabled-2" "isItemEnabled(This, N) -> boolean()")
               "wxRadioBox:getRowCount/1"
               ("http://www.erlang.org/doc/man/wxRadioBox.html#getRowCount-1" "getRowCount(This) -> integer()")
               "wxRadioBox:getItemFromPoint/2"
               ("http://www.erlang.org/doc/man/wxRadioBox.html#getItemFromPoint-2" "getItemFromPoint(This, Pt) -> integer()")
               "wxRadioBox:getItemToolTip/2"
               ("http://www.erlang.org/doc/man/wxRadioBox.html#getItemToolTip-2" "getItemToolTip(This, Item) -> wxToolTip:wxToolTip()")
               "wxRadioBox:getItemHelpText/2"
               ("http://www.erlang.org/doc/man/wxRadioBox.html#getItemHelpText-2" "getItemHelpText(This, N) -> unicode:charlist()")
               "wxRadioBox:getColumnCount/1"
               ("http://www.erlang.org/doc/man/wxRadioBox.html#getColumnCount-1" "getColumnCount(This) -> integer()")
               "wxRadioBox:show/3"
               ("http://www.erlang.org/doc/man/wxRadioBox.html#show-3" "show(This, N, Options::[Option]) -> boolean()")
               "wxRadioBox:show/2"
               ("http://www.erlang.org/doc/man/wxRadioBox.html#show-2" "show(This, N) -> boolean()")
               "wxRadioBox:show/1"
               ("http://www.erlang.org/doc/man/wxRadioBox.html#show-1" "show(This) -> boolean()")
               "wxRadioBox:setSelection/2"
               ("http://www.erlang.org/doc/man/wxRadioBox.html#setSelection-2" "setSelection(This, N) -> ok")
               "wxRadioBox:getString/2"
               ("http://www.erlang.org/doc/man/wxRadioBox.html#getString-2" "getString(This, N) -> unicode:charlist()")
               "wxRadioBox:getSelection/1"
               ("http://www.erlang.org/doc/man/wxRadioBox.html#getSelection-1" "getSelection(This) -> integer()")
               "wxRadioBox:enable/3"
               ("http://www.erlang.org/doc/man/wxRadioBox.html#enable-3" "enable(This, N, Options::[Option]) -> boolean()")
               "wxRadioBox:enable/2"
               ("http://www.erlang.org/doc/man/wxRadioBox.html#enable-2" "enable(This, N) -> boolean()")
               "wxRadioBox:enable/1"
               ("http://www.erlang.org/doc/man/wxRadioBox.html#enable-1" "enable(This) -> boolean()")
               "wxRadioBox:create/8"
               ("http://www.erlang.org/doc/man/wxRadioBox.html#create-8" "create(This, Parent, Id, Title, Pos, Size, Choices, Options::[Option]) -> boolean()")
               "wxRadioBox:create/7"
               ("http://www.erlang.org/doc/man/wxRadioBox.html#create-7" "create(This, Parent, Id, Title, Pos, Size, Choices) -> boolean()")
               "wxRadioBox:new/7"
               ("http://www.erlang.org/doc/man/wxRadioBox.html#new-7" "new(Parent, Id, Title, Pos, Size, Choices, Options::[Option]) -> wxRadioBox()")
               "wxRadioBox:new/6"
               ("http://www.erlang.org/doc/man/wxRadioBox.html#new-6" "new(Parent, Id, Title, Pos, Size, Choices) -> wxRadioBox()")
               "wxRadioBox:"
               ("http://www.erlang.org/doc/man/wxRadioBox.html#type-wxRadioBox" "wxRadioBox()")
               "wxRadioButton:destroy/1"
               ("http://www.erlang.org/doc/man/wxRadioButton.html#destroy-1" "destroy(This:: wxRadioButton() ) -> ok")
               "wxRadioButton:setValue/2"
               ("http://www.erlang.org/doc/man/wxRadioButton.html#setValue-2" "setValue(This, Val) -> ok")
               "wxRadioButton:getValue/1"
               ("http://www.erlang.org/doc/man/wxRadioButton.html#getValue-1" "getValue(This) -> boolean()")
               "wxRadioButton:create/5"
               ("http://www.erlang.org/doc/man/wxRadioButton.html#create-5" "create(This, Parent, Id, Label, Options::[Option]) -> boolean()")
               "wxRadioButton:create/4"
               ("http://www.erlang.org/doc/man/wxRadioButton.html#create-4" "create(This, Parent, Id, Label) -> boolean()")
               "wxRadioButton:new/4"
               ("http://www.erlang.org/doc/man/wxRadioButton.html#new-4" "new(Parent, Id, Label, Options::[Option]) -> wxRadioButton()")
               "wxRadioButton:new/3"
               ("http://www.erlang.org/doc/man/wxRadioButton.html#new-3" "new(Parent, Id, Label) -> wxRadioButton()")
               "wxRadioButton:new/0"
               ("http://www.erlang.org/doc/man/wxRadioButton.html#new-0" "new() -> wxRadioButton()")
               "wxRadioButton:"
               ("http://www.erlang.org/doc/man/wxRadioButton.html#type-wxRadioButton" "wxRadioButton()")
               "wxRegion:destroy/1"
               ("http://www.erlang.org/doc/man/wxRegion.html#destroy-1" "destroy(This:: wxRegion() ) -> ok")
               "wxRegion:Xor/5"
               ("http://www.erlang.org/doc/man/wxRegion.html#Xor-5" "Xor(This, X, Y, W, H) -> boolean()")
               "wxRegion:Xor/2"
               ("http://www.erlang.org/doc/man/wxRegion.html#Xor-2" "Xor(This, Region) -> boolean()")
               "wxRegion:union/5"
               ("http://www.erlang.org/doc/man/wxRegion.html#union-5" "union(This, X, Y, W, H) -> boolean()")
               "wxRegion:union/4"
               ("http://www.erlang.org/doc/man/wxRegion.html#union-4" "union(This, Bmp, Transp, Options::[Option]) -> boolean()")
               "wxRegion:union/3"
               ("http://www.erlang.org/doc/man/wxRegion.html#union-3" "union(This, Bmp, Transp) -> boolean()")
               "wxRegion:union/2"
               ("http://www.erlang.org/doc/man/wxRegion.html#union-2" "union(This, Region) -> boolean()")
               "wxRegion:offset/3"
               ("http://www.erlang.org/doc/man/wxRegion.html#offset-3" "offset(This, X, Y) -> boolean()")
               "wxRegion:offset/2"
               ("http://www.erlang.org/doc/man/wxRegion.html#offset-2" "offset(This, Pt) -> boolean()")
               "wxRegion:subtract/5"
               ("http://www.erlang.org/doc/man/wxRegion.html#subtract-5" "subtract(This, X, Y, W, H) -> boolean()")
               "wxRegion:subtract/2"
               ("http://www.erlang.org/doc/man/wxRegion.html#subtract-2" "subtract(This, Region) -> boolean()")
               "wxRegion:isEmpty/1"
               ("http://www.erlang.org/doc/man/wxRegion.html#isEmpty-1" "isEmpty(This) -> boolean()")
               "wxRegion:intersect/5"
               ("http://www.erlang.org/doc/man/wxRegion.html#intersect-5" "intersect(This, X, Y, W, H) -> boolean()")
               "wxRegion:intersect/2"
               ("http://www.erlang.org/doc/man/wxRegion.html#intersect-2" "intersect(This, Region) -> boolean()")
               "wxRegion:getBox/1"
               ("http://www.erlang.org/doc/man/wxRegion.html#getBox-1" "getBox(This) -> {X::integer(), Y::integer(), W::integer(), H::integer()}")
               "wxRegion:convertToBitmap/1"
               ("http://www.erlang.org/doc/man/wxRegion.html#convertToBitmap-1" "convertToBitmap(This) -> wxBitmap:wxBitmap()")
               "wxRegion:contains/5"
               ("http://www.erlang.org/doc/man/wxRegion.html#contains-5" "contains(This, X, Y, W, H) -> wx:wx_enum()")
               "wxRegion:contains/3"
               ("http://www.erlang.org/doc/man/wxRegion.html#contains-3" "contains(This, X, Y) -> wx:wx_enum()")
               "wxRegion:contains/2"
               ("http://www.erlang.org/doc/man/wxRegion.html#contains-2" "contains(This, Pt) -> wx:wx_enum()")
               "wxRegion:clear/1"
               ("http://www.erlang.org/doc/man/wxRegion.html#clear-1" "clear(This) -> ok")
               "wxRegion:new/4"
               ("http://www.erlang.org/doc/man/wxRegion.html#new-4" "new(X, Y, W, H) -> wxRegion()")
               "wxRegion:new/2"
               ("http://www.erlang.org/doc/man/wxRegion.html#new-2" "new(TopLeft, BottomRight) -> wxRegion()")
               "wxRegion:new/1"
               ("http://www.erlang.org/doc/man/wxRegion.html#new-1" "new(Bmp) -> wxRegion()")
               "wxRegion:new/0"
               ("http://www.erlang.org/doc/man/wxRegion.html#new-0" "new() -> wxRegion()")
               "wxRegion:"
               ("http://www.erlang.org/doc/man/wxRegion.html#type-wxRegion" "wxRegion()")
               "wxSashEvent:getDragStatus/1"
               ("http://www.erlang.org/doc/man/wxSashEvent.html#getDragStatus-1" "getDragStatus(This) -> wx:wx_enum()")
               "wxSashEvent:getDragRect/1"
               ("http://www.erlang.org/doc/man/wxSashEvent.html#getDragRect-1" "getDragRect(This) -> {X::integer(), Y::integer(), W::integer(), H::integer()}")
               "wxSashEvent:getEdge/1"
               ("http://www.erlang.org/doc/man/wxSashEvent.html#getEdge-1" "getEdge(This) -> wx:wx_enum()")
               "wxSashEvent:"
               ("http://www.erlang.org/doc/man/wxSashEvent.html#type-wxSashEvent" "wxSashEvent()")
               "wxSashLayoutWindow:destroy/1"
               ("http://www.erlang.org/doc/man/wxSashLayoutWindow.html#destroy-1" "destroy(This:: wxSashLayoutWindow() ) -> ok")
               "wxSashLayoutWindow:setOrientation/2"
               ("http://www.erlang.org/doc/man/wxSashLayoutWindow.html#setOrientation-2" "setOrientation(This, Orient) -> ok")
               "wxSashLayoutWindow:setDefaultSize/2"
               ("http://www.erlang.org/doc/man/wxSashLayoutWindow.html#setDefaultSize-2" "setDefaultSize(This, Size) -> ok")
               "wxSashLayoutWindow:setAlignment/2"
               ("http://www.erlang.org/doc/man/wxSashLayoutWindow.html#setAlignment-2" "setAlignment(This, Align) -> ok")
               "wxSashLayoutWindow:getOrientation/1"
               ("http://www.erlang.org/doc/man/wxSashLayoutWindow.html#getOrientation-1" "getOrientation(This) -> wx:wx_enum()")
               "wxSashLayoutWindow:getAlignment/1"
               ("http://www.erlang.org/doc/man/wxSashLayoutWindow.html#getAlignment-1" "getAlignment(This) -> wx:wx_enum()")
               "wxSashLayoutWindow:create/3"
               ("http://www.erlang.org/doc/man/wxSashLayoutWindow.html#create-3" "create(This, Parent, Options::[Option]) -> boolean()")
               "wxSashLayoutWindow:create/2"
               ("http://www.erlang.org/doc/man/wxSashLayoutWindow.html#create-2" "create(This, Parent) -> boolean()")
               "wxSashLayoutWindow:new/2"
               ("http://www.erlang.org/doc/man/wxSashLayoutWindow.html#new-2" "new(Parent, Options::[Option]) -> wxSashLayoutWindow()")
               "wxSashLayoutWindow:new/1"
               ("http://www.erlang.org/doc/man/wxSashLayoutWindow.html#new-1" "new(Parent) -> wxSashLayoutWindow()")
               "wxSashLayoutWindow:new/0"
               ("http://www.erlang.org/doc/man/wxSashLayoutWindow.html#new-0" "new() -> wxSashLayoutWindow()")
               "wxSashLayoutWindow:"
               ("http://www.erlang.org/doc/man/wxSashLayoutWindow.html#type-wxSashLayoutWindow" "wxSashLayoutWindow()")
               "wxSashWindow:destroy/1"
               ("http://www.erlang.org/doc/man/wxSashWindow.html#destroy-1" "destroy(This:: wxSashWindow() ) -> ok")
               "wxSashWindow:setSashVisible/3"
               ("http://www.erlang.org/doc/man/wxSashWindow.html#setSashVisible-3" "setSashVisible(This, Edge, Sash) -> ok")
               "wxSashWindow:setMinimumSizeY/2"
               ("http://www.erlang.org/doc/man/wxSashWindow.html#setMinimumSizeY-2" "setMinimumSizeY(This, Min) -> ok")
               "wxSashWindow:setMinimumSizeX/2"
               ("http://www.erlang.org/doc/man/wxSashWindow.html#setMinimumSizeX-2" "setMinimumSizeX(This, Min) -> ok")
               "wxSashWindow:setMaximumSizeY/2"
               ("http://www.erlang.org/doc/man/wxSashWindow.html#setMaximumSizeY-2" "setMaximumSizeY(This, Max) -> ok")
               "wxSashWindow:setMaximumSizeX/2"
               ("http://www.erlang.org/doc/man/wxSashWindow.html#setMaximumSizeX-2" "setMaximumSizeX(This, Max) -> ok")
               "wxSashWindow:getMinimumSizeY/1"
               ("http://www.erlang.org/doc/man/wxSashWindow.html#getMinimumSizeY-1" "getMinimumSizeY(This) -> integer()")
               "wxSashWindow:getMinimumSizeX/1"
               ("http://www.erlang.org/doc/man/wxSashWindow.html#getMinimumSizeX-1" "getMinimumSizeX(This) -> integer()")
               "wxSashWindow:getMaximumSizeY/1"
               ("http://www.erlang.org/doc/man/wxSashWindow.html#getMaximumSizeY-1" "getMaximumSizeY(This) -> integer()")
               "wxSashWindow:getMaximumSizeX/1"
               ("http://www.erlang.org/doc/man/wxSashWindow.html#getMaximumSizeX-1" "getMaximumSizeX(This) -> integer()")
               "wxSashWindow:getSashVisible/2"
               ("http://www.erlang.org/doc/man/wxSashWindow.html#getSashVisible-2" "getSashVisible(This, Edge) -> boolean()")
               "wxSashWindow:new/2"
               ("http://www.erlang.org/doc/man/wxSashWindow.html#new-2" "new(Parent, Options::[Option]) -> wxSashWindow()")
               "wxSashWindow:new/1"
               ("http://www.erlang.org/doc/man/wxSashWindow.html#new-1" "new(Parent) -> wxSashWindow()")
               "wxSashWindow:new/0"
               ("http://www.erlang.org/doc/man/wxSashWindow.html#new-0" "new() -> wxSashWindow()")
               "wxSashWindow:"
               ("http://www.erlang.org/doc/man/wxSashWindow.html#type-wxSashWindow" "wxSashWindow()")
               "wxScreenDC:destroy/1"
               ("http://www.erlang.org/doc/man/wxScreenDC.html#destroy-1" "destroy(This:: wxScreenDC() ) -> ok")
               "wxScreenDC:new/0"
               ("http://www.erlang.org/doc/man/wxScreenDC.html#new-0" "new() -> wxScreenDC()")
               "wxScreenDC:"
               ("http://www.erlang.org/doc/man/wxScreenDC.html#type-wxScreenDC" "wxScreenDC()")
               "wxScrollBar:destroy/1"
               ("http://www.erlang.org/doc/man/wxScrollBar.html#destroy-1" "destroy(This:: wxScrollBar() ) -> ok")
               "wxScrollBar:setScrollbar/6"
               ("http://www.erlang.org/doc/man/wxScrollBar.html#setScrollbar-6" "setScrollbar(This, Position, ThumbSize, Range, PageSize, Options::[Option]) -> ok")
               "wxScrollBar:setScrollbar/5"
               ("http://www.erlang.org/doc/man/wxScrollBar.html#setScrollbar-5" "setScrollbar(This, Position, ThumbSize, Range, PageSize) -> ok")
               "wxScrollBar:setThumbPosition/2"
               ("http://www.erlang.org/doc/man/wxScrollBar.html#setThumbPosition-2" "setThumbPosition(This, ViewStart) -> ok")
               "wxScrollBar:getThumbSize/1"
               ("http://www.erlang.org/doc/man/wxScrollBar.html#getThumbSize-1" "getThumbSize(This) -> integer()")
               "wxScrollBar:getThumbPosition/1"
               ("http://www.erlang.org/doc/man/wxScrollBar.html#getThumbPosition-1" "getThumbPosition(This) -> integer()")
               "wxScrollBar:getPageSize/1"
               ("http://www.erlang.org/doc/man/wxScrollBar.html#getPageSize-1" "getPageSize(This) -> integer()")
               "wxScrollBar:getRange/1"
               ("http://www.erlang.org/doc/man/wxScrollBar.html#getRange-1" "getRange(This) -> integer()")
               "wxScrollBar:create/4"
               ("http://www.erlang.org/doc/man/wxScrollBar.html#create-4" "create(This, Parent, Id, Options::[Option]) -> boolean()")
               "wxScrollBar:create/3"
               ("http://www.erlang.org/doc/man/wxScrollBar.html#create-3" "create(This, Parent, Id) -> boolean()")
               "wxScrollBar:new/3"
               ("http://www.erlang.org/doc/man/wxScrollBar.html#new-3" "new(Parent, Id, Options::[Option]) -> wxScrollBar()")
               "wxScrollBar:new/2"
               ("http://www.erlang.org/doc/man/wxScrollBar.html#new-2" "new(Parent, Id) -> wxScrollBar()")
               "wxScrollBar:new/0"
               ("http://www.erlang.org/doc/man/wxScrollBar.html#new-0" "new() -> wxScrollBar()")
               "wxScrollBar:"
               ("http://www.erlang.org/doc/man/wxScrollBar.html#type-wxScrollBar" "wxScrollBar()")
               "wxScrolledWindow:destroy/1"
               ("http://www.erlang.org/doc/man/wxScrolledWindow.html#destroy-1" "destroy(This:: wxScrolledWindow() ) -> ok")
               "wxScrolledWindow:setTargetWindow/2"
               ("http://www.erlang.org/doc/man/wxScrolledWindow.html#setTargetWindow-2" "setTargetWindow(This, Target) -> ok")
               "wxScrolledWindow:setScrollRate/3"
               ("http://www.erlang.org/doc/man/wxScrolledWindow.html#setScrollRate-3" "setScrollRate(This, Xstep, Ystep) -> ok")
               "wxScrolledWindow:setScrollbars/6"
               ("http://www.erlang.org/doc/man/wxScrolledWindow.html#setScrollbars-6" "setScrollbars(This, PixelsPerUnitX, PixelsPerUnitY, NoUnitsX, NoUnitsY, Options::[Option]) -> ok")
               "wxScrolledWindow:setScrollbars/5"
               ("http://www.erlang.org/doc/man/wxScrolledWindow.html#setScrollbars-5" "setScrollbars(This, PixelsPerUnitX, PixelsPerUnitY, NoUnitsX, NoUnitsY) -> ok")
               "wxScrolledWindow:scroll/3"
               ("http://www.erlang.org/doc/man/wxScrolledWindow.html#scroll-3" "scroll(This, X, Y) -> ok")
               "wxScrolledWindow:prepareDC/2"
               ("http://www.erlang.org/doc/man/wxScrolledWindow.html#prepareDC-2" "prepareDC(This, Dc) -> ok")
               "wxScrolledWindow:doPrepareDC/2"
               ("http://www.erlang.org/doc/man/wxScrolledWindow.html#doPrepareDC-2" "doPrepareDC(This, Dc) -> ok")
               "wxScrolledWindow:getViewStart/1"
               ("http://www.erlang.org/doc/man/wxScrolledWindow.html#getViewStart-1" "getViewStart(This) -> {X::integer(), Y::integer()}")
               "wxScrolledWindow:getScrollPixelsPerUnit/1"
               ("http://www.erlang.org/doc/man/wxScrolledWindow.html#getScrollPixelsPerUnit-1" "getScrollPixelsPerUnit(This) -> {PixelsPerUnitX::integer(), PixelsPerUnitY::integer()}")
               "wxScrolledWindow:enableScrolling/3"
               ("http://www.erlang.org/doc/man/wxScrolledWindow.html#enableScrolling-3" "enableScrolling(This, X_scrolling, Y_scrolling) -> ok")
               "wxScrolledWindow:calcUnscrolledPosition/3"
               ("http://www.erlang.org/doc/man/wxScrolledWindow.html#calcUnscrolledPosition-3" "calcUnscrolledPosition(This, X, Y) -> {Xx::integer(), Yy::integer()}")
               "wxScrolledWindow:calcUnscrolledPosition/2"
               ("http://www.erlang.org/doc/man/wxScrolledWindow.html#calcUnscrolledPosition-2" "calcUnscrolledPosition(This, Pt) -> {X::integer(), Y::integer()}")
               "wxScrolledWindow:calcScrolledPosition/3"
               ("http://www.erlang.org/doc/man/wxScrolledWindow.html#calcScrolledPosition-3" "calcScrolledPosition(This, X, Y) -> {Xx::integer(), Yy::integer()}")
               "wxScrolledWindow:calcScrolledPosition/2"
               ("http://www.erlang.org/doc/man/wxScrolledWindow.html#calcScrolledPosition-2" "calcScrolledPosition(This, Pt) -> {X::integer(), Y::integer()}")
               "wxScrolledWindow:new/2"
               ("http://www.erlang.org/doc/man/wxScrolledWindow.html#new-2" "new(Parent, Options::[Option]) -> wxScrolledWindow()")
               "wxScrolledWindow:new/1"
               ("http://www.erlang.org/doc/man/wxScrolledWindow.html#new-1" "new(Parent) -> wxScrolledWindow()")
               "wxScrolledWindow:new/0"
               ("http://www.erlang.org/doc/man/wxScrolledWindow.html#new-0" "new() -> wxScrolledWindow()")
               "wxScrolledWindow:"
               ("http://www.erlang.org/doc/man/wxScrolledWindow.html#type-wxScrolledWindow" "wxScrolledWindow()")
               "wxScrollEvent:getPosition/1"
               ("http://www.erlang.org/doc/man/wxScrollEvent.html#getPosition-1" "getPosition(This) -> integer()")
               "wxScrollEvent:getOrientation/1"
               ("http://www.erlang.org/doc/man/wxScrollEvent.html#getOrientation-1" "getOrientation(This) -> integer()")
               "wxScrollEvent:"
               ("http://www.erlang.org/doc/man/wxScrollEvent.html#type-wxScrollEvent" "wxScrollEvent()")
               "wxScrollWinEvent:getPosition/1"
               ("http://www.erlang.org/doc/man/wxScrollWinEvent.html#getPosition-1" "getPosition(This) -> integer()")
               "wxScrollWinEvent:getOrientation/1"
               ("http://www.erlang.org/doc/man/wxScrollWinEvent.html#getOrientation-1" "getOrientation(This) -> integer()")
               "wxScrollWinEvent:"
               ("http://www.erlang.org/doc/man/wxScrollWinEvent.html#type-wxScrollWinEvent" "wxScrollWinEvent()")
               "wxSetCursorEvent:setCursor/2"
               ("http://www.erlang.org/doc/man/wxSetCursorEvent.html#setCursor-2" "setCursor(This, Cursor) -> ok")
               "wxSetCursorEvent:hasCursor/1"
               ("http://www.erlang.org/doc/man/wxSetCursorEvent.html#hasCursor-1" "hasCursor(This) -> boolean()")
               "wxSetCursorEvent:getY/1"
               ("http://www.erlang.org/doc/man/wxSetCursorEvent.html#getY-1" "getY(This) -> integer()")
               "wxSetCursorEvent:getX/1"
               ("http://www.erlang.org/doc/man/wxSetCursorEvent.html#getX-1" "getX(This) -> integer()")
               "wxSetCursorEvent:getCursor/1"
               ("http://www.erlang.org/doc/man/wxSetCursorEvent.html#getCursor-1" "getCursor(This) -> wxCursor:wxCursor()")
               "wxSetCursorEvent:"
               ("http://www.erlang.org/doc/man/wxSetCursorEvent.html#type-wxSetCursorEvent" "wxSetCursorEvent()")
               "wxShowEvent:getShow/1"
               ("http://www.erlang.org/doc/man/wxShowEvent.html#getShow-1" "getShow(This) -> boolean()")
               "wxShowEvent:setShow/2"
               ("http://www.erlang.org/doc/man/wxShowEvent.html#setShow-2" "setShow(This, Show) -> ok")
               "wxShowEvent:"
               ("http://www.erlang.org/doc/man/wxShowEvent.html#type-wxShowEvent" "wxShowEvent()")
               "wxSingleChoiceDialog:destroy/1"
               ("http://www.erlang.org/doc/man/wxSingleChoiceDialog.html#destroy-1" "destroy(This:: wxSingleChoiceDialog() ) -> ok")
               "wxSingleChoiceDialog:setSelection/2"
               ("http://www.erlang.org/doc/man/wxSingleChoiceDialog.html#setSelection-2" "setSelection(This, Sel) -> ok")
               "wxSingleChoiceDialog:getStringSelection/1"
               ("http://www.erlang.org/doc/man/wxSingleChoiceDialog.html#getStringSelection-1" "getStringSelection(This) -> unicode:charlist()")
               "wxSingleChoiceDialog:getSelection/1"
               ("http://www.erlang.org/doc/man/wxSingleChoiceDialog.html#getSelection-1" "getSelection(This) -> integer()")
               "wxSingleChoiceDialog:new/5"
               ("http://www.erlang.org/doc/man/wxSingleChoiceDialog.html#new-5" "new(Parent, Message, Caption, Choices, Options::[Option]) -> wxSingleChoiceDialog()")
               "wxSingleChoiceDialog:new/4"
               ("http://www.erlang.org/doc/man/wxSingleChoiceDialog.html#new-4" "new(Parent, Message, Caption, Choices) -> wxSingleChoiceDialog()")
               "wxSingleChoiceDialog:new/0"
               ("http://www.erlang.org/doc/man/wxSingleChoiceDialog.html#new-0" "new() -> wxSingleChoiceDialog()")
               "wxSingleChoiceDialog:"
               ("http://www.erlang.org/doc/man/wxSingleChoiceDialog.html#type-wxSingleChoiceDialog" "wxSingleChoiceDialog()")
               "wxSizeEvent:getSize/1"
               ("http://www.erlang.org/doc/man/wxSizeEvent.html#getSize-1" "getSize(This) -> {W::integer(), H::integer()}")
               "wxSizeEvent:"
               ("http://www.erlang.org/doc/man/wxSizeEvent.html#type-wxSizeEvent" "wxSizeEvent()")
               "wxSizer:show/3"
               ("http://www.erlang.org/doc/man/wxSizer.html#show-3" "show(This, Index, Options::[Option]) -> boolean()")
               "wxSizer:show/2"
               ("http://www.erlang.org/doc/man/wxSizer.html#show-2" "show(This, Index) -> boolean()")
               "wxSizer:setVirtualSizeHints/2"
               ("http://www.erlang.org/doc/man/wxSizer.html#setVirtualSizeHints-2" "setVirtualSizeHints(This, Window) -> ok")
               "wxSizer:setSizeHints/2"
               ("http://www.erlang.org/doc/man/wxSizer.html#setSizeHints-2" "setSizeHints(This, Window) -> ok")
               "wxSizer:setItemMinSize/4"
               ("http://www.erlang.org/doc/man/wxSizer.html#setItemMinSize-4" "setItemMinSize(This, Index, Width, Height) -> boolean()")
               "wxSizer:setItemMinSize/3"
               ("http://www.erlang.org/doc/man/wxSizer.html#setItemMinSize-3" "setItemMinSize(This, Index, Size) -> boolean()")
               "wxSizer:setMinSize/3"
               ("http://www.erlang.org/doc/man/wxSizer.html#setMinSize-3" "setMinSize(This, Width, Height) -> ok")
               "wxSizer:setMinSize/2"
               ("http://www.erlang.org/doc/man/wxSizer.html#setMinSize-2" "setMinSize(This, Size) -> ok")
               "wxSizer:setDimension/5"
               ("http://www.erlang.org/doc/man/wxSizer.html#setDimension-5" "setDimension(This, X, Y, Width, Height) -> ok")
               "wxSizer:replace/4"
               ("http://www.erlang.org/doc/man/wxSizer.html#replace-4" "replace(This, Oldwin, Newwin, Options::[Option]) -> boolean()")
               "wxSizer:replace/3"
               ("http://www.erlang.org/doc/man/wxSizer.html#replace-3" "replace(This, Oldwin, Newwin) -> boolean()")
               "wxSizer:remove/2"
               ("http://www.erlang.org/doc/man/wxSizer.html#remove-2" "remove(This, Index) -> boolean()")
               "wxSizer:recalcSizes/1"
               ("http://www.erlang.org/doc/man/wxSizer.html#recalcSizes-1" "recalcSizes(This) -> ok")
               "wxSizer:prependStretchSpacer/2"
               ("http://www.erlang.org/doc/man/wxSizer.html#prependStretchSpacer-2" "prependStretchSpacer(This, Options::[Option]) -> wxSizerItem:wxSizerItem()")
               "wxSizer:prependStretchSpacer/1"
               ("http://www.erlang.org/doc/man/wxSizer.html#prependStretchSpacer-1" "prependStretchSpacer(This) -> wxSizerItem:wxSizerItem()")
               "wxSizer:prependSpacer/2"
               ("http://www.erlang.org/doc/man/wxSizer.html#prependSpacer-2" "prependSpacer(This, Size) -> wxSizerItem:wxSizerItem()")
               "wxSizer:prepend/4"
               ("http://www.erlang.org/doc/man/wxSizer.html#prepend-4" "prepend(This, Width, Height, Options::[Option]) -> wxSizerItem:wxSizerItem()")
               "wxSizer:prepend/3"
               ("http://www.erlang.org/doc/man/wxSizer.html#prepend-3" "prepend(This, Width, Height) -> wxSizerItem:wxSizerItem()")
               "wxSizer:prepend/2"
               ("http://www.erlang.org/doc/man/wxSizer.html#prepend-2" "prepend(This, Item) -> wxSizerItem:wxSizerItem()")
               "wxSizer:layout/1"
               ("http://www.erlang.org/doc/man/wxSizer.html#layout-1" "layout(This) -> ok")
               "wxSizer:isShown/2"
               ("http://www.erlang.org/doc/man/wxSizer.html#isShown-2" "isShown(This, Index) -> boolean()")
               "wxSizer:insertStretchSpacer/3"
               ("http://www.erlang.org/doc/man/wxSizer.html#insertStretchSpacer-3" "insertStretchSpacer(This, Index, Options::[Option]) -> wxSizerItem:wxSizerItem()")
               "wxSizer:insertStretchSpacer/2"
               ("http://www.erlang.org/doc/man/wxSizer.html#insertStretchSpacer-2" "insertStretchSpacer(This, Index) -> wxSizerItem:wxSizerItem()")
               "wxSizer:insertSpacer/3"
               ("http://www.erlang.org/doc/man/wxSizer.html#insertSpacer-3" "insertSpacer(This, Index, Size) -> wxSizerItem:wxSizerItem()")
               "wxSizer:insert/5"
               ("http://www.erlang.org/doc/man/wxSizer.html#insert-5" "insert(This, Index, Width, Height, Options::[Option]) -> wxSizerItem:wxSizerItem()")
               "wxSizer:insert/4"
               ("http://www.erlang.org/doc/man/wxSizer.html#insert-4" "insert(This, Index, Width, Height) -> wxSizerItem:wxSizerItem()")
               "wxSizer:insert/3"
               ("http://www.erlang.org/doc/man/wxSizer.html#insert-3" "insert(This, Index, Item) -> wxSizerItem:wxSizerItem()")
               "wxSizer:hide/3"
               ("http://www.erlang.org/doc/man/wxSizer.html#hide-3" "hide(This, Window, Options::[Option]) -> boolean()")
               "wxSizer:hide/2"
               ("http://www.erlang.org/doc/man/wxSizer.html#hide-2" "hide(This, Window) -> boolean()")
               "wxSizer:getMinSize/1"
               ("http://www.erlang.org/doc/man/wxSizer.html#getMinSize-1" "getMinSize(This) -> {W::integer(), H::integer()}")
               "wxSizer:getPosition/1"
               ("http://www.erlang.org/doc/man/wxSizer.html#getPosition-1" "getPosition(This) -> {X::integer(), Y::integer()}")
               "wxSizer:getSize/1"
               ("http://www.erlang.org/doc/man/wxSizer.html#getSize-1" "getSize(This) -> {W::integer(), H::integer()}")
               "wxSizer:getItem/3"
               ("http://www.erlang.org/doc/man/wxSizer.html#getItem-3" "getItem(This, Window, Options::[Option]) -> wxSizerItem:wxSizerItem()")
               "wxSizer:getItem/2"
               ("http://www.erlang.org/doc/man/wxSizer.html#getItem-2" "getItem(This, Window) -> wxSizerItem:wxSizerItem()")
               "wxSizer:getChildren/1"
               ("http://www.erlang.org/doc/man/wxSizer.html#getChildren-1" "getChildren(This) -> [ wxSizerItem:wxSizerItem() ]")
               "wxSizer:fitInside/2"
               ("http://www.erlang.org/doc/man/wxSizer.html#fitInside-2" "fitInside(This, Window) -> ok")
               "wxSizer:fit/2"
               ("http://www.erlang.org/doc/man/wxSizer.html#fit-2" "fit(This, Window) -> {W::integer(), H::integer()}")
               "wxSizer:detach/2"
               ("http://www.erlang.org/doc/man/wxSizer.html#detach-2" "detach(This, Index) -> boolean()")
               "wxSizer:clear/2"
               ("http://www.erlang.org/doc/man/wxSizer.html#clear-2" "clear(This, Options::[Option]) -> ok")
               "wxSizer:clear/1"
               ("http://www.erlang.org/doc/man/wxSizer.html#clear-1" "clear(This) -> ok")
               "wxSizer:calcMin/1"
               ("http://www.erlang.org/doc/man/wxSizer.html#calcMin-1" "calcMin(This) -> {W::integer(), H::integer()}")
               "wxSizer:addStretchSpacer/2"
               ("http://www.erlang.org/doc/man/wxSizer.html#addStretchSpacer-2" "addStretchSpacer(This, Options::[Option]) -> wxSizerItem:wxSizerItem()")
               "wxSizer:addStretchSpacer/1"
               ("http://www.erlang.org/doc/man/wxSizer.html#addStretchSpacer-1" "addStretchSpacer(This) -> wxSizerItem:wxSizerItem()")
               "wxSizer:addSpacer/2"
               ("http://www.erlang.org/doc/man/wxSizer.html#addSpacer-2" "addSpacer(This, Size) -> wxSizerItem:wxSizerItem()")
               "wxSizer:add/4"
               ("http://www.erlang.org/doc/man/wxSizer.html#add-4" "add(This, Width, Height, Options::[Option]) -> wxSizerItem:wxSizerItem()")
               "wxSizer:add/3"
               ("http://www.erlang.org/doc/man/wxSizer.html#add-3" "add(This, Width, Height) -> wxSizerItem:wxSizerItem()")
               "wxSizer:add/2"
               ("http://www.erlang.org/doc/man/wxSizer.html#add-2" "add(This, Window) -> wxSizerItem:wxSizerItem()")
               "wxSizer:"
               ("http://www.erlang.org/doc/man/wxSizer.html#type-wxSizer" "wxSizer()")
               "wxSizerFlags:destroy/1"
               ("http://www.erlang.org/doc/man/wxSizerFlags.html#destroy-1" "destroy(This:: wxSizerFlags() ) -> ok")
               "wxSizerFlags:right/1"
               ("http://www.erlang.org/doc/man/wxSizerFlags.html#right-1" "right(This) -> wxSizerFlags()")
               "wxSizerFlags:proportion/2"
               ("http://www.erlang.org/doc/man/wxSizerFlags.html#proportion-2" "proportion(This, Proportion) -> wxSizerFlags()")
               "wxSizerFlags:left/1"
               ("http://www.erlang.org/doc/man/wxSizerFlags.html#left-1" "left(This) -> wxSizerFlags()")
               "wxSizerFlags:expand/1"
               ("http://www.erlang.org/doc/man/wxSizerFlags.html#expand-1" "expand(This) -> wxSizerFlags()")
               "wxSizerFlags:centre/1"
               ("http://www.erlang.org/doc/man/wxSizerFlags.html#centre-1" "centre(This) -> wxSizerFlags()")
               "wxSizerFlags:center/1"
               ("http://www.erlang.org/doc/man/wxSizerFlags.html#center-1" "center(This) -> wxSizerFlags()")
               "wxSizerFlags:border/3"
               ("http://www.erlang.org/doc/man/wxSizerFlags.html#border-3" "border(This, Direction, BorderInPixels) -> wxSizerFlags()")
               "wxSizerFlags:border/2"
               ("http://www.erlang.org/doc/man/wxSizerFlags.html#border-2" "border(This, Options::[Option]) -> wxSizerFlags()")
               "wxSizerFlags:border/1"
               ("http://www.erlang.org/doc/man/wxSizerFlags.html#border-1" "border(This) -> wxSizerFlags()")
               "wxSizerFlags:align/2"
               ("http://www.erlang.org/doc/man/wxSizerFlags.html#align-2" "align(This, Alignment) -> wxSizerFlags()")
               "wxSizerFlags:new/1"
               ("http://www.erlang.org/doc/man/wxSizerFlags.html#new-1" "new(Options::[Option]) -> wxSizerFlags()")
               "wxSizerFlags:new/0"
               ("http://www.erlang.org/doc/man/wxSizerFlags.html#new-0" "new() -> wxSizerFlags()")
               "wxSizerFlags:"
               ("http://www.erlang.org/doc/man/wxSizerFlags.html#type-wxSizerFlags" "wxSizerFlags()")
               "wxSizerItem:destroy/1"
               ("http://www.erlang.org/doc/man/wxSizerItem.html#destroy-1" "destroy(This:: wxSizerItem() ) -> ok")
               "wxSizerItem:show/2"
               ("http://www.erlang.org/doc/man/wxSizerItem.html#show-2" "show(This, Show) -> ok")
               "wxSizerItem:setWindow/2"
               ("http://www.erlang.org/doc/man/wxSizerItem.html#setWindow-2" "setWindow(This, Window) -> ok")
               "wxSizerItem:setSpacer/3"
               ("http://www.erlang.org/doc/man/wxSizerItem.html#setSpacer-3" "setSpacer(This, Width, Height) -> ok")
               "wxSizerItem:setSpacer/2"
               ("http://www.erlang.org/doc/man/wxSizerItem.html#setSpacer-2" "setSpacer(This, Size) -> ok")
               "wxSizerItem:setSizer/2"
               ("http://www.erlang.org/doc/man/wxSizerItem.html#setSizer-2" "setSizer(This, Sizer) -> ok")
               "wxSizerItem:setRatio/3"
               ("http://www.erlang.org/doc/man/wxSizerItem.html#setRatio-3" "setRatio(This, Width, Height) -> ok")
               "wxSizerItem:setRatio/2"
               ("http://www.erlang.org/doc/man/wxSizerItem.html#setRatio-2" "setRatio(This, Ratio) -> ok")
               "wxSizerItem:setProportion/2"
               ("http://www.erlang.org/doc/man/wxSizerItem.html#setProportion-2" "setProportion(This, Proportion) -> ok")
               "wxSizerItem:setMinSize/3"
               ("http://www.erlang.org/doc/man/wxSizerItem.html#setMinSize-3" "setMinSize(This, X, Y) -> ok")
               "wxSizerItem:setMinSize/2"
               ("http://www.erlang.org/doc/man/wxSizerItem.html#setMinSize-2" "setMinSize(This, Size) -> ok")
               "wxSizerItem:setInitSize/3"
               ("http://www.erlang.org/doc/man/wxSizerItem.html#setInitSize-3" "setInitSize(This, X, Y) -> ok")
               "wxSizerItem:setFlag/2"
               ("http://www.erlang.org/doc/man/wxSizerItem.html#setFlag-2" "setFlag(This, Flag) -> ok")
               "wxSizerItem:setDimension/3"
               ("http://www.erlang.org/doc/man/wxSizerItem.html#setDimension-3" "setDimension(This, Pos, Size) -> ok")
               "wxSizerItem:setBorder/2"
               ("http://www.erlang.org/doc/man/wxSizerItem.html#setBorder-2" "setBorder(This, Border) -> ok")
               "wxSizerItem:isWindow/1"
               ("http://www.erlang.org/doc/man/wxSizerItem.html#isWindow-1" "isWindow(This) -> boolean()")
               "wxSizerItem:isSpacer/1"
               ("http://www.erlang.org/doc/man/wxSizerItem.html#isSpacer-1" "isSpacer(This) -> boolean()")
               "wxSizerItem:isShown/1"
               ("http://www.erlang.org/doc/man/wxSizerItem.html#isShown-1" "isShown(This) -> boolean()")
               "wxSizerItem:isSizer/1"
               ("http://www.erlang.org/doc/man/wxSizerItem.html#isSizer-1" "isSizer(This) -> boolean()")
               "wxSizerItem:getWindow/1"
               ("http://www.erlang.org/doc/man/wxSizerItem.html#getWindow-1" "getWindow(This) -> wxWindow:wxWindow()")
               "wxSizerItem:getUserData/1"
               ("http://www.erlang.org/doc/man/wxSizerItem.html#getUserData-1" "getUserData(This) -> wx:wx_object()")
               "wxSizerItem:getSpacer/1"
               ("http://www.erlang.org/doc/man/wxSizerItem.html#getSpacer-1" "getSpacer(This) -> {W::integer(), H::integer()}")
               "wxSizerItem:getSizer/1"
               ("http://www.erlang.org/doc/man/wxSizerItem.html#getSizer-1" "getSizer(This) -> wxSizer:wxSizer()")
               "wxSizerItem:getSize/1"
               ("http://www.erlang.org/doc/man/wxSizerItem.html#getSize-1" "getSize(This) -> {W::integer(), H::integer()}")
               "wxSizerItem:getRect/1"
               ("http://www.erlang.org/doc/man/wxSizerItem.html#getRect-1" "getRect(This) -> {X::integer(), Y::integer(), W::integer(), H::integer()}")
               "wxSizerItem:getRatio/1"
               ("http://www.erlang.org/doc/man/wxSizerItem.html#getRatio-1" "getRatio(This) -> number()")
               "wxSizerItem:getProportion/1"
               ("http://www.erlang.org/doc/man/wxSizerItem.html#getProportion-1" "getProportion(This) -> integer()")
               "wxSizerItem:getPosition/1"
               ("http://www.erlang.org/doc/man/wxSizerItem.html#getPosition-1" "getPosition(This) -> {X::integer(), Y::integer()}")
               "wxSizerItem:getMinSize/1"
               ("http://www.erlang.org/doc/man/wxSizerItem.html#getMinSize-1" "getMinSize(This) -> {W::integer(), H::integer()}")
               "wxSizerItem:getFlag/1"
               ("http://www.erlang.org/doc/man/wxSizerItem.html#getFlag-1" "getFlag(This) -> integer()")
               "wxSizerItem:getBorder/1"
               ("http://www.erlang.org/doc/man/wxSizerItem.html#getBorder-1" "getBorder(This) -> integer()")
               "wxSizerItem:detachSizer/1"
               ("http://www.erlang.org/doc/man/wxSizerItem.html#detachSizer-1" "detachSizer(This) -> ok")
               "wxSizerItem:deleteWindows/1"
               ("http://www.erlang.org/doc/man/wxSizerItem.html#deleteWindows-1" "deleteWindows(This) -> ok")
               "wxSizerItem:calcMin/1"
               ("http://www.erlang.org/doc/man/wxSizerItem.html#calcMin-1" "calcMin(This) -> {W::integer(), H::integer()}")
               "wxSizerItem:new/6"
               ("http://www.erlang.org/doc/man/wxSizerItem.html#new-6" "new(Width, Height, Proportion, Flag, Border, UserData) -> wxSizerItem()")
               "wxSizerItem:new/5"
               ("http://www.erlang.org/doc/man/wxSizerItem.html#new-5" "new(Window, Proportion, Flag, Border, UserData) -> wxSizerItem()")
               "wxSizerItem:new/3"
               ("http://www.erlang.org/doc/man/wxSizerItem.html#new-3" "new(Width, Height, Flags) -> wxSizerItem()")
               "wxSizerItem:new/2"
               ("http://www.erlang.org/doc/man/wxSizerItem.html#new-2" "new(Window, Flags) -> wxSizerItem()")
               "wxSizerItem:new/0"
               ("http://www.erlang.org/doc/man/wxSizerItem.html#new-0" "new() -> wxSizerItem()")
               "wxSizerItem:"
               ("http://www.erlang.org/doc/man/wxSizerItem.html#type-wxSizerItem" "wxSizerItem()")
               "wxSlider:destroy/1"
               ("http://www.erlang.org/doc/man/wxSlider.html#destroy-1" "destroy(This:: wxSlider() ) -> ok")
               "wxSlider:setValue/2"
               ("http://www.erlang.org/doc/man/wxSlider.html#setValue-2" "setValue(This, Value) -> ok")
               "wxSlider:setThumbLength/2"
               ("http://www.erlang.org/doc/man/wxSlider.html#setThumbLength-2" "setThumbLength(This, LenPixels) -> ok")
               "wxSlider:setRange/3"
               ("http://www.erlang.org/doc/man/wxSlider.html#setRange-3" "setRange(This, MinValue, MaxValue) -> ok")
               "wxSlider:setPageSize/2"
               ("http://www.erlang.org/doc/man/wxSlider.html#setPageSize-2" "setPageSize(This, PageSize) -> ok")
               "wxSlider:setLineSize/2"
               ("http://www.erlang.org/doc/man/wxSlider.html#setLineSize-2" "setLineSize(This, LineSize) -> ok")
               "wxSlider:getValue/1"
               ("http://www.erlang.org/doc/man/wxSlider.html#getValue-1" "getValue(This) -> integer()")
               "wxSlider:getThumbLength/1"
               ("http://www.erlang.org/doc/man/wxSlider.html#getThumbLength-1" "getThumbLength(This) -> integer()")
               "wxSlider:getPageSize/1"
               ("http://www.erlang.org/doc/man/wxSlider.html#getPageSize-1" "getPageSize(This) -> integer()")
               "wxSlider:getMin/1"
               ("http://www.erlang.org/doc/man/wxSlider.html#getMin-1" "getMin(This) -> integer()")
               "wxSlider:getMax/1"
               ("http://www.erlang.org/doc/man/wxSlider.html#getMax-1" "getMax(This) -> integer()")
               "wxSlider:getLineSize/1"
               ("http://www.erlang.org/doc/man/wxSlider.html#getLineSize-1" "getLineSize(This) -> integer()")
               "wxSlider:create/7"
               ("http://www.erlang.org/doc/man/wxSlider.html#create-7" "create(This, Parent, Id, Value, MinValue, MaxValue, Options::[Option]) -> boolean()")
               "wxSlider:create/6"
               ("http://www.erlang.org/doc/man/wxSlider.html#create-6" "create(This, Parent, Id, Value, MinValue, MaxValue) -> boolean()")
               "wxSlider:new/6"
               ("http://www.erlang.org/doc/man/wxSlider.html#new-6" "new(Parent, Id, Value, MinValue, MaxValue, Options::[Option]) -> wxSlider()")
               "wxSlider:new/5"
               ("http://www.erlang.org/doc/man/wxSlider.html#new-5" "new(Parent, Id, Value, MinValue, MaxValue) -> wxSlider()")
               "wxSlider:new/0"
               ("http://www.erlang.org/doc/man/wxSlider.html#new-0" "new() -> wxSlider()")
               "wxSlider:"
               ("http://www.erlang.org/doc/man/wxSlider.html#type-wxSlider" "wxSlider()")
               "wxSpinButton:destroy/1"
               ("http://www.erlang.org/doc/man/wxSpinButton.html#destroy-1" "destroy(This:: wxSpinButton() ) -> ok")
               "wxSpinButton:setValue/2"
               ("http://www.erlang.org/doc/man/wxSpinButton.html#setValue-2" "setValue(This, Value) -> ok")
               "wxSpinButton:setRange/3"
               ("http://www.erlang.org/doc/man/wxSpinButton.html#setRange-3" "setRange(This, MinVal, MaxVal) -> ok")
               "wxSpinButton:getValue/1"
               ("http://www.erlang.org/doc/man/wxSpinButton.html#getValue-1" "getValue(This) -> integer()")
               "wxSpinButton:getMin/1"
               ("http://www.erlang.org/doc/man/wxSpinButton.html#getMin-1" "getMin(This) -> integer()")
               "wxSpinButton:getMax/1"
               ("http://www.erlang.org/doc/man/wxSpinButton.html#getMax-1" "getMax(This) -> integer()")
               "wxSpinButton:create/3"
               ("http://www.erlang.org/doc/man/wxSpinButton.html#create-3" "create(This, Parent, Options::[Option]) -> boolean()")
               "wxSpinButton:create/2"
               ("http://www.erlang.org/doc/man/wxSpinButton.html#create-2" "create(This, Parent) -> boolean()")
               "wxSpinButton:new/2"
               ("http://www.erlang.org/doc/man/wxSpinButton.html#new-2" "new(Parent, Options::[Option]) -> wxSpinButton()")
               "wxSpinButton:new/1"
               ("http://www.erlang.org/doc/man/wxSpinButton.html#new-1" "new(Parent) -> wxSpinButton()")
               "wxSpinButton:new/0"
               ("http://www.erlang.org/doc/man/wxSpinButton.html#new-0" "new() -> wxSpinButton()")
               "wxSpinButton:"
               ("http://www.erlang.org/doc/man/wxSpinButton.html#type-wxSpinButton" "wxSpinButton()")
               "wxSpinCtrl:destroy/1"
               ("http://www.erlang.org/doc/man/wxSpinCtrl.html#destroy-1" "destroy(This:: wxSpinCtrl() ) -> ok")
               "wxSpinCtrl:getMax/1"
               ("http://www.erlang.org/doc/man/wxSpinCtrl.html#getMax-1" "getMax(This) -> integer()")
               "wxSpinCtrl:getMin/1"
               ("http://www.erlang.org/doc/man/wxSpinCtrl.html#getMin-1" "getMin(This) -> integer()")
               "wxSpinCtrl:setSelection/3"
               ("http://www.erlang.org/doc/man/wxSpinCtrl.html#setSelection-3" "setSelection(This, From, To) -> ok")
               "wxSpinCtrl:setRange/3"
               ("http://www.erlang.org/doc/man/wxSpinCtrl.html#setRange-3" "setRange(This, MinVal, MaxVal) -> ok")
               "wxSpinCtrl:getValue/1"
               ("http://www.erlang.org/doc/man/wxSpinCtrl.html#getValue-1" "getValue(This) -> integer()")
               "wxSpinCtrl:setValue/2"
               ("http://www.erlang.org/doc/man/wxSpinCtrl.html#setValue-2" "setValue(This, Value) -> ok")
               "wxSpinCtrl:create/3"
               ("http://www.erlang.org/doc/man/wxSpinCtrl.html#create-3" "create(This, Parent, Options::[Option]) -> boolean()")
               "wxSpinCtrl:create/2"
               ("http://www.erlang.org/doc/man/wxSpinCtrl.html#create-2" "create(This, Parent) -> boolean()")
               "wxSpinCtrl:new/2"
               ("http://www.erlang.org/doc/man/wxSpinCtrl.html#new-2" "new(Parent, Options::[Option]) -> wxSpinCtrl()")
               "wxSpinCtrl:new/1"
               ("http://www.erlang.org/doc/man/wxSpinCtrl.html#new-1" "new(Parent) -> wxSpinCtrl()")
               "wxSpinCtrl:new/0"
               ("http://www.erlang.org/doc/man/wxSpinCtrl.html#new-0" "new() -> wxSpinCtrl()")
               "wxSpinCtrl:"
               ("http://www.erlang.org/doc/man/wxSpinCtrl.html#type-wxSpinCtrl" "wxSpinCtrl()")
               "wxSpinEvent:setPosition/2"
               ("http://www.erlang.org/doc/man/wxSpinEvent.html#setPosition-2" "setPosition(This, Pos) -> ok")
               "wxSpinEvent:getPosition/1"
               ("http://www.erlang.org/doc/man/wxSpinEvent.html#getPosition-1" "getPosition(This) -> integer()")
               "wxSpinEvent:"
               ("http://www.erlang.org/doc/man/wxSpinEvent.html#type-wxSpinEvent" "wxSpinEvent()")
               "wxSplashScreen:destroy/1"
               ("http://www.erlang.org/doc/man/wxSplashScreen.html#destroy-1" "destroy(This:: wxSplashScreen() ) -> ok")
               "wxSplashScreen:getTimeout/1"
               ("http://www.erlang.org/doc/man/wxSplashScreen.html#getTimeout-1" "getTimeout(This) -> integer()")
               "wxSplashScreen:getSplashStyle/1"
               ("http://www.erlang.org/doc/man/wxSplashScreen.html#getSplashStyle-1" "getSplashStyle(This) -> integer()")
               "wxSplashScreen:new/6"
               ("http://www.erlang.org/doc/man/wxSplashScreen.html#new-6" "new(Bitmap, SplashStyle, Milliseconds, Parent, Id, Options::[Option]) -> wxSplashScreen()")
               "wxSplashScreen:new/5"
               ("http://www.erlang.org/doc/man/wxSplashScreen.html#new-5" "new(Bitmap, SplashStyle, Milliseconds, Parent, Id) -> wxSplashScreen()")
               "wxSplashScreen:new/0"
               ("http://www.erlang.org/doc/man/wxSplashScreen.html#new-0" "new() -> wxSplashScreen()")
               "wxSplashScreen:"
               ("http://www.erlang.org/doc/man/wxSplashScreen.html#type-wxSplashScreen" "wxSplashScreen()")
               "wxSplitterEvent:setSashPosition/2"
               ("http://www.erlang.org/doc/man/wxSplitterEvent.html#setSashPosition-2" "setSashPosition(This, Pos) -> ok")
               "wxSplitterEvent:getWindowBeingRemoved/1"
               ("http://www.erlang.org/doc/man/wxSplitterEvent.html#getWindowBeingRemoved-1" "getWindowBeingRemoved(This) -> wxWindow:wxWindow()")
               "wxSplitterEvent:getY/1"
               ("http://www.erlang.org/doc/man/wxSplitterEvent.html#getY-1" "getY(This) -> integer()")
               "wxSplitterEvent:getX/1"
               ("http://www.erlang.org/doc/man/wxSplitterEvent.html#getX-1" "getX(This) -> integer()")
               "wxSplitterEvent:getSashPosition/1"
               ("http://www.erlang.org/doc/man/wxSplitterEvent.html#getSashPosition-1" "getSashPosition(This) -> integer()")
               "wxSplitterEvent:"
               ("http://www.erlang.org/doc/man/wxSplitterEvent.html#type-wxSplitterEvent" "wxSplitterEvent()")
               "wxSplitterWindow:destroy/1"
               ("http://www.erlang.org/doc/man/wxSplitterWindow.html#destroy-1" "destroy(This:: wxSplitterWindow() ) -> ok")
               "wxSplitterWindow:updateSize/1"
               ("http://www.erlang.org/doc/man/wxSplitterWindow.html#updateSize-1" "updateSize(This) -> ok")
               "wxSplitterWindow:unsplit/2"
               ("http://www.erlang.org/doc/man/wxSplitterWindow.html#unsplit-2" "unsplit(This, Options::[Option]) -> boolean()")
               "wxSplitterWindow:unsplit/1"
               ("http://www.erlang.org/doc/man/wxSplitterWindow.html#unsplit-1" "unsplit(This) -> boolean()")
               "wxSplitterWindow:splitVertically/4"
               ("http://www.erlang.org/doc/man/wxSplitterWindow.html#splitVertically-4" "splitVertically(This, Window1, Window2, Options::[Option]) -> boolean()")
               "wxSplitterWindow:splitVertically/3"
               ("http://www.erlang.org/doc/man/wxSplitterWindow.html#splitVertically-3" "splitVertically(This, Window1, Window2) -> boolean()")
               "wxSplitterWindow:splitHorizontally/4"
               ("http://www.erlang.org/doc/man/wxSplitterWindow.html#splitHorizontally-4" "splitHorizontally(This, Window1, Window2, Options::[Option]) -> boolean()")
               "wxSplitterWindow:splitHorizontally/3"
               ("http://www.erlang.org/doc/man/wxSplitterWindow.html#splitHorizontally-3" "splitHorizontally(This, Window1, Window2) -> boolean()")
               "wxSplitterWindow:setSplitMode/2"
               ("http://www.erlang.org/doc/man/wxSplitterWindow.html#setSplitMode-2" "setSplitMode(This, Mode) -> ok")
               "wxSplitterWindow:setMinimumPaneSize/2"
               ("http://www.erlang.org/doc/man/wxSplitterWindow.html#setMinimumPaneSize-2" "setMinimumPaneSize(This, Min) -> ok")
               "wxSplitterWindow:setSashSize/2"
               ("http://www.erlang.org/doc/man/wxSplitterWindow.html#setSashSize-2" "setSashSize(This, Width) -> ok")
               "wxSplitterWindow:setSashPosition/3"
               ("http://www.erlang.org/doc/man/wxSplitterWindow.html#setSashPosition-3" "setSashPosition(This, Position, Options::[Option]) -> ok")
               "wxSplitterWindow:setSashPosition/2"
               ("http://www.erlang.org/doc/man/wxSplitterWindow.html#setSashPosition-2" "setSashPosition(This, Position) -> ok")
               "wxSplitterWindow:setSashGravity/2"
               ("http://www.erlang.org/doc/man/wxSplitterWindow.html#setSashGravity-2" "setSashGravity(This, Gravity) -> ok")
               "wxSplitterWindow:replaceWindow/3"
               ("http://www.erlang.org/doc/man/wxSplitterWindow.html#replaceWindow-3" "replaceWindow(This, WinOld, WinNew) -> boolean()")
               "wxSplitterWindow:isSplit/1"
               ("http://www.erlang.org/doc/man/wxSplitterWindow.html#isSplit-1" "isSplit(This) -> boolean()")
               "wxSplitterWindow:initialize/2"
               ("http://www.erlang.org/doc/man/wxSplitterWindow.html#initialize-2" "initialize(This, Window) -> ok")
               "wxSplitterWindow:getWindow2/1"
               ("http://www.erlang.org/doc/man/wxSplitterWindow.html#getWindow2-1" "getWindow2(This) -> wxWindow:wxWindow()")
               "wxSplitterWindow:getWindow1/1"
               ("http://www.erlang.org/doc/man/wxSplitterWindow.html#getWindow1-1" "getWindow1(This) -> wxWindow:wxWindow()")
               "wxSplitterWindow:getSplitMode/1"
               ("http://www.erlang.org/doc/man/wxSplitterWindow.html#getSplitMode-1" "getSplitMode(This) -> wx:wx_enum()")
               "wxSplitterWindow:getSashPosition/1"
               ("http://www.erlang.org/doc/man/wxSplitterWindow.html#getSashPosition-1" "getSashPosition(This) -> integer()")
               "wxSplitterWindow:getSashGravity/1"
               ("http://www.erlang.org/doc/man/wxSplitterWindow.html#getSashGravity-1" "getSashGravity(This) -> number()")
               "wxSplitterWindow:getMinimumPaneSize/1"
               ("http://www.erlang.org/doc/man/wxSplitterWindow.html#getMinimumPaneSize-1" "getMinimumPaneSize(This) -> integer()")
               "wxSplitterWindow:create/3"
               ("http://www.erlang.org/doc/man/wxSplitterWindow.html#create-3" "create(This, Parent, Options::[Option]) -> boolean()")
               "wxSplitterWindow:create/2"
               ("http://www.erlang.org/doc/man/wxSplitterWindow.html#create-2" "create(This, Parent) -> boolean()")
               "wxSplitterWindow:new/2"
               ("http://www.erlang.org/doc/man/wxSplitterWindow.html#new-2" "new(Parent, Options::[Option]) -> wxSplitterWindow()")
               "wxSplitterWindow:new/1"
               ("http://www.erlang.org/doc/man/wxSplitterWindow.html#new-1" "new(Parent) -> wxSplitterWindow()")
               "wxSplitterWindow:new/0"
               ("http://www.erlang.org/doc/man/wxSplitterWindow.html#new-0" "new() -> wxSplitterWindow()")
               "wxSplitterWindow:"
               ("http://www.erlang.org/doc/man/wxSplitterWindow.html#type-wxSplitterWindow" "wxSplitterWindow()")
               "wxStaticBitmap:destroy/1"
               ("http://www.erlang.org/doc/man/wxStaticBitmap.html#destroy-1" "destroy(This:: wxStaticBitmap() ) -> ok")
               "wxStaticBitmap:setBitmap/2"
               ("http://www.erlang.org/doc/man/wxStaticBitmap.html#setBitmap-2" "setBitmap(This, Bitmap) -> ok")
               "wxStaticBitmap:getBitmap/1"
               ("http://www.erlang.org/doc/man/wxStaticBitmap.html#getBitmap-1" "getBitmap(This) -> wxBitmap:wxBitmap()")
               "wxStaticBitmap:create/5"
               ("http://www.erlang.org/doc/man/wxStaticBitmap.html#create-5" "create(This, Parent, Id, Label, Options::[Option]) -> boolean()")
               "wxStaticBitmap:create/4"
               ("http://www.erlang.org/doc/man/wxStaticBitmap.html#create-4" "create(This, Parent, Id, Label) -> boolean()")
               "wxStaticBitmap:new/4"
               ("http://www.erlang.org/doc/man/wxStaticBitmap.html#new-4" "new(Parent, Id, Label, Options::[Option]) -> wxStaticBitmap()")
               "wxStaticBitmap:new/3"
               ("http://www.erlang.org/doc/man/wxStaticBitmap.html#new-3" "new(Parent, Id, Label) -> wxStaticBitmap()")
               "wxStaticBitmap:new/0"
               ("http://www.erlang.org/doc/man/wxStaticBitmap.html#new-0" "new() -> wxStaticBitmap()")
               "wxStaticBitmap:"
               ("http://www.erlang.org/doc/man/wxStaticBitmap.html#type-wxStaticBitmap" "wxStaticBitmap()")
               "wxStaticBox:destroy/1"
               ("http://www.erlang.org/doc/man/wxStaticBox.html#destroy-1" "destroy(This:: wxStaticBox() ) -> ok")
               "wxStaticBox:create/5"
               ("http://www.erlang.org/doc/man/wxStaticBox.html#create-5" "create(This, Parent, Id, Label, Options::[Option]) -> boolean()")
               "wxStaticBox:create/4"
               ("http://www.erlang.org/doc/man/wxStaticBox.html#create-4" "create(This, Parent, Id, Label) -> boolean()")
               "wxStaticBox:new/4"
               ("http://www.erlang.org/doc/man/wxStaticBox.html#new-4" "new(Parent, Id, Label, Options::[Option]) -> wxStaticBox()")
               "wxStaticBox:new/3"
               ("http://www.erlang.org/doc/man/wxStaticBox.html#new-3" "new(Parent, Id, Label) -> wxStaticBox()")
               "wxStaticBox:new/0"
               ("http://www.erlang.org/doc/man/wxStaticBox.html#new-0" "new() -> wxStaticBox()")
               "wxStaticBox:"
               ("http://www.erlang.org/doc/man/wxStaticBox.html#type-wxStaticBox" "wxStaticBox()")
               "wxStaticBoxSizer:destroy/1"
               ("http://www.erlang.org/doc/man/wxStaticBoxSizer.html#destroy-1" "destroy(This:: wxStaticBoxSizer() ) -> ok")
               "wxStaticBoxSizer:getStaticBox/1"
               ("http://www.erlang.org/doc/man/wxStaticBoxSizer.html#getStaticBox-1" "getStaticBox(This) -> wxStaticBox:wxStaticBox()")
               "wxStaticBoxSizer:new/3"
               ("http://www.erlang.org/doc/man/wxStaticBoxSizer.html#new-3" "new(Orient, Win, Options::[Option]) -> wxStaticBoxSizer()")
               "wxStaticBoxSizer:new/2"
               ("http://www.erlang.org/doc/man/wxStaticBoxSizer.html#new-2" "new(Orient, Win) -> wxStaticBoxSizer()")
               "wxStaticBoxSizer:"
               ("http://www.erlang.org/doc/man/wxStaticBoxSizer.html#type-wxStaticBoxSizer" "wxStaticBoxSizer()")
               "wxStaticLine:destroy/1"
               ("http://www.erlang.org/doc/man/wxStaticLine.html#destroy-1" "destroy(This:: wxStaticLine() ) -> ok")
               "wxStaticLine:getDefaultSize/0"
               ("http://www.erlang.org/doc/man/wxStaticLine.html#getDefaultSize-0" "getDefaultSize() -> integer()")
               "wxStaticLine:isVertical/1"
               ("http://www.erlang.org/doc/man/wxStaticLine.html#isVertical-1" "isVertical(This) -> boolean()")
               "wxStaticLine:create/3"
               ("http://www.erlang.org/doc/man/wxStaticLine.html#create-3" "create(This, Parent, Options::[Option]) -> boolean()")
               "wxStaticLine:create/2"
               ("http://www.erlang.org/doc/man/wxStaticLine.html#create-2" "create(This, Parent) -> boolean()")
               "wxStaticLine:new/2"
               ("http://www.erlang.org/doc/man/wxStaticLine.html#new-2" "new(Parent, Options::[Option]) -> wxStaticLine()")
               "wxStaticLine:new/1"
               ("http://www.erlang.org/doc/man/wxStaticLine.html#new-1" "new(Parent) -> wxStaticLine()")
               "wxStaticLine:new/0"
               ("http://www.erlang.org/doc/man/wxStaticLine.html#new-0" "new() -> wxStaticLine()")
               "wxStaticLine:"
               ("http://www.erlang.org/doc/man/wxStaticLine.html#type-wxStaticLine" "wxStaticLine()")
               "wxStaticText:destroy/1"
               ("http://www.erlang.org/doc/man/wxStaticText.html#destroy-1" "destroy(This:: wxStaticText() ) -> ok")
               "wxStaticText:wrap/2"
               ("http://www.erlang.org/doc/man/wxStaticText.html#wrap-2" "wrap(This, Width) -> ok")
               "wxStaticText:setLabel/2"
               ("http://www.erlang.org/doc/man/wxStaticText.html#setLabel-2" "setLabel(This, Label) -> ok")
               "wxStaticText:getLabel/1"
               ("http://www.erlang.org/doc/man/wxStaticText.html#getLabel-1" "getLabel(This) -> unicode:charlist()")
               "wxStaticText:create/5"
               ("http://www.erlang.org/doc/man/wxStaticText.html#create-5" "create(This, Parent, Id, Label, Options::[Option]) -> boolean()")
               "wxStaticText:create/4"
               ("http://www.erlang.org/doc/man/wxStaticText.html#create-4" "create(This, Parent, Id, Label) -> boolean()")
               "wxStaticText:new/4"
               ("http://www.erlang.org/doc/man/wxStaticText.html#new-4" "new(Parent, Id, Label, Options::[Option]) -> wxStaticText()")
               "wxStaticText:new/3"
               ("http://www.erlang.org/doc/man/wxStaticText.html#new-3" "new(Parent, Id, Label) -> wxStaticText()")
               "wxStaticText:new/0"
               ("http://www.erlang.org/doc/man/wxStaticText.html#new-0" "new() -> wxStaticText()")
               "wxStaticText:"
               ("http://www.erlang.org/doc/man/wxStaticText.html#type-wxStaticText" "wxStaticText()")
               "wxStatusBar:destroy/1"
               ("http://www.erlang.org/doc/man/wxStatusBar.html#destroy-1" "destroy(This:: wxStatusBar() ) -> ok")
               "wxStatusBar:setStatusStyles/2"
               ("http://www.erlang.org/doc/man/wxStatusBar.html#setStatusStyles-2" "setStatusStyles(This, Styles) -> ok")
               "wxStatusBar:setStatusWidths/2"
               ("http://www.erlang.org/doc/man/wxStatusBar.html#setStatusWidths-2" "setStatusWidths(This, Widths_field) -> ok")
               "wxStatusBar:setStatusText/3"
               ("http://www.erlang.org/doc/man/wxStatusBar.html#setStatusText-3" "setStatusText(This, Text, Options::[Option]) -> ok")
               "wxStatusBar:setStatusText/2"
               ("http://www.erlang.org/doc/man/wxStatusBar.html#setStatusText-2" "setStatusText(This, Text) -> ok")
               "wxStatusBar:setMinHeight/2"
               ("http://www.erlang.org/doc/man/wxStatusBar.html#setMinHeight-2" "setMinHeight(This, Height) -> ok")
               "wxStatusBar:setFieldsCount/3"
               ("http://www.erlang.org/doc/man/wxStatusBar.html#setFieldsCount-3" "setFieldsCount(This, Number, Options::[Option]) -> ok")
               "wxStatusBar:setFieldsCount/2"
               ("http://www.erlang.org/doc/man/wxStatusBar.html#setFieldsCount-2" "setFieldsCount(This, Number) -> ok")
               "wxStatusBar:pushStatusText/3"
               ("http://www.erlang.org/doc/man/wxStatusBar.html#pushStatusText-3" "pushStatusText(This, Text, Options::[Option]) -> ok")
               "wxStatusBar:pushStatusText/2"
               ("http://www.erlang.org/doc/man/wxStatusBar.html#pushStatusText-2" "pushStatusText(This, Text) -> ok")
               "wxStatusBar:popStatusText/2"
               ("http://www.erlang.org/doc/man/wxStatusBar.html#popStatusText-2" "popStatusText(This, Options::[Option]) -> ok")
               "wxStatusBar:popStatusText/1"
               ("http://www.erlang.org/doc/man/wxStatusBar.html#popStatusText-1" "popStatusText(This) -> ok")
               "wxStatusBar:getStatusText/2"
               ("http://www.erlang.org/doc/man/wxStatusBar.html#getStatusText-2" "getStatusText(This, Options::[Option]) -> unicode:charlist()")
               "wxStatusBar:getStatusText/1"
               ("http://www.erlang.org/doc/man/wxStatusBar.html#getStatusText-1" "getStatusText(This) -> unicode:charlist()")
               "wxStatusBar:getFieldsCount/1"
               ("http://www.erlang.org/doc/man/wxStatusBar.html#getFieldsCount-1" "getFieldsCount(This) -> integer()")
               "wxStatusBar:getFieldRect/2"
               ("http://www.erlang.org/doc/man/wxStatusBar.html#getFieldRect-2" "getFieldRect(This, I) -> Result")
               "wxStatusBar:create/3"
               ("http://www.erlang.org/doc/man/wxStatusBar.html#create-3" "create(This, Parent, Options::[Option]) -> boolean()")
               "wxStatusBar:create/2"
               ("http://www.erlang.org/doc/man/wxStatusBar.html#create-2" "create(This, Parent) -> boolean()")
               "wxStatusBar:new/2"
               ("http://www.erlang.org/doc/man/wxStatusBar.html#new-2" "new(Parent, Options::[Option]) -> wxStatusBar()")
               "wxStatusBar:new/1"
               ("http://www.erlang.org/doc/man/wxStatusBar.html#new-1" "new(Parent) -> wxStatusBar()")
               "wxStatusBar:new/0"
               ("http://www.erlang.org/doc/man/wxStatusBar.html#new-0" "new() -> wxStatusBar()")
               "wxStatusBar:"
               ("http://www.erlang.org/doc/man/wxStatusBar.html#type-wxStatusBar" "wxStatusBar()")
               "wxStdDialogButtonSizer:destroy/1"
               ("http://www.erlang.org/doc/man/wxStdDialogButtonSizer.html#destroy-1" "destroy(This:: wxStdDialogButtonSizer() ) -> ok")
               "wxStdDialogButtonSizer:setNegativeButton/2"
               ("http://www.erlang.org/doc/man/wxStdDialogButtonSizer.html#setNegativeButton-2" "setNegativeButton(This, Button) -> ok")
               "wxStdDialogButtonSizer:setCancelButton/2"
               ("http://www.erlang.org/doc/man/wxStdDialogButtonSizer.html#setCancelButton-2" "setCancelButton(This, Button) -> ok")
               "wxStdDialogButtonSizer:setAffirmativeButton/2"
               ("http://www.erlang.org/doc/man/wxStdDialogButtonSizer.html#setAffirmativeButton-2" "setAffirmativeButton(This, Button) -> ok")
               "wxStdDialogButtonSizer:realize/1"
               ("http://www.erlang.org/doc/man/wxStdDialogButtonSizer.html#realize-1" "realize(This) -> ok")
               "wxStdDialogButtonSizer:addButton/2"
               ("http://www.erlang.org/doc/man/wxStdDialogButtonSizer.html#addButton-2" "addButton(This, Button) -> ok")
               "wxStdDialogButtonSizer:new/0"
               ("http://www.erlang.org/doc/man/wxStdDialogButtonSizer.html#new-0" "new() -> wxStdDialogButtonSizer()")
               "wxStdDialogButtonSizer:"
               ("http://www.erlang.org/doc/man/wxStdDialogButtonSizer.html#type-wxStdDialogButtonSizer" "wxStdDialogButtonSizer()")
               "wxStyledTextCtrl:destroy/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#destroy-1" "destroy(This:: wxStyledTextCtrl() ) -> ok")
               "wxStyledTextCtrl:appendTextRaw/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#appendTextRaw-2" "appendTextRaw(This, Text) -> ok")
               "wxStyledTextCtrl:getTextRaw/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getTextRaw-1" "getTextRaw(This) -> binary()")
               "wxStyledTextCtrl:setTextRaw/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setTextRaw-2" "setTextRaw(This, Text) -> ok")
               "wxStyledTextCtrl:getTextRangeRaw/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getTextRangeRaw-3" "getTextRangeRaw(This, StartPos, EndPos) -> binary()")
               "wxStyledTextCtrl:getSelectedTextRaw/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getSelectedTextRaw-1" "getSelectedTextRaw(This) -> binary()")
               "wxStyledTextCtrl:getLineRaw/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getLineRaw-2" "getLineRaw(This, Line) -> binary()")
               "wxStyledTextCtrl:getCurLineRaw/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getCurLineRaw-1" "getCurLineRaw(This) -> Result")
               "wxStyledTextCtrl:insertTextRaw/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#insertTextRaw-3" "insertTextRaw(This, Pos, Text) -> ok")
               "wxStyledTextCtrl:addTextRaw/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#addTextRaw-2" "addTextRaw(This, Text) -> ok")
               "wxStyledTextCtrl:getUseAntiAliasing/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getUseAntiAliasing-1" "getUseAntiAliasing(This) -> boolean()")
               "wxStyledTextCtrl:doDropText/4"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#doDropText-4" "doDropText(This, X, Y, Data) -> boolean()")
               "wxStyledTextCtrl:doDragOver/4"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#doDragOver-4" "doDragOver(This, X, Y, Def) -> wx:wx_enum()")
               "wxStyledTextCtrl:loadFile/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#loadFile-2" "loadFile(This, Filename) -> boolean()")
               "wxStyledTextCtrl:saveFile/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#saveFile-2" "saveFile(This, Filename) -> boolean()")
               "wxStyledTextCtrl:setLastKeydownProcessed/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setLastKeydownProcessed-2" "setLastKeydownProcessed(This, Val) -> ok")
               "wxStyledTextCtrl:getLastKeydownProcessed/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getLastKeydownProcessed-1" "getLastKeydownProcessed(This) -> boolean()")
               "wxStyledTextCtrl:setHScrollBar/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setHScrollBar-2" "setHScrollBar(This, Bar) -> ok")
               "wxStyledTextCtrl:setVScrollBar/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setVScrollBar-2" "setVScrollBar(This, Bar) -> ok")
               "wxStyledTextCtrl:scrollToColumn/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#scrollToColumn-2" "scrollToColumn(This, Column) -> ok")
               "wxStyledTextCtrl:scrollToLine/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#scrollToLine-2" "scrollToLine(This, Line) -> ok")
               "wxStyledTextCtrl:pointFromPosition/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#pointFromPosition-2" "pointFromPosition(This, Pos) -> {X::integer(), Y::integer()}")
               "wxStyledTextCtrl:getSelection/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getSelection-1" "getSelection(This) -> {StartPos::integer(), EndPos::integer()}")
               "wxStyledTextCtrl:setMargins/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setMargins-3" "setMargins(This, Left, Right) -> ok")
               "wxStyledTextCtrl:cmdKeyExecute/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#cmdKeyExecute-2" "cmdKeyExecute(This, Cmd) -> ok")
               "wxStyledTextCtrl:styleSetFontEncoding/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#styleSetFontEncoding-3" "styleSetFontEncoding(This, Style, Encoding) -> ok")
               "wxStyledTextCtrl:styleSetCharacterSet/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#styleSetCharacterSet-3" "styleSetCharacterSet(This, Style, CharacterSet) -> ok")
               "wxStyledTextCtrl:styleSetFontAttr/8"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#styleSetFontAttr-8" "styleSetFontAttr(This, StyleNum, Size, FaceName, Bold, Italic, Underline, Options::[Option]) -> ok")
               "wxStyledTextCtrl:styleSetFontAttr/7"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#styleSetFontAttr-7" "styleSetFontAttr(This, StyleNum, Size, FaceName, Bold, Italic, Underline) -> ok")
               "wxStyledTextCtrl:styleSetFont/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#styleSetFont-3" "styleSetFont(This, StyleNum, Font) -> ok")
               "wxStyledTextCtrl:styleSetSpec/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#styleSetSpec-3" "styleSetSpec(This, StyleNum, Spec) -> ok")
               "wxStyledTextCtrl:getCurrentLine/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getCurrentLine-1" "getCurrentLine(This) -> integer()")
               "wxStyledTextCtrl:getStyleBitsNeeded/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getStyleBitsNeeded-1" "getStyleBitsNeeded(This) -> integer()")
               "wxStyledTextCtrl:getProperty/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getProperty-2" "getProperty(This, Key) -> unicode:charlist()")
               "wxStyledTextCtrl:setLexerLanguage/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setLexerLanguage-2" "setLexerLanguage(This, Language) -> ok")
               "wxStyledTextCtrl:setKeyWords/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setKeyWords-3" "setKeyWords(This, KeywordSet, KeyWords) -> ok")
               "wxStyledTextCtrl:setProperty/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setProperty-3" "setProperty(This, Key, Value) -> ok")
               "wxStyledTextCtrl:colourise/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#colourise-3" "colourise(This, Start, End) -> ok")
               "wxStyledTextCtrl:getLexer/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getLexer-1" "getLexer(This) -> integer()")
               "wxStyledTextCtrl:setLexer/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setLexer-2" "setLexer(This, Lexer) -> ok")
               "wxStyledTextCtrl:stopRecord/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#stopRecord-1" "stopRecord(This) -> ok")
               "wxStyledTextCtrl:startRecord/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#startRecord-1" "startRecord(This) -> ok")
               "wxStyledTextCtrl:getCaretLineBackAlpha/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getCaretLineBackAlpha-1" "getCaretLineBackAlpha(This) -> integer()")
               "wxStyledTextCtrl:setCaretLineBackAlpha/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setCaretLineBackAlpha-2" "setCaretLineBackAlpha(This, Alpha) -> ok")
               "wxStyledTextCtrl:selectionDuplicate/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#selectionDuplicate-1" "selectionDuplicate(This) -> ok")
               "wxStyledTextCtrl:getPasteConvertEndings/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getPasteConvertEndings-1" "getPasteConvertEndings(This) -> boolean()")
               "wxStyledTextCtrl:setPasteConvertEndings/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setPasteConvertEndings-2" "setPasteConvertEndings(This, Convert) -> ok")
               "wxStyledTextCtrl:toggleCaretSticky/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#toggleCaretSticky-1" "toggleCaretSticky(This) -> ok")
               "wxStyledTextCtrl:setCaretSticky/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setCaretSticky-2" "setCaretSticky(This, UseCaretStickyBehaviour) -> ok")
               "wxStyledTextCtrl:getCaretSticky/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getCaretSticky-1" "getCaretSticky(This) -> boolean()")
               "wxStyledTextCtrl:findColumn/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#findColumn-3" "findColumn(This, Line, Column) -> integer()")
               "wxStyledTextCtrl:allocate/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#allocate-2" "allocate(This, Bytes) -> ok")
               "wxStyledTextCtrl:autoCompGetCurrent/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#autoCompGetCurrent-1" "autoCompGetCurrent(This) -> integer()")
               "wxStyledTextCtrl:setCharsDefault/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setCharsDefault-1" "setCharsDefault(This) -> ok")
               "wxStyledTextCtrl:setWhitespaceChars/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setWhitespaceChars-2" "setWhitespaceChars(This, Characters) -> ok")
               "wxStyledTextCtrl:wordRightEndExtend/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#wordRightEndExtend-1" "wordRightEndExtend(This) -> ok")
               "wxStyledTextCtrl:wordRightEnd/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#wordRightEnd-1" "wordRightEnd(This) -> ok")
               "wxStyledTextCtrl:wordLeftEndExtend/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#wordLeftEndExtend-1" "wordLeftEndExtend(This) -> ok")
               "wxStyledTextCtrl:wordLeftEnd/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#wordLeftEnd-1" "wordLeftEnd(This) -> ok")
               "wxStyledTextCtrl:stutteredPageDownExtend/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#stutteredPageDownExtend-1" "stutteredPageDownExtend(This) -> ok")
               "wxStyledTextCtrl:stutteredPageDown/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#stutteredPageDown-1" "stutteredPageDown(This) -> ok")
               "wxStyledTextCtrl:stutteredPageUpExtend/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#stutteredPageUpExtend-1" "stutteredPageUpExtend(This) -> ok")
               "wxStyledTextCtrl:stutteredPageUp/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#stutteredPageUp-1" "stutteredPageUp(This) -> ok")
               "wxStyledTextCtrl:pageDownRectExtend/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#pageDownRectExtend-1" "pageDownRectExtend(This) -> ok")
               "wxStyledTextCtrl:pageUpRectExtend/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#pageUpRectExtend-1" "pageUpRectExtend(This) -> ok")
               "wxStyledTextCtrl:lineEndRectExtend/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#lineEndRectExtend-1" "lineEndRectExtend(This) -> ok")
               "wxStyledTextCtrl:vCHomeRectExtend/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#vCHomeRectExtend-1" "vCHomeRectExtend(This) -> ok")
               "wxStyledTextCtrl:homeRectExtend/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#homeRectExtend-1" "homeRectExtend(This) -> ok")
               "wxStyledTextCtrl:charRightRectExtend/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#charRightRectExtend-1" "charRightRectExtend(This) -> ok")
               "wxStyledTextCtrl:charLeftRectExtend/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#charLeftRectExtend-1" "charLeftRectExtend(This) -> ok")
               "wxStyledTextCtrl:lineUpRectExtend/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#lineUpRectExtend-1" "lineUpRectExtend(This) -> ok")
               "wxStyledTextCtrl:lineDownRectExtend/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#lineDownRectExtend-1" "lineDownRectExtend(This) -> ok")
               "wxStyledTextCtrl:getSelectionMode/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getSelectionMode-1" "getSelectionMode(This) -> integer()")
               "wxStyledTextCtrl:setSelectionMode/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setSelectionMode-2" "setSelectionMode(This, Mode) -> ok")
               "wxStyledTextCtrl:copyText/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#copyText-3" "copyText(This, Length, Text) -> ok")
               "wxStyledTextCtrl:copyRange/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#copyRange-3" "copyRange(This, Start, End) -> ok")
               "wxStyledTextCtrl:positionAfter/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#positionAfter-2" "positionAfter(This, Pos) -> integer()")
               "wxStyledTextCtrl:positionBefore/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#positionBefore-2" "positionBefore(This, Pos) -> integer()")
               "wxStyledTextCtrl:paraUpExtend/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#paraUpExtend-1" "paraUpExtend(This) -> ok")
               "wxStyledTextCtrl:paraUp/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#paraUp-1" "paraUp(This) -> ok")
               "wxStyledTextCtrl:paraDownExtend/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#paraDownExtend-1" "paraDownExtend(This) -> ok")
               "wxStyledTextCtrl:setHotspotSingleLine/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setHotspotSingleLine-2" "setHotspotSingleLine(This, SingleLine) -> ok")
               "wxStyledTextCtrl:setHotspotActiveUnderline/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setHotspotActiveUnderline-2" "setHotspotActiveUnderline(This, Underline) -> ok")
               "wxStyledTextCtrl:setHotspotActiveBackground/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setHotspotActiveBackground-3" "setHotspotActiveBackground(This, UseSetting, Back) -> ok")
               "wxStyledTextCtrl:setHotspotActiveForeground/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setHotspotActiveForeground-3" "setHotspotActiveForeground(This, UseSetting, Fore) -> ok")
               "wxStyledTextCtrl:getPrintWrapMode/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getPrintWrapMode-1" "getPrintWrapMode(This) -> integer()")
               "wxStyledTextCtrl:setYCaretPolicy/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setYCaretPolicy-3" "setYCaretPolicy(This, CaretPolicy, CaretSlop) -> ok")
               "wxStyledTextCtrl:setXCaretPolicy/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setXCaretPolicy-3" "setXCaretPolicy(This, CaretPolicy, CaretSlop) -> ok")
               "wxStyledTextCtrl:chooseCaretX/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#chooseCaretX-1" "chooseCaretX(This) -> ok")
               "wxStyledTextCtrl:getXOffset/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getXOffset-1" "getXOffset(This) -> integer()")
               "wxStyledTextCtrl:delLineRight/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#delLineRight-1" "delLineRight(This) -> ok")
               "wxStyledTextCtrl:delLineLeft/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#delLineLeft-1" "delLineLeft(This) -> ok")
               "wxStyledTextCtrl:setVisiblePolicy/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setVisiblePolicy-3" "setVisiblePolicy(This, VisiblePolicy, VisibleSlop) -> ok")
               "wxStyledTextCtrl:wordPartRightExtend/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#wordPartRightExtend-1" "wordPartRightExtend(This) -> ok")
               "wxStyledTextCtrl:wordPartRight/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#wordPartRight-1" "wordPartRight(This) -> ok")
               "wxStyledTextCtrl:wordPartLeftExtend/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#wordPartLeftExtend-1" "wordPartLeftExtend(This) -> ok")
               "wxStyledTextCtrl:wordPartLeft/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#wordPartLeft-1" "wordPartLeft(This) -> ok")
               "wxStyledTextCtrl:getControlCharSymbol/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getControlCharSymbol-1" "getControlCharSymbol(This) -> integer()")
               "wxStyledTextCtrl:setControlCharSymbol/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setControlCharSymbol-2" "setControlCharSymbol(This, Symbol) -> ok")
               "wxStyledTextCtrl:getSTCCursor/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getSTCCursor-1" "getSTCCursor(This) -> integer()")
               "wxStyledTextCtrl:setSTCCursor/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setSTCCursor-2" "setSTCCursor(This, CursorType) -> ok")
               "wxStyledTextCtrl:getMouseDownCaptures/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getMouseDownCaptures-1" "getMouseDownCaptures(This) -> boolean()")
               "wxStyledTextCtrl:setMouseDownCaptures/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setMouseDownCaptures-2" "setMouseDownCaptures(This, Captures) -> ok")
               "wxStyledTextCtrl:getStatus/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getStatus-1" "getStatus(This) -> integer()")
               "wxStyledTextCtrl:setStatus/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setStatus-2" "setStatus(This, StatusCode) -> ok")
               "wxStyledTextCtrl:getSTCFocus/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getSTCFocus-1" "getSTCFocus(This) -> boolean()")
               "wxStyledTextCtrl:setSTCFocus/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setSTCFocus-2" "setSTCFocus(This, Focus) -> ok")
               "wxStyledTextCtrl:getModEventMask/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getModEventMask-1" "getModEventMask(This) -> integer()")
               "wxStyledTextCtrl:getZoom/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getZoom-1" "getZoom(This) -> integer()")
               "wxStyledTextCtrl:setZoom/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setZoom-2" "setZoom(This, Zoom) -> ok")
               "wxStyledTextCtrl:selectionIsRectangle/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#selectionIsRectangle-1" "selectionIsRectangle(This) -> boolean()")
               "wxStyledTextCtrl:usePopUp/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#usePopUp-2" "usePopUp(This, AllowPopUp) -> ok")
               "wxStyledTextCtrl:linesOnScreen/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#linesOnScreen-1" "linesOnScreen(This) -> integer()")
               "wxStyledTextCtrl:searchPrev/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#searchPrev-3" "searchPrev(This, Flags, Text) -> integer()")
               "wxStyledTextCtrl:searchNext/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#searchNext-3" "searchNext(This, Flags, Text) -> integer()")
               "wxStyledTextCtrl:searchAnchor/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#searchAnchor-1" "searchAnchor(This) -> ok")
               "wxStyledTextCtrl:setEdgeColour/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setEdgeColour-2" "setEdgeColour(This, EdgeColour) -> ok")
               "wxStyledTextCtrl:getEdgeColour/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getEdgeColour-1" "getEdgeColour(This) -> wx:wx_colour4()")
               "wxStyledTextCtrl:getEdgeMode/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getEdgeMode-1" "getEdgeMode(This) -> integer()")
               "wxStyledTextCtrl:setEdgeMode/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setEdgeMode-2" "setEdgeMode(This, Mode) -> ok")
               "wxStyledTextCtrl:setEdgeColumn/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setEdgeColumn-2" "setEdgeColumn(This, Column) -> ok")
               "wxStyledTextCtrl:getEdgeColumn/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getEdgeColumn-1" "getEdgeColumn(This) -> integer()")
               "wxStyledTextCtrl:setModEventMask/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setModEventMask-2" "setModEventMask(This, Mask) -> ok")
               "wxStyledTextCtrl:setViewEOL/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setViewEOL-2" "setViewEOL(This, Visible) -> ok")
               "wxStyledTextCtrl:getViewEOL/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getViewEOL-1" "getViewEOL(This) -> boolean()")
               "wxStyledTextCtrl:braceMatch/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#braceMatch-2" "braceMatch(This, Pos) -> integer()")
               "wxStyledTextCtrl:braceBadLight/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#braceBadLight-2" "braceBadLight(This, Pos) -> ok")
               "wxStyledTextCtrl:braceHighlight/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#braceHighlight-3" "braceHighlight(This, Pos1, Pos2) -> ok")
               "wxStyledTextCtrl:lineLength/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#lineLength-2" "lineLength(This, Line) -> integer()")
               "wxStyledTextCtrl:moveCaretInsideView/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#moveCaretInsideView-1" "moveCaretInsideView(This) -> ok")
               "wxStyledTextCtrl:lineCopy/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#lineCopy-1" "lineCopy(This) -> ok")
               "wxStyledTextCtrl:vCHomeWrapExtend/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#vCHomeWrapExtend-1" "vCHomeWrapExtend(This) -> ok")
               "wxStyledTextCtrl:vCHomeWrap/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#vCHomeWrap-1" "vCHomeWrap(This) -> ok")
               "wxStyledTextCtrl:lineEndWrapExtend/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#lineEndWrapExtend-1" "lineEndWrapExtend(This) -> ok")
               "wxStyledTextCtrl:lineEndWrap/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#lineEndWrap-1" "lineEndWrap(This) -> ok")
               "wxStyledTextCtrl:homeWrapExtend/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#homeWrapExtend-1" "homeWrapExtend(This) -> ok")
               "wxStyledTextCtrl:lineEndDisplayExtend/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#lineEndDisplayExtend-1" "lineEndDisplayExtend(This) -> ok")
               "wxStyledTextCtrl:lineEndDisplay/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#lineEndDisplay-1" "lineEndDisplay(This) -> ok")
               "wxStyledTextCtrl:homeDisplayExtend/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#homeDisplayExtend-1" "homeDisplayExtend(This) -> ok")
               "wxStyledTextCtrl:homeDisplay/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#homeDisplay-1" "homeDisplay(This) -> ok")
               "wxStyledTextCtrl:deleteBackNotLine/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#deleteBackNotLine-1" "deleteBackNotLine(This) -> ok")
               "wxStyledTextCtrl:lineScrollUp/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#lineScrollUp-1" "lineScrollUp(This) -> ok")
               "wxStyledTextCtrl:lineScrollDown/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#lineScrollDown-1" "lineScrollDown(This) -> ok")
               "wxStyledTextCtrl:upperCase/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#upperCase-1" "upperCase(This) -> ok")
               "wxStyledTextCtrl:lowerCase/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#lowerCase-1" "lowerCase(This) -> ok")
               "wxStyledTextCtrl:lineDuplicate/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#lineDuplicate-1" "lineDuplicate(This) -> ok")
               "wxStyledTextCtrl:lineTranspose/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#lineTranspose-1" "lineTranspose(This) -> ok")
               "wxStyledTextCtrl:lineDelete/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#lineDelete-1" "lineDelete(This) -> ok")
               "wxStyledTextCtrl:lineCut/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#lineCut-1" "lineCut(This) -> ok")
               "wxStyledTextCtrl:delWordRight/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#delWordRight-1" "delWordRight(This) -> ok")
               "wxStyledTextCtrl:delWordLeft/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#delWordLeft-1" "delWordLeft(This) -> ok")
               "wxStyledTextCtrl:zoomOut/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#zoomOut-1" "zoomOut(This) -> ok")
               "wxStyledTextCtrl:zoomIn/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#zoomIn-1" "zoomIn(This) -> ok")
               "wxStyledTextCtrl:vCHomeExtend/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#vCHomeExtend-1" "vCHomeExtend(This) -> ok")
               "wxStyledTextCtrl:vCHome/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#vCHome-1" "vCHome(This) -> ok")
               "wxStyledTextCtrl:formFeed/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#formFeed-1" "formFeed(This) -> ok")
               "wxStyledTextCtrl:newLine/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#newLine-1" "newLine(This) -> ok")
               "wxStyledTextCtrl:backTab/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#backTab-1" "backTab(This) -> ok")
               "wxStyledTextCtrl:tab/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#tab-1" "tab(This) -> ok")
               "wxStyledTextCtrl:deleteBack/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#deleteBack-1" "deleteBack(This) -> ok")
               "wxStyledTextCtrl:cancel/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#cancel-1" "cancel(This) -> ok")
               "wxStyledTextCtrl:editToggleOvertype/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#editToggleOvertype-1" "editToggleOvertype(This) -> ok")
               "wxStyledTextCtrl:pageDownExtend/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#pageDownExtend-1" "pageDownExtend(This) -> ok")
               "wxStyledTextCtrl:pageDown/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#pageDown-1" "pageDown(This) -> ok")
               "wxStyledTextCtrl:pageUpExtend/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#pageUpExtend-1" "pageUpExtend(This) -> ok")
               "wxStyledTextCtrl:pageUp/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#pageUp-1" "pageUp(This) -> ok")
               "wxStyledTextCtrl:documentEndExtend/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#documentEndExtend-1" "documentEndExtend(This) -> ok")
               "wxStyledTextCtrl:documentEnd/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#documentEnd-1" "documentEnd(This) -> ok")
               "wxStyledTextCtrl:documentStartExtend/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#documentStartExtend-1" "documentStartExtend(This) -> ok")
               "wxStyledTextCtrl:documentStart/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#documentStart-1" "documentStart(This) -> ok")
               "wxStyledTextCtrl:lineEndExtend/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#lineEndExtend-1" "lineEndExtend(This) -> ok")
               "wxStyledTextCtrl:lineEnd/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#lineEnd-1" "lineEnd(This) -> ok")
               "wxStyledTextCtrl:homeExtend/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#homeExtend-1" "homeExtend(This) -> ok")
               "wxStyledTextCtrl:home/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#home-1" "home(This) -> ok")
               "wxStyledTextCtrl:wordRightExtend/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#wordRightExtend-1" "wordRightExtend(This) -> ok")
               "wxStyledTextCtrl:wordRight/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#wordRight-1" "wordRight(This) -> ok")
               "wxStyledTextCtrl:wordLeftExtend/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#wordLeftExtend-1" "wordLeftExtend(This) -> ok")
               "wxStyledTextCtrl:wordLeft/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#wordLeft-1" "wordLeft(This) -> ok")
               "wxStyledTextCtrl:charRightExtend/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#charRightExtend-1" "charRightExtend(This) -> ok")
               "wxStyledTextCtrl:charRight/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#charRight-1" "charRight(This) -> ok")
               "wxStyledTextCtrl:charLeftExtend/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#charLeftExtend-1" "charLeftExtend(This) -> ok")
               "wxStyledTextCtrl:charLeft/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#charLeft-1" "charLeft(This) -> ok")
               "wxStyledTextCtrl:lineUpExtend/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#lineUpExtend-1" "lineUpExtend(This) -> ok")
               "wxStyledTextCtrl:lineUp/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#lineUp-1" "lineUp(This) -> ok")
               "wxStyledTextCtrl:lineDownExtend/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#lineDownExtend-1" "lineDownExtend(This) -> ok")
               "wxStyledTextCtrl:lineDown/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#lineDown-1" "lineDown(This) -> ok")
               "wxStyledTextCtrl:setFoldMarginHiColour/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setFoldMarginHiColour-3" "setFoldMarginHiColour(This, UseSetting, Fore) -> ok")
               "wxStyledTextCtrl:setFoldMarginColour/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setFoldMarginColour-3" "setFoldMarginColour(This, UseSetting, Back) -> ok")
               "wxStyledTextCtrl:linesSplit/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#linesSplit-2" "linesSplit(This, PixelWidth) -> ok")
               "wxStyledTextCtrl:linesJoin/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#linesJoin-1" "linesJoin(This) -> ok")
               "wxStyledTextCtrl:targetFromSelection/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#targetFromSelection-1" "targetFromSelection(This) -> ok")
               "wxStyledTextCtrl:setTwoPhaseDraw/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setTwoPhaseDraw-2" "setTwoPhaseDraw(This, TwoPhase) -> ok")
               "wxStyledTextCtrl:getTwoPhaseDraw/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getTwoPhaseDraw-1" "getTwoPhaseDraw(This) -> boolean()")
               "wxStyledTextCtrl:appendText/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#appendText-2" "appendText(This, Text) -> ok")
               "wxStyledTextCtrl:getUseVerticalScrollBar/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getUseVerticalScrollBar-1" "getUseVerticalScrollBar(This) -> boolean()")
               "wxStyledTextCtrl:setUseVerticalScrollBar/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setUseVerticalScrollBar-2" "setUseVerticalScrollBar(This, Show) -> ok")
               "wxStyledTextCtrl:textHeight/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#textHeight-2" "textHeight(This, Line) -> integer()")
               "wxStyledTextCtrl:getEndAtLastLine/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getEndAtLastLine-1" "getEndAtLastLine(This) -> boolean()")
               "wxStyledTextCtrl:textWidth/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#textWidth-3" "textWidth(This, Style, Text) -> integer()")
               "wxStyledTextCtrl:getScrollWidth/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getScrollWidth-1" "getScrollWidth(This) -> integer()")
               "wxStyledTextCtrl:setScrollWidth/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setScrollWidth-2" "setScrollWidth(This, PixelWidth) -> ok")
               "wxStyledTextCtrl:getLayoutCache/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getLayoutCache-1" "getLayoutCache(This) -> integer()")
               "wxStyledTextCtrl:setLayoutCache/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setLayoutCache-2" "setLayoutCache(This, Mode) -> ok")
               "wxStyledTextCtrl:getWrapStartIndent/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getWrapStartIndent-1" "getWrapStartIndent(This) -> integer()")
               "wxStyledTextCtrl:setWrapStartIndent/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setWrapStartIndent-2" "setWrapStartIndent(This, Indent) -> ok")
               "wxStyledTextCtrl:getWrapVisualFlagsLocation/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getWrapVisualFlagsLocation-1" "getWrapVisualFlagsLocation(This) -> integer()")
               "wxStyledTextCtrl:setWrapVisualFlagsLocation/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setWrapVisualFlagsLocation-2" "setWrapVisualFlagsLocation(This, WrapVisualFlagsLocation) -> ok")
               "wxStyledTextCtrl:getWrapVisualFlags/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getWrapVisualFlags-1" "getWrapVisualFlags(This) -> integer()")
               "wxStyledTextCtrl:setWrapVisualFlags/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setWrapVisualFlags-2" "setWrapVisualFlags(This, WrapVisualFlags) -> ok")
               "wxStyledTextCtrl:getWrapMode/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getWrapMode-1" "getWrapMode(This) -> integer()")
               "wxStyledTextCtrl:setWrapMode/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setWrapMode-2" "setWrapMode(This, Mode) -> ok")
               "wxStyledTextCtrl:wordEndPosition/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#wordEndPosition-3" "wordEndPosition(This, Pos, OnlyWordCharacters) -> integer()")
               "wxStyledTextCtrl:wordStartPosition/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#wordStartPosition-3" "wordStartPosition(This, Pos, OnlyWordCharacters) -> integer()")
               "wxStyledTextCtrl:getMouseDwellTime/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getMouseDwellTime-1" "getMouseDwellTime(This) -> integer()")
               "wxStyledTextCtrl:setMouseDwellTime/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setMouseDwellTime-2" "setMouseDwellTime(This, PeriodMilliseconds) -> ok")
               "wxStyledTextCtrl:getBackSpaceUnIndents/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getBackSpaceUnIndents-1" "getBackSpaceUnIndents(This) -> boolean()")
               "wxStyledTextCtrl:setBackSpaceUnIndents/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setBackSpaceUnIndents-2" "setBackSpaceUnIndents(This, BsUnIndents) -> ok")
               "wxStyledTextCtrl:getTabIndents/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getTabIndents-1" "getTabIndents(This) -> boolean()")
               "wxStyledTextCtrl:setTabIndents/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setTabIndents-2" "setTabIndents(This, TabIndents) -> ok")
               "wxStyledTextCtrl:ensureVisibleEnforcePolicy/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#ensureVisibleEnforcePolicy-2" "ensureVisibleEnforcePolicy(This, Line) -> ok")
               "wxStyledTextCtrl:setFoldFlags/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setFoldFlags-2" "setFoldFlags(This, Flags) -> ok")
               "wxStyledTextCtrl:ensureVisible/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#ensureVisible-2" "ensureVisible(This, Line) -> ok")
               "wxStyledTextCtrl:toggleFold/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#toggleFold-2" "toggleFold(This, Line) -> ok")
               "wxStyledTextCtrl:getFoldExpanded/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getFoldExpanded-2" "getFoldExpanded(This, Line) -> boolean()")
               "wxStyledTextCtrl:setFoldExpanded/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setFoldExpanded-3" "setFoldExpanded(This, Line, Expanded) -> ok")
               "wxStyledTextCtrl:getLineVisible/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getLineVisible-2" "getLineVisible(This, Line) -> boolean()")
               "wxStyledTextCtrl:hideLines/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#hideLines-3" "hideLines(This, LineStart, LineEnd) -> ok")
               "wxStyledTextCtrl:showLines/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#showLines-3" "showLines(This, LineStart, LineEnd) -> ok")
               "wxStyledTextCtrl:getFoldParent/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getFoldParent-2" "getFoldParent(This, Line) -> integer()")
               "wxStyledTextCtrl:getLastChild/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getLastChild-3" "getLastChild(This, Line, Level) -> integer()")
               "wxStyledTextCtrl:getFoldLevel/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getFoldLevel-2" "getFoldLevel(This, Line) -> integer()")
               "wxStyledTextCtrl:setFoldLevel/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setFoldLevel-3" "setFoldLevel(This, Line, Level) -> ok")
               "wxStyledTextCtrl:wrapCount/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#wrapCount-2" "wrapCount(This, Line) -> integer()")
               "wxStyledTextCtrl:docLineFromVisible/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#docLineFromVisible-2" "docLineFromVisible(This, LineDisplay) -> integer()")
               "wxStyledTextCtrl:visibleFromDocLine/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#visibleFromDocLine-2" "visibleFromDocLine(This, Line) -> integer()")
               "wxStyledTextCtrl:callTipUseStyle/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#callTipUseStyle-2" "callTipUseStyle(This, TabSize) -> ok")
               "wxStyledTextCtrl:callTipSetForegroundHighlight/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#callTipSetForegroundHighlight-2" "callTipSetForegroundHighlight(This, Fore) -> ok")
               "wxStyledTextCtrl:callTipSetForeground/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#callTipSetForeground-2" "callTipSetForeground(This, Fore) -> ok")
               "wxStyledTextCtrl:callTipSetBackground/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#callTipSetBackground-2" "callTipSetBackground(This, Back) -> ok")
               "wxStyledTextCtrl:callTipSetHighlight/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#callTipSetHighlight-3" "callTipSetHighlight(This, Start, End) -> ok")
               "wxStyledTextCtrl:callTipPosAtStart/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#callTipPosAtStart-1" "callTipPosAtStart(This) -> integer()")
               "wxStyledTextCtrl:callTipActive/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#callTipActive-1" "callTipActive(This) -> boolean()")
               "wxStyledTextCtrl:callTipCancel/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#callTipCancel-1" "callTipCancel(This) -> ok")
               "wxStyledTextCtrl:callTipShow/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#callTipShow-3" "callTipShow(This, Pos, Definition) -> ok")
               "wxStyledTextCtrl:getSearchFlags/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getSearchFlags-1" "getSearchFlags(This) -> integer()")
               "wxStyledTextCtrl:setSearchFlags/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setSearchFlags-2" "setSearchFlags(This, Flags) -> ok")
               "wxStyledTextCtrl:searchInTarget/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#searchInTarget-2" "searchInTarget(This, Text) -> integer()")
               "wxStyledTextCtrl:replaceTarget/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#replaceTarget-2" "replaceTarget(This, Text) -> integer()")
               "wxStyledTextCtrl:getTargetEnd/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getTargetEnd-1" "getTargetEnd(This) -> integer()")
               "wxStyledTextCtrl:setTargetEnd/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setTargetEnd-2" "setTargetEnd(This, Pos) -> ok")
               "wxStyledTextCtrl:getTargetStart/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getTargetStart-1" "getTargetStart(This) -> integer()")
               "wxStyledTextCtrl:setTargetStart/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setTargetStart-2" "setTargetStart(This, Pos) -> ok")
               "wxStyledTextCtrl:getCaretWidth/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getCaretWidth-1" "getCaretWidth(This) -> integer()")
               "wxStyledTextCtrl:setCaretWidth/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setCaretWidth-2" "setCaretWidth(This, PixelWidth) -> ok")
               "wxStyledTextCtrl:getOvertype/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getOvertype-1" "getOvertype(This) -> boolean()")
               "wxStyledTextCtrl:getTextLength/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getTextLength-1" "getTextLength(This) -> integer()")
               "wxStyledTextCtrl:getText/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getText-1" "getText(This) -> unicode:charlist()")
               "wxStyledTextCtrl:setText/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setText-2" "setText(This, Text) -> ok")
               "wxStyledTextCtrl:clear/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#clear-1" "clear(This) -> ok")
               "wxStyledTextCtrl:paste/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#paste-1" "paste(This) -> ok")
               "wxStyledTextCtrl:copy/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#copy-1" "copy(This) -> ok")
               "wxStyledTextCtrl:cut/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#cut-1" "cut(This) -> ok")
               "wxStyledTextCtrl:undo/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#undo-1" "undo(This) -> ok")
               "wxStyledTextCtrl:emptyUndoBuffer/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#emptyUndoBuffer-1" "emptyUndoBuffer(This) -> ok")
               "wxStyledTextCtrl:canUndo/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#canUndo-1" "canUndo(This) -> boolean()")
               "wxStyledTextCtrl:canPaste/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#canPaste-1" "canPaste(This) -> boolean()")
               "wxStyledTextCtrl:setReadOnly/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setReadOnly-2" "setReadOnly(This, ReadOnly) -> ok")
               "wxStyledTextCtrl:replaceSelection/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#replaceSelection-2" "replaceSelection(This, Text) -> ok")
               "wxStyledTextCtrl:ensureCaretVisible/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#ensureCaretVisible-1" "ensureCaretVisible(This) -> ok")
               "wxStyledTextCtrl:lineScroll/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#lineScroll-3" "lineScroll(This, Columns, Lines) -> ok")
               "wxStyledTextCtrl:positionFromLine/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#positionFromLine-2" "positionFromLine(This, Line) -> integer()")
               "wxStyledTextCtrl:lineFromPosition/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#lineFromPosition-2" "lineFromPosition(This, Pos) -> integer()")
               "wxStyledTextCtrl:hideSelection/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#hideSelection-2" "hideSelection(This, Normal) -> ok")
               "wxStyledTextCtrl:getTextRange/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getTextRange-3" "getTextRange(This, StartPos, EndPos) -> unicode:charlist()")
               "wxStyledTextCtrl:getSelectedText/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getSelectedText-1" "getSelectedText(This) -> unicode:charlist()")
               "wxStyledTextCtrl:setSelection/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setSelection-3" "setSelection(This, Start, End) -> ok")
               "wxStyledTextCtrl:getModify/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getModify-1" "getModify(This) -> boolean()")
               "wxStyledTextCtrl:getMarginRight/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getMarginRight-1" "getMarginRight(This) -> integer()")
               "wxStyledTextCtrl:setMarginRight/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setMarginRight-2" "setMarginRight(This, PixelWidth) -> ok")
               "wxStyledTextCtrl:getMarginLeft/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getMarginLeft-1" "getMarginLeft(This) -> integer()")
               "wxStyledTextCtrl:setMarginLeft/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setMarginLeft-2" "setMarginLeft(This, PixelWidth) -> ok")
               "wxStyledTextCtrl:getLineCount/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getLineCount-1" "getLineCount(This) -> integer()")
               "wxStyledTextCtrl:getLine/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getLine-2" "getLine(This, Line) -> unicode:charlist()")
               "wxStyledTextCtrl:getFirstVisibleLine/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getFirstVisibleLine-1" "getFirstVisibleLine(This) -> integer()")
               "wxStyledTextCtrl:formatRange/8"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#formatRange-8" "formatRange(This, DoDraw, StartPos, EndPos, Draw, Target, RenderRect, PageRect) -> integer()")
               "wxStyledTextCtrl:findText/5"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#findText-5" "findText(This, MinPos, MaxPos, Text, Options::[Option]) -> integer()")
               "wxStyledTextCtrl:findText/4"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#findText-4" "findText(This, MinPos, MaxPos, Text) -> integer()")
               "wxStyledTextCtrl:getPrintColourMode/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getPrintColourMode-1" "getPrintColourMode(This) -> integer()")
               "wxStyledTextCtrl:setPrintColourMode/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setPrintColourMode-2" "setPrintColourMode(This, Mode) -> ok")
               "wxStyledTextCtrl:getPrintMagnification/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getPrintMagnification-1" "getPrintMagnification(This) -> integer()")
               "wxStyledTextCtrl:setPrintMagnification/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setPrintMagnification-2" "setPrintMagnification(This, Magnification) -> ok")
               "wxStyledTextCtrl:getSelectionEnd/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getSelectionEnd-1" "getSelectionEnd(This) -> integer()")
               "wxStyledTextCtrl:setSelectionEnd/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setSelectionEnd-2" "setSelectionEnd(This, Pos) -> ok")
               "wxStyledTextCtrl:getSelectionStart/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getSelectionStart-1" "getSelectionStart(This) -> integer()")
               "wxStyledTextCtrl:setSelectionStart/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setSelectionStart-2" "setSelectionStart(This, Pos) -> ok")
               "wxStyledTextCtrl:setCurrentPos/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setCurrentPos-2" "setCurrentPos(This, Pos) -> ok")
               "wxStyledTextCtrl:getReadOnly/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getReadOnly-1" "getReadOnly(This) -> boolean()")
               "wxStyledTextCtrl:getCaretForeground/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getCaretForeground-1" "getCaretForeground(This) -> wx:wx_colour4()")
               "wxStyledTextCtrl:getCodePage/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getCodePage-1" "getCodePage(This) -> integer()")
               "wxStyledTextCtrl:getLineEndPosition/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getLineEndPosition-2" "getLineEndPosition(This, Line) -> integer()")
               "wxStyledTextCtrl:getHighlightGuide/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getHighlightGuide-1" "getHighlightGuide(This) -> integer()")
               "wxStyledTextCtrl:setHighlightGuide/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setHighlightGuide-2" "setHighlightGuide(This, Column) -> ok")
               "wxStyledTextCtrl:getIndentationGuides/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getIndentationGuides-1" "getIndentationGuides(This) -> boolean()")
               "wxStyledTextCtrl:setIndentationGuides/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setIndentationGuides-2" "setIndentationGuides(This, Show) -> ok")
               "wxStyledTextCtrl:getUseHorizontalScrollBar/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getUseHorizontalScrollBar-1" "getUseHorizontalScrollBar(This) -> boolean()")
               "wxStyledTextCtrl:setUseHorizontalScrollBar/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setUseHorizontalScrollBar-2" "setUseHorizontalScrollBar(This, Show) -> ok")
               "wxStyledTextCtrl:getColumn/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getColumn-2" "getColumn(This, Pos) -> integer()")
               "wxStyledTextCtrl:getLineIndentPosition/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getLineIndentPosition-2" "getLineIndentPosition(This, Line) -> integer()")
               "wxStyledTextCtrl:getLineIndentation/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getLineIndentation-2" "getLineIndentation(This, Line) -> integer()")
               "wxStyledTextCtrl:setLineIndentation/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setLineIndentation-3" "setLineIndentation(This, Line, IndentSize) -> ok")
               "wxStyledTextCtrl:getUseTabs/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getUseTabs-1" "getUseTabs(This) -> boolean()")
               "wxStyledTextCtrl:setUseTabs/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setUseTabs-2" "setUseTabs(This, UseTabs) -> ok")
               "wxStyledTextCtrl:getIndent/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getIndent-1" "getIndent(This) -> integer()")
               "wxStyledTextCtrl:setIndent/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setIndent-2" "setIndent(This, IndentSize) -> ok")
               "wxStyledTextCtrl:autoCompGetMaxHeight/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#autoCompGetMaxHeight-1" "autoCompGetMaxHeight(This) -> integer()")
               "wxStyledTextCtrl:autoCompSetMaxHeight/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#autoCompSetMaxHeight-2" "autoCompSetMaxHeight(This, RowCount) -> ok")
               "wxStyledTextCtrl:autoCompGetMaxWidth/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#autoCompGetMaxWidth-1" "autoCompGetMaxWidth(This) -> integer()")
               "wxStyledTextCtrl:autoCompSetMaxWidth/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#autoCompSetMaxWidth-2" "autoCompSetMaxWidth(This, CharacterCount) -> ok")
               "wxStyledTextCtrl:autoCompSetTypeSeparator/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#autoCompSetTypeSeparator-2" "autoCompSetTypeSeparator(This, SeparatorCharacter) -> ok")
               "wxStyledTextCtrl:autoCompGetTypeSeparator/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#autoCompGetTypeSeparator-1" "autoCompGetTypeSeparator(This) -> integer()")
               "wxStyledTextCtrl:clearRegisteredImages/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#clearRegisteredImages-1" "clearRegisteredImages(This) -> ok")
               "wxStyledTextCtrl:registerImage/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#registerImage-3" "registerImage(This, Type, Bmp) -> ok")
               "wxStyledTextCtrl:autoCompGetDropRestOfWord/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#autoCompGetDropRestOfWord-1" "autoCompGetDropRestOfWord(This) -> boolean()")
               "wxStyledTextCtrl:autoCompSetDropRestOfWord/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#autoCompSetDropRestOfWord-2" "autoCompSetDropRestOfWord(This, DropRestOfWord) -> ok")
               "wxStyledTextCtrl:autoCompGetAutoHide/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#autoCompGetAutoHide-1" "autoCompGetAutoHide(This) -> boolean()")
               "wxStyledTextCtrl:autoCompSetAutoHide/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#autoCompSetAutoHide-2" "autoCompSetAutoHide(This, AutoHide) -> ok")
               "wxStyledTextCtrl:userListShow/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#userListShow-3" "userListShow(This, ListType, ItemList) -> ok")
               "wxStyledTextCtrl:autoCompGetIgnoreCase/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#autoCompGetIgnoreCase-1" "autoCompGetIgnoreCase(This) -> boolean()")
               "wxStyledTextCtrl:autoCompSetIgnoreCase/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#autoCompSetIgnoreCase-2" "autoCompSetIgnoreCase(This, IgnoreCase) -> ok")
               "wxStyledTextCtrl:autoCompGetChooseSingle/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#autoCompGetChooseSingle-1" "autoCompGetChooseSingle(This) -> boolean()")
               "wxStyledTextCtrl:autoCompSetChooseSingle/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#autoCompSetChooseSingle-2" "autoCompSetChooseSingle(This, ChooseSingle) -> ok")
               "wxStyledTextCtrl:autoCompSetFillUps/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#autoCompSetFillUps-2" "autoCompSetFillUps(This, CharacterSet) -> ok")
               "wxStyledTextCtrl:autoCompGetCancelAtStart/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#autoCompGetCancelAtStart-1" "autoCompGetCancelAtStart(This) -> boolean()")
               "wxStyledTextCtrl:autoCompSetCancelAtStart/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#autoCompSetCancelAtStart-2" "autoCompSetCancelAtStart(This, Cancel) -> ok")
               "wxStyledTextCtrl:autoCompSelect/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#autoCompSelect-2" "autoCompSelect(This, Text) -> ok")
               "wxStyledTextCtrl:autoCompGetSeparator/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#autoCompGetSeparator-1" "autoCompGetSeparator(This) -> integer()")
               "wxStyledTextCtrl:autoCompSetSeparator/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#autoCompSetSeparator-2" "autoCompSetSeparator(This, SeparatorCharacter) -> ok")
               "wxStyledTextCtrl:autoCompStops/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#autoCompStops-2" "autoCompStops(This, CharacterSet) -> ok")
               "wxStyledTextCtrl:autoCompComplete/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#autoCompComplete-1" "autoCompComplete(This) -> ok")
               "wxStyledTextCtrl:autoCompPosStart/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#autoCompPosStart-1" "autoCompPosStart(This) -> integer()")
               "wxStyledTextCtrl:autoCompActive/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#autoCompActive-1" "autoCompActive(This) -> boolean()")
               "wxStyledTextCtrl:autoCompCancel/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#autoCompCancel-1" "autoCompCancel(This) -> ok")
               "wxStyledTextCtrl:autoCompShow/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#autoCompShow-3" "autoCompShow(This, LenEntered, ItemList) -> ok")
               "wxStyledTextCtrl:setCaretLineBackground/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setCaretLineBackground-2" "setCaretLineBackground(This, Back) -> ok")
               "wxStyledTextCtrl:getCaretLineBackground/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getCaretLineBackground-1" "getCaretLineBackground(This) -> wx:wx_colour4()")
               "wxStyledTextCtrl:setCaretLineVisible/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setCaretLineVisible-2" "setCaretLineVisible(This, Show) -> ok")
               "wxStyledTextCtrl:getCaretLineVisible/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getCaretLineVisible-1" "getCaretLineVisible(This) -> boolean()")
               "wxStyledTextCtrl:getMaxLineState/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getMaxLineState-1" "getMaxLineState(This) -> integer()")
               "wxStyledTextCtrl:getLineState/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getLineState-2" "getLineState(This, Line) -> integer()")
               "wxStyledTextCtrl:setLineState/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setLineState-3" "setLineState(This, Line, State) -> ok")
               "wxStyledTextCtrl:getStyleBits/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getStyleBits-1" "getStyleBits(This) -> integer()")
               "wxStyledTextCtrl:setWhitespaceBackground/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setWhitespaceBackground-3" "setWhitespaceBackground(This, UseSetting, Back) -> ok")
               "wxStyledTextCtrl:setWhitespaceForeground/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setWhitespaceForeground-3" "setWhitespaceForeground(This, UseSetting, Fore) -> ok")
               "wxStyledTextCtrl:indicatorGetForeground/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#indicatorGetForeground-2" "indicatorGetForeground(This, Indic) -> wx:wx_colour4()")
               "wxStyledTextCtrl:indicatorSetForeground/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#indicatorSetForeground-3" "indicatorSetForeground(This, Indic, Fore) -> ok")
               "wxStyledTextCtrl:indicatorGetStyle/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#indicatorGetStyle-2" "indicatorGetStyle(This, Indic) -> integer()")
               "wxStyledTextCtrl:indicatorSetStyle/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#indicatorSetStyle-3" "indicatorSetStyle(This, Indic, Style) -> ok")
               "wxStyledTextCtrl:endUndoAction/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#endUndoAction-1" "endUndoAction(This) -> ok")
               "wxStyledTextCtrl:beginUndoAction/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#beginUndoAction-1" "beginUndoAction(This) -> ok")
               "wxStyledTextCtrl:setWordChars/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setWordChars-2" "setWordChars(This, Characters) -> ok")
               "wxStyledTextCtrl:setCaretPeriod/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setCaretPeriod-2" "setCaretPeriod(This, PeriodMilliseconds) -> ok")
               "wxStyledTextCtrl:getCaretPeriod/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getCaretPeriod-1" "getCaretPeriod(This) -> integer()")
               "wxStyledTextCtrl:styleSetVisible/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#styleSetVisible-3" "styleSetVisible(This, Style, Visible) -> ok")
               "wxStyledTextCtrl:setStyleBytes/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setStyleBytes-2" "setStyleBytes(This, Length) -> integer()")
               "wxStyledTextCtrl:cmdKeyClearAll/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#cmdKeyClearAll-1" "cmdKeyClearAll(This) -> ok")
               "wxStyledTextCtrl:cmdKeyClear/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#cmdKeyClear-3" "cmdKeyClear(This, Key, Modifiers) -> ok")
               "wxStyledTextCtrl:cmdKeyAssign/4"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#cmdKeyAssign-4" "cmdKeyAssign(This, Key, Modifiers, Cmd) -> ok")
               "wxStyledTextCtrl:setCaretForeground/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setCaretForeground-2" "setCaretForeground(This, Fore) -> ok")
               "wxStyledTextCtrl:setSelAlpha/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setSelAlpha-2" "setSelAlpha(This, Alpha) -> ok")
               "wxStyledTextCtrl:getSelAlpha/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getSelAlpha-1" "getSelAlpha(This) -> integer()")
               "wxStyledTextCtrl:setSelBackground/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setSelBackground-3" "setSelBackground(This, UseSetting, Back) -> ok")
               "wxStyledTextCtrl:setSelForeground/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setSelForeground-3" "setSelForeground(This, UseSetting, Fore) -> ok")
               "wxStyledTextCtrl:styleSetHotSpot/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#styleSetHotSpot-3" "styleSetHotSpot(This, Style, Hotspot) -> ok")
               "wxStyledTextCtrl:styleSetCase/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#styleSetCase-3" "styleSetCase(This, Style, CaseForce) -> ok")
               "wxStyledTextCtrl:styleSetUnderline/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#styleSetUnderline-3" "styleSetUnderline(This, Style, Underline) -> ok")
               "wxStyledTextCtrl:styleResetDefault/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#styleResetDefault-1" "styleResetDefault(This) -> ok")
               "wxStyledTextCtrl:styleSetEOLFilled/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#styleSetEOLFilled-3" "styleSetEOLFilled(This, Style, Filled) -> ok")
               "wxStyledTextCtrl:styleSetFaceName/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#styleSetFaceName-3" "styleSetFaceName(This, Style, FontName) -> ok")
               "wxStyledTextCtrl:styleSetSize/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#styleSetSize-3" "styleSetSize(This, Style, SizePoints) -> ok")
               "wxStyledTextCtrl:styleSetItalic/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#styleSetItalic-3" "styleSetItalic(This, Style, Italic) -> ok")
               "wxStyledTextCtrl:styleSetBold/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#styleSetBold-3" "styleSetBold(This, Style, Bold) -> ok")
               "wxStyledTextCtrl:styleSetBackground/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#styleSetBackground-3" "styleSetBackground(This, Style, Back) -> ok")
               "wxStyledTextCtrl:styleSetForeground/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#styleSetForeground-3" "styleSetForeground(This, Style, Fore) -> ok")
               "wxStyledTextCtrl:styleClearAll/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#styleClearAll-1" "styleClearAll(This) -> ok")
               "wxStyledTextCtrl:getMarginSensitive/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getMarginSensitive-2" "getMarginSensitive(This, Margin) -> boolean()")
               "wxStyledTextCtrl:setMarginSensitive/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setMarginSensitive-3" "setMarginSensitive(This, Margin, Sensitive) -> ok")
               "wxStyledTextCtrl:getMarginMask/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getMarginMask-2" "getMarginMask(This, Margin) -> integer()")
               "wxStyledTextCtrl:setMarginMask/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setMarginMask-3" "setMarginMask(This, Margin, Mask) -> ok")
               "wxStyledTextCtrl:getMarginWidth/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getMarginWidth-2" "getMarginWidth(This, Margin) -> integer()")
               "wxStyledTextCtrl:setMarginWidth/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setMarginWidth-3" "setMarginWidth(This, Margin, PixelWidth) -> ok")
               "wxStyledTextCtrl:getMarginType/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getMarginType-2" "getMarginType(This, Margin) -> integer()")
               "wxStyledTextCtrl:setMarginType/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setMarginType-3" "setMarginType(This, Margin, MarginType) -> ok")
               "wxStyledTextCtrl:markerSetAlpha/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#markerSetAlpha-3" "markerSetAlpha(This, MarkerNumber, Alpha) -> ok")
               "wxStyledTextCtrl:markerAddSet/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#markerAddSet-3" "markerAddSet(This, Line, Set) -> ok")
               "wxStyledTextCtrl:markerDefineBitmap/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#markerDefineBitmap-3" "markerDefineBitmap(This, MarkerNumber, Bmp) -> ok")
               "wxStyledTextCtrl:markerPrevious/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#markerPrevious-3" "markerPrevious(This, LineStart, MarkerMask) -> integer()")
               "wxStyledTextCtrl:markerNext/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#markerNext-3" "markerNext(This, LineStart, MarkerMask) -> integer()")
               "wxStyledTextCtrl:markerGet/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#markerGet-2" "markerGet(This, Line) -> integer()")
               "wxStyledTextCtrl:markerDeleteAll/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#markerDeleteAll-2" "markerDeleteAll(This, MarkerNumber) -> ok")
               "wxStyledTextCtrl:markerDelete/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#markerDelete-3" "markerDelete(This, Line, MarkerNumber) -> ok")
               "wxStyledTextCtrl:markerAdd/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#markerAdd-3" "markerAdd(This, Line, MarkerNumber) -> integer()")
               "wxStyledTextCtrl:markerSetBackground/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#markerSetBackground-3" "markerSetBackground(This, MarkerNumber, Back) -> ok")
               "wxStyledTextCtrl:markerSetForeground/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#markerSetForeground-3" "markerSetForeground(This, MarkerNumber, Fore) -> ok")
               "wxStyledTextCtrl:markerDefine/4"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#markerDefine-4" "markerDefine(This, MarkerNumber, MarkerSymbol, Options::[Option]) -> ok")
               "wxStyledTextCtrl:markerDefine/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#markerDefine-3" "markerDefine(This, MarkerNumber, MarkerSymbol) -> ok")
               "wxStyledTextCtrl:setCodePage/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setCodePage-2" "setCodePage(This, CodePage) -> ok")
               "wxStyledTextCtrl:getTabWidth/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getTabWidth-1" "getTabWidth(This) -> integer()")
               "wxStyledTextCtrl:setTabWidth/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setTabWidth-2" "setTabWidth(This, TabWidth) -> ok")
               "wxStyledTextCtrl:setBufferedDraw/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setBufferedDraw-2" "setBufferedDraw(This, Buffered) -> ok")
               "wxStyledTextCtrl:getBufferedDraw/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getBufferedDraw-1" "getBufferedDraw(This) -> boolean()")
               "wxStyledTextCtrl:setStyling/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setStyling-3" "setStyling(This, Length, Style) -> ok")
               "wxStyledTextCtrl:startStyling/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#startStyling-3" "startStyling(This, Pos, Mask) -> ok")
               "wxStyledTextCtrl:setEOLMode/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setEOLMode-2" "setEOLMode(This, EolMode) -> ok")
               "wxStyledTextCtrl:getEOLMode/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getEOLMode-1" "getEOLMode(This) -> integer()")
               "wxStyledTextCtrl:convertEOLs/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#convertEOLs-2" "convertEOLs(This, EolMode) -> ok")
               "wxStyledTextCtrl:getEndStyled/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getEndStyled-1" "getEndStyled(This) -> integer()")
               "wxStyledTextCtrl:getCurLine/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getCurLine-1" "getCurLine(This) -> Result")
               "wxStyledTextCtrl:setAnchor/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setAnchor-2" "setAnchor(This, PosAnchor) -> ok")
               "wxStyledTextCtrl:gotoPos/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#gotoPos-2" "gotoPos(This, Pos) -> ok")
               "wxStyledTextCtrl:gotoLine/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#gotoLine-2" "gotoLine(This, Line) -> ok")
               "wxStyledTextCtrl:positionFromPointClose/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#positionFromPointClose-3" "positionFromPointClose(This, X, Y) -> integer()")
               "wxStyledTextCtrl:positionFromPoint/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#positionFromPoint-2" "positionFromPoint(This, Pt) -> integer()")
               "wxStyledTextCtrl:setViewWhiteSpace/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setViewWhiteSpace-2" "setViewWhiteSpace(This, ViewWS) -> ok")
               "wxStyledTextCtrl:getViewWhiteSpace/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getViewWhiteSpace-1" "getViewWhiteSpace(This) -> integer()")
               "wxStyledTextCtrl:getUndoCollection/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getUndoCollection-1" "getUndoCollection(This) -> boolean()")
               "wxStyledTextCtrl:markerDeleteHandle/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#markerDeleteHandle-2" "markerDeleteHandle(This, Handle) -> ok")
               "wxStyledTextCtrl:markerLineFromHandle/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#markerLineFromHandle-2" "markerLineFromHandle(This, Handle) -> integer()")
               "wxStyledTextCtrl:canRedo/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#canRedo-1" "canRedo(This) -> boolean()")
               "wxStyledTextCtrl:getStyledText/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getStyledText-3" "getStyledText(This, StartPos, EndPos) -> wx:wx_object()")
               "wxStyledTextCtrl:setSavePoint/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setSavePoint-1" "setSavePoint(This) -> ok")
               "wxStyledTextCtrl:selectAll/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#selectAll-1" "selectAll(This) -> ok")
               "wxStyledTextCtrl:setUndoCollection/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#setUndoCollection-2" "setUndoCollection(This, CollectUndo) -> ok")
               "wxStyledTextCtrl:redo/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#redo-1" "redo(This) -> ok")
               "wxStyledTextCtrl:getStyleAt/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getStyleAt-2" "getStyleAt(This, Pos) -> integer()")
               "wxStyledTextCtrl:getAnchor/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getAnchor-1" "getAnchor(This) -> integer()")
               "wxStyledTextCtrl:getCurrentPos/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getCurrentPos-1" "getCurrentPos(This) -> integer()")
               "wxStyledTextCtrl:getCharAt/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getCharAt-2" "getCharAt(This, Pos) -> integer()")
               "wxStyledTextCtrl:getLength/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#getLength-1" "getLength(This) -> integer()")
               "wxStyledTextCtrl:clearDocumentStyle/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#clearDocumentStyle-1" "clearDocumentStyle(This) -> ok")
               "wxStyledTextCtrl:clearAll/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#clearAll-1" "clearAll(This) -> ok")
               "wxStyledTextCtrl:insertText/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#insertText-3" "insertText(This, Pos, Text) -> ok")
               "wxStyledTextCtrl:addStyledText/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#addStyledText-2" "addStyledText(This, Data) -> ok")
               "wxStyledTextCtrl:addText/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#addText-2" "addText(This, Text) -> ok")
               "wxStyledTextCtrl:create/3"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#create-3" "create(This, Parent, Options::[Option]) -> boolean()")
               "wxStyledTextCtrl:create/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#create-2" "create(This, Parent) -> boolean()")
               "wxStyledTextCtrl:new/2"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#new-2" "new(Parent, Options::[Option]) -> wxStyledTextCtrl()")
               "wxStyledTextCtrl:new/1"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#new-1" "new(Parent) -> wxStyledTextCtrl()")
               "wxStyledTextCtrl:new/0"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#new-0" "new() -> wxStyledTextCtrl()")
               "wxStyledTextCtrl:"
               ("http://www.erlang.org/doc/man/wxStyledTextCtrl.html#type-wxStyledTextCtrl" "wxStyledTextCtrl()")
               "wxStyledTextEvent:getAlt/1"
               ("http://www.erlang.org/doc/man/wxStyledTextEvent.html#getAlt-1" "getAlt(This) -> boolean()")
               "wxStyledTextEvent:getControl/1"
               ("http://www.erlang.org/doc/man/wxStyledTextEvent.html#getControl-1" "getControl(This) -> boolean()")
               "wxStyledTextEvent:getShift/1"
               ("http://www.erlang.org/doc/man/wxStyledTextEvent.html#getShift-1" "getShift(This) -> boolean()")
               "wxStyledTextEvent:getDragResult/1"
               ("http://www.erlang.org/doc/man/wxStyledTextEvent.html#getDragResult-1" "getDragResult(This) -> wx:wx_enum()")
               "wxStyledTextEvent:getDragAllowMove/1"
               ("http://www.erlang.org/doc/man/wxStyledTextEvent.html#getDragAllowMove-1" "getDragAllowMove(This) -> boolean()")
               "wxStyledTextEvent:getDragText/1"
               ("http://www.erlang.org/doc/man/wxStyledTextEvent.html#getDragText-1" "getDragText(This) -> unicode:charlist()")
               "wxStyledTextEvent:getY/1"
               ("http://www.erlang.org/doc/man/wxStyledTextEvent.html#getY-1" "getY(This) -> integer()")
               "wxStyledTextEvent:getX/1"
               ("http://www.erlang.org/doc/man/wxStyledTextEvent.html#getX-1" "getX(This) -> integer()")
               "wxStyledTextEvent:getListType/1"
               ("http://www.erlang.org/doc/man/wxStyledTextEvent.html#getListType-1" "getListType(This) -> integer()")
               "wxStyledTextEvent:getLParam/1"
               ("http://www.erlang.org/doc/man/wxStyledTextEvent.html#getLParam-1" "getLParam(This) -> integer()")
               "wxStyledTextEvent:getWParam/1"
               ("http://www.erlang.org/doc/man/wxStyledTextEvent.html#getWParam-1" "getWParam(This) -> integer()")
               "wxStyledTextEvent:getMessage/1"
               ("http://www.erlang.org/doc/man/wxStyledTextEvent.html#getMessage-1" "getMessage(This) -> integer()")
               "wxStyledTextEvent:getMargin/1"
               ("http://www.erlang.org/doc/man/wxStyledTextEvent.html#getMargin-1" "getMargin(This) -> integer()")
               "wxStyledTextEvent:getFoldLevelPrev/1"
               ("http://www.erlang.org/doc/man/wxStyledTextEvent.html#getFoldLevelPrev-1" "getFoldLevelPrev(This) -> integer()")
               "wxStyledTextEvent:getFoldLevelNow/1"
               ("http://www.erlang.org/doc/man/wxStyledTextEvent.html#getFoldLevelNow-1" "getFoldLevelNow(This) -> integer()")
               "wxStyledTextEvent:getLine/1"
               ("http://www.erlang.org/doc/man/wxStyledTextEvent.html#getLine-1" "getLine(This) -> integer()")
               "wxStyledTextEvent:getLinesAdded/1"
               ("http://www.erlang.org/doc/man/wxStyledTextEvent.html#getLinesAdded-1" "getLinesAdded(This) -> integer()")
               "wxStyledTextEvent:getLength/1"
               ("http://www.erlang.org/doc/man/wxStyledTextEvent.html#getLength-1" "getLength(This) -> integer()")
               "wxStyledTextEvent:getText/1"
               ("http://www.erlang.org/doc/man/wxStyledTextEvent.html#getText-1" "getText(This) -> unicode:charlist()")
               "wxStyledTextEvent:getModificationType/1"
               ("http://www.erlang.org/doc/man/wxStyledTextEvent.html#getModificationType-1" "getModificationType(This) -> integer()")
               "wxStyledTextEvent:getModifiers/1"
               ("http://www.erlang.org/doc/man/wxStyledTextEvent.html#getModifiers-1" "getModifiers(This) -> integer()")
               "wxStyledTextEvent:getKey/1"
               ("http://www.erlang.org/doc/man/wxStyledTextEvent.html#getKey-1" "getKey(This) -> integer()")
               "wxStyledTextEvent:getPosition/1"
               ("http://www.erlang.org/doc/man/wxStyledTextEvent.html#getPosition-1" "getPosition(This) -> integer()")
               "wxStyledTextEvent:"
               ("http://www.erlang.org/doc/man/wxStyledTextEvent.html#type-wxStyledTextEvent" "wxStyledTextEvent()")
               "wxSysColourChangedEvent:"
               ("http://www.erlang.org/doc/man/wxSysColourChangedEvent.html#type-wxSysColourChangedEvent" "wxSysColourChangedEvent()")
               "wxSystemOptions:setOption/2"
               ("http://www.erlang.org/doc/man/wxSystemOptions.html#setOption-2" "setOption(Name, Value) -> ok")
               "wxSystemOptions:isFalse/1"
               ("http://www.erlang.org/doc/man/wxSystemOptions.html#isFalse-1" "isFalse(Name) -> boolean()")
               "wxSystemOptions:hasOption/1"
               ("http://www.erlang.org/doc/man/wxSystemOptions.html#hasOption-1" "hasOption(Name) -> boolean()")
               "wxSystemOptions:getOptionInt/1"
               ("http://www.erlang.org/doc/man/wxSystemOptions.html#getOptionInt-1" "getOptionInt(Name) -> integer()")
               "wxSystemOptions:getOption/1"
               ("http://www.erlang.org/doc/man/wxSystemOptions.html#getOption-1" "getOption(Name) -> unicode:charlist()")
               "wxSystemOptions:"
               ("http://www.erlang.org/doc/man/wxSystemOptions.html#type-wxSystemOptions" "wxSystemOptions()")
               "wxSystemSettings:getScreenType/0"
               ("http://www.erlang.org/doc/man/wxSystemSettings.html#getScreenType-0" "getScreenType() -> wx:wx_enum()")
               "wxSystemSettings:getMetric/2"
               ("http://www.erlang.org/doc/man/wxSystemSettings.html#getMetric-2" "getMetric(Index, Options::[Option]) -> integer()")
               "wxSystemSettings:getMetric/1"
               ("http://www.erlang.org/doc/man/wxSystemSettings.html#getMetric-1" "getMetric(Index) -> integer()")
               "wxSystemSettings:getFont/1"
               ("http://www.erlang.org/doc/man/wxSystemSettings.html#getFont-1" "getFont(Index) -> wxFont:wxFont()")
               "wxSystemSettings:getColour/1"
               ("http://www.erlang.org/doc/man/wxSystemSettings.html#getColour-1" "getColour(Index) -> wx:wx_colour4()")
               "wxSystemSettings:"
               ("http://www.erlang.org/doc/man/wxSystemSettings.html#type-wxSystemSettings" "wxSystemSettings()")
               "wxTaskBarIcon:destroy/1"
               ("http://www.erlang.org/doc/man/wxTaskBarIcon.html#destroy-1" "destroy(This:: wxTaskBarIcon() ) -> ok")
               "wxTaskBarIcon:setIcon/3"
               ("http://www.erlang.org/doc/man/wxTaskBarIcon.html#setIcon-3" "setIcon(This, Icon, Options::[Option]) -> boolean()")
               "wxTaskBarIcon:setIcon/2"
               ("http://www.erlang.org/doc/man/wxTaskBarIcon.html#setIcon-2" "setIcon(This, Icon) -> boolean()")
               "wxTaskBarIcon:removeIcon/1"
               ("http://www.erlang.org/doc/man/wxTaskBarIcon.html#removeIcon-1" "removeIcon(This) -> boolean()")
               "wxTaskBarIcon:popupMenu/2"
               ("http://www.erlang.org/doc/man/wxTaskBarIcon.html#popupMenu-2" "popupMenu(This, Menu) -> boolean()")
               "wxTaskBarIcon:new/0"
               ("http://www.erlang.org/doc/man/wxTaskBarIcon.html#new-0" "new() -> wxTaskBarIcon()")
               "wxTaskBarIcon:"
               ("http://www.erlang.org/doc/man/wxTaskBarIcon.html#type-wxTaskBarIcon" "wxTaskBarIcon()")
               "wxTaskBarIconEvent:"
               ("http://www.erlang.org/doc/man/wxTaskBarIconEvent.html#type-wxTaskBarIconEvent" "wxTaskBarIconEvent()")
               "wxTextAttr:destroy/1"
               ("http://www.erlang.org/doc/man/wxTextAttr.html#destroy-1" "destroy(This:: wxTextAttr() ) -> ok")
               "wxTextAttr:setTextColour/2"
               ("http://www.erlang.org/doc/man/wxTextAttr.html#setTextColour-2" "setTextColour(This, ColText) -> ok")
               "wxTextAttr:setTabs/2"
               ("http://www.erlang.org/doc/man/wxTextAttr.html#setTabs-2" "setTabs(This, Tabs) -> ok")
               "wxTextAttr:setRightIndent/2"
               ("http://www.erlang.org/doc/man/wxTextAttr.html#setRightIndent-2" "setRightIndent(This, Indent) -> ok")
               "wxTextAttr:setLeftIndent/3"
               ("http://www.erlang.org/doc/man/wxTextAttr.html#setLeftIndent-3" "setLeftIndent(This, Indent, Options::[Option]) -> ok")
               "wxTextAttr:setLeftIndent/2"
               ("http://www.erlang.org/doc/man/wxTextAttr.html#setLeftIndent-2" "setLeftIndent(This, Indent) -> ok")
               "wxTextAttr:setFont/3"
               ("http://www.erlang.org/doc/man/wxTextAttr.html#setFont-3" "setFont(This, Font, Options::[Option]) -> ok")
               "wxTextAttr:setFont/2"
               ("http://www.erlang.org/doc/man/wxTextAttr.html#setFont-2" "setFont(This, Font) -> ok")
               "wxTextAttr:setFlags/2"
               ("http://www.erlang.org/doc/man/wxTextAttr.html#setFlags-2" "setFlags(This, Flags) -> ok")
               "wxTextAttr:setBackgroundColour/2"
               ("http://www.erlang.org/doc/man/wxTextAttr.html#setBackgroundColour-2" "setBackgroundColour(This, ColBack) -> ok")
               "wxTextAttr:setAlignment/2"
               ("http://www.erlang.org/doc/man/wxTextAttr.html#setAlignment-2" "setAlignment(This, Alignment) -> ok")
               "wxTextAttr:isDefault/1"
               ("http://www.erlang.org/doc/man/wxTextAttr.html#isDefault-1" "isDefault(This) -> boolean()")
               "wxTextAttr:getFlags/1"
               ("http://www.erlang.org/doc/man/wxTextAttr.html#getFlags-1" "getFlags(This) -> integer()")
               "wxTextAttr:hasTextColour/1"
               ("http://www.erlang.org/doc/man/wxTextAttr.html#hasTextColour-1" "hasTextColour(This) -> boolean()")
               "wxTextAttr:hasFont/1"
               ("http://www.erlang.org/doc/man/wxTextAttr.html#hasFont-1" "hasFont(This) -> boolean()")
               "wxTextAttr:hasBackgroundColour/1"
               ("http://www.erlang.org/doc/man/wxTextAttr.html#hasBackgroundColour-1" "hasBackgroundColour(This) -> boolean()")
               "wxTextAttr:getTextColour/1"
               ("http://www.erlang.org/doc/man/wxTextAttr.html#getTextColour-1" "getTextColour(This) -> wx:wx_colour4()")
               "wxTextAttr:getTabs/1"
               ("http://www.erlang.org/doc/man/wxTextAttr.html#getTabs-1" "getTabs(This) -> [integer()]")
               "wxTextAttr:getRightIndent/1"
               ("http://www.erlang.org/doc/man/wxTextAttr.html#getRightIndent-1" "getRightIndent(This) -> integer()")
               "wxTextAttr:getLeftSubIndent/1"
               ("http://www.erlang.org/doc/man/wxTextAttr.html#getLeftSubIndent-1" "getLeftSubIndent(This) -> integer()")
               "wxTextAttr:getLeftIndent/1"
               ("http://www.erlang.org/doc/man/wxTextAttr.html#getLeftIndent-1" "getLeftIndent(This) -> integer()")
               "wxTextAttr:getFont/1"
               ("http://www.erlang.org/doc/man/wxTextAttr.html#getFont-1" "getFont(This) -> wxFont:wxFont()")
               "wxTextAttr:getBackgroundColour/1"
               ("http://www.erlang.org/doc/man/wxTextAttr.html#getBackgroundColour-1" "getBackgroundColour(This) -> wx:wx_colour4()")
               "wxTextAttr:getAlignment/1"
               ("http://www.erlang.org/doc/man/wxTextAttr.html#getAlignment-1" "getAlignment(This) -> wx:wx_enum()")
               "wxTextAttr:new/2"
               ("http://www.erlang.org/doc/man/wxTextAttr.html#new-2" "new(ColText, Options::[Option]) -> wxTextAttr()")
               "wxTextAttr:new/1"
               ("http://www.erlang.org/doc/man/wxTextAttr.html#new-1" "new(ColText) -> wxTextAttr()")
               "wxTextAttr:new/0"
               ("http://www.erlang.org/doc/man/wxTextAttr.html#new-0" "new() -> wxTextAttr()")
               "wxTextAttr:"
               ("http://www.erlang.org/doc/man/wxTextAttr.html#type-wxTextAttr" "wxTextAttr()")
               "wxTextCtrl:destroy/1"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#destroy-1" "destroy(This:: wxTextCtrl() ) -> ok")
               "wxTextCtrl:xYToPosition/3"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#xYToPosition-3" "xYToPosition(This, X, Y) -> integer()")
               "wxTextCtrl:writeText/2"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#writeText-2" "writeText(This, Text) -> ok")
               "wxTextCtrl:undo/1"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#undo-1" "undo(This) -> ok")
               "wxTextCtrl:showPosition/2"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#showPosition-2" "showPosition(This, Pos) -> ok")
               "wxTextCtrl:setValue/2"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#setValue-2" "setValue(This, Value) -> ok")
               "wxTextCtrl:setStyle/4"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#setStyle-4" "setStyle(This, Start, End, Style) -> boolean()")
               "wxTextCtrl:setSelection/3"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#setSelection-3" "setSelection(This, From, To) -> ok")
               "wxTextCtrl:setMaxLength/2"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#setMaxLength-2" "setMaxLength(This, Len) -> ok")
               "wxTextCtrl:setInsertionPointEnd/1"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#setInsertionPointEnd-1" "setInsertionPointEnd(This) -> ok")
               "wxTextCtrl:setInsertionPoint/2"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#setInsertionPoint-2" "setInsertionPoint(This, Pos) -> ok")
               "wxTextCtrl:setEditable/2"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#setEditable-2" "setEditable(This, Editable) -> ok")
               "wxTextCtrl:setDefaultStyle/2"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#setDefaultStyle-2" "setDefaultStyle(This, Style) -> boolean()")
               "wxTextCtrl:saveFile/2"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#saveFile-2" "saveFile(This, Options::[Option]) -> boolean()")
               "wxTextCtrl:saveFile/1"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#saveFile-1" "saveFile(This) -> boolean()")
               "wxTextCtrl:replace/4"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#replace-4" "replace(This, From, To, Value) -> ok")
               "wxTextCtrl:remove/3"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#remove-3" "remove(This, From, To) -> ok")
               "wxTextCtrl:redo/1"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#redo-1" "redo(This) -> ok")
               "wxTextCtrl:positionToXY/2"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#positionToXY-2" "positionToXY(This, Pos) -> Result")
               "wxTextCtrl:paste/1"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#paste-1" "paste(This) -> ok")
               "wxTextCtrl:markDirty/1"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#markDirty-1" "markDirty(This) -> ok")
               "wxTextCtrl:loadFile/3"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#loadFile-3" "loadFile(This, File, Options::[Option]) -> boolean()")
               "wxTextCtrl:loadFile/2"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#loadFile-2" "loadFile(This, File) -> boolean()")
               "wxTextCtrl:isSingleLine/1"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#isSingleLine-1" "isSingleLine(This) -> boolean()")
               "wxTextCtrl:isMultiLine/1"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#isMultiLine-1" "isMultiLine(This) -> boolean()")
               "wxTextCtrl:isModified/1"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#isModified-1" "isModified(This) -> boolean()")
               "wxTextCtrl:isEditable/1"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#isEditable-1" "isEditable(This) -> boolean()")
               "wxTextCtrl:getValue/1"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#getValue-1" "getValue(This) -> unicode:charlist()")
               "wxTextCtrl:getStyle/3"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#getStyle-3" "getStyle(This, Position, Style) -> boolean()")
               "wxTextCtrl:getStringSelection/1"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#getStringSelection-1" "getStringSelection(This) -> unicode:charlist()")
               "wxTextCtrl:getSelection/1"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#getSelection-1" "getSelection(This) -> {From::integer(), To::integer()}")
               "wxTextCtrl:getRange/3"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#getRange-3" "getRange(This, From, To) -> unicode:charlist()")
               "wxTextCtrl:getNumberOfLines/1"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#getNumberOfLines-1" "getNumberOfLines(This) -> integer()")
               "wxTextCtrl:getLineText/2"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#getLineText-2" "getLineText(This, LineNo) -> unicode:charlist()")
               "wxTextCtrl:getLineLength/2"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#getLineLength-2" "getLineLength(This, LineNo) -> integer()")
               "wxTextCtrl:getLastPosition/1"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#getLastPosition-1" "getLastPosition(This) -> integer()")
               "wxTextCtrl:getInsertionPoint/1"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#getInsertionPoint-1" "getInsertionPoint(This) -> integer()")
               "wxTextCtrl:getDefaultStyle/1"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#getDefaultStyle-1" "getDefaultStyle(This) -> wxTextAttr:wxTextAttr()")
               "wxTextCtrl:emulateKeyPress/2"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#emulateKeyPress-2" "emulateKeyPress(This, Event) -> boolean()")
               "wxTextCtrl:changeValue/2"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#changeValue-2" "changeValue(This, Value) -> ok")
               "wxTextCtrl:discardEdits/1"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#discardEdits-1" "discardEdits(This) -> ok")
               "wxTextCtrl:cut/1"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#cut-1" "cut(This) -> ok")
               "wxTextCtrl:create/4"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#create-4" "create(This, Parent, Id, Options::[Option]) -> boolean()")
               "wxTextCtrl:create/3"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#create-3" "create(This, Parent, Id) -> boolean()")
               "wxTextCtrl:copy/1"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#copy-1" "copy(This) -> ok")
               "wxTextCtrl:clear/1"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#clear-1" "clear(This) -> ok")
               "wxTextCtrl:canUndo/1"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#canUndo-1" "canUndo(This) -> boolean()")
               "wxTextCtrl:canRedo/1"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#canRedo-1" "canRedo(This) -> boolean()")
               "wxTextCtrl:canPaste/1"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#canPaste-1" "canPaste(This) -> boolean()")
               "wxTextCtrl:canCut/1"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#canCut-1" "canCut(This) -> boolean()")
               "wxTextCtrl:canCopy/1"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#canCopy-1" "canCopy(This) -> boolean()")
               "wxTextCtrl:appendText/2"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#appendText-2" "appendText(This, Text) -> ok")
               "wxTextCtrl:new/3"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#new-3" "new(Parent, Id, Options::[Option]) -> wxTextCtrl()")
               "wxTextCtrl:new/2"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#new-2" "new(Parent, Id) -> wxTextCtrl()")
               "wxTextCtrl:new/0"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#new-0" "new() -> wxTextCtrl()")
               "wxTextCtrl:"
               ("http://www.erlang.org/doc/man/wxTextCtrl.html#type-wxTextCtrl" "wxTextCtrl()")
               "wxTextDataObject:destroy/1"
               ("http://www.erlang.org/doc/man/wxTextDataObject.html#destroy-1" "destroy(This:: wxTextDataObject() ) -> ok")
               "wxTextDataObject:setText/2"
               ("http://www.erlang.org/doc/man/wxTextDataObject.html#setText-2" "setText(This, Text) -> ok")
               "wxTextDataObject:getText/1"
               ("http://www.erlang.org/doc/man/wxTextDataObject.html#getText-1" "getText(This) -> unicode:charlist()")
               "wxTextDataObject:getTextLength/1"
               ("http://www.erlang.org/doc/man/wxTextDataObject.html#getTextLength-1" "getTextLength(This) -> integer()")
               "wxTextDataObject:new/1"
               ("http://www.erlang.org/doc/man/wxTextDataObject.html#new-1" "new(Options::[Option]) -> wxTextDataObject()")
               "wxTextDataObject:new/0"
               ("http://www.erlang.org/doc/man/wxTextDataObject.html#new-0" "new() -> wxTextDataObject()")
               "wxTextDataObject:"
               ("http://www.erlang.org/doc/man/wxTextDataObject.html#type-wxTextDataObject" "wxTextDataObject()")
               "wxTextEntryDialog:destroy/1"
               ("http://www.erlang.org/doc/man/wxTextEntryDialog.html#destroy-1" "destroy(This:: wxTextEntryDialog() ) -> ok")
               "wxTextEntryDialog:setValue/2"
               ("http://www.erlang.org/doc/man/wxTextEntryDialog.html#setValue-2" "setValue(This, Val) -> ok")
               "wxTextEntryDialog:getValue/1"
               ("http://www.erlang.org/doc/man/wxTextEntryDialog.html#getValue-1" "getValue(This) -> unicode:charlist()")
               "wxTextEntryDialog:new/3"
               ("http://www.erlang.org/doc/man/wxTextEntryDialog.html#new-3" "new(Parent, Message, Options::[Option]) -> wxTextEntryDialog()")
               "wxTextEntryDialog:new/2"
               ("http://www.erlang.org/doc/man/wxTextEntryDialog.html#new-2" "new(Parent, Message) -> wxTextEntryDialog()")
               "wxTextEntryDialog:"
               ("http://www.erlang.org/doc/man/wxTextEntryDialog.html#type-wxTextEntryDialog" "wxTextEntryDialog()")
               "wxToggleButton:destroy/1"
               ("http://www.erlang.org/doc/man/wxToggleButton.html#destroy-1" "destroy(This:: wxToggleButton() ) -> ok")
               "wxToggleButton:setValue/2"
               ("http://www.erlang.org/doc/man/wxToggleButton.html#setValue-2" "setValue(This, State) -> ok")
               "wxToggleButton:getValue/1"
               ("http://www.erlang.org/doc/man/wxToggleButton.html#getValue-1" "getValue(This) -> boolean()")
               "wxToggleButton:create/5"
               ("http://www.erlang.org/doc/man/wxToggleButton.html#create-5" "create(This, Parent, Id, Label, Options::[Option]) -> boolean()")
               "wxToggleButton:create/4"
               ("http://www.erlang.org/doc/man/wxToggleButton.html#create-4" "create(This, Parent, Id, Label) -> boolean()")
               "wxToggleButton:new/4"
               ("http://www.erlang.org/doc/man/wxToggleButton.html#new-4" "new(Parent, Id, Label, Options::[Option]) -> wxToggleButton()")
               "wxToggleButton:new/3"
               ("http://www.erlang.org/doc/man/wxToggleButton.html#new-3" "new(Parent, Id, Label) -> wxToggleButton()")
               "wxToggleButton:new/0"
               ("http://www.erlang.org/doc/man/wxToggleButton.html#new-0" "new() -> wxToggleButton()")
               "wxToggleButton:"
               ("http://www.erlang.org/doc/man/wxToggleButton.html#type-wxToggleButton" "wxToggleButton()")
               "wxToolBar:toggleTool/3"
               ("http://www.erlang.org/doc/man/wxToolBar.html#toggleTool-3" "toggleTool(This, Toolid, Toggle) -> ok")
               "wxToolBar:setToolSeparation/2"
               ("http://www.erlang.org/doc/man/wxToolBar.html#setToolSeparation-2" "setToolSeparation(This, Separation) -> ok")
               "wxToolBar:setToolShortHelp/3"
               ("http://www.erlang.org/doc/man/wxToolBar.html#setToolShortHelp-3" "setToolShortHelp(This, Id, HelpString) -> ok")
               "wxToolBar:setToolPacking/2"
               ("http://www.erlang.org/doc/man/wxToolBar.html#setToolPacking-2" "setToolPacking(This, Packing) -> ok")
               "wxToolBar:setToolLongHelp/3"
               ("http://www.erlang.org/doc/man/wxToolBar.html#setToolLongHelp-3" "setToolLongHelp(This, Toolid, HelpString) -> ok")
               "wxToolBar:setToolBitmapSize/2"
               ("http://www.erlang.org/doc/man/wxToolBar.html#setToolBitmapSize-2" "setToolBitmapSize(This, Size) -> ok")
               "wxToolBar:setMargins/3"
               ("http://www.erlang.org/doc/man/wxToolBar.html#setMargins-3" "setMargins(This, X, Y) -> ok")
               "wxToolBar:removeTool/2"
               ("http://www.erlang.org/doc/man/wxToolBar.html#removeTool-2" "removeTool(This, Toolid) -> wx:wx_object()")
               "wxToolBar:realize/1"
               ("http://www.erlang.org/doc/man/wxToolBar.html#realize-1" "realize(This) -> boolean()")
               "wxToolBar:insertTool/6"
               ("http://www.erlang.org/doc/man/wxToolBar.html#insertTool-6" "insertTool(This, Pos, Toolid, Label, Bitmap, Options::[Option]) -> wx:wx_object()")
               "wxToolBar:insertTool/5"
               ("http://www.erlang.org/doc/man/wxToolBar.html#insertTool-5" "insertTool(This, Pos, Toolid, Label, Bitmap) -> wx:wx_object()")
               "wxToolBar:insertTool/4"
               ("http://www.erlang.org/doc/man/wxToolBar.html#insertTool-4" "insertTool(This, Pos, Toolid, Bitmap) -> wx:wx_object()")
               "wxToolBar:insertTool/3"
               ("http://www.erlang.org/doc/man/wxToolBar.html#insertTool-3" "insertTool(This, Pos, Tool) -> wx:wx_object()")
               "wxToolBar:insertSeparator/2"
               ("http://www.erlang.org/doc/man/wxToolBar.html#insertSeparator-2" "insertSeparator(This, Pos) -> wx:wx_object()")
               "wxToolBar:insertControl/3"
               ("http://www.erlang.org/doc/man/wxToolBar.html#insertControl-3" "insertControl(This, Pos, Control) -> wx:wx_object()")
               "wxToolBar:getToolState/2"
               ("http://www.erlang.org/doc/man/wxToolBar.html#getToolState-2" "getToolState(This, Toolid) -> boolean()")
               "wxToolBar:getToolShortHelp/2"
               ("http://www.erlang.org/doc/man/wxToolBar.html#getToolShortHelp-2" "getToolShortHelp(This, Toolid) -> unicode:charlist()")
               "wxToolBar:getToolSeparation/1"
               ("http://www.erlang.org/doc/man/wxToolBar.html#getToolSeparation-1" "getToolSeparation(This) -> integer()")
               "wxToolBar:getToolPos/2"
               ("http://www.erlang.org/doc/man/wxToolBar.html#getToolPos-2" "getToolPos(This, Id) -> integer()")
               "wxToolBar:getToolPacking/1"
               ("http://www.erlang.org/doc/man/wxToolBar.html#getToolPacking-1" "getToolPacking(This) -> integer()")
               "wxToolBar:getToolLongHelp/2"
               ("http://www.erlang.org/doc/man/wxToolBar.html#getToolLongHelp-2" "getToolLongHelp(This, Toolid) -> unicode:charlist()")
               "wxToolBar:getToolEnabled/2"
               ("http://www.erlang.org/doc/man/wxToolBar.html#getToolEnabled-2" "getToolEnabled(This, Toolid) -> boolean()")
               "wxToolBar:getMargins/1"
               ("http://www.erlang.org/doc/man/wxToolBar.html#getMargins-1" "getMargins(This) -> {W::integer(), H::integer()}")
               "wxToolBar:getToolBitmapSize/1"
               ("http://www.erlang.org/doc/man/wxToolBar.html#getToolBitmapSize-1" "getToolBitmapSize(This) -> {W::integer(), H::integer()}")
               "wxToolBar:getToolSize/1"
               ("http://www.erlang.org/doc/man/wxToolBar.html#getToolSize-1" "getToolSize(This) -> {W::integer(), H::integer()}")
               "wxToolBar:findToolForPosition/3"
               ("http://www.erlang.org/doc/man/wxToolBar.html#findToolForPosition-3" "findToolForPosition(This, X, Y) -> wx:wx_object()")
               "wxToolBar:findControl/2"
               ("http://www.erlang.org/doc/man/wxToolBar.html#findControl-2" "findControl(This, Toolid) -> wxControl:wxControl()")
               "wxToolBar:findById/2"
               ("http://www.erlang.org/doc/man/wxToolBar.html#findById-2" "findById(This, Toolid) -> wx:wx_object()")
               "wxToolBar:enableTool/3"
               ("http://www.erlang.org/doc/man/wxToolBar.html#enableTool-3" "enableTool(This, Toolid, Enable) -> ok")
               "wxToolBar:deleteToolByPos/2"
               ("http://www.erlang.org/doc/man/wxToolBar.html#deleteToolByPos-2" "deleteToolByPos(This, Pos) -> boolean()")
               "wxToolBar:deleteTool/2"
               ("http://www.erlang.org/doc/man/wxToolBar.html#deleteTool-2" "deleteTool(This, Toolid) -> boolean()")
               "wxToolBar:insertStretchableSpace/2"
               ("http://www.erlang.org/doc/man/wxToolBar.html#insertStretchableSpace-2" "insertStretchableSpace(This, Pos) -> wx:wx_object()")
               "wxToolBar:addStretchableSpace/1"
               ("http://www.erlang.org/doc/man/wxToolBar.html#addStretchableSpace-1" "addStretchableSpace(This) -> wx:wx_object()")
               "wxToolBar:addRadioTool/5"
               ("http://www.erlang.org/doc/man/wxToolBar.html#addRadioTool-5" "addRadioTool(This, Toolid, Label, Bitmap, Options::[Option]) -> wx:wx_object()")
               "wxToolBar:addRadioTool/4"
               ("http://www.erlang.org/doc/man/wxToolBar.html#addRadioTool-4" "addRadioTool(This, Toolid, Label, Bitmap) -> wx:wx_object()")
               "wxToolBar:addCheckTool/5"
               ("http://www.erlang.org/doc/man/wxToolBar.html#addCheckTool-5" "addCheckTool(This, Toolid, Label, Bitmap, Options::[Option]) -> wx:wx_object()")
               "wxToolBar:addCheckTool/4"
               ("http://www.erlang.org/doc/man/wxToolBar.html#addCheckTool-4" "addCheckTool(This, Toolid, Label, Bitmap) -> wx:wx_object()")
               "wxToolBar:addTool/7"
               ("http://www.erlang.org/doc/man/wxToolBar.html#addTool-7" "addTool(This, Toolid, Bitmap, BmpDisabled, Toggle, XPos, Options::[Option]) -> wx:wx_object()")
               "wxToolBar:addTool/6"
               ("http://www.erlang.org/doc/man/wxToolBar.html#addTool-6" "addTool(This, Toolid, Bitmap, BmpDisabled, Toggle, XPos) -> wx:wx_object()")
               "wxToolBar:addTool/5"
               ("http://www.erlang.org/doc/man/wxToolBar.html#addTool-5" "addTool(This, Toolid, Label, Bitmap, BmpDisabled) -> wx:wx_object()")
               "wxToolBar:addTool/4"
               ("http://www.erlang.org/doc/man/wxToolBar.html#addTool-4" "addTool(This, Toolid, Label, Bitmap) -> wx:wx_object()")
               "wxToolBar:addTool/3"
               ("http://www.erlang.org/doc/man/wxToolBar.html#addTool-3" "addTool(This, Toolid, Bitmap) -> wx:wx_object()")
               "wxToolBar:addTool/2"
               ("http://www.erlang.org/doc/man/wxToolBar.html#addTool-2" "addTool(This, Tool) -> wx:wx_object()")
               "wxToolBar:addSeparator/1"
               ("http://www.erlang.org/doc/man/wxToolBar.html#addSeparator-1" "addSeparator(This) -> wx:wx_object()")
               "wxToolBar:addControl/2"
               ("http://www.erlang.org/doc/man/wxToolBar.html#addControl-2" "addControl(This, Control) -> wx:wx_object()")
               "wxToolBar:"
               ("http://www.erlang.org/doc/man/wxToolBar.html#type-wxToolBar" "wxToolBar()")
               "wxToolbook:destroy/1"
               ("http://www.erlang.org/doc/man/wxToolbook.html#destroy-1" "destroy(This:: wxToolbook() ) -> ok")
               "wxToolbook:changeSelection/2"
               ("http://www.erlang.org/doc/man/wxToolbook.html#changeSelection-2" "changeSelection(This, N) -> integer()")
               "wxToolbook:setSelection/2"
               ("http://www.erlang.org/doc/man/wxToolbook.html#setSelection-2" "setSelection(This, N) -> integer()")
               "wxToolbook:setPageText/3"
               ("http://www.erlang.org/doc/man/wxToolbook.html#setPageText-3" "setPageText(This, N, StrText) -> boolean()")
               "wxToolbook:setPageImage/3"
               ("http://www.erlang.org/doc/man/wxToolbook.html#setPageImage-3" "setPageImage(This, N, ImageId) -> boolean()")
               "wxToolbook:setPageSize/2"
               ("http://www.erlang.org/doc/man/wxToolbook.html#setPageSize-2" "setPageSize(This, Size) -> ok")
               "wxToolbook:setImageList/2"
               ("http://www.erlang.org/doc/man/wxToolbook.html#setImageList-2" "setImageList(This, ImageList) -> ok")
               "wxToolbook:insertPage/5"
               ("http://www.erlang.org/doc/man/wxToolbook.html#insertPage-5" "insertPage(This, N, Page, Text, Options::[Option]) -> boolean()")
               "wxToolbook:insertPage/4"
               ("http://www.erlang.org/doc/man/wxToolbook.html#insertPage-4" "insertPage(This, N, Page, Text) -> boolean()")
               "wxToolbook:hitTest/2"
               ("http://www.erlang.org/doc/man/wxToolbook.html#hitTest-2" "hitTest(This, Pt) -> Result")
               "wxToolbook:getSelection/1"
               ("http://www.erlang.org/doc/man/wxToolbook.html#getSelection-1" "getSelection(This) -> integer()")
               "wxToolbook:getPageText/2"
               ("http://www.erlang.org/doc/man/wxToolbook.html#getPageText-2" "getPageText(This, N) -> unicode:charlist()")
               "wxToolbook:getPageImage/2"
               ("http://www.erlang.org/doc/man/wxToolbook.html#getPageImage-2" "getPageImage(This, N) -> integer()")
               "wxToolbook:getPageCount/1"
               ("http://www.erlang.org/doc/man/wxToolbook.html#getPageCount-1" "getPageCount(This) -> integer()")
               "wxToolbook:getPage/2"
               ("http://www.erlang.org/doc/man/wxToolbook.html#getPage-2" "getPage(This, N) -> wxWindow:wxWindow()")
               "wxToolbook:getImageList/1"
               ("http://www.erlang.org/doc/man/wxToolbook.html#getImageList-1" "getImageList(This) -> wxImageList:wxImageList()")
               "wxToolbook:getCurrentPage/1"
               ("http://www.erlang.org/doc/man/wxToolbook.html#getCurrentPage-1" "getCurrentPage(This) -> wxWindow:wxWindow()")
               "wxToolbook:removePage/2"
               ("http://www.erlang.org/doc/man/wxToolbook.html#removePage-2" "removePage(This, N) -> boolean()")
               "wxToolbook:deletePage/2"
               ("http://www.erlang.org/doc/man/wxToolbook.html#deletePage-2" "deletePage(This, N) -> boolean()")
               "wxToolbook:deleteAllPages/1"
               ("http://www.erlang.org/doc/man/wxToolbook.html#deleteAllPages-1" "deleteAllPages(This) -> boolean()")
               "wxToolbook:create/4"
               ("http://www.erlang.org/doc/man/wxToolbook.html#create-4" "create(This, Parent, Id, Options::[Option]) -> boolean()")
               "wxToolbook:create/3"
               ("http://www.erlang.org/doc/man/wxToolbook.html#create-3" "create(This, Parent, Id) -> boolean()")
               "wxToolbook:assignImageList/2"
               ("http://www.erlang.org/doc/man/wxToolbook.html#assignImageList-2" "assignImageList(This, ImageList) -> ok")
               "wxToolbook:advanceSelection/2"
               ("http://www.erlang.org/doc/man/wxToolbook.html#advanceSelection-2" "advanceSelection(This, Options::[Option]) -> ok")
               "wxToolbook:advanceSelection/1"
               ("http://www.erlang.org/doc/man/wxToolbook.html#advanceSelection-1" "advanceSelection(This) -> ok")
               "wxToolbook:addPage/4"
               ("http://www.erlang.org/doc/man/wxToolbook.html#addPage-4" "addPage(This, Page, Text, Options::[Option]) -> boolean()")
               "wxToolbook:addPage/3"
               ("http://www.erlang.org/doc/man/wxToolbook.html#addPage-3" "addPage(This, Page, Text) -> boolean()")
               "wxToolbook:new/3"
               ("http://www.erlang.org/doc/man/wxToolbook.html#new-3" "new(Parent, Id, Options::[Option]) -> wxToolbook()")
               "wxToolbook:new/2"
               ("http://www.erlang.org/doc/man/wxToolbook.html#new-2" "new(Parent, Id) -> wxToolbook()")
               "wxToolbook:new/0"
               ("http://www.erlang.org/doc/man/wxToolbook.html#new-0" "new() -> wxToolbook()")
               "wxToolbook:"
               ("http://www.erlang.org/doc/man/wxToolbook.html#type-wxToolbook" "wxToolbook()")
               "wxToolTip:destroy/1"
               ("http://www.erlang.org/doc/man/wxToolTip.html#destroy-1" "destroy(This:: wxToolTip() ) -> ok")
               "wxToolTip:getWindow/1"
               ("http://www.erlang.org/doc/man/wxToolTip.html#getWindow-1" "getWindow(This) -> wxWindow:wxWindow()")
               "wxToolTip:getTip/1"
               ("http://www.erlang.org/doc/man/wxToolTip.html#getTip-1" "getTip(This) -> unicode:charlist()")
               "wxToolTip:setTip/2"
               ("http://www.erlang.org/doc/man/wxToolTip.html#setTip-2" "setTip(This, Tip) -> ok")
               "wxToolTip:new/1"
               ("http://www.erlang.org/doc/man/wxToolTip.html#new-1" "new(Tip) -> wxToolTip()")
               "wxToolTip:setDelay/1"
               ("http://www.erlang.org/doc/man/wxToolTip.html#setDelay-1" "setDelay(Msecs) -> ok")
               "wxToolTip:enable/1"
               ("http://www.erlang.org/doc/man/wxToolTip.html#enable-1" "enable(Flag) -> ok")
               "wxToolTip:"
               ("http://www.erlang.org/doc/man/wxToolTip.html#type-wxToolTip" "wxToolTip()")
               "wxTopLevelWindow:showFullScreen/3"
               ("http://www.erlang.org/doc/man/wxTopLevelWindow.html#showFullScreen-3" "showFullScreen(This, Show, Options::[Option]) -> boolean()")
               "wxTopLevelWindow:showFullScreen/2"
               ("http://www.erlang.org/doc/man/wxTopLevelWindow.html#showFullScreen-2" "showFullScreen(This, Show) -> boolean()")
               "wxTopLevelWindow:setTitle/2"
               ("http://www.erlang.org/doc/man/wxTopLevelWindow.html#setTitle-2" "setTitle(This, Title) -> ok")
               "wxTopLevelWindow:setShape/2"
               ("http://www.erlang.org/doc/man/wxTopLevelWindow.html#setShape-2" "setShape(This, Region) -> boolean()")
               "wxTopLevelWindow:centreOnScreen/2"
               ("http://www.erlang.org/doc/man/wxTopLevelWindow.html#centreOnScreen-2" "centreOnScreen(This, Options::[Option]) -> ok")
               "wxTopLevelWindow:centreOnScreen/1"
               ("http://www.erlang.org/doc/man/wxTopLevelWindow.html#centreOnScreen-1" "centreOnScreen(This) -> ok")
               "wxTopLevelWindow:centerOnScreen/2"
               ("http://www.erlang.org/doc/man/wxTopLevelWindow.html#centerOnScreen-2" "centerOnScreen(This, Options::[Option]) -> ok")
               "wxTopLevelWindow:centerOnScreen/1"
               ("http://www.erlang.org/doc/man/wxTopLevelWindow.html#centerOnScreen-1" "centerOnScreen(This) -> ok")
               "wxTopLevelWindow:setIcons/2"
               ("http://www.erlang.org/doc/man/wxTopLevelWindow.html#setIcons-2" "setIcons(This, Icons) -> ok")
               "wxTopLevelWindow:setIcon/2"
               ("http://www.erlang.org/doc/man/wxTopLevelWindow.html#setIcon-2" "setIcon(This, Icon) -> ok")
               "wxTopLevelWindow:requestUserAttention/2"
               ("http://www.erlang.org/doc/man/wxTopLevelWindow.html#requestUserAttention-2" "requestUserAttention(This, Options::[Option]) -> ok")
               "wxTopLevelWindow:requestUserAttention/1"
               ("http://www.erlang.org/doc/man/wxTopLevelWindow.html#requestUserAttention-1" "requestUserAttention(This) -> ok")
               "wxTopLevelWindow:maximize/2"
               ("http://www.erlang.org/doc/man/wxTopLevelWindow.html#maximize-2" "maximize(This, Options::[Option]) -> ok")
               "wxTopLevelWindow:maximize/1"
               ("http://www.erlang.org/doc/man/wxTopLevelWindow.html#maximize-1" "maximize(This) -> ok")
               "wxTopLevelWindow:isMaximized/1"
               ("http://www.erlang.org/doc/man/wxTopLevelWindow.html#isMaximized-1" "isMaximized(This) -> boolean()")
               "wxTopLevelWindow:isIconized/1"
               ("http://www.erlang.org/doc/man/wxTopLevelWindow.html#isIconized-1" "isIconized(This) -> boolean()")
               "wxTopLevelWindow:isFullScreen/1"
               ("http://www.erlang.org/doc/man/wxTopLevelWindow.html#isFullScreen-1" "isFullScreen(This) -> boolean()")
               "wxTopLevelWindow:iconize/2"
               ("http://www.erlang.org/doc/man/wxTopLevelWindow.html#iconize-2" "iconize(This, Options::[Option]) -> ok")
               "wxTopLevelWindow:iconize/1"
               ("http://www.erlang.org/doc/man/wxTopLevelWindow.html#iconize-1" "iconize(This) -> ok")
               "wxTopLevelWindow:isActive/1"
               ("http://www.erlang.org/doc/man/wxTopLevelWindow.html#isActive-1" "isActive(This) -> boolean()")
               "wxTopLevelWindow:getTitle/1"
               ("http://www.erlang.org/doc/man/wxTopLevelWindow.html#getTitle-1" "getTitle(This) -> unicode:charlist()")
               "wxTopLevelWindow:getIcons/1"
               ("http://www.erlang.org/doc/man/wxTopLevelWindow.html#getIcons-1" "getIcons(This) -> wxIconBundle:wxIconBundle()")
               "wxTopLevelWindow:getIcon/1"
               ("http://www.erlang.org/doc/man/wxTopLevelWindow.html#getIcon-1" "getIcon(This) -> wxIcon:wxIcon()")
               "wxTopLevelWindow:"
               ("http://www.erlang.org/doc/man/wxTopLevelWindow.html#type-wxTopLevelWindow" "wxTopLevelWindow()")
               "wxTreebook:destroy/1"
               ("http://www.erlang.org/doc/man/wxTreebook.html#destroy-1" "destroy(This:: wxTreebook() ) -> ok")
               "wxTreebook:changeSelection/2"
               ("http://www.erlang.org/doc/man/wxTreebook.html#changeSelection-2" "changeSelection(This, N) -> integer()")
               "wxTreebook:setSelection/2"
               ("http://www.erlang.org/doc/man/wxTreebook.html#setSelection-2" "setSelection(This, N) -> integer()")
               "wxTreebook:setPageText/3"
               ("http://www.erlang.org/doc/man/wxTreebook.html#setPageText-3" "setPageText(This, N, StrText) -> boolean()")
               "wxTreebook:setPageImage/3"
               ("http://www.erlang.org/doc/man/wxTreebook.html#setPageImage-3" "setPageImage(This, N, ImageId) -> boolean()")
               "wxTreebook:setPageSize/2"
               ("http://www.erlang.org/doc/man/wxTreebook.html#setPageSize-2" "setPageSize(This, Size) -> ok")
               "wxTreebook:setImageList/2"
               ("http://www.erlang.org/doc/man/wxTreebook.html#setImageList-2" "setImageList(This, ImageList) -> ok")
               "wxTreebook:insertSubPage/5"
               ("http://www.erlang.org/doc/man/wxTreebook.html#insertSubPage-5" "insertSubPage(This, Pos, Page, Text, Options::[Option]) -> boolean()")
               "wxTreebook:insertSubPage/4"
               ("http://www.erlang.org/doc/man/wxTreebook.html#insertSubPage-4" "insertSubPage(This, Pos, Page, Text) -> boolean()")
               "wxTreebook:insertPage/5"
               ("http://www.erlang.org/doc/man/wxTreebook.html#insertPage-5" "insertPage(This, Pos, Page, Text, Options::[Option]) -> boolean()")
               "wxTreebook:insertPage/4"
               ("http://www.erlang.org/doc/man/wxTreebook.html#insertPage-4" "insertPage(This, Pos, Page, Text) -> boolean()")
               "wxTreebook:hitTest/2"
               ("http://www.erlang.org/doc/man/wxTreebook.html#hitTest-2" "hitTest(This, Pt) -> Result")
               "wxTreebook:isNodeExpanded/2"
               ("http://www.erlang.org/doc/man/wxTreebook.html#isNodeExpanded-2" "isNodeExpanded(This, Pos) -> boolean()")
               "wxTreebook:expandNode/3"
               ("http://www.erlang.org/doc/man/wxTreebook.html#expandNode-3" "expandNode(This, Pos, Options::[Option]) -> boolean()")
               "wxTreebook:expandNode/2"
               ("http://www.erlang.org/doc/man/wxTreebook.html#expandNode-2" "expandNode(This, Pos) -> boolean()")
               "wxTreebook:getSelection/1"
               ("http://www.erlang.org/doc/man/wxTreebook.html#getSelection-1" "getSelection(This) -> integer()")
               "wxTreebook:getPageText/2"
               ("http://www.erlang.org/doc/man/wxTreebook.html#getPageText-2" "getPageText(This, N) -> unicode:charlist()")
               "wxTreebook:getPageImage/2"
               ("http://www.erlang.org/doc/man/wxTreebook.html#getPageImage-2" "getPageImage(This, N) -> integer()")
               "wxTreebook:getPageCount/1"
               ("http://www.erlang.org/doc/man/wxTreebook.html#getPageCount-1" "getPageCount(This) -> integer()")
               "wxTreebook:getPage/2"
               ("http://www.erlang.org/doc/man/wxTreebook.html#getPage-2" "getPage(This, N) -> wxWindow:wxWindow()")
               "wxTreebook:getImageList/1"
               ("http://www.erlang.org/doc/man/wxTreebook.html#getImageList-1" "getImageList(This) -> wxImageList:wxImageList()")
               "wxTreebook:getCurrentPage/1"
               ("http://www.erlang.org/doc/man/wxTreebook.html#getCurrentPage-1" "getCurrentPage(This) -> wxWindow:wxWindow()")
               "wxTreebook:removePage/2"
               ("http://www.erlang.org/doc/man/wxTreebook.html#removePage-2" "removePage(This, N) -> boolean()")
               "wxTreebook:deletePage/2"
               ("http://www.erlang.org/doc/man/wxTreebook.html#deletePage-2" "deletePage(This, Pos) -> boolean()")
               "wxTreebook:deleteAllPages/1"
               ("http://www.erlang.org/doc/man/wxTreebook.html#deleteAllPages-1" "deleteAllPages(This) -> boolean()")
               "wxTreebook:create/4"
               ("http://www.erlang.org/doc/man/wxTreebook.html#create-4" "create(This, Parent, Id, Options::[Option]) -> boolean()")
               "wxTreebook:create/3"
               ("http://www.erlang.org/doc/man/wxTreebook.html#create-3" "create(This, Parent, Id) -> boolean()")
               "wxTreebook:assignImageList/2"
               ("http://www.erlang.org/doc/man/wxTreebook.html#assignImageList-2" "assignImageList(This, ImageList) -> ok")
               "wxTreebook:advanceSelection/2"
               ("http://www.erlang.org/doc/man/wxTreebook.html#advanceSelection-2" "advanceSelection(This, Options::[Option]) -> ok")
               "wxTreebook:advanceSelection/1"
               ("http://www.erlang.org/doc/man/wxTreebook.html#advanceSelection-1" "advanceSelection(This) -> ok")
               "wxTreebook:addPage/4"
               ("http://www.erlang.org/doc/man/wxTreebook.html#addPage-4" "addPage(This, Page, Text, Options::[Option]) -> boolean()")
               "wxTreebook:addPage/3"
               ("http://www.erlang.org/doc/man/wxTreebook.html#addPage-3" "addPage(This, Page, Text) -> boolean()")
               "wxTreebook:new/3"
               ("http://www.erlang.org/doc/man/wxTreebook.html#new-3" "new(Parent, Id, Options::[Option]) -> wxTreebook()")
               "wxTreebook:new/2"
               ("http://www.erlang.org/doc/man/wxTreebook.html#new-2" "new(Parent, Id) -> wxTreebook()")
               "wxTreebook:new/0"
               ("http://www.erlang.org/doc/man/wxTreebook.html#new-0" "new() -> wxTreebook()")
               "wxTreebook:"
               ("http://www.erlang.org/doc/man/wxTreebook.html#type-wxTreebook" "wxTreebook()")
               "wxTreeCtrl:destroy/1"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#destroy-1" "destroy(This:: wxTreeCtrl() ) -> ok")
               "wxTreeCtrl:unselectItem/2"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#unselectItem-2" "unselectItem(This, Item) -> ok")
               "wxTreeCtrl:unselectAll/1"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#unselectAll-1" "unselectAll(This) -> ok")
               "wxTreeCtrl:unselect/1"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#unselect-1" "unselect(This) -> ok")
               "wxTreeCtrl:toggleItemSelection/2"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#toggleItemSelection-2" "toggleItemSelection(This, Item) -> ok")
               "wxTreeCtrl:toggle/2"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#toggle-2" "toggle(This, Item) -> ok")
               "wxTreeCtrl:sortChildren/2"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#sortChildren-2" "sortChildren(This, Item) -> ok")
               "wxTreeCtrl:setWindowStyle/2"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#setWindowStyle-2" "setWindowStyle(This, Styles) -> ok")
               "wxTreeCtrl:setStateImageList/2"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#setStateImageList-2" "setStateImageList(This, ImageList) -> ok")
               "wxTreeCtrl:setItemTextColour/3"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#setItemTextColour-3" "setItemTextColour(This, Item, Col) -> ok")
               "wxTreeCtrl:setItemText/3"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#setItemText-3" "setItemText(This, Item, Text) -> ok")
               "wxTreeCtrl:setItemImage/4"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#setItemImage-4" "setItemImage(This, Item, Image, Options::[Option]) -> ok")
               "wxTreeCtrl:setItemImage/3"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#setItemImage-3" "setItemImage(This, Item, Image) -> ok")
               "wxTreeCtrl:setItemHasChildren/3"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#setItemHasChildren-3" "setItemHasChildren(This, Item, Options::[Option]) -> ok")
               "wxTreeCtrl:setItemHasChildren/2"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#setItemHasChildren-2" "setItemHasChildren(This, Item) -> ok")
               "wxTreeCtrl:setItemFont/3"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#setItemFont-3" "setItemFont(This, Item, Font) -> ok")
               "wxTreeCtrl:setItemDropHighlight/3"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#setItemDropHighlight-3" "setItemDropHighlight(This, Item, Options::[Option]) -> ok")
               "wxTreeCtrl:setItemDropHighlight/2"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#setItemDropHighlight-2" "setItemDropHighlight(This, Item) -> ok")
               "wxTreeCtrl:setItemData/3"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#setItemData-3" "setItemData(This, Item, Data) -> ok")
               "wxTreeCtrl:setItemBold/3"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#setItemBold-3" "setItemBold(This, Item, Options::[Option]) -> ok")
               "wxTreeCtrl:setItemBold/2"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#setItemBold-2" "setItemBold(This, Item) -> ok")
               "wxTreeCtrl:setItemBackgroundColour/3"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#setItemBackgroundColour-3" "setItemBackgroundColour(This, Item, Col) -> ok")
               "wxTreeCtrl:setImageList/2"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#setImageList-2" "setImageList(This, ImageList) -> ok")
               "wxTreeCtrl:setIndent/2"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#setIndent-2" "setIndent(This, Indent) -> ok")
               "wxTreeCtrl:selectItem/3"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#selectItem-3" "selectItem(This, Item, Options::[Option]) -> ok")
               "wxTreeCtrl:selectItem/2"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#selectItem-2" "selectItem(This, Item) -> ok")
               "wxTreeCtrl:scrollTo/2"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#scrollTo-2" "scrollTo(This, Item) -> ok")
               "wxTreeCtrl:prependItem/4"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#prependItem-4" "prependItem(This, Parent, Text, Options::[Option]) -> integer()")
               "wxTreeCtrl:prependItem/3"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#prependItem-3" "prependItem(This, Parent, Text) -> integer()")
               "wxTreeCtrl:isTreeItemIdOk/1"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#isTreeItemIdOk-1" "isTreeItemIdOk(Id) -> boolean()")
               "wxTreeCtrl:itemHasChildren/2"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#itemHasChildren-2" "itemHasChildren(This, Item) -> boolean()")
               "wxTreeCtrl:isVisible/2"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#isVisible-2" "isVisible(This, Item) -> boolean()")
               "wxTreeCtrl:isSelected/2"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#isSelected-2" "isSelected(This, Item) -> boolean()")
               "wxTreeCtrl:isExpanded/2"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#isExpanded-2" "isExpanded(This, Item) -> boolean()")
               "wxTreeCtrl:isBold/2"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#isBold-2" "isBold(This, Item) -> boolean()")
               "wxTreeCtrl:insertItem/5"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#insertItem-5" "insertItem(This, Parent, Pos, Text, Options::[Option]) -> integer()")
               "wxTreeCtrl:insertItem/4"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#insertItem-4" "insertItem(This, Parent, Pos, Text) -> integer()")
               "wxTreeCtrl:hitTest/2"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#hitTest-2" "hitTest(This, Point) -> Result")
               "wxTreeCtrl:getStateImageList/1"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#getStateImageList-1" "getStateImageList(This) -> wxImageList:wxImageList()")
               "wxTreeCtrl:getSelections/1"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#getSelections-1" "getSelections(This) -> Result")
               "wxTreeCtrl:getSelection/1"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#getSelection-1" "getSelection(This) -> integer()")
               "wxTreeCtrl:getRootItem/1"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#getRootItem-1" "getRootItem(This) -> integer()")
               "wxTreeCtrl:getPrevVisible/2"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#getPrevVisible-2" "getPrevVisible(This, Item) -> integer()")
               "wxTreeCtrl:getPrevSibling/2"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#getPrevSibling-2" "getPrevSibling(This, Item) -> integer()")
               "wxTreeCtrl:getItemParent/2"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#getItemParent-2" "getItemParent(This, Item) -> integer()")
               "wxTreeCtrl:getNextVisible/2"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#getNextVisible-2" "getNextVisible(This, Item) -> integer()")
               "wxTreeCtrl:getNextSibling/2"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#getNextSibling-2" "getNextSibling(This, Item) -> integer()")
               "wxTreeCtrl:getLastChild/2"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#getLastChild-2" "getLastChild(This, Item) -> integer()")
               "wxTreeCtrl:getItemTextColour/2"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#getItemTextColour-2" "getItemTextColour(This, Item) -> wx:wx_colour4()")
               "wxTreeCtrl:getItemText/2"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#getItemText-2" "getItemText(This, Item) -> unicode:charlist()")
               "wxTreeCtrl:getItemImage/3"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#getItemImage-3" "getItemImage(This, Item, Options::[Option]) -> integer()")
               "wxTreeCtrl:getItemImage/2"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#getItemImage-2" "getItemImage(This, Item) -> integer()")
               "wxTreeCtrl:getItemFont/2"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#getItemFont-2" "getItemFont(This, Item) -> wxFont:wxFont()")
               "wxTreeCtrl:getItemData/2"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#getItemData-2" "getItemData(This, Item) -> term()")
               "wxTreeCtrl:getItemBackgroundColour/2"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#getItemBackgroundColour-2" "getItemBackgroundColour(This, Item) -> wx:wx_colour4()")
               "wxTreeCtrl:getIndent/1"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#getIndent-1" "getIndent(This) -> integer()")
               "wxTreeCtrl:getImageList/1"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#getImageList-1" "getImageList(This) -> wxImageList:wxImageList()")
               "wxTreeCtrl:getFirstVisibleItem/1"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#getFirstVisibleItem-1" "getFirstVisibleItem(This) -> integer()")
               "wxTreeCtrl:getNextChild/3"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#getNextChild-3" "getNextChild(This, Item, Cookie) -> Result")
               "wxTreeCtrl:getFirstChild/2"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#getFirstChild-2" "getFirstChild(This, Item) -> Result")
               "wxTreeCtrl:getEditControl/1"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#getEditControl-1" "getEditControl(This) -> wxTextCtrl:wxTextCtrl()")
               "wxTreeCtrl:getCount/1"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#getCount-1" "getCount(This) -> integer()")
               "wxTreeCtrl:getChildrenCount/3"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#getChildrenCount-3" "getChildrenCount(This, Item, Options::[Option]) -> integer()")
               "wxTreeCtrl:getChildrenCount/2"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#getChildrenCount-2" "getChildrenCount(This, Item) -> integer()")
               "wxTreeCtrl:getBoundingRect/3"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#getBoundingRect-3" "getBoundingRect(This, Item, Options::[Option]) -> Result")
               "wxTreeCtrl:getBoundingRect/2"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#getBoundingRect-2" "getBoundingRect(This, Item) -> Result")
               "wxTreeCtrl:expand/2"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#expand-2" "expand(This, Item) -> ok")
               "wxTreeCtrl:ensureVisible/2"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#ensureVisible-2" "ensureVisible(This, Item) -> ok")
               "wxTreeCtrl:editLabel/2"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#editLabel-2" "editLabel(This, Item) -> wxTextCtrl:wxTextCtrl()")
               "wxTreeCtrl:deleteChildren/2"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#deleteChildren-2" "deleteChildren(This, Item) -> ok")
               "wxTreeCtrl:deleteAllItems/1"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#deleteAllItems-1" "deleteAllItems(This) -> ok")
               "wxTreeCtrl:delete/2"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#delete-2" "delete(This, Item) -> ok")
               "wxTreeCtrl:create/3"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#create-3" "create(This, Parent, Options::[Option]) -> boolean()")
               "wxTreeCtrl:create/2"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#create-2" "create(This, Parent) -> boolean()")
               "wxTreeCtrl:collapseAndReset/2"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#collapseAndReset-2" "collapseAndReset(This, Item) -> ok")
               "wxTreeCtrl:collapse/2"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#collapse-2" "collapse(This, Item) -> ok")
               "wxTreeCtrl:assignStateImageList/2"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#assignStateImageList-2" "assignStateImageList(This, ImageList) -> ok")
               "wxTreeCtrl:assignImageList/2"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#assignImageList-2" "assignImageList(This, ImageList) -> ok")
               "wxTreeCtrl:appendItem/4"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#appendItem-4" "appendItem(This, Parent, Text, Options::[Option]) -> integer()")
               "wxTreeCtrl:appendItem/3"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#appendItem-3" "appendItem(This, Parent, Text) -> integer()")
               "wxTreeCtrl:addRoot/3"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#addRoot-3" "addRoot(This, Text, Options::[Option]) -> integer()")
               "wxTreeCtrl:addRoot/2"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#addRoot-2" "addRoot(This, Text) -> integer()")
               "wxTreeCtrl:new/2"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#new-2" "new(Parent, Options::[Option]) -> wxTreeCtrl()")
               "wxTreeCtrl:new/1"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#new-1" "new(Parent) -> wxTreeCtrl()")
               "wxTreeCtrl:new/0"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#new-0" "new() -> wxTreeCtrl()")
               "wxTreeCtrl:"
               ("http://www.erlang.org/doc/man/wxTreeCtrl.html#type-wxTreeCtrl" "wxTreeCtrl()")
               "wxTreeEvent:setToolTip/2"
               ("http://www.erlang.org/doc/man/wxTreeEvent.html#setToolTip-2" "setToolTip(This, ToolTip) -> ok")
               "wxTreeEvent:isEditCancelled/1"
               ("http://www.erlang.org/doc/man/wxTreeEvent.html#isEditCancelled-1" "isEditCancelled(This) -> boolean()")
               "wxTreeEvent:getPoint/1"
               ("http://www.erlang.org/doc/man/wxTreeEvent.html#getPoint-1" "getPoint(This) -> {X::integer(), Y::integer()}")
               "wxTreeEvent:getOldItem/1"
               ("http://www.erlang.org/doc/man/wxTreeEvent.html#getOldItem-1" "getOldItem(This) -> integer()")
               "wxTreeEvent:getLabel/1"
               ("http://www.erlang.org/doc/man/wxTreeEvent.html#getLabel-1" "getLabel(This) -> unicode:charlist()")
               "wxTreeEvent:getKeyEvent/1"
               ("http://www.erlang.org/doc/man/wxTreeEvent.html#getKeyEvent-1" "getKeyEvent(This) -> wxKeyEvent:wxKeyEvent()")
               "wxTreeEvent:getItem/1"
               ("http://www.erlang.org/doc/man/wxTreeEvent.html#getItem-1" "getItem(This) -> integer()")
               "wxTreeEvent:getKeyCode/1"
               ("http://www.erlang.org/doc/man/wxTreeEvent.html#getKeyCode-1" "getKeyCode(This) -> integer()")
               "wxTreeEvent:"
               ("http://www.erlang.org/doc/man/wxTreeEvent.html#type-wxTreeEvent" "wxTreeEvent()")
               "wxUpdateUIEvent:setUpdateInterval/1"
               ("http://www.erlang.org/doc/man/wxUpdateUIEvent.html#setUpdateInterval-1" "setUpdateInterval(UpdateInterval) -> ok")
               "wxUpdateUIEvent:setText/2"
               ("http://www.erlang.org/doc/man/wxUpdateUIEvent.html#setText-2" "setText(This, Text) -> ok")
               "wxUpdateUIEvent:setMode/1"
               ("http://www.erlang.org/doc/man/wxUpdateUIEvent.html#setMode-1" "setMode(Mode) -> ok")
               "wxUpdateUIEvent:resetUpdateTime/0"
               ("http://www.erlang.org/doc/man/wxUpdateUIEvent.html#resetUpdateTime-0" "resetUpdateTime() -> ok")
               "wxUpdateUIEvent:getUpdateInterval/0"
               ("http://www.erlang.org/doc/man/wxUpdateUIEvent.html#getUpdateInterval-0" "getUpdateInterval() -> integer()")
               "wxUpdateUIEvent:getMode/0"
               ("http://www.erlang.org/doc/man/wxUpdateUIEvent.html#getMode-0" "getMode() -> wx:wx_enum()")
               "wxUpdateUIEvent:getText/1"
               ("http://www.erlang.org/doc/man/wxUpdateUIEvent.html#getText-1" "getText(This) -> unicode:charlist()")
               "wxUpdateUIEvent:getSetText/1"
               ("http://www.erlang.org/doc/man/wxUpdateUIEvent.html#getSetText-1" "getSetText(This) -> boolean()")
               "wxUpdateUIEvent:getSetShown/1"
               ("http://www.erlang.org/doc/man/wxUpdateUIEvent.html#getSetShown-1" "getSetShown(This) -> boolean()")
               "wxUpdateUIEvent:getSetEnabled/1"
               ("http://www.erlang.org/doc/man/wxUpdateUIEvent.html#getSetEnabled-1" "getSetEnabled(This) -> boolean()")
               "wxUpdateUIEvent:getSetChecked/1"
               ("http://www.erlang.org/doc/man/wxUpdateUIEvent.html#getSetChecked-1" "getSetChecked(This) -> boolean()")
               "wxUpdateUIEvent:getShown/1"
               ("http://www.erlang.org/doc/man/wxUpdateUIEvent.html#getShown-1" "getShown(This) -> boolean()")
               "wxUpdateUIEvent:getEnabled/1"
               ("http://www.erlang.org/doc/man/wxUpdateUIEvent.html#getEnabled-1" "getEnabled(This) -> boolean()")
               "wxUpdateUIEvent:getChecked/1"
               ("http://www.erlang.org/doc/man/wxUpdateUIEvent.html#getChecked-1" "getChecked(This) -> boolean()")
               "wxUpdateUIEvent:show/2"
               ("http://www.erlang.org/doc/man/wxUpdateUIEvent.html#show-2" "show(This, Show) -> ok")
               "wxUpdateUIEvent:enable/2"
               ("http://www.erlang.org/doc/man/wxUpdateUIEvent.html#enable-2" "enable(This, Enable) -> ok")
               "wxUpdateUIEvent:check/2"
               ("http://www.erlang.org/doc/man/wxUpdateUIEvent.html#check-2" "check(This, Check) -> ok")
               "wxUpdateUIEvent:canUpdate/1"
               ("http://www.erlang.org/doc/man/wxUpdateUIEvent.html#canUpdate-1" "canUpdate(Win) -> boolean()")
               "wxUpdateUIEvent:"
               ("http://www.erlang.org/doc/man/wxUpdateUIEvent.html#type-wxUpdateUIEvent" "wxUpdateUIEvent()")
               "wxWindow:destroy/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#destroy-1" "destroy(This:: wxWindow() ) -> ok")
               "wxWindow:getContentScaleFactor/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#getContentScaleFactor-1" "getContentScaleFactor(This) -> number()")
               "wxWindow:setDoubleBuffered/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#setDoubleBuffered-2" "setDoubleBuffered(This, On) -> ok")
               "wxWindow:isDoubleBuffered/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#isDoubleBuffered-1" "isDoubleBuffered(This) -> boolean()")
               "wxWindow:canSetTransparent/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#canSetTransparent-1" "canSetTransparent(This) -> boolean()")
               "wxWindow:setTransparent/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#setTransparent-2" "setTransparent(This, Alpha) -> boolean()")
               "wxWindow:warpPointer/3"
               ("http://www.erlang.org/doc/man/wxWindow.html#warpPointer-3" "warpPointer(This, X, Y) -> ok")
               "wxWindow:validate/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#validate-1" "validate(This) -> boolean()")
               "wxWindow:updateWindowUI/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#updateWindowUI-2" "updateWindowUI(This, Options::[Option]) -> ok")
               "wxWindow:updateWindowUI/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#updateWindowUI-1" "updateWindowUI(This) -> ok")
               "wxWindow:update/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#update-1" "update(This) -> ok")
               "wxWindow:transferDataToWindow/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#transferDataToWindow-1" "transferDataToWindow(This) -> boolean()")
               "wxWindow:transferDataFromWindow/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#transferDataFromWindow-1" "transferDataFromWindow(This) -> boolean()")
               "wxWindow:thaw/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#thaw-1" "thaw(This) -> ok")
               "wxWindow:show/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#show-2" "show(This, Options::[Option]) -> boolean()")
               "wxWindow:show/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#show-1" "show(This) -> boolean()")
               "wxWindow:shouldInheritColours/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#shouldInheritColours-1" "shouldInheritColours(This) -> boolean()")
               "wxWindow:setWindowVariant/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#setWindowVariant-2" "setWindowVariant(This, Variant) -> ok")
               "wxWindow:setWindowStyleFlag/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#setWindowStyleFlag-2" "setWindowStyleFlag(This, Style) -> ok")
               "wxWindow:setWindowStyle/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#setWindowStyle-2" "setWindowStyle(This, Style) -> ok")
               "wxWindow:setVirtualSizeHints/4"
               ("http://www.erlang.org/doc/man/wxWindow.html#setVirtualSizeHints-4" "setVirtualSizeHints(This, MinW, MinH, Options::[Option]) -> ok")
               "wxWindow:setVirtualSizeHints/3"
               ("http://www.erlang.org/doc/man/wxWindow.html#setVirtualSizeHints-3" "setVirtualSizeHints(This, MinW, MinH) -> ok")
               "wxWindow:setVirtualSizeHints/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#setVirtualSizeHints-2" "setVirtualSizeHints(This, MinSize) -> ok")
               "wxWindow:setVirtualSize/3"
               ("http://www.erlang.org/doc/man/wxWindow.html#setVirtualSize-3" "setVirtualSize(This, X, Y) -> ok")
               "wxWindow:setVirtualSize/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#setVirtualSize-2" "setVirtualSize(This, Size) -> ok")
               "wxWindow:setToolTip/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#setToolTip-2" "setToolTip(This, Tip) -> ok")
               "wxWindow:setThemeEnabled/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#setThemeEnabled-2" "setThemeEnabled(This, EnableTheme) -> ok")
               "wxWindow:setSizerAndFit/3"
               ("http://www.erlang.org/doc/man/wxWindow.html#setSizerAndFit-3" "setSizerAndFit(This, Sizer, Options::[Option]) -> ok")
               "wxWindow:setSizerAndFit/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#setSizerAndFit-2" "setSizerAndFit(This, Sizer) -> ok")
               "wxWindow:setSizer/3"
               ("http://www.erlang.org/doc/man/wxWindow.html#setSizer-3" "setSizer(This, Sizer, Options::[Option]) -> ok")
               "wxWindow:setSizer/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#setSizer-2" "setSizer(This, Sizer) -> ok")
               "wxWindow:setSizeHints/4"
               ("http://www.erlang.org/doc/man/wxWindow.html#setSizeHints-4" "setSizeHints(This, MinW, MinH, Options::[Option]) -> ok")
               "wxWindow:setSizeHints/3"
               ("http://www.erlang.org/doc/man/wxWindow.html#setSizeHints-3" "setSizeHints(This, MinW, MinH) -> ok")
               "wxWindow:setSizeHints/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#setSizeHints-2" "setSizeHints(This, MinSize) -> ok")
               "wxWindow:setSize/6"
               ("http://www.erlang.org/doc/man/wxWindow.html#setSize-6" "setSize(This, X, Y, Width, Height, Options::[Option]) -> ok")
               "wxWindow:setSize/5"
               ("http://www.erlang.org/doc/man/wxWindow.html#setSize-5" "setSize(This, X, Y, Width, Height) -> ok")
               "wxWindow:setSize/3"
               ("http://www.erlang.org/doc/man/wxWindow.html#setSize-3" "setSize(This, Width, Height) -> ok")
               "wxWindow:setSize/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#setSize-2" "setSize(This, Rect) -> ok")
               "wxWindow:setScrollPos/4"
               ("http://www.erlang.org/doc/man/wxWindow.html#setScrollPos-4" "setScrollPos(This, Orient, Pos, Options::[Option]) -> ok")
               "wxWindow:setScrollPos/3"
               ("http://www.erlang.org/doc/man/wxWindow.html#setScrollPos-3" "setScrollPos(This, Orient, Pos) -> ok")
               "wxWindow:setScrollbar/6"
               ("http://www.erlang.org/doc/man/wxWindow.html#setScrollbar-6" "setScrollbar(This, Orient, Pos, ThumbVisible, Range, Options::[Option]) -> ok")
               "wxWindow:setScrollbar/5"
               ("http://www.erlang.org/doc/man/wxWindow.html#setScrollbar-5" "setScrollbar(This, Orient, Pos, ThumbVisible, Range) -> ok")
               "wxWindow:setPalette/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#setPalette-2" "setPalette(This, Pal) -> ok")
               "wxWindow:setName/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#setName-2" "setName(This, Name) -> ok")
               "wxWindow:setLabel/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#setLabel-2" "setLabel(This, Label) -> ok")
               "wxWindow:setId/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#setId-2" "setId(This, Winid) -> ok")
               "wxWindow:setHelpText/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#setHelpText-2" "setHelpText(This, Text) -> ok")
               "wxWindow:setForegroundColour/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#setForegroundColour-2" "setForegroundColour(This, Colour) -> boolean()")
               "wxWindow:setFont/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#setFont-2" "setFont(This, Font) -> boolean()")
               "wxWindow:setFocusFromKbd/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#setFocusFromKbd-1" "setFocusFromKbd(This) -> ok")
               "wxWindow:setFocus/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#setFocus-1" "setFocus(This) -> ok")
               "wxWindow:setExtraStyle/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#setExtraStyle-2" "setExtraStyle(This, ExStyle) -> ok")
               "wxWindow:setDropTarget/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#setDropTarget-2" "setDropTarget(This, DropTarget) -> ok")
               "wxWindow:setOwnForegroundColour/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#setOwnForegroundColour-2" "setOwnForegroundColour(This, Colour) -> ok")
               "wxWindow:setOwnFont/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#setOwnFont-2" "setOwnFont(This, Font) -> ok")
               "wxWindow:setOwnBackgroundColour/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#setOwnBackgroundColour-2" "setOwnBackgroundColour(This, Colour) -> ok")
               "wxWindow:setMinSize/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#setMinSize-2" "setMinSize(This, MinSize) -> ok")
               "wxWindow:setMaxSize/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#setMaxSize-2" "setMaxSize(This, MaxSize) -> ok")
               "wxWindow:setCursor/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#setCursor-2" "setCursor(This, Cursor) -> boolean()")
               "wxWindow:setContainingSizer/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#setContainingSizer-2" "setContainingSizer(This, Sizer) -> ok")
               "wxWindow:setClientSize/3"
               ("http://www.erlang.org/doc/man/wxWindow.html#setClientSize-3" "setClientSize(This, Width, Height) -> ok")
               "wxWindow:setClientSize/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#setClientSize-2" "setClientSize(This, Size) -> ok")
               "wxWindow:setCaret/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#setCaret-2" "setCaret(This, Caret) -> ok")
               "wxWindow:setBackgroundStyle/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#setBackgroundStyle-2" "setBackgroundStyle(This, Style) -> boolean()")
               "wxWindow:setBackgroundColour/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#setBackgroundColour-2" "setBackgroundColour(This, Colour) -> boolean()")
               "wxWindow:setAutoLayout/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#setAutoLayout-2" "setAutoLayout(This, AutoLayout) -> ok")
               "wxWindow:setAcceleratorTable/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#setAcceleratorTable-2" "setAcceleratorTable(This, Accel) -> ok")
               "wxWindow:scrollWindow/4"
               ("http://www.erlang.org/doc/man/wxWindow.html#scrollWindow-4" "scrollWindow(This, Dx, Dy, Options::[Option]) -> ok")
               "wxWindow:scrollWindow/3"
               ("http://www.erlang.org/doc/man/wxWindow.html#scrollWindow-3" "scrollWindow(This, Dx, Dy) -> ok")
               "wxWindow:scrollPages/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#scrollPages-2" "scrollPages(This, Pages) -> boolean()")
               "wxWindow:scrollLines/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#scrollLines-2" "scrollLines(This, Lines) -> boolean()")
               "wxWindow:screenToClient/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#screenToClient-2" "screenToClient(This, Pt) -> {X::integer(), Y::integer()}")
               "wxWindow:screenToClient/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#screenToClient-1" "screenToClient(This) -> {X::integer(), Y::integer()}")
               "wxWindow:reparent/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#reparent-2" "reparent(This, NewParent) -> boolean()")
               "wxWindow:removeChild/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#removeChild-2" "removeChild(This, Child) -> ok")
               "wxWindow:releaseMouse/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#releaseMouse-1" "releaseMouse(This) -> ok")
               "wxWindow:refreshRect/3"
               ("http://www.erlang.org/doc/man/wxWindow.html#refreshRect-3" "refreshRect(This, Rect, Options::[Option]) -> ok")
               "wxWindow:refreshRect/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#refreshRect-2" "refreshRect(This, Rect) -> ok")
               "wxWindow:refresh/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#refresh-2" "refresh(This, Options::[Option]) -> ok")
               "wxWindow:refresh/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#refresh-1" "refresh(This) -> ok")
               "wxWindow:raise/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#raise-1" "raise(This) -> ok")
               "wxWindow:popupMenu/4"
               ("http://www.erlang.org/doc/man/wxWindow.html#popupMenu-4" "popupMenu(This, Menu, X, Y) -> boolean()")
               "wxWindow:popupMenu/3"
               ("http://www.erlang.org/doc/man/wxWindow.html#popupMenu-3" "popupMenu(This, Menu, Options::[Option]) -> boolean()")
               "wxWindow:popupMenu/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#popupMenu-2" "popupMenu(This, Menu) -> boolean()")
               "wxWindow:popEventHandler/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#popEventHandler-2" "popEventHandler(This, Options::[Option]) -> wxEvtHandler:wxEvtHandler()")
               "wxWindow:popEventHandler/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#popEventHandler-1" "popEventHandler(This) -> wxEvtHandler:wxEvtHandler()")
               "wxWindow:pageUp/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#pageUp-1" "pageUp(This) -> boolean()")
               "wxWindow:pageDown/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#pageDown-1" "pageDown(This) -> boolean()")
               "wxWindow:navigate/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#navigate-2" "navigate(This, Options::[Option]) -> boolean()")
               "wxWindow:navigate/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#navigate-1" "navigate(This) -> boolean()")
               "wxWindow:moveBeforeInTabOrder/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#moveBeforeInTabOrder-2" "moveBeforeInTabOrder(This, Win) -> ok")
               "wxWindow:moveAfterInTabOrder/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#moveAfterInTabOrder-2" "moveAfterInTabOrder(This, Win) -> ok")
               "wxWindow:move/4"
               ("http://www.erlang.org/doc/man/wxWindow.html#move-4" "move(This, X, Y, Options::[Option]) -> ok")
               "wxWindow:move/3"
               ("http://www.erlang.org/doc/man/wxWindow.html#move-3" "move(This, X, Y) -> ok")
               "wxWindow:move/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#move-2" "move(This, Pt) -> ok")
               "wxWindow:makeModal/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#makeModal-2" "makeModal(This, Options::[Option]) -> ok")
               "wxWindow:makeModal/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#makeModal-1" "makeModal(This) -> ok")
               "wxWindow:lower/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#lower-1" "lower(This) -> ok")
               "wxWindow:lineUp/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#lineUp-1" "lineUp(This) -> boolean()")
               "wxWindow:lineDown/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#lineDown-1" "lineDown(This) -> boolean()")
               "wxWindow:layout/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#layout-1" "layout(This) -> boolean()")
               "wxWindow:isTopLevel/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#isTopLevel-1" "isTopLevel(This) -> boolean()")
               "wxWindow:isShown/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#isShown-1" "isShown(This) -> boolean()")
               "wxWindow:isRetained/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#isRetained-1" "isRetained(This) -> boolean()")
               "wxWindow:isExposed/5"
               ("http://www.erlang.org/doc/man/wxWindow.html#isExposed-5" "isExposed(This, X, Y, W, H) -> boolean()")
               "wxWindow:isExposed/3"
               ("http://www.erlang.org/doc/man/wxWindow.html#isExposed-3" "isExposed(This, X, Y) -> boolean()")
               "wxWindow:isExposed/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#isExposed-2" "isExposed(This, Pt) -> boolean()")
               "wxWindow:isEnabled/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#isEnabled-1" "isEnabled(This) -> boolean()")
               "wxWindow:invalidateBestSize/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#invalidateBestSize-1" "invalidateBestSize(This) -> ok")
               "wxWindow:initDialog/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#initDialog-1" "initDialog(This) -> ok")
               "wxWindow:inheritAttributes/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#inheritAttributes-1" "inheritAttributes(This) -> ok")
               "wxWindow:hide/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#hide-1" "hide(This) -> boolean()")
               "wxWindow:hasTransparentBackground/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#hasTransparentBackground-1" "hasTransparentBackground(This) -> boolean()")
               "wxWindow:hasScrollbar/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#hasScrollbar-2" "hasScrollbar(This, Orient) -> boolean()")
               "wxWindow:hasCapture/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#hasCapture-1" "hasCapture(This) -> boolean()")
               "wxWindow:getWindowVariant/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#getWindowVariant-1" "getWindowVariant(This) -> wx:wx_enum()")
               "wxWindow:getWindowStyleFlag/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#getWindowStyleFlag-1" "getWindowStyleFlag(This) -> integer()")
               "wxWindow:getVirtualSize/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#getVirtualSize-1" "getVirtualSize(This) -> {W::integer(), H::integer()}")
               "wxWindow:getUpdateRegion/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#getUpdateRegion-1" "getUpdateRegion(This) -> wxRegion:wxRegion()")
               "wxWindow:getToolTip/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#getToolTip-1" "getToolTip(This) -> wxToolTip:wxToolTip()")
               "wxWindow:getTextExtent/3"
               ("http://www.erlang.org/doc/man/wxWindow.html#getTextExtent-3" "getTextExtent(This, String, Options::[Option]) -> Result")
               "wxWindow:getTextExtent/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#getTextExtent-2" "getTextExtent(This, String) -> Result")
               "wxWindow:getSizer/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#getSizer-1" "getSizer(This) -> wxSizer:wxSizer()")
               "wxWindow:getSize/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#getSize-1" "getSize(This) -> {W::integer(), H::integer()}")
               "wxWindow:getScrollThumb/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#getScrollThumb-2" "getScrollThumb(This, Orient) -> integer()")
               "wxWindow:getScrollRange/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#getScrollRange-2" "getScrollRange(This, Orient) -> integer()")
               "wxWindow:getScrollPos/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#getScrollPos-2" "getScrollPos(This, Orient) -> integer()")
               "wxWindow:getScreenRect/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#getScreenRect-1" "getScreenRect(This) -> {X::integer(), Y::integer(), W::integer(), H::integer()}")
               "wxWindow:getScreenPosition/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#getScreenPosition-1" "getScreenPosition(This) -> {X::integer(), Y::integer()}")
               "wxWindow:getRect/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#getRect-1" "getRect(This) -> {X::integer(), Y::integer(), W::integer(), H::integer()}")
               "wxWindow:getPosition/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#getPosition-1" "getPosition(This) -> {X::integer(), Y::integer()}")
               "wxWindow:getParent/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#getParent-1" "getParent(This) -> wxWindow()")
               "wxWindow:getName/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#getName-1" "getName(This) -> unicode:charlist()")
               "wxWindow:getMinSize/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#getMinSize-1" "getMinSize(This) -> {W::integer(), H::integer()}")
               "wxWindow:getMaxSize/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#getMaxSize-1" "getMaxSize(This) -> {W::integer(), H::integer()}")
               "wxWindow:getLabel/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#getLabel-1" "getLabel(This) -> unicode:charlist()")
               "wxWindow:getId/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#getId-1" "getId(This) -> integer()")
               "wxWindow:getHelpText/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#getHelpText-1" "getHelpText(This) -> unicode:charlist()")
               "wxWindow:getHandle/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#getHandle-1" "getHandle(This) -> integer()")
               "wxWindow:getGrandParent/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#getGrandParent-1" "getGrandParent(This) -> wxWindow()")
               "wxWindow:getForegroundColour/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#getForegroundColour-1" "getForegroundColour(This) -> wx:wx_colour4()")
               "wxWindow:getFont/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#getFont-1" "getFont(This) -> wxFont:wxFont()")
               "wxWindow:getExtraStyle/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#getExtraStyle-1" "getExtraStyle(This) -> integer()")
               "wxWindow:getEventHandler/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#getEventHandler-1" "getEventHandler(This) -> wxEvtHandler:wxEvtHandler()")
               "wxWindow:getDropTarget/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#getDropTarget-1" "getDropTarget(This) -> wx:wx_object()")
               "wxWindow:getCursor/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#getCursor-1" "getCursor(This) -> wxCursor:wxCursor()")
               "wxWindow:getContainingSizer/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#getContainingSizer-1" "getContainingSizer(This) -> wxSizer:wxSizer()")
               "wxWindow:getClientSize/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#getClientSize-1" "getClientSize(This) -> {W::integer(), H::integer()}")
               "wxWindow:getChildren/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#getChildren-1" "getChildren(This) -> [ wxWindow() ]")
               "wxWindow:getCharWidth/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#getCharWidth-1" "getCharWidth(This) -> integer()")
               "wxWindow:getCharHeight/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#getCharHeight-1" "getCharHeight(This) -> integer()")
               "wxWindow:getCapture/0"
               ("http://www.erlang.org/doc/man/wxWindow.html#getCapture-0" "getCapture() -> wxWindow()")
               "wxWindow:getCaret/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#getCaret-1" "getCaret(This) -> wxCaret:wxCaret()")
               "wxWindow:getBestSize/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#getBestSize-1" "getBestSize(This) -> {W::integer(), H::integer()}")
               "wxWindow:getBackgroundStyle/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#getBackgroundStyle-1" "getBackgroundStyle(This) -> wx:wx_enum()")
               "wxWindow:getBackgroundColour/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#getBackgroundColour-1" "getBackgroundColour(This) -> wx:wx_colour4()")
               "wxWindow:getAcceleratorTable/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#getAcceleratorTable-1" "getAcceleratorTable(This) -> wxAcceleratorTable:wxAcceleratorTable()")
               "wxWindow:freeze/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#freeze-1" "freeze(This) -> ok")
               "wxWindow:fitInside/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#fitInside-1" "fitInside(This) -> ok")
               "wxWindow:fit/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#fit-1" "fit(This) -> ok")
               "wxWindow:findWindowByLabel/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#findWindowByLabel-2" "findWindowByLabel(Label, Options::[Option]) -> wxWindow()")
               "wxWindow:findWindowByLabel/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#findWindowByLabel-1" "findWindowByLabel(Label) -> wxWindow()")
               "wxWindow:findWindowByName/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#findWindowByName-2" "findWindowByName(Name, Options::[Option]) -> wxWindow()")
               "wxWindow:findWindowByName/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#findWindowByName-1" "findWindowByName(Name) -> wxWindow()")
               "wxWindow:findWindowById/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#findWindowById-2" "findWindowById(Winid, Options::[Option]) -> wxWindow()")
               "wxWindow:findWindowById/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#findWindowById-1" "findWindowById(Winid) -> wxWindow()")
               "wxWindow:findWindow/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#findWindow-2" "findWindow(This, Winid) -> wxWindow()")
               "wxWindow:findFocus/0"
               ("http://www.erlang.org/doc/man/wxWindow.html#findFocus-0" "findFocus() -> wxWindow()")
               "wxWindow:enable/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#enable-2" "enable(This, Options::[Option]) -> boolean()")
               "wxWindow:enable/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#enable-1" "enable(This) -> boolean()")
               "wxWindow:dragAcceptFiles/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#dragAcceptFiles-2" "dragAcceptFiles(This, Accept) -> ok")
               "wxWindow:disable/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#disable-1" "disable(This) -> boolean()")
               "wxWindow:destroyChildren/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#destroyChildren-1" "destroyChildren(This) -> boolean()")
               "wxWindow:Destroy/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#Destroy-1" "Destroy(This) -> boolean()")
               "wxWindow:convertPixelsToDialog/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#convertPixelsToDialog-2" "convertPixelsToDialog(This, Sz) -> {W::integer(), H::integer()}")
               "wxWindow:convertDialogToPixels/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#convertDialogToPixels-2" "convertDialogToPixels(This, Sz) -> {W::integer(), H::integer()}")
               "wxWindow:close/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#close-2" "close(This, Options::[Option]) -> boolean()")
               "wxWindow:close/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#close-1" "close(This) -> boolean()")
               "wxWindow:clientToScreen/3"
               ("http://www.erlang.org/doc/man/wxWindow.html#clientToScreen-3" "clientToScreen(This, X, Y) -> {X::integer(), Y::integer()}")
               "wxWindow:clientToScreen/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#clientToScreen-2" "clientToScreen(This, Pt) -> {X::integer(), Y::integer()}")
               "wxWindow:clearBackground/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#clearBackground-1" "clearBackground(This) -> ok")
               "wxWindow:centreOnParent/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#centreOnParent-2" "centreOnParent(This, Options::[Option]) -> ok")
               "wxWindow:centreOnParent/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#centreOnParent-1" "centreOnParent(This) -> ok")
               "wxWindow:centre/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#centre-2" "centre(This, Options::[Option]) -> ok")
               "wxWindow:centre/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#centre-1" "centre(This) -> ok")
               "wxWindow:centerOnParent/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#centerOnParent-2" "centerOnParent(This, Options::[Option]) -> ok")
               "wxWindow:centerOnParent/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#centerOnParent-1" "centerOnParent(This) -> ok")
               "wxWindow:center/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#center-2" "center(This, Options::[Option]) -> ok")
               "wxWindow:center/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#center-1" "center(This) -> ok")
               "wxWindow:captureMouse/1"
               ("http://www.erlang.org/doc/man/wxWindow.html#captureMouse-1" "captureMouse(This) -> ok")
               "wxWindow:cacheBestSize/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#cacheBestSize-2" "cacheBestSize(This, Size) -> ok")
               "wxWindow:new/3"
               ("http://www.erlang.org/doc/man/wxWindow.html#new-3" "new(Parent, Id, Options::[Option]) -> wxWindow()")
               "wxWindow:new/2"
               ("http://www.erlang.org/doc/man/wxWindow.html#new-2" "new(Parent, Id) -> wxWindow()")
               "wxWindow:new/0"
               ("http://www.erlang.org/doc/man/wxWindow.html#new-0" "new() -> wxWindow()")
               "wxWindow:"
               ("http://www.erlang.org/doc/man/wxWindow.html#type-wxWindow" "wxWindow()")
               "wxWindowCreateEvent:"
               ("http://www.erlang.org/doc/man/wxWindowCreateEvent.html#type-wxWindowCreateEvent" "wxWindowCreateEvent()")
               "wxWindowDC:destroy/1"
               ("http://www.erlang.org/doc/man/wxWindowDC.html#destroy-1" "destroy(This:: wxWindowDC() ) -> ok")
               "wxWindowDC:new/1"
               ("http://www.erlang.org/doc/man/wxWindowDC.html#new-1" "new(Win) -> wxWindowDC()")
               "wxWindowDC:new/0"
               ("http://www.erlang.org/doc/man/wxWindowDC.html#new-0" "new() -> wxWindowDC()")
               "wxWindowDC:"
               ("http://www.erlang.org/doc/man/wxWindowDC.html#type-wxWindowDC" "wxWindowDC()")
               "wxWindowDestroyEvent:"
               ("http://www.erlang.org/doc/man/wxWindowDestroyEvent.html#type-wxWindowDestroyEvent" "wxWindowDestroyEvent()")
               "wxXmlResource:destroy/1"
               ("http://www.erlang.org/doc/man/wxXmlResource.html#destroy-1" "destroy(This:: wxXmlResource() ) -> ok")
               "wxXmlResource:xrcctrl/3"
               ("http://www.erlang.org/doc/man/wxXmlResource.html#xrcctrl-3" "xrcctrl(Window, Name, Type) -> wx:wx_object()")
               "wxXmlResource:unload/2"
               ("http://www.erlang.org/doc/man/wxXmlResource.html#unload-2" "unload(This, Filename) -> boolean()")
               "wxXmlResource:setFlags/2"
               ("http://www.erlang.org/doc/man/wxXmlResource.html#setFlags-2" "setFlags(This, Flags) -> ok")
               "wxXmlResource:set/1"
               ("http://www.erlang.org/doc/man/wxXmlResource.html#set-1" "set(Res) -> wxXmlResource()")
               "wxXmlResource:loadToolBar/3"
               ("http://www.erlang.org/doc/man/wxXmlResource.html#loadToolBar-3" "loadToolBar(This, Parent, Name) -> wxToolBar:wxToolBar()")
               "wxXmlResource:loadPanel/4"
               ("http://www.erlang.org/doc/man/wxXmlResource.html#loadPanel-4" "loadPanel(This, Panel, Parent, Name) -> boolean()")
               "wxXmlResource:loadPanel/3"
               ("http://www.erlang.org/doc/man/wxXmlResource.html#loadPanel-3" "loadPanel(This, Parent, Name) -> wxPanel:wxPanel()")
               "wxXmlResource:loadMenuBar/3"
               ("http://www.erlang.org/doc/man/wxXmlResource.html#loadMenuBar-3" "loadMenuBar(This, Parent, Name) -> wxMenuBar:wxMenuBar()")
               "wxXmlResource:loadMenuBar/2"
               ("http://www.erlang.org/doc/man/wxXmlResource.html#loadMenuBar-2" "loadMenuBar(This, Name) -> wxMenuBar:wxMenuBar()")
               "wxXmlResource:loadMenu/2"
               ("http://www.erlang.org/doc/man/wxXmlResource.html#loadMenu-2" "loadMenu(This, Name) -> wxMenu:wxMenu()")
               "wxXmlResource:loadIcon/2"
               ("http://www.erlang.org/doc/man/wxXmlResource.html#loadIcon-2" "loadIcon(This, Name) -> wxIcon:wxIcon()")
               "wxXmlResource:loadFrame/4"
               ("http://www.erlang.org/doc/man/wxXmlResource.html#loadFrame-4" "loadFrame(This, Frame, Parent, Name) -> boolean()")
               "wxXmlResource:loadFrame/3"
               ("http://www.erlang.org/doc/man/wxXmlResource.html#loadFrame-3" "loadFrame(This, Parent, Name) -> wxFrame:wxFrame()")
               "wxXmlResource:loadDialog/4"
               ("http://www.erlang.org/doc/man/wxXmlResource.html#loadDialog-4" "loadDialog(This, Dlg, Parent, Name) -> boolean()")
               "wxXmlResource:loadDialog/3"
               ("http://www.erlang.org/doc/man/wxXmlResource.html#loadDialog-3" "loadDialog(This, Parent, Name) -> wxDialog:wxDialog()")
               "wxXmlResource:loadBitmap/2"
               ("http://www.erlang.org/doc/man/wxXmlResource.html#loadBitmap-2" "loadBitmap(This, Name) -> wxBitmap:wxBitmap()")
               "wxXmlResource:load/2"
               ("http://www.erlang.org/doc/man/wxXmlResource.html#load-2" "load(This, Filemask) -> boolean()")
               "wxXmlResource:initAllHandlers/1"
               ("http://www.erlang.org/doc/man/wxXmlResource.html#initAllHandlers-1" "initAllHandlers(This) -> ok")
               "wxXmlResource:getXRCID/2"
               ("http://www.erlang.org/doc/man/wxXmlResource.html#getXRCID-2" "getXRCID(Str_id, Options::[Option]) -> integer()")
               "wxXmlResource:getXRCID/1"
               ("http://www.erlang.org/doc/man/wxXmlResource.html#getXRCID-1" "getXRCID(Str_id) -> integer()")
               "wxXmlResource:getVersion/1"
               ("http://www.erlang.org/doc/man/wxXmlResource.html#getVersion-1" "getVersion(This) -> integer()")
               "wxXmlResource:getFlags/1"
               ("http://www.erlang.org/doc/man/wxXmlResource.html#getFlags-1" "getFlags(This) -> integer()")
               "wxXmlResource:get/0"
               ("http://www.erlang.org/doc/man/wxXmlResource.html#get-0" "get() -> wxXmlResource()")
               "wxXmlResource:compareVersion/5"
               ("http://www.erlang.org/doc/man/wxXmlResource.html#compareVersion-5" "compareVersion(This, Major, Minor, Release, Revision) -> integer()")
               "wxXmlResource:clearHandlers/1"
               ("http://www.erlang.org/doc/man/wxXmlResource.html#clearHandlers-1" "clearHandlers(This) -> ok")
               "wxXmlResource:attachUnknownControl/4"
               ("http://www.erlang.org/doc/man/wxXmlResource.html#attachUnknownControl-4" "attachUnknownControl(This, Name, Control, Options::[Option]) -> boolean()")
               "wxXmlResource:attachUnknownControl/3"
               ("http://www.erlang.org/doc/man/wxXmlResource.html#attachUnknownControl-3" "attachUnknownControl(This, Name, Control) -> boolean()")
               "wxXmlResource:new/2"
               ("http://www.erlang.org/doc/man/wxXmlResource.html#new-2" "new(Filemask, Options::[Option]) -> wxXmlResource()")
               "wxXmlResource:new/1"
               ("http://www.erlang.org/doc/man/wxXmlResource.html#new-1" "new(Options::[Option]) -> wxXmlResource()")
               "wxXmlResource:new/0"
               ("http://www.erlang.org/doc/man/wxXmlResource.html#new-0" "new() -> wxXmlResource()")
               "wxXmlResource:"
               ("http://www.erlang.org/doc/man/wxXmlResource.html#type-wxXmlResource" "wxXmlResource()")
               "xmerl:export_simple_element/2"
               ("http://www.erlang.org/doc/man/xmerl.html#export_simple_element-2" "export_simple_element(Content, Callback) -> term()")
               "xmerl:export_simple_content/2"
               ("http://www.erlang.org/doc/man/xmerl.html#export_simple_content-2" "export_simple_content(Content, Callback) -> term()")
               "xmerl:export_simple/3"
               ("http://www.erlang.org/doc/man/xmerl.html#export_simple-3" "export_simple(Content, Callback, RootAttrs::RootAttributes) -> ExportedFormat")
               "xmerl:export_simple/2"
               ("http://www.erlang.org/doc/man/xmerl.html#export_simple-2" "export_simple(Content, Callback) -> ExportedFormat")
               "xmerl:export_element/3"
               ("http://www.erlang.org/doc/man/xmerl.html#export_element-3" "export_element(E, CallbackModule, CallbackState) -> ExportedFormat")
               "xmerl:export_element/2"
               ("http://www.erlang.org/doc/man/xmerl.html#export_element-2" "export_element(E, CB) -> term()")
               "xmerl:export_content/2"
               ("http://www.erlang.org/doc/man/xmerl.html#export_content-2" "export_content(Es::Content, Callbacks) -> term()")
               "xmerl:export/3"
               ("http://www.erlang.org/doc/man/xmerl.html#export-3" "export(Content, Callback, RootAttributes) -> ExportedFormat")
               "xmerl:export/2"
               ("http://www.erlang.org/doc/man/xmerl.html#export-2" "export(Content, Callback) -> ExportedFormat")
               "xmerl:callbacks/1"
               ("http://www.erlang.org/doc/man/xmerl.html#callbacks-1" "callbacks(Module) -> Result")
               "xmerl_eventp:string_sax/4"
               ("http://www.erlang.org/doc/man/xmerl_eventp.html#string_sax-4" "string_sax(String::list(), CallBackModule::atom(), UserState, Options:: option_list() ) -> xmlElement()")
               "xmerl_eventp:stream_sax/4"
               ("http://www.erlang.org/doc/man/xmerl_eventp.html#stream_sax-4" "stream_sax(Fname, CallBack::CallBackModule, UserState, Options) -> xmlElement()")
               "xmerl_eventp:stream/2"
               ("http://www.erlang.org/doc/man/xmerl_eventp.html#stream-2" "stream(Fname::string(), Options:: option_list() ) -> xmlElement()")
               "xmerl_eventp:file_sax/4"
               ("http://www.erlang.org/doc/man/xmerl_eventp.html#file_sax-4" "file_sax(Fname::string(), CallBackModule::atom(), UserState, Options:: option_list() ) -> NewUserState")
               "xmerl_eventp:"
               ("http://www.erlang.org/doc/man/xmerl_eventp.html#type-option_list" "option_list()")
               "xmerl_sax_parser:EventFun/3"
               ("http://www.erlang.org/doc/man/xmerl_sax_parser.html#EventFun-3" "EventFun(Event, Location, State) -> NewState")
               "xmerl_sax_parser:ContinuationFun/1"
               ("http://www.erlang.org/doc/man/xmerl_sax_parser.html#ContinuationFun-1" "ContinuationFun(State) -> {NewBytes, NewState}")
               "xmerl_sax_parser:stream/2"
               ("http://www.erlang.org/doc/man/xmerl_sax_parser.html#stream-2" "stream(Xml, Options) -> Result")
               "xmerl_sax_parser:file/2"
               ("http://www.erlang.org/doc/man/xmerl_sax_parser.html#file-2" "file(Filename, Options) -> Result")
               "xmerl_scan:user_state/2"
               ("http://www.erlang.org/doc/man/xmerl_scan.html#user_state-2" "user_state(X::UserState, S:: global_state() ) -> global_state()")
               "xmerl_scan:user_state/1"
               ("http://www.erlang.org/doc/man/xmerl_scan.html#user_state-1" "user_state(S:: global_state() ) -> global_state()")
               "xmerl_scan:string/2"
               ("http://www.erlang.org/doc/man/xmerl_scan.html#string-2" "string(Text::list(), Options:: option_list() ) -> { document() , Rest}")
               "xmerl_scan:string/1"
               ("http://www.erlang.org/doc/man/xmerl_scan.html#string-1" "string(Text::list()) -> { xmlElement() , Rest}")
               "xmerl_scan:rules_state/2"
               ("http://www.erlang.org/doc/man/xmerl_scan.html#rules_state-2" "rules_state(X::RulesState, S:: global_state() ) -> global_state()")
               "xmerl_scan:rules_state/1"
               ("http://www.erlang.org/doc/man/xmerl_scan.html#rules_state-1" "rules_state(S:: global_state() ) -> global_state()")
               "xmerl_scan:hook_state/2"
               ("http://www.erlang.org/doc/man/xmerl_scan.html#hook_state-2" "hook_state(X::HookState, S:: global_state() ) -> global_state()")
               "xmerl_scan:hook_state/1"
               ("http://www.erlang.org/doc/man/xmerl_scan.html#hook_state-1" "hook_state(S:: global_state() ) -> global_state()")
               "xmerl_scan:file/2"
               ("http://www.erlang.org/doc/man/xmerl_scan.html#file-2" "file(Filename::string(), Options:: option_list() ) -> { document() , Rest}")
               "xmerl_scan:file/1"
               ("http://www.erlang.org/doc/man/xmerl_scan.html#file-1" "file(Filename::string()) -> { xmlElement() , Rest}")
               "xmerl_scan:fetch_state/2"
               ("http://www.erlang.org/doc/man/xmerl_scan.html#fetch_state-2" "fetch_state(X::FetchState, S:: global_state() ) -> global_state()")
               "xmerl_scan:fetch_state/1"
               ("http://www.erlang.org/doc/man/xmerl_scan.html#fetch_state-1" "fetch_state(S:: global_state() ) -> global_state()")
               "xmerl_scan:event_state/2"
               ("http://www.erlang.org/doc/man/xmerl_scan.html#event_state-2" "event_state(X::EventState, S:: global_state() ) -> global_state()")
               "xmerl_scan:event_state/1"
               ("http://www.erlang.org/doc/man/xmerl_scan.html#event_state-1" "event_state(S:: global_state() ) -> global_state()")
               "xmerl_scan:cont_state/2"
               ("http://www.erlang.org/doc/man/xmerl_scan.html#cont_state-2" "cont_state(X::ContinuationState, S:: global_state() ) -> global_state()")
               "xmerl_scan:cont_state/1"
               ("http://www.erlang.org/doc/man/xmerl_scan.html#cont_state-1" "cont_state(S:: global_state() ) -> global_state()")
               "xmerl_scan:accumulate_whitespace/4"
               ("http://www.erlang.org/doc/man/xmerl_scan.html#accumulate_whitespace-4" "accumulate_whitespace(T::string(), S:: global_state() , X3::atom(), Acc::string()) -> {Acc, T1, S1}")
               "xmerl_scan:"
               ("http://www.erlang.org/doc/man/xmerl_scan.html#type-document" "document() = xmlElement() | xmlDocument()")
               "xmerl_xpath:string/5"
               ("http://www.erlang.org/doc/man/xmerl_xpath.html#string-5" "string(Str, Node, Parents, Doc, Options) -> [ docEntity() ] | Scalar")
               "xmerl_xpath:string/3"
               ("http://www.erlang.org/doc/man/xmerl_xpath.html#string-3" "string(Str, Doc, Options) -> [ docEntity() ] | Scalar")
               "xmerl_xpath:string/2"
               ("http://www.erlang.org/doc/man/xmerl_xpath.html#string-2" "string(Str, Doc) -> [ docEntity() ] | Scalar")
               "xmerl_xpath:"
               ("http://www.erlang.org/doc/man/xmerl_xpath.html#type-docEntity" "docEntity() = #xmlDocument{} | [ docNodes() ]")
               "xmerl_xs:xslapply/2"
               ("http://www.erlang.org/doc/man/xmerl_xs.html#xslapply-2" "xslapply(Fun::Function, EList::list()) -> List")
               "xmerl_xs:value_of/1"
               ("http://www.erlang.org/doc/man/xmerl_xs.html#value_of-1" "value_of(E) -> List")
               "xmerl_xs:select/2"
               ("http://www.erlang.org/doc/man/xmerl_xs.html#select-2" "select(String::string(), E) -> E")
               "xmerl_xs:built_in_rules/2"
               ("http://www.erlang.org/doc/man/xmerl_xs.html#built_in_rules-2" "built_in_rules(Fun, E) -> List")
               "xmerl_xsd:validate/3"
               ("http://www.erlang.org/doc/man/xmerl_xsd.html#validate-3" "validate(Xml::Element, State, Opts::Options) -> Result")
               "xmerl_xsd:validate/2"
               ("http://www.erlang.org/doc/man/xmerl_xsd.html#validate-2" "validate(Xml::Element, State) -> Result")
               "xmerl_xsd:state2file/2"
               ("http://www.erlang.org/doc/man/xmerl_xsd.html#state2file-2" "state2file(S::State, FileName) -> ok | {error, Reason}")
               "xmerl_xsd:state2file/1"
               ("http://www.erlang.org/doc/man/xmerl_xsd.html#state2file-1" "state2file(S::State) -> ok | {error, Reason}")
               "xmerl_xsd:process_validate/3"
               ("http://www.erlang.org/doc/man/xmerl_xsd.html#process_validate-3" "process_validate(Schema, Xml::Element, Opts::Options) -> Result")
               "xmerl_xsd:process_validate/2"
               ("http://www.erlang.org/doc/man/xmerl_xsd.html#process_validate-2" "process_validate(Schema, Xml::Element) -> Result")
               "xmerl_xsd:process_schemas/2"
               ("http://www.erlang.org/doc/man/xmerl_xsd.html#process_schemas-2" "process_schemas(Schemas, Options) -> Result")
               "xmerl_xsd:process_schemas/1"
               ("http://www.erlang.org/doc/man/xmerl_xsd.html#process_schemas-1" "process_schemas(Schemas) -> Result")
               "xmerl_xsd:process_schema/2"
               ("http://www.erlang.org/doc/man/xmerl_xsd.html#process_schema-2" "process_schema(Schema, Options) -> Result")
               "xmerl_xsd:process_schema/1"
               ("http://www.erlang.org/doc/man/xmerl_xsd.html#process_schema-1" "process_schema(Schema) -> Result")
               "xmerl_xsd:format_error/1"
               ("http://www.erlang.org/doc/man/xmerl_xsd.html#format_error-1" "format_error(L::Errors) -> Result")
               "xmerl_xsd:file2state/1"
               ("http://www.erlang.org/doc/man/xmerl_xsd.html#file2state-1" "file2state(FileName) -> {ok, State} | {error, Reason}")
               "xmerl_xsd:"
               ("http://www.erlang.org/doc/man/xmerl_xsd.html#type-filename" "filename() = string()")
               "xref:variables/1"
               ("http://www.erlang.org/doc/man/xref.html#variables-1" "variables(Xref [, Options]) -> {ok, [VariableInfo]}")
               "xref:update/1"
               ("http://www.erlang.org/doc/man/xref.html#update-1" "update(Xref [, Options]) -> {ok, Modules} | Error")
               "xref:stop/1"
               ("http://www.erlang.org/doc/man/xref.html#stop-1" "stop(Xref)")
               "xref:start/2"
               ("http://www.erlang.org/doc/man/xref.html#start-2" "start(Name, Options) -> Return")
               "xref:start/1"
               ("http://www.erlang.org/doc/man/xref.html#start-1" "start(NameOrOptions) -> Return")
               "xref:set_library_path/2"
               ("http://www.erlang.org/doc/man/xref.html#set_library_path-2" "set_library_path(Xref, LibraryPath [, Options]) ->  ok | Error")
               "xref:set_default/2"
               ("http://www.erlang.org/doc/man/xref.html#set_default-2" "set_default(Xref, OptionValues) -> ok | Error")
               "xref:set_default/3"
               ("http://www.erlang.org/doc/man/xref.html#set_default-3" "set_default(Xref, Option, Value) -> {ok, OldValue} | Error")
               "xref:replace_module/3"
               ("http://www.erlang.org/doc/man/xref.html#replace_module-3" "replace_module(Xref, Module, File [, Options]) ->  {ok, module()} | Error")
               "xref:replace_application/3"
               ("http://www.erlang.org/doc/man/xref.html#replace_application-3" "replace_application(Xref, Application,  Directory [, Options]) -> {ok, application()} | Error")
               "xref:remove_release/2"
               ("http://www.erlang.org/doc/man/xref.html#remove_release-2" "remove_release(Xref, Releases) -> ok | Error")
               "xref:remove_module/2"
               ("http://www.erlang.org/doc/man/xref.html#remove_module-2" "remove_module(Xref, Modules) -> ok | Error")
               "xref:remove_application/2"
               ("http://www.erlang.org/doc/man/xref.html#remove_application-2" "remove_application(Xref, Applications) -> ok | Error")
               "xref:q/2"
               ("http://www.erlang.org/doc/man/xref.html#q-2" "q(Xref, Query [, Options]) -> {ok, Answer} | Error")
               "xref:m/1"
               ("http://www.erlang.org/doc/man/xref.html#m-1" "m(Module) -> [DebugInfoResult] | [NoDebugInfoResult] | Error")
               "xref:info/3"
               ("http://www.erlang.org/doc/man/xref.html#info-3" "info(Xref, Category, Items) ->  [{Item, [Info]}]")
               "xref:info/2"
               ("http://www.erlang.org/doc/man/xref.html#info-2" "info(Xref, Category) -> [{Item, [Info]}]")
               "xref:info/1"
               ("http://www.erlang.org/doc/man/xref.html#info-1" "info(Xref) -> [Info]")
               "xref:get_library_path/1"
               ("http://www.erlang.org/doc/man/xref.html#get_library_path-1" "get_library_path(Xref) -> {ok, LibraryPath}")
               "xref:get_default/2"
               ("http://www.erlang.org/doc/man/xref.html#get_default-2" "get_default(Xref, Option) -> {ok, Value} | Error")
               "xref:get_default/1"
               ("http://www.erlang.org/doc/man/xref.html#get_default-1" "get_default(Xref) -> [{Option, Value}]")
               "xref:format_error/1"
               ("http://www.erlang.org/doc/man/xref.html#format_error-1" "format_error(Error) -> Chars")
               "xref:forget/2"
               ("http://www.erlang.org/doc/man/xref.html#forget-2" "forget(Xref, Variables) -> ok | Error")
               "xref:forget/1"
               ("http://www.erlang.org/doc/man/xref.html#forget-1" "forget(Xref) -> ok")
               "xref:d/1"
               ("http://www.erlang.org/doc/man/xref.html#d-1" "d(Directory) -> [DebugInfoResult] | [NoDebugInfoResult] | Error")
               "xref:analyze/2"
               ("http://www.erlang.org/doc/man/xref.html#analyze-2" "analyze(Xref, Analysis [, Options]) ->  {ok, Answer} | Error")
               "xref:add_release/2"
               ("http://www.erlang.org/doc/man/xref.html#add_release-2" "add_release(Xref, Directory [, Options]) ->  {ok, release()} | Error")
               "xref:add_module/2"
               ("http://www.erlang.org/doc/man/xref.html#add_module-2" "add_module(Xref, File [, Options]) -> {ok, module()} | Error")
               "xref:add_directory/2"
               ("http://www.erlang.org/doc/man/xref.html#add_directory-2" "add_directory(Xref, Directory [, Options]) ->  {ok, Modules} | Error")
               "xref:add_application/2"
               ("http://www.erlang.org/doc/man/xref.html#add_application-2" "add_application(Xref, Directory [, Options]) ->  {ok, application()} | Error")
               "yecc:format_error/1"
               ("http://www.erlang.org/doc/man/yecc.html#format_error-1" "format_error(Reason) -> Chars")
               "yecc:file/1"
               ("http://www.erlang.org/doc/man/yecc.html#file-1" "file(Grammarfile [, Options]) -> YeccRet")
               "zip:zip_open/2"
               ("http://www.erlang.org/doc/man/zip.html#zip_open-2" "zip_open(Archive, Options) -> {ok, ZipHandle} | {error, Reason}")
               "zip:zip_open/1"
               ("http://www.erlang.org/doc/man/zip.html#zip_open-1" "zip_open(Archive) -> {ok, ZipHandle} | {error, Reason}")
               "zip:zip_list_dir/1"
               ("http://www.erlang.org/doc/man/zip.html#zip_list_dir-1" "zip_list_dir(ZipHandle) -> {ok, Result} | {error, Reason}")
               "zip:zip_get/2"
               ("http://www.erlang.org/doc/man/zip.html#zip_get-2" "zip_get(FileName, ZipHandle) -> {ok, Result} | {error, Reason}")
               "zip:zip_get/1"
               ("http://www.erlang.org/doc/man/zip.html#zip_get-1" "zip_get(ZipHandle) -> {ok, [Result]} | {error, Reason}")
               "zip:zip_close/1"
               ("http://www.erlang.org/doc/man/zip.html#zip_close-1" "zip_close(ZipHandle) -> ok | {error, einval}")
               "zip:create/3"
               ("http://www.erlang.org/doc/man/zip.html#create-3" "create(Name, FileList, Options) -> RetValue")
               "zip:create/2"
               ("http://www.erlang.org/doc/man/zip.html#create-2" "create(Name, FileList) -> RetValue")
               "zip:zip/3"
               ("http://www.erlang.org/doc/man/zip.html#zip-3" "zip(Name, FileList, Options) -> RetValue")
               "zip:zip/2"
               ("http://www.erlang.org/doc/man/zip.html#zip-2" "zip(Name, FileList) -> RetValue")
               "zip:extract/2"
               ("http://www.erlang.org/doc/man/zip.html#extract-2" "extract(Archive, Options) -> RetValue")
               "zip:extract/1"
               ("http://www.erlang.org/doc/man/zip.html#extract-1" "extract(Archive) -> RetValue")
               "zip:unzip/2"
               ("http://www.erlang.org/doc/man/zip.html#unzip-2" "unzip(Archive, Options) -> RetValue")
               "zip:unzip/1"
               ("http://www.erlang.org/doc/man/zip.html#unzip-1" "unzip(Archive) -> RetValue")
               "zip:tt/1"
               ("http://www.erlang.org/doc/man/zip.html#tt-1" "tt(Archive) -> ok")
               "zip:t/1"
               ("http://www.erlang.org/doc/man/zip.html#t-1" "t(Archive) -> ok")
               "zip:table/2"
               ("http://www.erlang.org/doc/man/zip.html#table-2" "table(Archive, Options) -> RetValue")
               "zip:table/1"
               ("http://www.erlang.org/doc/man/zip.html#table-1" "table(Archive) -> RetValue")
               "zip:list_dir/2"
               ("http://www.erlang.org/doc/man/zip.html#list_dir-2" "list_dir(Archive, Options) -> RetValue")
               "zip:list_dir/1"
               ("http://www.erlang.org/doc/man/zip.html#list_dir-1" "list_dir(Archive) -> RetValue")
               "zip:foldl/3"
               ("http://www.erlang.org/doc/man/zip.html#foldl-3" "foldl(Fun, Acc0, Archive) -> {ok, Acc1} | {error, Reason}")
               "zip:handle()"
               ("http://www.erlang.org/doc/man/zip.html#type-handle" "handle()")
               "zip:create_option()"
               ("http://www.erlang.org/doc/man/zip.html#type-create_option" "create_option() = memory | cooked | verbose | {comment, string()} | {cwd, file:filename() } | {compress, extension_spec() } | {uncompress, extension_spec() }")
               "zip:extension_spec()"
               ("http://www.erlang.org/doc/man/zip.html#type-extension_spec" "extension_spec() = all | [ extension() ] | {add, [ extension() ]} | {del, [ extension() ]}")
               "zip:extension()"
               ("http://www.erlang.org/doc/man/zip.html#type-extension" "extension() = string()")
               "zip:filename()"
               ("http://www.erlang.org/doc/man/zip.html#type-filename" "filename() = file:filename()")
               "zip:zip_file()"
               ("http://www.erlang.org/doc/man/zip.html#type-zip_file" "zip_file() = #zip_file{name = string(), info = file:file_info() , comment = string(), offset = integer() >= 0, comp_size = integer() >= 0}")
               "zip:zip_comment()"
               ("http://www.erlang.org/doc/man/zip.html#type-zip_comment" "zip_comment() = #zip_comment{comment = string()}")
               "zlib:zip/1"
               ("http://www.erlang.org/doc/man/zlib.html#zip-1" "zip(Data) -> Compressed")
               "zlib:unzip/1"
               ("http://www.erlang.org/doc/man/zlib.html#unzip-1" "unzip(Data) -> Decompressed")
               "zlib:uncompress/1"
               ("http://www.erlang.org/doc/man/zlib.html#uncompress-1" "uncompress(Data) -> Decompressed")
               "zlib:setBufSize/2"
               ("http://www.erlang.org/doc/man/zlib.html#setBufSize-2" "setBufSize(Z, Size) -> ok")
               "zlib:open/0"
               ("http://www.erlang.org/doc/man/zlib.html#open-0" "open() -> zstream()")
               "zlib:inflateSetDictionary/2"
               ("http://www.erlang.org/doc/man/zlib.html#inflateSetDictionary-2" "inflateSetDictionary(Z, Dictionary) -> ok")
               "zlib:inflateReset/1"
               ("http://www.erlang.org/doc/man/zlib.html#inflateReset-1" "inflateReset(Z) -> ok")
               "zlib:inflateInit/2"
               ("http://www.erlang.org/doc/man/zlib.html#inflateInit-2" "inflateInit(Z, WindowBits) -> ok")
               "zlib:inflateInit/1"
               ("http://www.erlang.org/doc/man/zlib.html#inflateInit-1" "inflateInit(Z) -> ok")
               "zlib:inflateEnd/1"
               ("http://www.erlang.org/doc/man/zlib.html#inflateEnd-1" "inflateEnd(Z) -> ok")
               "zlib:inflateChunk/2"
               ("http://www.erlang.org/doc/man/zlib.html#inflateChunk-2" "inflateChunk(Z, Data) -> Decompressed | {more, Decompressed}")
               "zlib:inflateChunk/1"
               ("http://www.erlang.org/doc/man/zlib.html#inflateChunk-1" "inflateChunk(Z) -> Decompressed | {more, Decompressed}")
               "zlib:inflate/2"
               ("http://www.erlang.org/doc/man/zlib.html#inflate-2" "inflate(Z, Data) -> Decompressed")
               "zlib:gzip/1"
               ("http://www.erlang.org/doc/man/zlib.html#gzip-1" "gzip(Data) -> Compressed")
               "zlib:gunzip/1"
               ("http://www.erlang.org/doc/man/zlib.html#gunzip-1" "gunzip(Data) -> Decompressed")
               "zlib:getBufSize/1"
               ("http://www.erlang.org/doc/man/zlib.html#getBufSize-1" "getBufSize(Z) -> Size")
               "zlib:deflateSetDictionary/2"
               ("http://www.erlang.org/doc/man/zlib.html#deflateSetDictionary-2" "deflateSetDictionary(Z, Dictionary) -> Adler32")
               "zlib:deflateReset/1"
               ("http://www.erlang.org/doc/man/zlib.html#deflateReset-1" "deflateReset(Z) -> ok")
               "zlib:deflateParams/3"
               ("http://www.erlang.org/doc/man/zlib.html#deflateParams-3" "deflateParams(Z, Level, Strategy) -> ok")
               "zlib:deflateInit/6"
               ("http://www.erlang.org/doc/man/zlib.html#deflateInit-6" "deflateInit(Z, Level, Method, WindowBits, MemLevel, Strategy) -> ok")
               "zlib:deflateInit/2"
               ("http://www.erlang.org/doc/man/zlib.html#deflateInit-2" "deflateInit(Z, Level) -> ok")
               "zlib:deflateInit/1"
               ("http://www.erlang.org/doc/man/zlib.html#deflateInit-1" "deflateInit(Z) -> ok")
               "zlib:deflateEnd/1"
               ("http://www.erlang.org/doc/man/zlib.html#deflateEnd-1" "deflateEnd(Z) -> ok")
               "zlib:deflate/3"
               ("http://www.erlang.org/doc/man/zlib.html#deflate-3" "deflate(Z, Data, Flush) -> Compressed")
               "zlib:deflate/2"
               ("http://www.erlang.org/doc/man/zlib.html#deflate-2" "deflate(Z, Data) -> Compressed")
               "zlib:crc32_combine/4"
               ("http://www.erlang.org/doc/man/zlib.html#crc32_combine-4" "crc32_combine(Z, CRC1, CRC2, Size2) -> CRC")
               "zlib:crc32/3"
               ("http://www.erlang.org/doc/man/zlib.html#crc32-3" "crc32(Z, PrevCRC, Data) -> CRC")
               "zlib:crc32/2"
               ("http://www.erlang.org/doc/man/zlib.html#crc32-2" "crc32(Z, Data) -> CRC")
               "zlib:crc32/1"
               ("http://www.erlang.org/doc/man/zlib.html#crc32-1" "crc32(Z) -> CRC")
               "zlib:compress/1"
               ("http://www.erlang.org/doc/man/zlib.html#compress-1" "compress(Data) -> Compressed")
               "zlib:close/1"
               ("http://www.erlang.org/doc/man/zlib.html#close-1" "close(Z) -> ok")
               "zlib:adler32_combine/4"
               ("http://www.erlang.org/doc/man/zlib.html#adler32_combine-4" "adler32_combine(Z, Adler1, Adler2, Size2) -> Adler")
               "zlib:adler32/3"
               ("http://www.erlang.org/doc/man/zlib.html#adler32-3" "adler32(Z, PrevAdler, Data) -> CheckSum")
               "zlib:adler32/2"
               ("http://www.erlang.org/doc/man/zlib.html#adler32-2" "adler32(Z, Data) -> CheckSum")
               "zlib:zwindowbits()"
               ("http://www.erlang.org/doc/man/zlib.html#type-zwindowbits" "zwindowbits() = -15..-8 | 8..47")
               "zlib:zstrategy()"
               ("http://www.erlang.org/doc/man/zlib.html#type-zstrategy" "zstrategy() = default | filtered | huffman_only | rle")
               "zlib:zmethod()"
               ("http://www.erlang.org/doc/man/zlib.html#type-zmethod" "zmethod() = deflated")
               "zlib:zmemlevel()"
               ("http://www.erlang.org/doc/man/zlib.html#type-zmemlevel" "zmemlevel() = 1..9")
               "zlib:zlevel()"
               ("http://www.erlang.org/doc/man/zlib.html#type-zlevel" "zlevel() = none | default | best_compression | best_speed | 0..9")
               "zlib:zstream()"
               ("http://www.erlang.org/doc/man/zlib.html#type-zstream" "zstream() = port()")))
