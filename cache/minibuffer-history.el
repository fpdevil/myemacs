;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(minibuffer-history-search-history extended-command-history helm-file-name-history imenu--history-list face-name-history regexp-history read-flycheck-checker-history indium-nodejs-commands-history command-history helm-apropos-history erl-nodename-history evil-ex-history file-name-history minibuffer-history helm-M-x-input-history))
(setq extended-command-history '(#("apply-sml" 0 9 (match-part "apply-sml")) "customize-group" "erlang-man-init" "load-theme" "erlang-extended-mode" "edts-mode" "start-edts" "makefile-mode" "ycmd-mode" "yas-minor-mode" "eshell" "moe" "align-regexp" "edts-api-init-node" "edts-init" "apply-airline" "sml/apply-theme" "sml/setup" "erl-ping" "reapply-themes" "sml/customize" "list-packages" "auto-complete-mode" "electric-indent-mode" "whitespace-cleanup" "elisp-format-file" "emacs-lisp-mode" "ielm" "evil-mode" "emacs-init-time" "flycheck-verify-checker" "flycheck-info" "clang-format" "flycheck-mode" "irony-version" "irony-mode" "company-mode" "ycmd-show-debug-info" "jedi:install-server" "undo-tree-visualize" "set-justification-full" "js-doc-insert-file-doc" "flyspell-mode" "auto-insert-mode" "reload-dot-emacs" "structured-haskell-mode" "company-diag" "distel-load-shell" "sunshine-forecast" "http-status-code" "wttrin" "company-distel-modules" "highlight-regexp" "highlight-symbol" "package-list-packages" "package-refresh-contents"))
(setq helm-file-name-history '("app.js" "custom-settings.el" ".jscrc" "delighted-config.el" "tokenProcessing-v2.1.js" "dpcustom-oauth-scope.xsl" "custom-oauth-scope.xsl" "tokenProcessing.js" "testsvr.js" "test.js" "themes-config.el" "custom-settings.el" "themes-config.el" "aqua-internals.el" "aqua-customizations.el" "aqua-internals.el" "themes-config.el" "Stack.py" "themes-config.el" "custom-settings.el" "themes-config.el" "custom-settings.el" "tango-plus-theme-autoloads.el" "twilight-bright-theme-autoloads.el" "aqua-packages.el" "custom-settings.el" "abc.cpp" "company-config.el" "ycm-config.el" "abc.cpp" ".ycm_extra_conf.py" "abc.py" ".ycm_extra_conf.py" "flycheck-config.el" "custom-settings.el" "python-config.el" "custom-settings.el" "custom-settings.el" "python-config.el" "python-config.el" "python-config.el" "custom-settings.el" "python-config.el" "custom-settings.el" "python-config.el" "yasnippets-config.el" "python-config.el" ".edts" "program1.erl" "init.el" "custom-settings.el" "erlang-config.el" "erlang-config.el" "erlang-config.el" "custom-settings.el" "custom-settings.el" "custom-settings.el" "custom-settings.el" "custom-settings.el" "erlang-config-aug.erl" "eflymake" "debug.hrl" "dired-config.el" "Abc.hs" "myfile.erl" "tester.erl" "edts-man.el" "tester.erl" "test123.erl" "abcd.erl" "custom-settings.el" "abc.erl" "custom-settings.el" "async-autoloads.el" "company-math-autoloads.el" "helm-autoloads.el" "helm-core-autoloads.el" "ivy-autoloads.el" "org-loaddefs.el" "org-plus-contrib-autoloads.el" "org-loaddefs.el" "org-plus-contrib-autoloads.el" "slime-autoloads.el" "custom-settings.el" "Haskercise1.hs" "custom-settings.el" "cpp-config.el" "custom-settings.el" "alchemist-autoloads.el" "dumb-jump-autoloads.el" "ecb-autoloads.el" "editorconfig-autoloads.el" "edts-autoloads.el" "ensime-autoloads.el" "esup-autoloads.el" "evil-autoloads.el" "find-file-in-project-autoloads.el" "flycheck-tip-autoloads.el" "imenu-list-autoloads.el" "ivy-autoloads.el"))
(setq face-name-history '("hi-pink" "all faces" "hi-blue-b" "hi-pink"))
(setq regexp-history '("erl-nodename-cache" "autopep8" "eslint"))
(setq read-flycheck-checker-history '("javascript-eslint" "javascript-eslint"))
(setq indium-nodejs-commands-history '("node "))
(setq command-history '((describe-variable 'edts-man-root) (apply-sml) (helm-M-x nil #("apply-sml" 0 9 (match-part "apply-sml"))) (describe-variable 'erlang-erl-path) (customize-group "edts") (helm-M-x nil #("customize-group" 0 15 (match-part "customize-group"))) (erlang-man-init) (helm-M-x nil "erlang-man-init") (edts-man-setup) (helm-M-x nil #("edts-man-setup" 0 14 (match-part "edts-man-setup"))) (apply-sml) (helm-M-x nil "apply-sml") (describe-variable 'ac-sources) (describe-variable 'ac-omni-completion-sources) (describe-variable 'edts-code-issue-wrap-around) (evil-paredit-delete 10337 10338 'line nil nil) (evil-replace 52 52 'exclusive 108) (apply-sml) (helm-M-x nil #("apply-sml" 0 9 (match-part "apply-sml"))) (apply-sml) (helm-M-x nil #("apply-sml" 0 9 (match-part "apply-sml"))) (load-theme 'sanityinc-solarized-light nil nil) (helm-M-x nil "load-theme") (helm-M-x nil #("load-theme" 0 10 (match-part "load-theme"))) (evil-delete 421 422 'line nil nil) (evil-delete 422 444 'line nil nil) (evil-delete 4611 4674 'line nil nil) (evil-yank 4546 4609 'line nil nil) (apply-sml) (helm-M-x nil "apply-sml") (evil-paredit-delete 10287 10369 'line nil nil) (evil-paredit-delete 10148 10191 'line nil nil) (evil-paredit-delete 10137 10186 'line nil nil) (evil-delete 4546 4564 'line nil nil) (apply-sml) (helm-M-x nil #("apply-sml" 0 9 (match-part "apply-sml"))) (evil-paredit-delete 13203 13204 'line nil nil) (describe-variable 'erlang-root-dir) (describe-variable 'erlang-man-root-dir) (erlang-extended-mode 'toggle) (helm-M-x nil #("erlang-extended-mode" 0 20 (match-part "erlang-extended-mode"))) (edts-mode 'toggle) (helm-M-x nil "edts-mode") (start-edts) (helm-M-x nil "start-edts") (evil-delete 186 187 'line nil nil) (apply-sml) (helm-M-x nil "apply-sml") (evil-paredit-delete 5831 5832 'line nil nil) (describe-variable 'erlang-man-dirs) (evil-replace 44683 44697 'line 108) (makefile-mode) (helm-M-x nil #("makefile-mode" 0 13 (match-part "makefile-mode"))) (dired "/Users/sampathsingamsetty/sw/programming/fp/erlang/my-workspace/." "-ahlv") (evil-delete 94 101 'line nil nil) (ycmd-mode 'toggle) (helm-M-x nil "ycmd-mode") (ycmd-mode 'toggle) (helm-M-x nil "ycmd-mode") (yas-minor-mode 'toggle) (helm-M-x nil "yas-minor-mode") (ycmd-mode 'toggle) (helm-M-x nil "ycmd-mode") (eshell nil) (helm-M-x nil "eshell") (apply-sml) (helm-M-x nil "apply-sml") (evil-paredit-yank 898 980 'line nil nil) (describe-package 'pcomplete) (apply-sml) (helm-M-x nil #("apply-sml" 0 9 (match-part "apply-sml"))) (moe) (helm-M-x nil #("moe" 0 3 (match-part "moe"))) (evil-paredit-delete 9085 9167 'line nil nil) (evil-paredit-delete 10288 10289 'line nil nil) (evil-paredit-delete 10289 10371 'line nil nil) (evil-paredit-yank 14326 14408 'line nil nil) (evil-paredit-delete 14274 14356 'line nil nil) (evil-paredit-delete 1180 1262 'line nil nil) (evil-paredit-yank 898 980 'line nil nil) (evil-paredit-yank 6704 6783 'line nil nil) (align-regexp 304 726 "\\(\\s-*\\)\\." 1 1 nil) (helm-M-x nil "align-regexp") (evil-paredit-delete 947 1029 'line nil nil) (evil-paredit-delete 891 973 'line nil nil) (evil-paredit-yank 727 809 'line nil nil) (apply-sml) (helm-M-x nil "apply-sml") (apply-sml) (helm-M-x nil #("apply-sml" 0 9 (match-part "apply-sml"))) (edts-api-init-node "code" "mycode" nil '("src") '("include") nil nil) (helm-M-x nil #("edts-api-init-node" 0 18 (match-part "edts-api-init-node"))) (edts-api-start-server) (helm-M-x nil #("edts-api-start-server" 0 21 (match-part "edts-api-start-server"))) (customize-group "edts") (helm-M-x nil "customize-group") (apply-sml) (helm-M-x nil "apply-sml") (describe-variable 'edts-man-root) (apply-sml) (helm-M-x nil #("apply-sml" 0 9 (match-part "apply-sml")))))
(setq helm-apropos-history '("ac-mode" "erlang-man-dir" "electr" "common-lisp-indent" "minor-mode-map" "company-ac" "custom-ava" "company-b" "company-pseudo" "company-ba" "url-sho" "ycmd-idle" "company-ke" "company-ycmd" "inferior-erlang-pr" "erlang-font" "file-tr" "extended" "erlang-wr" "erl-cookie" "erl-coo" "edts" "elpy-module" "delete" "every" "package-inst" "package-refr" "ac-config" "region-beg" "ac-config" "ac-comm" "auto-com" "yas-dr" "helm-info-em" "dired-list" "erlang-wr"))
(setq erl-nodename-history '("distel@localhost" "distel@apple" "emacs" "distel@apple" "distel_11540@apple" "distel@localhost" "emacs@localhost" "distel@localhost"))
(setq evil-ex-history '(#("33" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("761" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("w" 0 1 (ex-index 1)) #("268" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("w" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("647" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("w" 0 1 (ex-index 1)) #("ls" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("654" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("147" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("851" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("850" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("w" 0 1 (ex-index 1)) #("582" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("w" 0 1 (ex-index 1)) #("611" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("285" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("ls" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("ls" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("ls" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1))))
(setq file-name-history '("~/sw/programming/fp/erlang/my-workspace/code/src/program1.erl" #("~/aquamacs.d/modules/erlang-config.el" 1 2 (match-part "/Users/sampathsingamsetty/aquamacs.d/modules/erlang-config.el") 2 37 (match-part "/Users/sampathsingamsetty/aquamacs.d/modules/erlang-config.el")) "~/aquamacs.d/custom.el" "~/aquamacs.d/custom.el" #("~/aquamacs.d/modules/erlang-flycheck-config.el" 1 2 (match-part "/Users/sampathsingamsetty/aquamacs.d/modules/erlang-flycheck-config.el") 2 46 (match-part "/Users/sampathsingamsetty/aquamacs.d/modules/erlang-flycheck-config.el")) "~/sw/programming/fp/erlang/my-workspace/makefile_joe.template" "~/vim_osx/config/core/insert_templates.vim" "/tmp/junk.cpp" #("~/aquamacs.d/modules/company-config.el" 1 2 (match-part "/Users/sampathsingamsetty/aquamacs.d/modules/company-config.el") 2 38 (match-part "/Users/sampathsingamsetty/aquamacs.d/modules/company-config.el")) "~/aquamacs.d/modules/shell-config.el" #("~/aquamacs.d/modules/ac-complete-config.el" 1 2 (match-part "/Users/sampathsingamsetty/aquamacs.d/modules/ac-complete-config.el") 2 42 (match-part "/Users/sampathsingamsetty/aquamacs.d/modules/ac-complete-config.el")) #("~/aquamacs.d/modules/themes-config.el" 1 2 (match-part "/Users/sampathsingamsetty/aquamacs.d/modules/themes-config.el") 2 37 (match-part "/Users/sampathsingamsetty/aquamacs.d/modules/themes-config.el")) "~/aquamacs.d/modules/erlang-helper-config.el" "~/aquamacs.d/custom.el" "~/aquamacs.d/custom.el" "~/aquamacs.d/custom.el" "~/.emacs.d/packages/elpa/org-easy-img-insert-20160915.1308/org-easy-img-insert-autoloads.el" "~/.emacs.d/packages/elpa/org-download-20170605.23/org-download-autoloads.el" "~/.emacs.d/packages/elpa/org-tree-slide-20160513.2325/org-tree-slide-autoloads.el" "~/.emacs.d/packages/elpa/org-bullets-20140918.1137/org-bullets-autoloads.el" "~/.emacs.d/packages/elpa/org-ac-20170401.607/org-ac-autoloads.el" "~/.emacs.d/packages/elpa/org-plus-contrib-20170904/org-loaddefs.el" "~/.emacs.d/packages/elpa/org-plus-contrib-20170904/org-plus-contrib-autoloads.el" "~/.emacs.d/packages/elpa/org-plus-contrib-20170904/org-loaddefs.el" "~/.emacs.d/packages/elpa/org-plus-contrib-20170904/org-plus-contrib-autoloads.el" "~/.emacs.d/packages/elpa/sphinx-doc-20160116.317/sphinx-doc-autoloads.el" "~/.emacs.d/packages/elpa/py-autopep8-20160925.352/py-autopep8-autoloads.el" "~/.emacs.d/packages/elpa/py-yapf-20160925.422/py-yapf-autoloads.el" "~/.emacs.d/packages/elpa/python-pylint-1.1/python-pylint-autoloads.el" "~/.emacs.d/packages/elpa/elpy-20170903.143/elpy-autoloads.el" "~/.emacs.d/packages/elpa/find-file-in-project-20170903.2000/find-file-in-project-autoloads.el" "~/.emacs.d/packages/elpa/ivy-20170902.234/ivy-autoloads.el" "~/.emacs.d/packages/elpa/highlight-indentation-20170502.43/highlight-indentation-autoloads.el" "~/.emacs.d/packages/elpa/pyvenv-20170826.812/pyvenv-autoloads.el" "~/.emacs.d/packages/elpa/yasnippet-20170828.1908/yasnippet-autoloads.el" "~/.emacs.d/packages/elpa/jedi-20160425.2156/jedi-autoloads.el" "~/.emacs.d/packages/elpa/virtualenvwrapper-20161002.1515/virtualenvwrapper-autoloads.el" "~/.emacs.d/packages/elpa/git-gutter-20161105.656/git-gutter-autoloads.el" "~/.emacs.d/packages/elpa/epresent-20160410.1901/epresent-autoloads.el" "~/.emacs.d/packages/elpa/ob-http-20170411.1842/ob-http-autoloads.el" "~/.emacs.d/packages/elpa/org-easy-img-insert-20160915.1308/org-easy-img-insert-autoloads.el" "~/.emacs.d/packages/elpa/org-download-20170605.23/org-download-autoloads.el" "~/.emacs.d/packages/elpa/latex-pretty-symbols-20151112.244/latex-pretty-symbols-autoloads.el" "~/.emacs.d/packages/elpa/ox-html5slide-20131227.2206/ox-html5slide-autoloads.el" "~/.emacs.d/packages/elpa/org-tree-slide-20160513.2325/org-tree-slide-autoloads.el" "~/.emacs.d/packages/elpa/ox-reveal-20161027.226/ox-reveal-autoloads.el" "~/.emacs.d/packages/elpa/org-20170904/org-loaddefs.el" "~/.emacs.d/packages/elpa/org-20170904/org-autoloads.el" "~/.emacs.d/packages/elpa/org-20170904/org-loaddefs.el" "~/.emacs.d/packages/elpa/org-20170904/org-autoloads.el" "~/.emacs.d/packages/elpa/org-bullets-20140918.1137/org-bullets-autoloads.el" "~/.emacs.d/packages/elpa/org-ac-20170401.607/org-ac-autoloads.el" "~/.emacs.d/packages/elpa/auto-complete-pcmp-20140226.2251/auto-complete-pcmp-autoloads.el" "~/.emacs.d/packages/elpa/log4e-20170401.604/log4e-autoloads.el" "~/.emacs.d/packages/elpa/yaxception-20150105.652/yaxception-autoloads.el" "~/.emacs.d/packages/elpa/org-plus-contrib-20170904/org-loaddefs.el" "~/.emacs.d/packages/elpa/org-plus-contrib-20170904/org-plus-contrib-autoloads.el" "~/.emacs.d/packages/elpa/org-plus-contrib-20170904/org-loaddefs.el" "~/.emacs.d/packages/elpa/org-plus-contrib-20170904/org-plus-contrib-autoloads.el" "~/.emacs.d/packages/elpa/google-c-style-20140929.1118/google-c-style-autoloads.el" "~/.emacs.d/packages/elpa/flymake-google-cpplint-20140205.525/flymake-google-cpplint-autoloads.el" "~/.emacs.d/packages/elpa/flymake-cursor-20130822.332/flymake-cursor-autoloads.el" "~/.emacs.d/packages/elpa/flymake-hlint-20170722.1846/flymake-hlint-autoloads.el" "~/.emacs.d/packages/elpa/flymake-python-pyflakes-20170722.1846/flymake-python-pyflakes-autoloads.el" "~/.emacs.d/packages/elpa/flymake-easy-20140818.55/flymake-easy-autoloads.el" "~/.emacs.d/packages/elpa/flyspell-lazy-20141222.652/flyspell-lazy-autoloads.el" "~/.emacs.d/packages/elpa/flycheck-rebar3-20161030.615/flycheck-rebar3-autoloads.el" "~/.emacs.d/packages/elpa/flycheck-plantuml-20161122.219/flycheck-plantuml-autoloads.el" "~/.emacs.d/packages/elpa/plantuml-mode-20170819.1033/plantuml-mode-autoloads.el" "~/.emacs.d/packages/elpa/flycheck-irony-20160317.1536/flycheck-irony-autoloads.el" "~/.emacs.d/packages/elpa/flycheck-clojure-20170221.1354/flycheck-clojure-autoloads.el" "~/.emacs.d/packages/elpa/flycheck-mix-20170118.630/flycheck-mix-autoloads.el" "~/.emacs.d/packages/elpa/elixir-mode-20170102.942/elixir-mode-autoloads.el" "~/.emacs.d/packages/elpa/flycheck-elixir-20160629.59/flycheck-elixir-autoloads.el" "~/.emacs.d/packages/elpa/flycheck-haskell-20170815.44/flycheck-haskell-autoloads.el" "~/.emacs.d/packages/elpa/helm-flycheck-20160710.129/helm-flycheck-autoloads.el" "~/.emacs.d/packages/elpa/flycheck-tip-20170729.1411/flycheck-tip-autoloads.el" "~/.emacs.d/packages/elpa/flycheck-pos-tip-20170504.1504/flycheck-pos-tip-autoloads.el" "~/.emacs.d/packages/elpa/flycheck-color-mode-line-20170512.1607/flycheck-color-mode-line-autoloads.el" "~/.emacs.d/packages/elpa/graphviz-dot-mode-20151127.621/graphviz-dot-mode-autoloads.el" "~/.emacs.d/packages/elpa/markdown-mode-20170830.2131/markdown-mode-autoloads.el" "~/.emacs.d/packages/elpa/dumb-jump-20170821.13/dumb-jump-autoloads.el" "~/.emacs.d/packages/elpa/f-20170404.1039/f-autoloads.el" "~/.emacs.d/packages/elpa/paredit-20170405.1149/paredit-autoloads.el" "~/.emacs.d/packages/elpa/smartparens-20170723.1205/smartparens-autoloads.el" "~/.emacs.d/packages/elpa/exec-path-from-shell-20170508.4/exec-path-from-shell-autoloads.el" "~/.emacs.d/packages/elpa/fuzzy-20150729.2037/fuzzy-autoloads.el" "~/.emacs.d/packages/elpa/ac-slime-20150729.2035/ac-slime-autoloads.el" "~/.emacs.d/packages/elpa/slime-20170828.451/slime-autoloads.el" "~/.emacs.d/packages/elpa/macrostep-20161120.1306/macrostep-autoloads.el" "~/.emacs.d/packages/elpa/auto-complete-c-headers-20150911.2023/auto-complete-c-headers-autoloads.el" "~/.emacs.d/packages/elpa/auto-complete-clang-20140409.52/auto-complete-clang-autoloads.el" "~/.emacs.d/packages/elpa/ac-cider-20161006.19/ac-cider-autoloads.el" "~/.emacs.d/packages/elpa/cider-20170829.941/cider-autoloads.el" "~/.emacs.d/packages/elpa/clojure-mode-20170819.2159/clojure-mode-autoloads.el" "~/.emacs.d/packages/elpa/queue-0.2/queue-autoloads.el" "~/.emacs.d/packages/elpa/spinner-1.7.3/spinner-autoloads.el" "~/.emacs.d/packages/elpa/seq-2.20/seq-autoloads.el" "~/.emacs.d/packages/elpa/auto-complete-nxml-20140220.2058/auto-complete-nxml-autoloads.el"))
(setq minibuffer-history '("-Top of Chapter-" "CosEventChannelAdmin" "edts" "Emacs" "erl" "erlang-erl" "erla" "edts" "progr" "Emacs" "ac-sou" "ac-omni" "edts-code" "erlang" "" "Emacs" "erlang" "erlang-root" "erlang-man" "progr" "erlang-con" "erlang-man-r" "/Users/sampathsingamsetty/sw/programming/fp/erlang/my-workspace/" "-ahlv" "/Users/sampathsingamsetty/vim_osx/config/core/" "/tmp/junk.cpp" "company-co" "/Users/sampathsingamsetty/aquamacs.d/modules/shell-config.el" "ac-" "pcompl" "themes" "/Users/sampathsingamsetty/aquamacs.d/modules/" "/Users/sampathsingamsetty/aquamacs.d/modules/erla" "/Users/sampathsingamsetty/aquamacs.d/modules/erlang-config.el" "ac-c" "\\." "/Users/sampathsingamsetty/aquamacs.d/modules/shell-config.el" "/Users/sampathsingamsetty/aquamacs.d/modules/erl" "edts" "append/3" "CosFileTransfer_FileTransferSession" "Emacs" "edts-man-root" "pro" "erl-node" "" "erl-nodename" "inferior-er" "erlang" "program1" "Emacs" "/tmp/sh" "/Users/sampathsingamsetty/aquamacs.d/modules/" "elis" "/Users/sampathsingamsetty/aquamacs.d/modules/elisp" "/Users/sampathsingamsetty/aquamacs.d/modules/f" "junk" "elisp" "common " "lisp-indent" "aq" "evil" "/Users/sampathsingamsetty/aquamacs.d/aqua-package-repos.el" "/Users/sampathsingamsetty/aquamacs.d/modules/fiplr-config.el" "aqua-pa" "evil" "js-c" "/tmp/" "/tmp/sh" "/Users/sampathsingamsetty/aquamacs.d/modules/" "themes" "/tmp/abcde.js" "ॐ" "tokenpro" "ac-au" "c-tab" "tab-al" "ac-c" "/tmp/abc.js" "themes" "js-con" ".js" "ycm" "/tmp/mtable.cpp" "/tmp/tree.cpp" "/tmp/permuteabc.cpp" "/tmp/mtable.cpp" "/tmp/junk.js" "/tmp/sampath.cpp" "le" "/tmp/junk.cpp" "package" "packa" "pac" "/tmp/sampath.cpp" "/tmp/sampath.py" "/tmp/test.js" "/Users/sampathsingamsetty/sw/programming/js/OpenId/src/decr" "/Users/sampathsingamsetty/sw/programming/js/OpenId/src/token" "/Users/sampathsingamsetty/sw/programming/js/OpenId/src/"))
(setq helm-M-x-input-history '("app" "cust" "erlang-man" "edts-man" "app" "loa" "load" "app" "erlang-ex" "edts-" "edts" "app" "makef" #("strc" 0 1 (fontified t face (highlight-symbol-face (:foreground "#846519"))) 1 3 (fontified t face (highlight-symbol-face (:foreground "#846519"))) 3 4 (fontified t face (highlight-symbol-face (:foreground "#846519")))) "yas" "yc" "eshe" "Emacs" "appl" "moe" "align" "app" "appl" "edts-api" "custo" "Emacs" "appl" "edts-man" "edts-init" "app" "appl" "apply" #("hrl" 0 3 (face (highlight-symbol-face font-lock-string-face) fontified t)) "sml" "erl-p" "reapp" "edts" "sml" "rea" "lis" "li pa" "yc" "auto" "ele" "electr" "reapp" "whites" "elis" "rea" "lisp-mode" "ielm" "reapp" "reload" "cust" "reapp" "electric-in" "evil" "ycmd" "reap" "apply" "reapp" "app" "emac" "reapp" "ॐ" "apply" "app" "li pa" "app" "flycheck" "app" #("int" 0 1 (face (highlight-symbol-face (:foreground "#8a569b") font-lock-type-face) c-is-sws t fontified t) 1 2 (face (highlight-symbol-face (:foreground "#8a569b") font-lock-type-face) fontified t) 2 3 (c-type c-decl-id-start face (highlight-symbol-face (:foreground "#8a569b") font-lock-type-face) fontified t)) "custom" "white" "clang" "moe" "app" "reapp" "app" "white" "flyche" "moe" "company" "iron" "app" "reapp" "ycm" "compa" "auto" "iron" "ycmd" "moe" "ycmd-de" "reapp" "load-th" "ycmd" "emacs-ini" "re" "cust" "rea"))
