;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(shell-command-history minibuffer-history helm-M-x-input-history))
(setq minibuffer-history '("dote" "" "test" "" "/Users/sampathsingamsetty/sw/programming/python/algorithms/src/stacks/LargestRectangle.py"))
(setq helm-M-x-input-history '("hl" "hl-" #("int" 0 3 (fontified t face (highlight-symbol-face font-lock-doc-face))) "sphinx" "yapf" "Store" "edit-p" "pict" "describe" "set-ju" "reapp"))
(setq search-ring 'nil)
(setq regexp-search-ring '("pict"))
(setq kill-ring '(#("stack" 0 1 (fontified t face font-lock-variable-name-face) 1 2 (fontified t face font-lock-variable-name-face) 2 5 (fontified t face font-lock-variable-name-face)) #("i" 0 1 (fontified t face font-lock-doc-face)) #("t" 0 1 (fontified t face font-lock-doc-face)) #("c" 0 1 (fontified t face font-lock-doc-face)) #("n" 0 1 (fontified t face font-lock-doc-face)) #("u" 0 1 (fontified t face font-lock-doc-face)) #("f" 0 1 (fontified t face font-lock-doc-face)) #(" " 0 1 (fontified t face font-lock-doc-face)) #("e" 0 1 (fontified t face font-lock-doc-face)) #("b" 0 1 (fontified t face font-lock-doc-face)) #("i" 0 1 (fontified t face font-lock-doc-face)) #("r" 0 1 (fontified t face font-lock-doc-face)) #("c" 0 1 (fontified t face font-lock-doc-face)) #("s" 0 1 (fontified t face font-lock-doc-face)) #("e" 0 1 (fontified t face font-lock-doc-face)) #("d" 0 1 (fontified t face font-lock-doc-face)) #(" " 0 1 (fontified t face font-lock-doc-face)) #("y" 0 1 (fontified t face font-lock-doc-face)) #("l" 0 1 (fontified t face font-lock-doc-face)) #("f" 0 1 (fontified t face font-lock-doc-face)) #("e" 0 1 (fontified t face font-lock-doc-face)) #("i" 0 1 (fontified t face font-lock-doc-face)) #("r" 0 1 (fontified t face font-lock-doc-face)) #("b" 0 1 (fontified t face font-lock-doc-face)) #(" " 0 1 (fontified t face font-lock-doc-face)) #("!" 0 1 (fontified t face font-lock-doc-face)) #("E" 0 1 (fontified t face font-lock-doc-face)) #("M" 0 1 (fontified t face font-lock-doc-face)) #("X" 0 1 (fontified t face font-lock-doc-face)) #("I" 0 1 (fontified t face (highlight-symbol-face font-lock-doc-face))) #("F" 0 1 (fontified t face (highlight-symbol-face error font-lock-doc-face))) #("e" 0 1 (fontified t face (highlight-symbol-face font-lock-comment-face))) #("z" 0 1 (fontified t face (highlight-symbol-face font-lock-comment-face))) #("i" 0 1 (fontified t face font-lock-comment-face)) #("s" 0 1 (fontified t face (highlight-symbol-face font-lock-comment-face))) "The idea is to use a stack to store the index whose value(height) is smaller than or equal to current height. This makes sure the elements in the stack is in an increasing order. When the histogram starts to decline, pop the stack and calculate area that ends with the popped height. The width is calculated by the popped index and top element in the stack. All the elements that has smaller height will be popped and then the current index will be pushed. The returning value will be compared/picked everytime a area size calculated." "" "" #("--------------------
" 0 21 (yank-handler (evil-yank-line-handler nil t))) #("     _
    |
    |
" 0 5 (fontified t yank-handler (evil-yank-line-handler nil t)) 5 6 (fontified t yank-handler (evil-yank-line-handler nil t)) 6 7 (fontified t yank-handler (evil-yank-line-handler nil t)) 7 12 (fontified t yank-handler (evil-yank-line-handler nil t)) 12 13 (fontified t yank-handler (evil-yank-line-handler nil t)) 13 18 (fontified t yank-handler (evil-yank-line-handler nil t)) 18 19 (fontified t justification full yank-handler (evil-yank-line-handler nil t))) #("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) #("
" 0 1 (fontified t yank-handler (evil-yank-line-handler nil t))) #("
" 0 1 (justification full fontified t yank-handler (evil-yank-line-handler nil t))) #("Given n non-negative integers representing the histogram’s bar height where the width of each bar is 1, find the area of largest rectangle in the histogram" 0 43 (fontified t) 43 46 (fontified t) 46 47 (fontified t) 47 56 (fontified t) 56 76 (fontified t) 76 79 (fontified t) 79 98 (fontified t) 98 100 (fontified t face font-lock-keyword-face) 100 101 (fontified t) 101 102 (fontified t face highlight-numbers-number) 102 109 (fontified t) 109 112 (fontified t) 112 139 (fontified t) 139 141 (fontified t face font-lock-keyword-face) 141 142 (fontified t) 142 145 (fontified t) 145 146 (fontified t) 146 155 (fontified t)) "Given n non-negative integers representing the histogram’s bar height where the width of each bar is 1, find the area of largest rectangle in the histogram" #("#" 0 1 (fontified t face font-lock-comment-delimiter-face))))
