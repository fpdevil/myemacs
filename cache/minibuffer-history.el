;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by â€˜savehistâ€™.

(setq savehist-minibuffer-history-variables '(helm-apropos-history minibuffer-history helm-M-x-input-history))
(setq minibuffer-history '("/Users/sampathsingamsetty/sw/programming/fp/haskell/hsworks/src/HsStudy2.hs" "=" "/Users/sampathsingamsetty/sw/programming/fp/haskell/hsworks/src/HsStudy1.hs" "qs" "=" "/tmp/Cat.hs"))
(setq helm-M-x-input-history '("stylis" "justifica" "align re" "reapp"))
(setq search-ring 'nil)
(setq regexp-search-ring 'nil)
(setq kill-ring '(#("Step" 0 4 (fontified t face haskell-constructor-face)) #("Step" 0 4 (fontified t face haskell-constructor-face)) #("Rational" 0 8 (font-lock-fontified t fontified t font-lock-multiline t haskell-type t face haskell-type-face)) #("Rational" 0 8 (font-lock-fontified t fontified t face font-lock-comment-face)) #("Zero     = 0
  fromEnum (Succ x) = fromEnum x + 1" 0 4 (fontified t face haskell-constructor-face) 4 5 (fontified t) 5 9 (fontified t) 9 10 (fontified t syntax-table (1) face haskell-operator-face) 10 11 (fontified t) 11 12 (fontified t syntax-table (2) face highlight-numbers-number) 12 13 (fontified t) 13 15 (fontified t) 15 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t face (rainbow-delimiters-depth-1-face)) 25 26 (fontified t face haskell-constructor-face) 26 29 (fontified t face haskell-constructor-face) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t face (rainbow-delimiters-depth-1-face)) 32 33 (fontified t) 33 34 (fontified t syntax-table (1) face haskell-operator-face) 34 35 (fontified t) 35 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t syntax-table (1) face haskell-operator-face) 47 48 (fontified t) 48 49 (fontified t syntax-table (2) face highlight-numbers-number)) #("0 = Zero
  toEnum x
    | x > 0 = Succ $ toEnum (x - 1)
    | otherwise = Zero" 0 1 (syntax-table (2) fontified t face highlight-numbers-number) 1 2 (fontified t) 2 3 (syntax-table (1) fontified t face haskell-operator-face) 3 4 (fontified t) 4 6 (fontified t face haskell-constructor-face) 6 7 (fontified t face haskell-constructor-face) 7 8 (fontified t face haskell-constructor-face) 8 9 (fontified t) 9 11 (fontified t) 11 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (syntax-table (1) fontified t face haskell-operator-face) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (syntax-table (1) fontified t face haskell-operator-face) 29 30 (fontified t) 30 31 (syntax-table (2) fontified t face highlight-numbers-number) 31 32 (fontified t) 32 33 (syntax-table (1) fontified t face haskell-operator-face) 33 34 (fontified t) 34 35 (fontified t face haskell-constructor-face) 35 36 (fontified t face haskell-constructor-face) 36 37 (fontified t face haskell-constructor-face) 37 38 (fontified t face haskell-constructor-face) 38 39 (fontified t) 39 40 (syntax-table (1) fontified t face haskell-operator-face) 40 41 (fontified t) 41 44 (fontified t) 44 48 (fontified t) 48 49 (fontified t face (rainbow-delimiters-depth-1-face)) 49 50 (fontified t) 50 51 (fontified t) 51 52 (syntax-table (1) fontified t face haskell-operator-face) 52 53 (fontified t) 53 54 (syntax-table (2) fontified t face highlight-numbers-number) 54 55 (fontified t face (rainbow-delimiters-depth-1-face)) 55 56 (fontified t) 56 57 (fontified t) 57 58 (fontified t) 58 59 (fontified t) 59 60 (fontified t) 60 61 (syntax-table (1) fontified t face haskell-operator-face) 61 62 (fontified t) 62 66 (fontified t) 66 72 (fontified t) 72 73 (syntax-table (1) fontified t face haskell-operator-face) 73 74 (fontified t) 74 78 (fontified t face haskell-constructor-face)) #("  x - Zero = x
  Zero - _ = Zero
  x - y = Succ (x - y - 1)
" 0 2 (fontified t yank-handler (evil-yank-line-handler nil t)) 2 3 (fontified t yank-handler (evil-yank-line-handler nil t)) 3 4 (fontified t yank-handler (evil-yank-line-handler nil t)) 4 5 (face haskell-operator-face syntax-table (1) fontified t yank-handler (evil-yank-line-handler nil t)) 5 6 (fontified t yank-handler (evil-yank-line-handler nil t)) 6 10 (face haskell-constructor-face fontified t yank-handler (evil-yank-line-handler nil t)) 10 11 (fontified t yank-handler (evil-yank-line-handler nil t)) 11 12 (face haskell-operator-face syntax-table (1) fontified t yank-handler (evil-yank-line-handler nil t)) 12 13 (fontified t yank-handler (evil-yank-line-handler nil t)) 13 14 (fontified t yank-handler (evil-yank-line-handler nil t)) 14 15 (fontified t yank-handler (evil-yank-line-handler nil t)) 15 17 (fontified t yank-handler (evil-yank-line-handler nil t)) 17 21 (face haskell-constructor-face fontified t yank-handler (evil-yank-line-handler nil t)) 21 22 (fontified t yank-handler (evil-yank-line-handler nil t)) 22 23 (face haskell-operator-face syntax-table (1) fontified t yank-handler (evil-yank-line-handler nil t)) 23 24 (fontified t yank-handler (evil-yank-line-handler nil t)) 24 25 (face haskell-keyword-face fontified t yank-handler (evil-yank-line-handler nil t)) 25 26 (fontified t yank-handler (evil-yank-line-handler nil t)) 26 27 (face haskell-operator-face syntax-table (1) fontified t yank-handler (evil-yank-line-handler nil t)) 27 28 (fontified t yank-handler (evil-yank-line-handler nil t)) 28 32 (face haskell-constructor-face fontified t yank-handler (evil-yank-line-handler nil t)) 32 33 (fontified t yank-handler (evil-yank-line-handler nil t)) 33 35 (fontified t yank-handler (evil-yank-line-handler nil t)) 35 36 (fontified t yank-handler (evil-yank-line-handler nil t)) 36 37 (fontified t yank-handler (evil-yank-line-handler nil t)) 37 38 (face haskell-operator-face syntax-table (1) fontified t yank-handler (evil-yank-line-handler nil t)) 38 39 (fontified t yank-handler (evil-yank-line-handler nil t)) 39 40 (fontified t yank-handler (evil-yank-line-handler nil t)) 40 41 (fontified t yank-handler (evil-yank-line-handler nil t)) 41 42 (face haskell-operator-face syntax-table (1) fontified t yank-handler (evil-yank-line-handler nil t)) 42 43 (fontified t yank-handler (evil-yank-line-handler nil t)) 43 47 (face (highlight-symbol-face haskell-constructor-face) fontified t yank-handler (evil-yank-line-handler nil t)) 47 48 (fontified t yank-handler (evil-yank-line-handler nil t)) 48 49 (face (rainbow-delimiters-depth-1-face) fontified t yank-handler (evil-yank-line-handler nil t)) 49 50 (fontified t yank-handler (evil-yank-line-handler nil t)) 50 51 (fontified t yank-handler (evil-yank-line-handler nil t)) 51 52 (face haskell-operator-face syntax-table (1) fontified t yank-handler (evil-yank-line-handler nil t)) 52 53 (fontified t yank-handler (evil-yank-line-handler nil t)) 53 54 (fontified t yank-handler (evil-yank-line-handler nil t)) 54 55 (fontified t yank-handler (evil-yank-line-handler nil t)) 55 56 (face haskell-operator-face syntax-table (1) fontified t yank-handler (evil-yank-line-handler nil t)) 56 57 (fontified t yank-handler (evil-yank-line-handler nil t)) 57 58 (face highlight-numbers-number syntax-table (2) fontified t yank-handler (evil-yank-line-handler nil t)) 58 59 (face (rainbow-delimiters-depth-1-face) fontified t yank-handler (evil-yank-line-handler nil t)) 59 60 (fontified t yank-handler (evil-yank-line-handler nil t))) #("x > 0 = Succ (fromIntegral (x - 1))
    | x == 0 = Zero
    | otherwise = Zero" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t syntax-table (1) face haskell-operator-face) 3 4 (fontified t) 4 5 (fontified t syntax-table (2) face highlight-numbers-number) 5 6 (fontified t) 6 7 (fontified t syntax-table (1) face haskell-operator-face) 7 8 (fontified t) 8 12 (fontified t face haskell-constructor-face) 12 13 (fontified t) 13 14 (fontified t face (rainbow-delimiters-depth-1-face)) 14 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t face (rainbow-delimiters-depth-2-face)) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t syntax-table (1) face haskell-operator-face) 31 32 (fontified t) 32 33 (fontified t syntax-table (2) face highlight-numbers-number) 33 34 (fontified t face (rainbow-delimiters-depth-2-face)) 34 35 (fontified t face (rainbow-delimiters-depth-1-face)) 35 36 (fontified t) 36 40 (fontified t) 40 41 (fontified t syntax-table (1) face haskell-operator-face) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t syntax-table (1) composition (7 2 [8801]) face haskell-operator-face) 45 46 (fontified t syntax-table (1) composition (7 2 [8801]) face haskell-operator-face) 46 47 (fontified t) 47 48 (fontified t syntax-table (2) face highlight-numbers-number) 48 49 (fontified t) 49 50 (fontified t syntax-table (1) face haskell-operator-face) 50 51 (fontified t) 51 55 (fontified t face haskell-constructor-face) 55 56 (fontified t) 56 60 (fontified t) 60 61 (fontified t syntax-table (1) face haskell-operator-face) 61 62 (fontified t) 62 70 (fontified t) 70 71 (fontified t) 71 72 (fontified t) 72 73 (fontified t syntax-table (1) face haskell-operator-face) 73 74 (fontified t) 74 78 (fontified t face haskell-constructor-face)) "zero, one, two, three, four, five, six, seven, eight, nine, ten :: Nat
zero  = Zero
one   = Succ zero
two   = Succ one
three = Succ two
four  = Succ three
five  = Succ four
six   = Succ five
seven = Succ six
eight = Succ seven
nine  = Succ eight
ten   = Succ nine
" "zero, one, two, three, four, five, six, seven, eight, nine, ten :: Nat
zero  = Zero
one   = Succ zero
two   = Succ one
three = Succ two
four  = Succ three
five  = Succ four
six   = Succ five
seven = Succ six
eight = Succ seven
nine  = Succ eight
ten   = Succ nine
" #("nat2int :: Nat -> Int
nat2int Zero     = 0
nat2int (Succ n) = 1 + nat2int n

int2nat :: Int -> Nat
int2nat 0 = Zero
int2nat n = Succ (int2nat (n - 1))

add :: Nat -> Nat -> Nat
add Zero n     = n
add (Succ m) n = Succ (add m n)" 0 7 (fontified t face (highlight-symbol-face haskell-definition-face)) 7 8 (fontified t) 8 10 (fontified t syntax-table (1) composition (0 2 [8759]) face haskell-operator-face) 10 11 (fontified t font-lock-multiline t haskell-type t) 11 12 (fontified t font-lock-multiline t haskell-type t face haskell-type-face) 12 14 (fontified t font-lock-multiline t haskell-type t face haskell-type-face) 14 15 (fontified t font-lock-multiline t haskell-type t) 15 17 (fontified t syntax-table (1) composition (1 2 [8594]) font-lock-multiline t haskell-type t face haskell-operator-face) 17 18 (fontified t font-lock-multiline t haskell-type t) 18 21 (fontified t font-lock-multiline t haskell-type t face haskell-type-face) 21 22 (fontified t font-lock-multiline t haskell-type t) 22 29 (fontified t face (highlight-symbol-face haskell-definition-face)) 29 30 (fontified t) 30 34 (fontified t face haskell-constructor-face) 34 39 (fontified t) 39 40 (fontified t syntax-table (1) face haskell-operator-face) 40 41 (fontified t) 41 42 (fontified t syntax-table (2) face highlight-numbers-number) 42 43 (fontified t) 43 50 (fontified t face (highlight-symbol-face haskell-definition-face)) 50 51 (fontified t) 51 52 (fontified t face (rainbow-delimiters-depth-1-face)) 52 56 (fontified t face haskell-constructor-face) 56 58 (fontified t) 58 59 (fontified t face (rainbow-delimiters-depth-1-face)) 59 60 (fontified t) 60 61 (fontified t syntax-table (1) face haskell-operator-face) 61 62 (fontified t) 62 63 (fontified t syntax-table (2) face highlight-numbers-number) 63 64 (fontified t) 64 65 (fontified t syntax-table (1) face haskell-operator-face) 65 66 (fontified t) 66 73 (fontified t face (highlight-symbol-face)) 73 76 (fontified t) 76 77 (fontified t) 77 84 (fontified t face haskell-definition-face) 84 85 (fontified t) 85 87 (fontified t syntax-table (1) composition (0 2 [8759]) face haskell-operator-face) 87 88 (fontified t font-lock-multiline t haskell-type t) 88 91 (fontified t font-lock-multiline t haskell-type t face haskell-type-face) 91 92 (fontified t font-lock-multiline t haskell-type t) 92 94 (fontified t syntax-table (1) composition (1 2 [8594]) font-lock-multiline t haskell-type t face haskell-operator-face) 94 95 (fontified t font-lock-multiline t haskell-type t) 95 98 (fontified t font-lock-multiline t haskell-type t face haskell-type-face) 98 99 (fontified t font-lock-multiline t haskell-type t) 99 106 (fontified t face haskell-definition-face) 106 107 (fontified t) 107 108 (fontified t syntax-table (2) face highlight-numbers-number) 108 109 (fontified t) 109 110 (fontified t syntax-table (1) face haskell-operator-face) 110 111 (fontified t) 111 115 (fontified t face haskell-constructor-face) 115 116 (fontified t) 116 123 (fontified t face haskell-definition-face) 123 126 (fontified t) 126 127 (fontified t syntax-table (1) face haskell-operator-face) 127 128 (fontified t) 128 132 (fontified t face haskell-constructor-face) 132 133 (fontified t) 133 134 (fontified t face (rainbow-delimiters-depth-1-face)) 134 142 (fontified t) 142 143 (fontified t face (rainbow-delimiters-depth-2-face)) 143 145 (fontified t) 145 146 (fontified t syntax-table (1) face haskell-operator-face) 146 147 (fontified t) 147 148 (fontified t syntax-table (2) face highlight-numbers-number) 148 149 (fontified t face (rainbow-delimiters-depth-2-face)) 149 150 (fontified t face (rainbow-delimiters-depth-1-face)) 150 151 (fontified t) 151 152 (fontified t) 152 155 (fontified t face haskell-definition-face) 155 156 (fontified t) 156 158 (fontified t syntax-table (1) composition (0 2 [8759]) face haskell-operator-face) 158 159 (fontified t font-lock-multiline t haskell-type t) 159 162 (fontified t font-lock-multiline t haskell-type t face haskell-type-face) 162 163 (fontified t font-lock-multiline t haskell-type t) 163 165 (fontified t syntax-table (1) composition (1 2 [8594]) font-lock-multiline t haskell-type t face haskell-operator-face) 165 166 (fontified t font-lock-multiline t haskell-type t) 166 169 (fontified t font-lock-multiline t haskell-type t face haskell-type-face) 169 170 (fontified t font-lock-multiline t haskell-type t) 170 172 (fontified t syntax-table (1) composition (1 2 [8594]) font-lock-multiline t haskell-type t face haskell-operator-face) 172 173 (fontified t font-lock-multiline t haskell-type t) 173 176 (fontified t font-lock-multiline t haskell-type t face haskell-type-face) 176 177 (fontified t font-lock-multiline t haskell-type t) 177 180 (fontified t face haskell-definition-face) 180 181 (fontified t) 181 185 (fontified t face haskell-constructor-face) 185 186 (fontified t) 186 187 (fontified t) 187 192 (fontified t) 192 193 (fontified t syntax-table (1) face haskell-operator-face) 193 194 (fontified t) 194 195 (fontified t) 195 196 (fontified t) 196 199 (fontified t face haskell-definition-face) 199 200 (fontified t) 200 201 (fontified t face (rainbow-delimiters-depth-1-face)) 201 205 (fontified t face haskell-constructor-face) 205 207 (fontified t) 207 208 (fontified t face (rainbow-delimiters-depth-1-face)) 208 209 (fontified t) 209 210 (fontified t) 210 211 (fontified t) 211 212 (fontified t syntax-table (1) face haskell-operator-face) 212 213 (fontified t) 213 217 (fontified t face haskell-constructor-face) 217 218 (fontified t) 218 219 (fontified t face (rainbow-delimiters-depth-1-face)) 219 225 (fontified t) 225 226 (fontified t) 226 227 (fontified t face (rainbow-delimiters-depth-1-face))) "" "" #("(" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) #(")" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) #("t" 0 1 (fontified t face (highlight-symbol-face font-lock-string-face))) #("                                count Zero     = 0
                                count (Succ n) = 1 + count n
" 0 32 (fontified t yank-handler (evil-yank-line-handler nil t)) 32 37 (fontified t yank-handler (evil-yank-line-handler nil t)) 37 38 (fontified t yank-handler (evil-yank-line-handler nil t)) 38 42 (face haskell-constructor-face fontified t yank-handler (evil-yank-line-handler nil t)) 42 47 (fontified t yank-handler (evil-yank-line-handler nil t)) 47 48 (face haskell-operator-face fontified t syntax-table (1) yank-handler (evil-yank-line-handler nil t)) 48 49 (fontified t yank-handler (evil-yank-line-handler nil t)) 49 50 (face highlight-numbers-number fontified t syntax-table (2) yank-handler (evil-yank-line-handler nil t)) 50 83 (fontified t yank-handler (evil-yank-line-handler nil t)) 83 88 (fontified t yank-handler (evil-yank-line-handler nil t)) 88 89 (fontified t yank-handler (evil-yank-line-handler nil t)) 89 90 (face (rainbow-delimiters-depth-1-face) fontified t yank-handler (evil-yank-line-handler nil t)) 90 94 (face haskell-constructor-face fontified t yank-handler (evil-yank-line-handler nil t)) 94 95 (fontified t yank-handler (evil-yank-line-handler nil t)) 95 96 (fontified t yank-handler (evil-yank-line-handler nil t)) 96 97 (face (rainbow-delimiters-depth-1-face) fontified t yank-handler (evil-yank-line-handler nil t)) 97 98 (fontified t yank-handler (evil-yank-line-handler nil t)) 98 99 (face haskell-operator-face fontified t syntax-table (1) yank-handler (evil-yank-line-handler nil t)) 99 100 (fontified t yank-handler (evil-yank-line-handler nil t)) 100 101 (face highlight-numbers-number fontified t syntax-table (2) yank-handler (evil-yank-line-handler nil t)) 101 102 (fontified t yank-handler (evil-yank-line-handler nil t)) 102 103 (face haskell-operator-face fontified t syntax-table (1) yank-handler (evil-yank-line-handler nil t)) 103 104 (fontified t yank-handler (evil-yank-line-handler nil t)) 104 109 (fontified t yank-handler (evil-yank-line-handler nil t)) 109 110 (fontified t yank-handler (evil-yank-line-handler nil t)) 110 111 (fontified t yank-handler (evil-yank-line-handler nil t)) 111 112 (fontified t yank-handler (evil-yank-line-handler nil t))) #(" " 0 1 (fontified t)) #("w" 0 1 (fontified t)) #("h" 0 1 (fontified t)) #("e" 0 1 (fontified t)) #("r" 0 1 (fontified t)) #("e" 0 1 (fontified t face (highlight-symbol-face haskell-keyword-face))) #("Q. Does  the APIC system or  the underlying javascript API's  have any
dependency on the  Datapower firmware in any way? If  so, what factors
needs to  be considered when  do a  firmware upgrade on  the Datapower
appliance.

Q.  With  APIC  being  predominantly  a set  of  rules  or  components
developed using  the javascript based  API's developed outside  of the
Datapower and Datapower Gateway being  a mixture of configurations and
custom components  developed using the  XSLT or Gateway  script API's,
how the two  things going to interoperate over one  another. Which one
will  have  higher  precedence;  Is  it  going  to  be  the  Datapower
configuration or API  or the external APIC. Are  there any limitations
or risks involved at either level when integrated?

Q. With plain  datapower, getting something like  a single transaction
details at a much fine grained level  is a bit ambiguos. As far as the
appliance is  concerned it  stores all the  minute details  at service
variable  level  and except  using  the  programmatic api's  it's  not
possible to harness this data if  needed from analytics point of view.
Is there any RESTful framework available  within APIC which we can use
to get  the details from  the DP appliance  on demand. It's  more like
pulling data rather than datapower being pushing such data somewhere.

Q. Is there a way that APIC can manage the persistence across multiple
datapower appliances  behind a  load balancer? Let's  say there  are 2
appliances behind the load balancer. Normally details like OAuth token
etc., are managed  between the 2 appliances based on  the NTP settings
which are  sync across  them. But  if we really  want to  persist some
token data on  one appliance and make it available  on the other, does
APIC provide any solution for such case.

Q. How  is scalability handled at  the APIC level? Datapower  being an
appliance is  able to  sustain heavy traffic  loads during  peak times
with limited number of appliances.  But with the APIC running outside,
how is  scalability handled?  Is there  any mechanism  to bump  up the
instance capcity  or number of  apic instances to handle  sudden heavy
traffic volumes?

Q. What kind of messaging protocols  does APIC offer to connect to 3rd
party processing  systems. Currently  with Datapower  being restricted
with MQ  and EMS connectivity,  we are unable  to connect to  any data
processing systems like Spark or Kafka directly as they only talk AMQP
protocol. In order to connect to  such systems we might have to depend
on Abstraction  layers like  ZooKeeper, DOZER  etc., Can  APIC connect
directly to any processing systems for analytics?" 0 70 (justification full) 70 71 (justification full) 71 141 (justification full) 141 142 (justification full) 142 212 (justification full) 212 213 (justification full) 213 224 (justification full) 224 295 (justification full) 295 296 (justification full) 296 366 (justification full) 366 367 (justification full) 367 437 (justification full) 437 438 (justification full) 438 508 (justification full) 508 509 (justification full) 509 579 (justification full) 579 580 (justification full) 580 650 (justification full) 650 651 (justification full) 651 721 (justification full) 721 722 (justification full) 722 773 (justification full) 773 844 (justification full) 844 845 (justification full) 845 915 (justification full) 915 916 (justification full) 916 986 (justification full) 986 987 (justification full) 987 1057 (justification full) 1057 1058 (justification full) 1058 1128 (justification full) 1128 1129 (justification full) 1129 1199 (justification full) 1199 1200 (justification full) 1200 1270 (justification full) 1270 1271 (justification full) 1271 1341 (justification full) 1341 1412 (justification full) 1412 1413 (justification full) 1413 1483 (justification full) 1483 1484 (justification full) 1484 1554 (justification full) 1554 1555 (justification full) 1555 1625 (justification full) 1625 1626 (justification full) 1626 1696 (justification full) 1696 1697 (justification full) 1697 1767 (justification full) 1767 1768 (justification full) 1768 1809 (justification full) 1809 1880 (justification full) 1880 1881 (justification full) 1881 1951 (justification full) 1951 1952 (justification full) 1952 2022 (justification full) 2022 2023 (justification full) 2023 2093 (justification full) 2093 2094 (justification full) 2094 2164 (justification full) 2164 2165 (justification full) 2165 2182 (justification full) 2182 2253 (justification full) 2253 2254 (justification full) 2254 2324 (justification full) 2324 2325 (justification full) 2325 2395 (justification full) 2395 2396 (justification full) 2396 2466 (justification full) 2466 2467 (justification full) 2467 2537 (justification full) 2537 2538 (justification full) 2538 2608 (justification full) 2608 2609 (justification full) 2609 2658 (justification full)) "Q. Does the APIC system or the underlying javascript API's have any dependency on the Datapower firmware in any way? If so, what factors needs to be considered when do a firmware upgrade on the Datapower appliance." "such" "big" "depend" "can" "" #("  fromInteger 0 = Zero
  fromInteger m = Succ (fromInteger (m - 1))
" 0 2 (fontified t yank-handler (evil-yank-line-handler nil t)) 2 10 (fontified t yank-handler (evil-yank-line-handler nil t)) 10 12 (fontified t yank-handler (evil-yank-line-handler nil t)) 12 13 (fontified t yank-handler (evil-yank-line-handler nil t)) 13 14 (fontified t yank-handler (evil-yank-line-handler nil t)) 14 15 (face highlight-numbers-number fontified t syntax-table (2) yank-handler (evil-yank-line-handler nil t)) 15 16 (fontified t yank-handler (evil-yank-line-handler nil t)) 16 17 (face haskell-operator-face fontified t syntax-table (1) yank-handler (evil-yank-line-handler nil t)) 17 18 (fontified t yank-handler (evil-yank-line-handler nil t)) 18 22 (face (highlight-symbol-face haskell-constructor-face) fontified t yank-handler (evil-yank-line-handler nil t)) 22 23 (fontified t yank-handler (evil-yank-line-handler nil t)) 23 25 (fontified t yank-handler (evil-yank-line-handler nil t)) 25 30 (fontified t yank-handler (evil-yank-line-handler nil t)) 30 35 (fontified t yank-handler (evil-yank-line-handler nil t)) 35 36 (fontified t yank-handler (evil-yank-line-handler nil t)) 36 37 (fontified t yank-handler (evil-yank-line-handler nil t)) 37 38 (fontified t yank-handler (evil-yank-line-handler nil t)) 38 39 (fontified t yank-handler (evil-yank-line-handler nil t)) 39 40 (face haskell-operator-face fontified t syntax-table (1) yank-handler (evil-yank-line-handler nil t)) 40 41 (fontified t yank-handler (evil-yank-line-handler nil t)) 41 42 (face haskell-constructor-face fontified t yank-handler (evil-yank-line-handler nil t)) 42 43 (face haskell-constructor-face fontified t yank-handler (evil-yank-line-handler nil t)) 43 45 (face haskell-constructor-face fontified t yank-handler (evil-yank-line-handler nil t)) 45 46 (fontified t yank-handler (evil-yank-line-handler nil t)) 46 47 (face (rainbow-delimiters-depth-1-face) fontified t yank-handler (evil-yank-line-handler nil t)) 47 58 (fontified t yank-handler (evil-yank-line-handler nil t)) 58 59 (fontified t yank-handler (evil-yank-line-handler nil t)) 59 60 (face (rainbow-delimiters-depth-2-face) fontified t yank-handler (evil-yank-line-handler nil t)) 60 61 (fontified t yank-handler (evil-yank-line-handler nil t)) 61 62 (fontified t yank-handler (evil-yank-line-handler nil t)) 62 63 (face haskell-operator-face fontified t syntax-table (1) yank-handler (evil-yank-line-handler nil t)) 63 64 (fontified t yank-handler (evil-yank-line-handler nil t)) 64 65 (face highlight-numbers-number fontified t syntax-table (2) yank-handler (evil-yank-line-handler nil t)) 65 66 (face (rainbow-delimiters-depth-2-face) fontified t yank-handler (evil-yank-line-handler nil t)) 66 67 (face (rainbow-delimiters-depth-1-face) fontified t yank-handler (evil-yank-line-handler nil t)) 67 68 (fontified t yank-handler (evil-yank-line-handler nil t))) "" #("d" 0 1 (fontified t face (highlight-symbol-face font-lock-string-face))) #("e" 0 1 (fontified t face (highlight-symbol-face font-lock-string-face))) #("n" 0 1 (fontified t face font-lock-string-face)) #("i" 0 1 (fontified t face (highlight-symbol-face font-lock-string-face))) #("f" 0 1 (fontified t face font-lock-string-face)) #("e" 0 1 (fontified t face font-lock-string-face)) #("d" 0 1 (fontified t face font-lock-string-face)) #("n" 0 1 (fontified t face (highlight-symbol-face font-lock-string-face))) #("u" 0 1 (fontified t face (highlight-symbol-face font-lock-string-face))) "" #("import           Control.Applicative
import           Control.Monad
import qualified Data.Map            as M
" 0 6 (face (highlight-symbol-face haskell-keyword-face) fontified t yank-handler (evil-yank-line-handler nil t)) 6 17 (fontified t yank-handler (evil-yank-line-handler nil t)) 17 36 (face haskell-constructor-face fontified t yank-handler (evil-yank-line-handler nil t)) 36 37 (fontified t yank-handler (evil-yank-line-handler nil t)) 37 43 (face (highlight-symbol-face haskell-keyword-face) fontified t yank-handler (evil-yank-line-handler nil t)) 43 54 (fontified t yank-handler (evil-yank-line-handler nil t)) 54 67 (face haskell-constructor-face fontified t yank-handler (evil-yank-line-handler nil t)) 67 68 (fontified t yank-handler (evil-yank-line-handler nil t)) 68 74 (face (highlight-symbol-face haskell-keyword-face) fontified t yank-handler (evil-yank-line-handler nil t)) 74 75 (fontified t yank-handler (evil-yank-line-handler nil t)) 75 84 (face haskell-keyword-face fontified t yank-handler (evil-yank-line-handler nil t)) 84 85 (fontified t yank-handler (evil-yank-line-handler nil t)) 85 93 (face haskell-constructor-face fontified t yank-handler (evil-yank-line-handler nil t)) 93 105 (fontified t yank-handler (evil-yank-line-handler nil t)) 105 107 (face haskell-keyword-face fontified t yank-handler (evil-yank-line-handler nil t)) 107 108 (fontified t yank-handler (evil-yank-line-handler nil t)) 108 109 (face haskell-constructor-face fontified t yank-handler (evil-yank-line-handler nil t)) 109 110 (fontified t yank-handler (evil-yank-line-handler nil t))) #("type Variables = M.Map String String
type Sections = M.Map String Variables
newtype INI = INI Sections deriving Show

newtype Parser a = Parser { runParser :: String -> Maybe (a, String) }

instance Functor Parser where
  fmap f (Parser p) = Parser parserfunc
    where
      parserfunc input = do
        (x, remaining) <- p input
        return (f x, remaining)

instance Applicative Parser where
  pure x = Parser parserfunc
           where
             parserfunc input = Just (x, input)

  (Parser pf) <*> (Parser pq) =
    let parserfunc input = do
          (f, remainingf) <- pf input
          (q, remainingq) <- pq remainingf
          return (f q, remainingq)
    in Parser parserfunc

instance Monad Parser where
  return = pure

  (Parser pa) >>= fab =
    let parserfunc input = do
          (a, remaining) <- pa input
          runParser (fab a) remaining
    in Parser parserfunc
" 0 4 (face haskell-keyword-face fontified nil yank-handler (evil-yank-line-handler nil t)) 4 5 (haskell-type t font-lock-multiline t fontified nil yank-handler (evil-yank-line-handler nil t)) 5 14 (face haskell-type-face haskell-type t font-lock-multiline t fontified nil yank-handler (evil-yank-line-handler nil t)) 14 15 (haskell-type t font-lock-multiline t fontified nil yank-handler (evil-yank-line-handler nil t)) 15 16 (face haskell-operator-face haskell-type t font-lock-multiline t fontified nil syntax-table (1) yank-handler (evil-yank-line-handler nil t)) 16 17 (haskell-type t font-lock-multiline t fontified nil yank-handler (evil-yank-line-handler nil t)) 17 18 (face haskell-type-face haskell-type t font-lock-multiline t fontified nil yank-handler (evil-yank-line-handler nil t)) 18 22 (face haskell-type-face haskell-type t font-lock-multiline t fontified nil yank-handler (evil-yank-line-handler nil t)) 22 23 (haskell-type t font-lock-multiline t fontified nil yank-handler (evil-yank-line-handler nil t)) 23 29 (face haskell-type-face haskell-type t font-lock-multiline t fontified nil yank-handler (evil-yank-line-handler nil t)) 29 30 (haskell-type t font-lock-multiline t fontified nil yank-handler (evil-yank-line-handler nil t)) 30 36 (face haskell-type-face haskell-type t font-lock-multiline t fontified nil yank-handler (evil-yank-line-handler nil t)) 36 37 (haskell-type t font-lock-multiline t fontified nil yank-handler (evil-yank-line-handler nil t)) 37 41 (face haskell-keyword-face fontified nil yank-handler (evil-yank-line-handler nil t)) 41 42 (haskell-type t font-lock-multiline t fontified nil yank-handler (evil-yank-line-handler nil t)) 42 50 (face haskell-type-face haskell-type t font-lock-multiline t fontified nil yank-handler (evil-yank-line-handler nil t)) 50 51 (haskell-type t font-lock-multiline t fontified nil yank-handler (evil-yank-line-handler nil t)) 51 52 (face haskell-operator-face haskell-type t font-lock-multiline t fontified nil syntax-table (1) yank-handler (evil-yank-line-handler nil t)) 52 53 (haskell-type t font-lock-multiline t fontified nil yank-handler (evil-yank-line-handler nil t)) 53 54 (face haskell-type-face haskell-type t font-lock-multiline t fontified nil yank-handler (evil-yank-line-handler nil t)) 54 58 (face haskell-type-face haskell-type t font-lock-multiline t fontified nil yank-handler (evil-yank-line-handler nil t)) 58 59 (haskell-type t font-lock-multiline t fontified nil yank-handler (evil-yank-line-handler nil t)) 59 65 (face haskell-type-face haskell-type t font-lock-multiline t fontified nil yank-handler (evil-yank-line-handler nil t)) 65 66 (haskell-type t font-lock-multiline t fontified nil yank-handler (evil-yank-line-handler nil t)) 66 75 (face haskell-type-face haskell-type t font-lock-multiline t fontified nil yank-handler (evil-yank-line-handler nil t)) 75 76 (haskell-type t font-lock-multiline t fontified nil yank-handler (evil-yank-line-handler nil t)) 76 83 (face haskell-keyword-face fontified nil yank-handler (evil-yank-line-handler nil t)) 83 84 (haskell-type t font-lock-multiline t fontified nil yank-handler (evil-yank-line-handler nil t)) 84 87 (face haskell-type-face haskell-type t font-lock-multiline t fontified nil yank-handler (evil-yank-line-handler nil t)) 87 88 (fontified nil yank-handler (evil-yank-line-handler nil t)) 88 89 (face haskell-operator-face fontified nil syntax-table (1) yank-handler (evil-yank-line-handler nil t)) 89 90 (fontified nil yank-handler (evil-yank-line-handler nil t)) 90 93 (face haskell-constructor-face fontified nil yank-handler (evil-yank-line-handler nil t)) 93 94 (fontified nil yank-handler (evil-yank-line-handler nil t)) 94 102 (face haskell-constructor-face fontified nil yank-handler (evil-yank-line-handler nil t)) 102 103 (fontified nil yank-handler (evil-yank-line-handler nil t)) 103 111 (face haskell-keyword-face fontified nil yank-handler (evil-yank-line-handler nil t)) 111 112 (fontified nil yank-handler (evil-yank-line-handler nil t)) 112 116 (face haskell-constructor-face fontified nil yank-handler (evil-yank-line-handler nil t)) 116 117 (fontified nil yank-handler (evil-yank-line-handler nil t)) 117 118 (fontified nil yank-handler (evil-yank-line-handler nil t)) 118 125 (face haskell-keyword-face fontified nil yank-handler (evil-yank-line-handler nil t)) 125 126 (haskell-type t font-lock-multiline t fontified nil yank-handler (evil-yank-line-handler nil t)) 126 132 (face haskell-type-face haskell-type t font-lock-multiline t fontified nil yank-handler (evil-yank-line-handler nil t)) 132 134 (haskell-type t font-lock-multiline t fontified nil yank-handler (evil-yank-line-handler nil t)) 134 135 (fontified nil yank-handler (evil-yank-line-handler nil t)) 135 136 (face haskell-operator-face fontified nil syntax-table (1) yank-handler (evil-yank-line-handler nil t)) 136 137 (fontified nil yank-handler (evil-yank-line-handler nil t)) 137 143 (face haskell-constructor-face fontified nil yank-handler (evil-yank-line-handler nil t)) 143 144 (fontified nil yank-handler (evil-yank-line-handler nil t)) 144 145 (face (rainbow-delimiters-depth-1-face) fontified nil yank-handler (evil-yank-line-handler nil t)) 145 156 (fontified nil yank-handler (evil-yank-line-handler nil t)) 156 158 (face haskell-operator-face composition (0 2 [8759]) fontified nil syntax-table (1) yank-handler (evil-yank-line-handler nil t)) 158 159 (haskell-type t font-lock-multiline t fontified nil yank-handler (evil-yank-line-handler nil t)) 159 165 (face haskell-type-face haskell-type t font-lock-multiline t fontified nil yank-handler (evil-yank-line-handler nil t)) 165 166 (haskell-type t font-lock-multiline t fontified nil yank-handler (evil-yank-line-handler nil t)) 166 168 (face haskell-operator-face haskell-type t font-lock-multiline t composition (1 2 [8594]) fontified nil syntax-table (1) yank-handler (evil-yank-line-handler nil t)) 168 169 (haskell-type t font-lock-multiline t fontified nil yank-handler (evil-yank-line-handler nil t)) 169 174 (face haskell-type-face haskell-type t font-lock-multiline t fontified nil yank-handler (evil-yank-line-handler nil t)) 174 175 (haskell-type t font-lock-multiline t fontified nil yank-handler (evil-yank-line-handler nil t)) 175 176 (face (rainbow-delimiters-depth-2-face) haskell-type t font-lock-multiline t fontified nil yank-handler (evil-yank-line-handler nil t)) 176 179 (haskell-type t font-lock-multiline t fontified nil yank-handler (evil-yank-line-handler nil t)) 179 185 (face haskell-type-face haskell-type t font-lock-multiline t fontified nil yank-handler (evil-yank-line-handler nil t)) 185 186 (face (rainbow-delimiters-depth-2-face) haskell-type t font-lock-multiline t fontified nil yank-handler (evil-yank-line-handler nil t)) 186 187 (fontified nil yank-handler (evil-yank-line-handler nil t)) 187 188 (face (rainbow-delimiters-depth-1-face) fontified nil yank-handler (evil-yank-line-handler nil t)) 188 189 (fontified nil yank-handler (evil-yank-line-handler nil t)) 189 190 (fontified nil yank-handler (evil-yank-line-handler nil t)) 190 198 (face haskell-keyword-face fontified nil yank-handler (evil-yank-line-handler nil t)) 198 199 (haskell-type t font-lock-multiline t fontified nil yank-handler (evil-yank-line-handler nil t)) 199 206 (face haskell-type-face haskell-type t font-lock-multiline t fontified nil yank-handler (evil-yank-line-handler nil t)) 206 207 (haskell-type t font-lock-multiline t fontified nil yank-handler (evil-yank-line-handler nil t)) 207 213 (face haskell-type-face haskell-type t font-lock-multiline t fontified nil yank-handler (evil-yank-line-handler nil t)) 213 214 (fontified nil yank-handler (evil-yank-line-handler nil t)) 214 219 (face haskell-keyword-face fontified nil yank-handler (evil-yank-line-handler nil t)) 219 229 (fontified nil yank-handler (evil-yank-line-handler nil t)) 229 230 (face (rainbow-delimiters-depth-1-face) fontified nil yank-handler (evil-yank-line-handler nil t)) 230 236 (face haskell-constructor-face fontified nil yank-handler (evil-yank-line-handler nil t)) 236 238 (fontified nil yank-handler (evil-yank-line-handler nil t)) 238 239 (face (rainbow-delimiters-depth-1-face) fontified nil yank-handler (evil-yank-line-handler nil t)) 239 240 (fontified nil yank-handler (evil-yank-line-handler nil t)) 240 241 (face haskell-operator-face fontified nil syntax-table (1) yank-handler (evil-yank-line-handler nil t)) 241 242 (fontified nil yank-handler (evil-yank-line-handler nil t)) 242 248 (face haskell-constructor-face fontified nil yank-handler (evil-yank-line-handler nil t)) 248 264 (fontified nil yank-handler (evil-yank-line-handler nil t)) 264 269 (face haskell-keyword-face fontified nil yank-handler (evil-yank-line-handler nil t)) 269 293 (fontified nil yank-handler (evil-yank-line-handler nil t)) 293 294 (face haskell-operator-face fontified nil syntax-table (1) yank-handler (evil-yank-line-handler nil t)) 294 295 (fontified nil yank-handler (evil-yank-line-handler nil t)) 295 297 (face haskell-keyword-face fontified nil yank-handler (evil-yank-line-handler nil t)) 297 298 (fontified nil yank-handler (evil-yank-line-handler nil t)) 298 302 (fontified nil yank-handler (evil-yank-line-handler nil t)) 302 303 (fontified nil yank-handler (evil-yank-line-handler nil t)) 303 304 (fontified nil yank-handler (evil-yank-line-handler nil t)) 304 306 (fontified nil yank-handler (evil-yank-line-handler nil t)) 306 307 (face (rainbow-delimiters-depth-1-face) fontified nil yank-handler (evil-yank-line-handler nil t)) 307 308 (fontified nil yank-handler (evil-yank-line-handler nil t)) 308 312 (fontified nil yank-handler (evil-yank-line-handler nil t)) 312 313 (fontified nil yank-handler (evil-yank-line-handler nil t)) 313 319 (fontified nil yank-handler (evil-yank-line-handler nil t)) 319 320 (face (rainbow-delimiters-depth-1-face) fontified nil yank-handler (evil-yank-line-handler nil t)) 320 321 (fontified nil yank-handler (evil-yank-line-handler nil t)) 321 323 (face haskell-operator-face composition (2 2 [8592]) fontified nil syntax-table (1) yank-handler (evil-yank-line-handler nil t)) 323 332 (fontified nil yank-handler (evil-yank-line-handler nil t)) 332 335 (fontified nil yank-handler (evil-yank-line-handler nil t)) 335 347 (fontified nil yank-handler (evil-yank-line-handler nil t)) 347 348 (face (rainbow-delimiters-depth-1-face) fontified nil yank-handler (evil-yank-line-handler nil t)) 348 353 (fontified nil yank-handler (evil-yank-line-handler nil t)) 353 354 (fontified nil yank-handler (evil-yank-line-handler nil t)) 354 362 (fontified nil yank-handler (evil-yank-line-handler nil t)) 362 363 (face (rainbow-delimiters-depth-1-face) fontified nil yank-handler (evil-yank-line-handler nil t)) 363 364 (fontified nil yank-handler (evil-yank-line-handler nil t)) 364 365 (fontified nil yank-handler (evil-yank-line-handler nil t)) 365 373 (face haskell-keyword-face fontified nil yank-handler (evil-yank-line-handler nil t)) 373 374 (haskell-type t font-lock-multiline t fontified nil yank-handler (evil-yank-line-handler nil t)) 374 385 (face haskell-type-face haskell-type t font-lock-multiline t fontified nil yank-handler (evil-yank-line-handler nil t)) 385 386 (haskell-type t font-lock-multiline t fontified nil yank-handler (evil-yank-line-handler nil t)) 386 392 (face haskell-type-face haskell-type t font-lock-multiline t fontified nil yank-handler (evil-yank-line-handler nil t)) 392 393 (fontified nil yank-handler (evil-yank-line-handler nil t)) 393 398 (face haskell-keyword-face fontified nil yank-handler (evil-yank-line-handler nil t)) 398 399 (fontified nil yank-handler (evil-yank-line-handler nil t)) 399 408 (fontified nil yank-handler (evil-yank-line-handler nil t)) 408 409 (face haskell-operator-face fontified nil syntax-table (1) yank-handler (evil-yank-line-handler nil t)) 409 410 (fontified nil yank-handler (evil-yank-line-handler nil t)) 410 416 (face haskell-constructor-face fontified nil yank-handler (evil-yank-line-handler nil t)) 416 428 (fontified nil yank-handler (evil-yank-line-handler nil t)) 428 439 (fontified nil yank-handler (evil-yank-line-handler nil t)) 439 444 (face haskell-keyword-face fontified nil yank-handler (evil-yank-line-handler nil t)) 444 475 (fontified nil yank-handler (evil-yank-line-handler nil t)) 475 476 (face haskell-operator-face fontified nil syntax-table (1) yank-handler (evil-yank-line-handler nil t)) 476 477 (fontified nil yank-handler (evil-yank-line-handler nil t)) 477 481 (face haskell-constructor-face fontified nil yank-handler (evil-yank-line-handler nil t)) 481 482 (fontified nil yank-handler (evil-yank-line-handler nil t)) 482 483 (face (rainbow-delimiters-depth-1-face) fontified nil yank-handler (evil-yank-line-handler nil t)) 483 491 (fontified nil yank-handler (evil-yank-line-handler nil t)) 491 492 (face (rainbow-delimiters-depth-1-face) fontified nil yank-handler (evil-yank-line-handler nil t)) 492 493 (fontified nil yank-handler (evil-yank-line-handler nil t)) 493 494 (fontified nil yank-handler (evil-yank-line-handler nil t)) 494 496 (fontified nil yank-handler (evil-yank-line-handler nil t)) 496 497 (face (rainbow-delimiters-depth-1-face) fontified nil yank-handler (evil-yank-line-handler nil t)) 497 499 (face haskell-constructor-face fontified nil yank-handler (evil-yank-line-handler nil t)) 499 503 (face haskell-constructor-face fontified nil yank-handler (evil-yank-line-handler nil t)) 503 506 (fontified nil yank-handler (evil-yank-line-handler nil t)) 506 507 (face (rainbow-delimiters-depth-1-face) fontified nil yank-handler (evil-yank-line-handler nil t)) 507 508 (fontified nil yank-handler (evil-yank-line-handler nil t)) 508 511 (face haskell-operator-face fontified nil syntax-table (1) yank-handler (evil-yank-line-handler nil t)) 511 512 (fontified nil yank-handler (evil-yank-line-handler nil t)) 512 513 (face (rainbow-delimiters-depth-1-face) fontified nil yank-handler (evil-yank-line-handler nil t)) 513 519 (face haskell-constructor-face fontified nil yank-handler (evil-yank-line-handler nil t)) 519 522 (fontified nil yank-handler (evil-yank-line-handler nil t)) 522 523 (face (rainbow-delimiters-depth-1-face) fontified nil yank-handler (evil-yank-line-handler nil t)) 523 524 (fontified nil yank-handler (evil-yank-line-handler nil t)) 524 525 (face haskell-operator-face fontified nil syntax-table (1) yank-handler (evil-yank-line-handler nil t)) 525 526 (fontified nil yank-handler (evil-yank-line-handler nil t)) 526 530 (fontified nil yank-handler (evil-yank-line-handler nil t)) 530 533 (face haskell-keyword-face fontified nil yank-handler (evil-yank-line-handler nil t)) 533 551 (fontified nil yank-handler (evil-yank-line-handler nil t)) 551 552 (face haskell-operator-face fontified nil syntax-table (1) yank-handler (evil-yank-line-handler nil t)) 552 553 (fontified nil yank-handler (evil-yank-line-handler nil t)) 553 555 (face haskell-keyword-face fontified nil yank-handler (evil-yank-line-handler nil t)) 555 556 (fontified nil yank-handler (evil-yank-line-handler nil t)) 556 566 (fontified nil yank-handler (evil-yank-line-handler nil t)) 566 567 (face (rainbow-delimiters-depth-1-face) fontified nil yank-handler (evil-yank-line-handler nil t)) 567 580 (fontified nil yank-handler (evil-yank-line-handler nil t)) 580 581 (face (rainbow-delimiters-depth-1-face) fontified nil yank-handler (evil-yank-line-handler nil t)) 581 582 (fontified nil yank-handler (evil-yank-line-handler nil t)) 582 584 (face haskell-operator-face composition (2 2 [8592]) fontified nil syntax-table (1) yank-handler (evil-yank-line-handler nil t)) 584 594 (fontified nil yank-handler (evil-yank-line-handler nil t)) 594 604 (fontified t yank-handler (evil-yank-line-handler nil t)) 604 605 (face (rainbow-delimiters-depth-1-face) fontified t yank-handler (evil-yank-line-handler nil t)) 605 618 (fontified t yank-handler (evil-yank-line-handler nil t)) 618 619 (face (rainbow-delimiters-depth-1-face) fontified t yank-handler (evil-yank-line-handler nil t)) 619 620 (fontified t yank-handler (evil-yank-line-handler nil t)) 620 622 (face haskell-operator-face composition (2 2 [8592]) fontified t syntax-table (1) yank-handler (evil-yank-line-handler nil t)) 622 654 (fontified t yank-handler (evil-yank-line-handler nil t)) 654 655 (face (rainbow-delimiters-depth-1-face) fontified t yank-handler (evil-yank-line-handler nil t)) 655 656 (fontified t yank-handler (evil-yank-line-handler nil t)) 656 670 (fontified t yank-handler (evil-yank-line-handler nil t)) 670 671 (face (rainbow-delimiters-depth-1-face) fontified t yank-handler (evil-yank-line-handler nil t)) 671 672 (fontified t yank-handler (evil-yank-line-handler nil t)) 672 676 (fontified t yank-handler (evil-yank-line-handler nil t)) 676 678 (face haskell-keyword-face fontified t yank-handler (evil-yank-line-handler nil t)) 678 679 (fontified t yank-handler (evil-yank-line-handler nil t)) 679 685 (face haskell-constructor-face fontified t yank-handler (evil-yank-line-handler nil t)) 685 686 (fontified t yank-handler (evil-yank-line-handler nil t)) 686 696 (face (highlight-symbol-face) fontified t yank-handler (evil-yank-line-handler nil t)) 696 697 (fontified t yank-handler (evil-yank-line-handler nil t)) 697 698 (fontified t yank-handler (evil-yank-line-handler nil t)) 698 706 (face haskell-keyword-face fontified t yank-handler (evil-yank-line-handler nil t)) 706 707 (haskell-type t font-lock-multiline t fontified t yank-handler (evil-yank-line-handler nil t)) 707 712 (face haskell-type-face haskell-type t font-lock-multiline t fontified t yank-handler (evil-yank-line-handler nil t)) 712 713 (haskell-type t font-lock-multiline t fontified t yank-handler (evil-yank-line-handler nil t)) 713 719 (face haskell-type-face haskell-type t font-lock-multiline t fontified t yank-handler (evil-yank-line-handler nil t)) 719 720 (fontified t yank-handler (evil-yank-line-handler nil t)) 720 725 (face haskell-keyword-face fontified t yank-handler (evil-yank-line-handler nil t)) 725 735 (fontified t yank-handler (evil-yank-line-handler nil t)) 735 736 (face haskell-operator-face fontified t syntax-table (1) yank-handler (evil-yank-line-handler nil t)) 736 742 (fontified t yank-handler (evil-yank-line-handler nil t)) 742 743 (fontified t yank-handler (evil-yank-line-handler nil t)) 743 745 (fontified t yank-handler (evil-yank-line-handler nil t)) 745 746 (face (rainbow-delimiters-depth-1-face) fontified t yank-handler (evil-yank-line-handler nil t)) 746 752 (face haskell-constructor-face fontified t yank-handler (evil-yank-line-handler nil t)) 752 755 (fontified t yank-handler (evil-yank-line-handler nil t)) 755 756 (face (rainbow-delimiters-depth-1-face) fontified t yank-handler (evil-yank-line-handler nil t)) 756 757 (fontified t yank-handler (evil-yank-line-handler nil t)) 757 760 (face haskell-operator-face fontified t syntax-table (1) yank-handler (evil-yank-line-handler nil t)) 760 765 (fontified t yank-handler (evil-yank-line-handler nil t)) 765 766 (face haskell-operator-face fontified t syntax-table (1) yank-handler (evil-yank-line-handler nil t)) 766 767 (fontified t yank-handler (evil-yank-line-handler nil t)) 767 771 (fontified t yank-handler (evil-yank-line-handler nil t)) 771 774 (face haskell-keyword-face fontified t yank-handler (evil-yank-line-handler nil t)) 774 775 (fontified t yank-handler (evil-yank-line-handler nil t)) 775 785 (face (highlight-symbol-face) fontified t yank-handler (evil-yank-line-handler nil t)) 785 792 (fontified t yank-handler (evil-yank-line-handler nil t)) 792 793 (face haskell-operator-face fontified t syntax-table (1) yank-handler (evil-yank-line-handler nil t)) 793 794 (fontified t yank-handler (evil-yank-line-handler nil t)) 794 796 (face haskell-keyword-face fontified t yank-handler (evil-yank-line-handler nil t)) 796 797 (fontified t yank-handler (evil-yank-line-handler nil t)) 797 807 (fontified t yank-handler (evil-yank-line-handler nil t)) 807 808 (face (rainbow-delimiters-depth-1-face) fontified t yank-handler (evil-yank-line-handler nil t)) 808 809 (fontified t yank-handler (evil-yank-line-handler nil t)) 809 820 (fontified t yank-handler (evil-yank-line-handler nil t)) 820 821 (face (rainbow-delimiters-depth-1-face) fontified t yank-handler (evil-yank-line-handler nil t)) 821 822 (fontified t yank-handler (evil-yank-line-handler nil t)) 822 824 (face haskell-operator-face composition (2 2 [8592]) fontified t syntax-table (1) yank-handler (evil-yank-line-handler nil t)) 824 832 (fontified t yank-handler (evil-yank-line-handler nil t)) 832 834 (fontified t yank-handler (evil-yank-line-handler nil t)) 834 854 (fontified t yank-handler (evil-yank-line-handler nil t)) 854 855 (face (rainbow-delimiters-depth-1-face) fontified t yank-handler (evil-yank-line-handler nil t)) 855 859 (fontified t yank-handler (evil-yank-line-handler nil t)) 859 860 (fontified t yank-handler (evil-yank-line-handler nil t)) 860 861 (face (rainbow-delimiters-depth-1-face) fontified t yank-handler (evil-yank-line-handler nil t)) 861 864 (fontified t yank-handler (evil-yank-line-handler nil t)) 864 865 (fontified t yank-handler (evil-yank-line-handler nil t)) 865 872 (fontified t yank-handler (evil-yank-line-handler nil t)) 872 876 (fontified t yank-handler (evil-yank-line-handler nil t)) 876 878 (face haskell-keyword-face fontified t yank-handler (evil-yank-line-handler nil t)) 878 879 (fontified t yank-handler (evil-yank-line-handler nil t)) 879 885 (face haskell-constructor-face fontified t yank-handler (evil-yank-line-handler nil t)) 885 886 (fontified t yank-handler (evil-yank-line-handler nil t)) 886 896 (face (highlight-symbol-face) fontified t yank-handler (evil-yank-line-handler nil t)) 896 897 (fontified t yank-handler (evil-yank-line-handler nil t))) #("l" 0 1 (fontified t face (highlight-symbol-face font-lock-string-face))) #("a" 0 1 (fontified t face (highlight-symbol-face font-lock-string-face))) #("r" 0 1 (fontified t face font-lock-string-face)) #("u" 0 1 (fontified t face (highlight-symbol-face font-lock-string-face))) "instance Show Nat where
        show n = \"Natural \" ++ (show $ count n) where
                count Zero = 0
                count (Succ n) = 1 + count n" "instance Show Nat where
        show n = \"Natural \" ++ (show $ count n) where
                count Zero = 0
                count (Succ n) = 1 + count n" "" #("compare" 0 7 (fontified t face (highlight-symbol-face))) "    compare Zero     (Succ a) = LT
    compare (Succ a) Zero     = GT
    compare (Succ a) (Succ b) = compare a b" "    compare Zero     (Succ a) = LT
    compare (Succ a) Zero     = GT
    compare (Succ a) (Succ b) = compare a b" #("  Zero < Zero = False
  Zero < (Succ _) = True
  (Succ _) < Zero = False
  (Succ m) < (Succ n) = m < n
  (Succ m) > (Succ n) = m > n
" 0 2 (fontified t yank-handler (evil-yank-line-handler nil t)) 2 6 (face haskell-constructor-face fontified t yank-handler (evil-yank-line-handler nil t)) 6 7 (fontified t yank-handler (evil-yank-line-handler nil t)) 7 8 (face haskell-operator-face syntax-table (1) fontified t yank-handler (evil-yank-line-handler nil t)) 8 9 (fontified t yank-handler (evil-yank-line-handler nil t)) 9 13 (face haskell-constructor-face fontified t yank-handler (evil-yank-line-handler nil t)) 13 14 (fontified t yank-handler (evil-yank-line-handler nil t)) 14 15 (face haskell-operator-face syntax-table (1) fontified t yank-handler (evil-yank-line-handler nil t)) 15 16 (fontified t yank-handler (evil-yank-line-handler nil t)) 16 21 (face (highlight-symbol-face haskell-constructor-face) fontified t yank-handler (evil-yank-line-handler nil t)) 21 22 (fontified t yank-handler (evil-yank-line-handler nil t)) 22 24 (fontified t yank-handler (evil-yank-line-handler nil t)) 24 28 (face haskell-constructor-face fontified t yank-handler (evil-yank-line-handler nil t)) 28 29 (fontified t yank-handler (evil-yank-line-handler nil t)) 29 30 (face haskell-operator-face syntax-table (1) fontified t yank-handler (evil-yank-line-handler nil t)) 30 31 (fontified t yank-handler (evil-yank-line-handler nil t)) 31 32 (face (rainbow-delimiters-depth-1-face) fontified t yank-handler (evil-yank-line-handler nil t)) 32 36 (face haskell-constructor-face fontified t yank-handler (evil-yank-line-handler nil t)) 36 37 (fontified t yank-handler (evil-yank-line-handler nil t)) 37 38 (face haskell-keyword-face fontified t yank-handler (evil-yank-line-handler nil t)) 38 39 (face (rainbow-delimiters-depth-1-face) fontified t yank-handler (evil-yank-line-handler nil t)) 39 40 (fontified t yank-handler (evil-yank-line-handler nil t)) 40 41 (face haskell-operator-face syntax-table (1) fontified t yank-handler (evil-yank-line-handler nil t)) 41 42 (fontified t yank-handler (evil-yank-line-handler nil t)) 42 45 (face haskell-constructor-face fontified t yank-handler (evil-yank-line-handler nil t)) 45 46 (face haskell-constructor-face fontified t yank-handler (evil-yank-line-handler nil t)) 46 47 (fontified t yank-handler (evil-yank-line-handler nil t)) 47 49 (fontified t yank-handler (evil-yank-line-handler nil t)) 49 50 (face (rainbow-delimiters-depth-1-face) fontified t yank-handler (evil-yank-line-handler nil t)) 50 54 (face haskell-constructor-face fontified t yank-handler (evil-yank-line-handler nil t)) 54 55 (fontified t yank-handler (evil-yank-line-handler nil t)) 55 56 (face haskell-keyword-face fontified t yank-handler (evil-yank-line-handler nil t)) 56 57 (face (rainbow-delimiters-depth-1-face) fontified t yank-handler (evil-yank-line-handler nil t)) 57 58 (fontified t yank-handler (evil-yank-line-handler nil t)) 58 59 (face haskell-operator-face syntax-table (1) fontified t yank-handler (evil-yank-line-handler nil t)) 59 60 (fontified t yank-handler (evil-yank-line-handler nil t)) 60 64 (face haskell-constructor-face fontified t yank-handler (evil-yank-line-handler nil t)) 64 65 (fontified t yank-handler (evil-yank-line-handler nil t)) 65 66 (face haskell-operator-face syntax-table (1) fontified t yank-handler (evil-yank-line-handler nil t)) 66 67 (fontified t yank-handler (evil-yank-line-handler nil t)) 67 72 (face (highlight-symbol-face haskell-constructor-face) fontified t yank-handler (evil-yank-line-handler nil t)) 72 73 (fontified t yank-handler (evil-yank-line-handler nil t)) 73 75 (fontified t yank-handler (evil-yank-line-handler nil t)) 75 76 (face (rainbow-delimiters-depth-1-face) fontified t yank-handler (evil-yank-line-handler nil t)) 76 80 (face haskell-constructor-face fontified t yank-handler (evil-yank-line-handler nil t)) 80 81 (fontified t yank-handler (evil-yank-line-handler nil t)) 81 82 (fontified t yank-handler (evil-yank-line-handler nil t)) 82 83 (face (rainbow-delimiters-depth-1-face) fontified t yank-handler (evil-yank-line-handler nil t)) 83 84 (fontified t yank-handler (evil-yank-line-handler nil t)) 84 85 (face haskell-operator-face syntax-table (1) fontified t yank-handler (evil-yank-line-handler nil t)) 85 86 (fontified t yank-handler (evil-yank-line-handler nil t)) 86 87 (face (rainbow-delimiters-depth-1-face) fontified t yank-handler (evil-yank-line-handler nil t)) 87 90 (face haskell-constructor-face fontified t yank-handler (evil-yank-line-handler nil t)) 90 91 (face haskell-constructor-face fontified t yank-handler (evil-yank-line-handler nil t)) 91 92 (fontified t yank-handler (evil-yank-line-handler nil t)) 92 93 (fontified t yank-handler (evil-yank-line-handler nil t)) 93 94 (face (rainbow-delimiters-depth-1-face) fontified t yank-handler (evil-yank-line-handler nil t)) 94 95 (fontified t yank-handler (evil-yank-line-handler nil t)) 95 96 (face haskell-operator-face syntax-table (1) fontified t yank-handler (evil-yank-line-handler nil t)) 96 97 (fontified t yank-handler (evil-yank-line-handler nil t)) 97 98 (fontified t yank-handler (evil-yank-line-handler nil t)) 98 99 (fontified t yank-handler (evil-yank-line-handler nil t)) 99 100 (face haskell-operator-face syntax-table (1) fontified t yank-handler (evil-yank-line-handler nil t)) 100 101 (fontified t yank-handler (evil-yank-line-handler nil t)) 101 102 (fontified t yank-handler (evil-yank-line-handler nil t)) 102 103 (fontified t yank-handler (evil-yank-line-handler nil t)) 103 105 (fontified t yank-handler (evil-yank-line-handler nil t)) 105 106 (face (rainbow-delimiters-depth-1-face) fontified t yank-handler (evil-yank-line-handler nil t)) 106 110 (face haskell-constructor-face fontified t yank-handler (evil-yank-line-handler nil t)) 110 111 (fontified t yank-handler (evil-yank-line-handler nil t)) 111 112 (fontified t yank-handler (evil-yank-line-handler nil t)) 112 113 (face (rainbow-delimiters-depth-1-face) fontified t yank-handler (evil-yank-line-handler nil t)) 113 114 (fontified t yank-handler (evil-yank-line-handler nil t)) 114 115 (face haskell-operator-face syntax-table (1) fontified t yank-handler (evil-yank-line-handler nil t)) 115 116 (fontified t yank-handler (evil-yank-line-handler nil t)) 116 117 (face (rainbow-delimiters-depth-1-face) fontified t yank-handler (evil-yank-line-handler nil t)) 117 118 (face haskell-constructor-face fontified t yank-handler (evil-yank-line-handler nil t)) 118 121 (face haskell-constructor-face fontified t yank-handler (evil-yank-line-handler nil t)) 121 122 (fontified t yank-handler (evil-yank-line-handler nil t)) 122 123 (fontified t yank-handler (evil-yank-line-handler nil t)) 123 124 (face (rainbow-delimiters-depth-1-face) fontified t yank-handler (evil-yank-line-handler nil t)) 124 125 (fontified t yank-handler (evil-yank-line-handler nil t)) 125 126 (face haskell-operator-face syntax-table (1) fontified t yank-handler (evil-yank-line-handler nil t)) 126 127 (fontified t yank-handler (evil-yank-line-handler nil t)) 127 128 (fontified t yank-handler (evil-yank-line-handler nil t)) 128 129 (fontified t yank-handler (evil-yank-line-handler nil t)) 129 130 (face haskell-operator-face syntax-table (1) fontified t yank-handler (evil-yank-line-handler nil t)) 130 131 (fontified t yank-handler (evil-yank-line-handler nil t)) 131 132 (fontified t yank-handler (evil-yank-line-handler nil t)) 132 133 (fontified t yank-handler (evil-yank-line-handler nil t))) "" #("  _ == _ = False
" 0 2 (fontified t yank-handler (evil-yank-line-handler nil t)) 2 3 (face haskell-keyword-face fontified t yank-handler (evil-yank-line-handler nil t)) 3 4 (fontified t yank-handler (evil-yank-line-handler nil t)) 4 5 (face haskell-operator-face composition (7 2 [8801]) syntax-table (1) fontified t yank-handler (evil-yank-line-handler nil t)) 5 6 (face haskell-operator-face composition (7 2 [8801]) syntax-table (1) fontified t yank-handler (evil-yank-line-handler nil t)) 6 7 (fontified t yank-handler (evil-yank-line-handler nil t)) 7 8 (face haskell-keyword-face fontified t yank-handler (evil-yank-line-handler nil t)) 8 9 (fontified t yank-handler (evil-yank-line-handler nil t)) 9 10 (face haskell-operator-face syntax-table (1) fontified t yank-handler (evil-yank-line-handler nil t)) 10 11 (fontified t yank-handler (evil-yank-line-handler nil t)) 11 14 (face haskell-constructor-face fontified t yank-handler (evil-yank-line-handler nil t)) 14 15 (face haskell-constructor-face fontified t yank-handler (evil-yank-line-handler nil t)) 15 16 (face haskell-constructor-face fontified t yank-handler (evil-yank-line-handler nil t)) 16 17 (fontified t yank-handler (evil-yank-line-handler nil t))) #("    (+) a Zero     = a
    (+) a (Succ b) = Succ (a + b)
" 0 4 (fontified t yank-handler (evil-yank-line-handler nil t)) 4 5 (face (rainbow-delimiters-depth-1-face) fontified t yank-handler (evil-yank-line-handler nil t)) 5 6 (face haskell-operator-face syntax-table (1) fontified t yank-handler (evil-yank-line-handler nil t)) 6 7 (face (rainbow-delimiters-depth-1-face) fontified t yank-handler (evil-yank-line-handler nil t)) 7 8 (fontified t yank-handler (evil-yank-line-handler nil t)) 8 9 (fontified t yank-handler (evil-yank-line-handler nil t)) 9 10 (fontified t yank-handler (evil-yank-line-handler nil t)) 10 14 (face haskell-constructor-face fontified t yank-handler (evil-yank-line-handler nil t)) 14 19 (fontified t yank-handler (evil-yank-line-handler nil t)) 19 20 (face haskell-operator-face syntax-table (1) fontified t yank-handler (evil-yank-line-handler nil t)) 20 21 (fontified t yank-handler (evil-yank-line-handler nil t)) 21 22 (fontified t yank-handler (evil-yank-line-handler nil t)) 22 23 (fontified t yank-handler (evil-yank-line-handler nil t)) 23 27 (fontified t yank-handler (evil-yank-line-handler nil t)) 27 28 (face (rainbow-delimiters-depth-1-face) fontified t yank-handler (evil-yank-line-handler nil t)) 28 29 (face haskell-operator-face syntax-table (1) fontified t yank-handler (evil-yank-line-handler nil t)) 29 30 (face (rainbow-delimiters-depth-1-face) fontified t yank-handler (evil-yank-line-handler nil t)) 30 31 (fontified t yank-handler (evil-yank-line-handler nil t)) 31 32 (fontified t yank-handler (evil-yank-line-handler nil t)) 32 33 (fontified t yank-handler (evil-yank-line-handler nil t)) 33 34 (face (rainbow-delimiters-depth-1-face) fontified t yank-handler (evil-yank-line-handler nil t)) 34 38 (face haskell-constructor-face fontified t yank-handler (evil-yank-line-handler nil t)) 38 40 (fontified t yank-handler (evil-yank-line-handler nil t)) 40 41 (face (rainbow-delimiters-depth-1-face) fontified t yank-handler (evil-yank-line-handler nil t)) 41 42 (fontified t yank-handler (evil-yank-line-handler nil t)) 42 43 (face haskell-operator-face syntax-table (1) fontified t yank-handler (evil-yank-line-handler nil t)) 43 44 (fontified t yank-handler (evil-yank-line-handler nil t)) 44 48 (face haskell-constructor-face fontified t yank-handler (evil-yank-line-handler nil t)) 48 49 (fontified t yank-handler (evil-yank-line-handler nil t)) 49 50 (face (rainbow-delimiters-depth-1-face) fontified t yank-handler (evil-yank-line-handler nil t)) 50 51 (fontified t yank-handler (evil-yank-line-handler nil t)) 51 52 (fontified t yank-handler (evil-yank-line-handler nil t)) 52 53 (face haskell-operator-face syntax-table (1) fontified t yank-handler (evil-yank-line-handler nil t)) 53 55 (fontified t yank-handler (evil-yank-line-handler nil t)) 55 56 (face (rainbow-delimiters-depth-1-face) fontified t yank-handler (evil-yank-line-handler nil t)) 56 57 (fontified t yank-handler (evil-yank-line-handler nil t))) "instance Num Nat where
    (+) a Zero     = a
    (+) a (Succ b) = Succ (a + b)" "instance Num Nat where
    (+) a Zero     = a
    (+) a (Succ b) = Succ (a + b)"))
